

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 12:19:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86   000000                     
    87                           ; Generated 06/04/2022 GMT
    88                           ; 
    89                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F67K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	idataBANK0
   123   00499C                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _ForwardFlag
   127   00499C  01                 	db	1
   128                           
   129                           	psect	idataBANK1
   130   004948                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for stoa@F1144
   134   004948  28                 	db	40
   135   004949  6E                 	db	110
   136   00494A  75                 	db	117
   137   00494B  6C                 	db	108
   138   00494C  6C                 	db	108
   139   00494D  29                 	db	41
   140   00494E  00                 	db	0
   141                           
   142                           ;initializer for __halfsquare
   143   00494F  015E               	dw	350
   144                           
   145                           ;initializer for __1square
   146   004951  02BC               	dw	700
   147                           
   148                           ;initializer for __45drightdelay
   149   004953  00A0               	dw	160
   150                           
   151                           ;initializer for __45dleftdelay
   152   004955  00A0               	dw	160
   153   000000                     _LATEbits	set	3965
   154   000000                     _TRISEbits	set	3973
   155   000000                     _LATHbits	set	3968
   156   000000                     _TX4REG	set	3812
   157   000000                     _RC4STAbits	set	3815
   158   000000                     _SP4BRGH	set	3814
   159   000000                     _TRISAbits	set	3969
   160   000000                     _TRISGbits	set	3975
   161   000000                     _SSP2CON2bits	set	3802
   162   000000                     _RX4PPS	set	3605
   163   000000                     _SSP2CLKPPS	set	3612
   164   000000                     _SSP2DATPPS	set	3613
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATGbits	set	3967
   170   000000                     _TRISHbits	set	3976
   171   000000                     _PORTFbits	set	3982
   172   000000                     _CCPR2H	set	4006
   173   000000                     _CCPR1H	set	4010
   174   000000                     _LATCbits	set	3963
   175   000000                     _LATDbits	set	3964
   176   000000                     _LATFbits	set	3966
   177   000000                     _TRISCbits	set	3971
   178   000000                     _TRISDbits	set	3972
   179   000000                     _TRISFbits	set	3974
   180   000000                     _RC4REG	set	3811
   181   000000                     _SP4BRGL	set	3813
   182   000000                     _TX4STAbits	set	3816
   183   000000                     _BAUD4CONbits	set	3817
   184   000000                     _SSP2CON2	set	3802
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _SSP2STAT	set	3800
   188   000000                     _ANSELFbits	set	3764
   189   000000                     _SSP2BUF	set	3797
   190   000000                     _PIE0bits	set	3625
   191   000000                     _PIR4bits	set	3639
   192   000000                     _RC0PPS	set	3682
   193   000000                     _RD5PPS	set	3695
   194   000000                     _RE2PPS	set	3700
   195   000000                     _RD6PPS	set	3696
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RC7PPS	set	3689
   204   000000                     _RE4PPS	set	3702
   205   000000                     _RG6PPS	set	3720
   206   000000                     _TMR0L	set	4051
   207   000000                     _TMR0H	set	4052
   208   000000                     _T0CON0bits	set	4053
   209   000000                     _T0CON1bits	set	4054
   210   000000                     _T2CLKCONbits	set	4031
   211   000000                     _T2HLTbits	set	4030
   212   000000                     _INTCONbits	set	4082
   213   000000                     _PIE4bits	set	3629
   214   000000                     _PIR0bits	set	3635
   215                           
   216                           	psect	smallconst
   217   000E00                     __psmallconst:
   218                           	callstack 0
   219   000E00  00                 	db	0
   220   000E01                     STR_10:
   221                           
   222                           ; BSR set to: 14
   223   000E01  43                 	db	67	;'C'
   224   000E02  6F                 	db	111	;'o'
   225   000E03  6C                 	db	108	;'l'
   226   000E04  6F                 	db	111	;'o'
   227   000E05  75                 	db	117	;'u'
   228   000E06  72                 	db	114	;'r'
   229   000E07  20                 	db	32
   230   000E08  69                 	db	105	;'i'
   231   000E09  73                 	db	115	;'s'
   232   000E0A  20                 	db	32
   233   000E0B  25                 	db	37
   234   000E0C  73                 	db	115	;'s'
   235   000E0D  20                 	db	32
   236   000E0E  20                 	db	32
   237   000E0F  0D                 	db	13
   238   000E10  00                 	db	0
   239   000E11                     STR_8:
   240                           
   241                           ; BSR set to: 14
   242   000E11  4C                 	db	76	;'L'
   243   000E12  69                 	db	105	;'i'
   244   000E13  67                 	db	103	;'g'
   245   000E14  68                 	db	104	;'h'
   246   000E15  74                 	db	116	;'t'
   247   000E16  20                 	db	32
   248   000E17  42                 	db	66	;'B'
   249   000E18  6C                 	db	108	;'l'
   250   000E19  75                 	db	117	;'u'
   251   000E1A  65                 	db	101	;'e'
   252   000E1B  00                 	db	0
   253   000E1C                     STR_4:
   254                           
   255                           ; BSR set to: 14
   256   000E1C  44                 	db	68	;'D'
   257   000E1D  61                 	db	97	;'a'
   258   000E1E  72                 	db	114	;'r'
   259   000E1F  6B                 	db	107	;'k'
   260   000E20  20                 	db	32
   261   000E21  42                 	db	66	;'B'
   262   000E22  6C                 	db	108	;'l'
   263   000E23  75                 	db	117	;'u'
   264   000E24  65                 	db	101	;'e'
   265   000E25  00                 	db	0
   266   000E26                     STR_9:
   267                           
   268                           ; BSR set to: 14
   269   000E26  45                 	db	69	;'E'
   270   000E27  67                 	db	103	;'g'
   271   000E28  67                 	db	103	;'g'
   272   000E29  73                 	db	115	;'s'
   273   000E2A  68                 	db	104	;'h'
   274   000E2B  65                 	db	101	;'e'
   275   000E2C  6C                 	db	108	;'l'
   276   000E2D  6C                 	db	108	;'l'
   277   000E2E  00                 	db	0
   278   000E2F                     STR_7:
   279                           
   280                           ; BSR set to: 14
   281   000E2F  4F                 	db	79	;'O'
   282   000E30  72                 	db	114	;'r'
   283   000E31  61                 	db	97	;'a'
   284   000E32  6E                 	db	110	;'n'
   285   000E33  67                 	db	103	;'g'
   286   000E34  65                 	db	101	;'e'
   287   000E35  00                 	db	0
   288   000E36                     STR_5:
   289                           
   290                           ; BSR set to: 14
   291   000E36  59                 	db	89	;'Y'
   292   000E37  65                 	db	101	;'e'
   293   000E38  6C                 	db	108	;'l'
   294   000E39  6C                 	db	108	;'l'
   295   000E3A  6F                 	db	111	;'o'
   296   000E3B  77                 	db	119	;'w'
   297   000E3C  00                 	db	0
   298   000E3D                     STR_3:
   299                           
   300                           ; BSR set to: 14
   301   000E3D  47                 	db	71	;'G'
   302   000E3E  72                 	db	114	;'r'
   303   000E3F  65                 	db	101	;'e'
   304   000E40  65                 	db	101	;'e'
   305   000E41  6E                 	db	110	;'n'
   306   000E42  00                 	db	0
   307   000E43                     STR_6:
   308                           
   309                           ; BSR set to: 14
   310   000E43  50                 	db	80	;'P'
   311   000E44  69                 	db	105	;'i'
   312   000E45  6E                 	db	110	;'n'
   313   000E46  6B                 	db	107	;'k'
   314   000E47  00                 	db	0
   315   000E48                     STR_11:
   316                           
   317                           ; BSR set to: 14
   318   000E48  6C                 	db	108	;'l'
   319   000E49  6C                 	db	108	;'l'
   320   000E4A  73                 	db	115	;'s'
   321   000E4B  00                 	db	0
   322   000E4C                     STR_2:
   323                           
   324                           ; BSR set to: 14
   325   000E4C  52                 	db	82	;'R'
   326   000E4D  65                 	db	101	;'e'
   327   000E4E  64                 	db	100	;'d'
   328   000E4F  00                 	db	0
   329   000E50  00                 	db	0	; dummy byte at the end
   330   000000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334   0043AA                     __pcinit:
   335                           	callstack 0
   336   0043AA                     start_initialization:
   337                           	callstack 0
   338   0043AA                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK1 (15 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343   0043AA  0E48               	movlw	low __pidataBANK1
   344   0043AC  6EF6               	movwf	tblptrl,c
   345   0043AE  0E49               	movlw	high __pidataBANK1
   346   0043B0  6EF7               	movwf	tblptrh,c
   347   0043B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348   0043B4  6EF8               	movwf	tblptru,c
   349   0043B6  EE01  F086         	lfsr	0,__pdataBANK1
   350   0043BA  EE10 F00F          	lfsr	1,15
   351   0043BE                     copy_data0:
   352   0043BE  0009               	tblrd		*+
   353   0043C0  CFF5 FFEE          	movff	tablat,postinc0
   354   0043C4  50E5               	movf	postdec1,w,c
   355   0043C6  50E1               	movf	fsr1l,w,c
   356   0043C8  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360   0043CA  0E9C               	movlw	low __pidataBANK0
   361   0043CC  6EF6               	movwf	tblptrl,c
   362   0043CE  0E49               	movlw	high __pidataBANK0
   363   0043D0  6EF7               	movwf	tblptrh,c
   364   0043D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365   0043D4  6EF8               	movwf	tblptru,c
   366   0043D6  0009               	tblrd		*+	;fetch initializer
   367   0043D8  CFF5 F0FF          	movff	tablat,__pdataBANK0
   368                           
   369                           ; Clear objects allocated to BANK1 (134 bytes)
   370   0043DC  EE01  F000         	lfsr	0,__pbssBANK1
   371   0043E0  0E86               	movlw	134
   372   0043E2                     clear_0:
   373   0043E2  6AEE               	clrf	postinc0,c
   374   0043E4  06E8               	decf	wreg,f,c
   375   0043E6  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (29 bytes)
   378   0043E8  EE00  F0E2         	lfsr	0,__pbssBANK0
   379   0043EC  0E1D               	movlw	29
   380   0043EE                     clear_1:
   381   0043EE  6AEE               	clrf	postinc0,c
   382   0043F0  06E8               	decf	wreg,f,c
   383   0043F2  E1FD               	bnz	clear_1
   384   0043F4                     end_of_initialization:
   385                           	callstack 0
   386   0043F4                     __end_of__initialization:
   387                           	callstack 0
   388   0043F4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389   0043F6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390   0043F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391   0043FA  6EF8               	movwf	tblptru,c
   392   0043FC  0100               	movlb	0
   393   0043FE  EF2A  F015         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	bssBANK0
   396   0000E2                     __pbssBANK0:
   397                           	callstack 0
   398   0000E2                     _width:
   399                           	callstack 0
   400   0000E2                     	ds	2
   401   0000E4                     _prec:
   402                           	callstack 0
   403   0000E4                     	ds	2
   404   0000E6                     _retracingDone:
   405                           	callstack 0
   406   0000E6                     	ds	2
   407   0000E8                     _movementCount:
   408                           	callstack 0
   409   0000E8                     	ds	2
   410   0000EA                     _maxTime:
   411                           	callstack 0
   412   0000EA                     	ds	2
   413   0000EC                     _flags:
   414                           	callstack 0
   415   0000EC                     	ds	1
   416   0000ED                     _motorR:
   417                           	callstack 0
   418   0000ED                     	ds	9
   419   0000F6                     _motorL:
   420                           	callstack 0
   421   0000F6                     	ds	9
   422                           
   423                           	psect	dataBANK0
   424   0000FF                     __pdataBANK0:
   425                           	callstack 0
   426   0000FF                     _ForwardFlag:
   427                           	callstack 0
   428   0000FF                     	ds	1
   429                           
   430                           	psect	bssBANK1
   431   000100                     __pbssBANK1:
   432                           	callstack 0
   433   000100                     	ds	32
   434   000120                     _timerMemory:
   435                           	callstack 0
   436   000120                     	ds	40
   437   000148                     _movementMemory:
   438                           	callstack 0
   439   000148                     	ds	40
   440   000170                     _colorf:
   441                           	callstack 0
   442   000170                     	ds	22
   443                           
   444                           	psect	dataBANK1
   445   000186                     __pdataBANK1:
   446                           	callstack 0
   447   000186                     stoa@F1144:
   448                           	callstack 0
   449   000186                     	ds	7
   450   00018D                     __halfsquare:
   451                           	callstack 0
   452   00018D                     	ds	2
   453   00018F                     __1square:
   454                           	callstack 0
   455   00018F                     	ds	2
   456   000191                     __45drightdelay:
   457                           	callstack 0
   458   000191                     	ds	2
   459   000193                     __45dleftdelay:
   460                           	callstack 0
   461   000193                     	ds	2
   462                           
   463                           	psect	cstackBANK0
   464   000060                     __pcstackBANK0:
   465                           	callstack 0
   466   000060                     ??_White:
   467   000060                     ___fldiv@rem:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x0
   471   000060                     	ds	2
   472   000062                     White@tempTimer:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x2
   476   000062                     	ds	2
   477   000064                     ___fldiv@sign:
   478                           	callstack 0
   479   000064                     White@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x4
   483   000064                     	ds	1
   484   000065                     ___fldiv@new_exp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x5
   488   000065                     	ds	1
   489   000066                     Colour2Action@cf:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x6
   493   000066                     	ds	1
   494   000067                     ___fldiv@grs:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x7
   498   000067                     	ds	1
   499   000068                     
   500                           ; 1 bytes @ 0x8
   501   000068                     	ds	3
   502   00006B                     ___fldiv@bexp:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0xB
   506   00006B                     	ds	1
   507   00006C                     ___fldiv@aexp:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0xC
   511   00006C                     	ds	1
   512   00006D                     RGB2Hue@cf:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xD
   516   00006D                     	ds	2
   517   00006F                     ??_RGB2Hue:
   518                           
   519                           ; 1 bytes @ 0xF
   520   00006F                     	ds	4
   521   000073                     _RGB2Hue$3169:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x13
   525   000073                     	ds	4
   526   000077                     RGB2Hue@max:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x17
   530   000077                     	ds	2
   531   000079                     RGB2Hue@min:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x19
   535   000079                     	ds	2
   536   00007B                     ??_main:
   537                           
   538                           ; 1 bytes @ 0x1B
   539   00007B                     	ds	2
   540   00007D                     main@data:
   541                           	callstack 0
   542                           
   543                           ; 100 bytes @ 0x1D
   544   00007D                     	ds	100
   545   0000E1                     main@wall:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x81
   549   0000E1                     	ds	1
   550                           
   551                           	psect	cstackCOMRAM
   552   000001                     __pcstackCOMRAM:
   553                           	callstack 0
   554   000001                     ??_I2C_2_Master_Idle:
   555   000001                     ?_strlen:
   556                           	callstack 0
   557   000001                     ?_strncmp:
   558                           	callstack 0
   559   000001                     ?___wmul:
   560                           	callstack 0
   561   000001                     ClickLEDOn@power:
   562                           	callstack 0
   563   000001                     sendCharSerial4@charToSend:
   564                           	callstack 0
   565   000001                     initDCmotorsPWM@PWMperiod:
   566                           	callstack 0
   567   000001                     memoryUpdateMovement@cf:
   568                           	callstack 0
   569   000001                     ___wmul@multiplier:
   570                           	callstack 0
   571   000001                     fputc@c:
   572                           	callstack 0
   573   000001                     strlen@s:
   574                           	callstack 0
   575   000001                     strncmp@_l:
   576                           	callstack 0
   577   000001                     ___fleq@ff1:
   578                           	callstack 0
   579   000001                     ___flge@ff1:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x0
   583   000001                     	ds	1
   584   000002                     ??_I2C_2_Master_Read:
   585   000002                     I2C_2_Master_Write@data_byte:
   586                           	callstack 0
   587   000002                     sendStringSerial4@string:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x1
   591   000002                     	ds	1
   592   000003                     color_writetoaddr@value:
   593                           	callstack 0
   594   000003                     I2C_2_Master_Read@ack:
   595                           	callstack 0
   596   000003                     memoryUpdateMovement@movementCount:
   597                           	callstack 0
   598   000003                     ___wmul@multiplicand:
   599                           	callstack 0
   600   000003                     fputc@fp:
   601                           	callstack 0
   602   000003                     strlen@a:
   603                           	callstack 0
   604   000003                     strncmp@_r:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x2
   608   000003                     	ds	1
   609   000004                     color_writetoaddr@address:
   610                           	callstack 0
   611   000004                     I2C_2_Master_Read@tmp:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0x3
   615   000004                     	ds	1
   616   000005                     ??_fputc:
   617   000005                     ??_color_click_init:
   618   000005                     ?_color_read_Red:
   619                           	callstack 0
   620   000005                     ?_color_read_Green:
   621                           	callstack 0
   622   000005                     ?_color_read_Blue:
   623                           	callstack 0
   624   000005                     ?_color_read_Clear:
   625                           	callstack 0
   626   000005                     memoryUpdateMovement@movementMemory:
   627                           	callstack 0
   628   000005                     ___wmul@product:
   629                           	callstack 0
   630   000005                     strncmp@n:
   631                           	callstack 0
   632   000005                     ___fleq@ff2:
   633                           	callstack 0
   634   000005                     ___flge@ff2:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x4
   638   000005                     	ds	2
   639   000007                     ??_strncmp:
   640   000007                     ??_color_read_Red:
   641   000007                     ??_color_read_Green:
   642   000007                     ??_color_read_Blue:
   643   000007                     ??_color_read_Clear:
   644   000007                     ?___lwdiv:
   645                           	callstack 0
   646   000007                     memoryUpdateMovement@colourcode:
   647                           	callstack 0
   648   000007                     ___lwdiv@dividend:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x6
   652   000007                     	ds	1
   653   000008                     strncmp@l:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x7
   657   000008                     	ds	1
   658   000009                     ??___fleq:
   659   000009                     ??___flge:
   660   000009                     ___lwdiv@divisor:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x8
   664   000009                     	ds	1
   665   00000A                     color_read_Red@tmp:
   666                           	callstack 0
   667   00000A                     color_read_Green@tmp:
   668                           	callstack 0
   669   00000A                     color_read_Blue@tmp:
   670                           	callstack 0
   671   00000A                     color_read_Clear@tmp:
   672                           	callstack 0
   673   00000A                     stoa@fp:
   674                           	callstack 0
   675   00000A                     strncmp@r:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x9
   679   00000A                     	ds	1
   680   00000B                     ___lwdiv@quotient:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0xA
   684   00000B                     	ds	1
   685   00000C                     ?___xxtofl:
   686                           	callstack 0
   687   00000C                     stoa@s:
   688                           	callstack 0
   689   00000C                     ___xxtofl@val:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0xB
   693   00000C                     	ds	1
   694   00000D                     ?_Hue2Colour:
   695                           	callstack 0
   696   00000D                     ___lwdiv@counter:
   697                           	callstack 0
   698   00000D                     Hue2Colour@cf:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xC
   702   00000D                     	ds	1
   703   00000E                     ??_stoa:
   704   00000E                     setMotorPWM@m:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0xD
   708   00000E                     	ds	1
   709   00000F                     Hue2Colour@colourname:
   710                           	callstack 0
   711   00000F                     stoa@nuls:
   712                           	callstack 0
   713                           
   714                           ; 7 bytes @ 0xE
   715   00000F                     	ds	1
   716   000010                     ??_setMotorPWM:
   717   000010                     ??___xxtofl:
   718                           
   719                           ; 1 bytes @ 0xF
   720   000010                     	ds	2
   721   000012                     setMotorPWM@posDuty:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x11
   725   000012                     	ds	1
   726   000013                     setMotorPWM@negDuty:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x12
   730   000013                     	ds	1
   731   000014                     ___xxtofl@sign:
   732                           	callstack 0
   733   000014                     stop@mL:
   734                           	callstack 0
   735   000014                     turnLeft@mL:
   736                           	callstack 0
   737   000014                     turnRight@mL:
   738                           	callstack 0
   739   000014                     fullSpeedAhead@mL:
   740                           	callstack 0
   741   000014                     fullSpeedReverse@mL:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x13
   745   000014                     	ds	1
   746   000015                     ___xxtofl@exp:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x14
   750   000015                     	ds	1
   751   000016                     stop@mR:
   752                           	callstack 0
   753   000016                     turnLeft@mR:
   754                           	callstack 0
   755   000016                     turnRight@mR:
   756                           	callstack 0
   757   000016                     fullSpeedAhead@mR:
   758                           	callstack 0
   759   000016                     fullSpeedReverse@mR:
   760                           	callstack 0
   761   000016                     stoa@w:
   762                           	callstack 0
   763   000016                     ___xxtofl@arg:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x15
   767   000016                     	ds	2
   768   000018                     ??_fullSpeedAhead:
   769   000018                     ??_stop:
   770   000018                     ??_fullSpeedReverse:
   771   000018                     turnLeft@i:
   772                           	callstack 0
   773   000018                     turnRight@i:
   774                           	callstack 0
   775   000018                     stoa@i:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x17
   779   000018                     	ds	1
   780   000019                     fullSpeedAhead@i:
   781                           	callstack 0
   782   000019                     fullSpeedReverse@i:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x18
   786   000019                     	ds	1
   787   00001A                     ?___flmul:
   788                           	callstack 0
   789   00001A                     colour_read_all@cf:
   790                           	callstack 0
   791   00001A                     Left45@mL:
   792                           	callstack 0
   793   00001A                     Right45@mL:
   794                           	callstack 0
   795   00001A                     stoa@cp:
   796                           	callstack 0
   797   00001A                     ___flmul@b:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x19
   801   00001A                     	ds	1
   802   00001B                     reverseHalfSquare@mL:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x1A
   806   00001B                     	ds	1
   807   00001C                     Left45@mR:
   808                           	callstack 0
   809   00001C                     Right45@mR:
   810                           	callstack 0
   811   00001C                     stoa@l:
   812                           	callstack 0
   813   00001C                     colour_read_all@R:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x1B
   817   00001C                     	ds	1
   818   00001D                     reverseHalfSquare@mR:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1C
   822   00001D                     	ds	1
   823   00001E                     ??_Left45:
   824   00001E                     ??_Right45:
   825   00001E                     stoa@p:
   826                           	callstack 0
   827   00001E                     ___flmul@a:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x1D
   831   00001E                     	ds	1
   832   00001F                     ??_reverseHalfSquare:
   833                           
   834                           ; 1 bytes @ 0x1E
   835   00001F                     	ds	1
   836   000020                     rotate180left@mL:
   837                           	callstack 0
   838   000020                     vfpfcnvrt@fp:
   839                           	callstack 0
   840   000020                     colour_read_all@G:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x1F
   844   000020                     	ds	1
   845   000021                     Red_R90@mL:
   846                           	callstack 0
   847   000021                     Green_L90@mL:
   848                           	callstack 0
   849   000021                     Yellow_rev1_R90@mL:
   850                           	callstack 0
   851   000021                     Pink_rev1_L90@mL:
   852                           	callstack 0
   853   000021                     Orange_R135@mL:
   854                           	callstack 0
   855   000021                     LightBlue_L135@mL:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x20
   859   000021                     	ds	1
   860   000022                     ??___flmul:
   861   000022                     rotate180left@mR:
   862                           	callstack 0
   863   000022                     vfpfcnvrt@fmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x21
   867   000022                     	ds	1
   868   000023                     Red_R90@mR:
   869                           	callstack 0
   870   000023                     Green_L90@mR:
   871                           	callstack 0
   872   000023                     Yellow_rev1_R90@mR:
   873                           	callstack 0
   874   000023                     Pink_rev1_L90@mR:
   875                           	callstack 0
   876   000023                     Orange_R135@mR:
   877                           	callstack 0
   878   000023                     LightBlue_L135@mR:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x22
   882   000023                     	ds	1
   883   000024                     Blue_T180@mL:
   884                           	callstack 0
   885   000024                     vfpfcnvrt@ap:
   886                           	callstack 0
   887   000024                     colour_read_all@B:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x23
   891   000024                     	ds	1
   892   000025                     ??_Yellow_rev1_R90:
   893   000025                     ??_Pink_rev1_L90:
   894   000025                     
   895                           ; 1 bytes @ 0x24
   896   000025                     	ds	1
   897   000026                     ??_vfpfcnvrt:
   898   000026                     ___flmul@sign:
   899                           	callstack 0
   900   000026                     Blue_T180@mR:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904   000026                     	ds	1
   905   000027                     ___flmul@grs:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x26
   909   000027                     	ds	1
   910   000028                     _vfpfcnvrt$2880:
   911                           	callstack 0
   912   000028                     colour_read_all@C:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x27
   916   000028                     	ds	2
   917   00002A                     ?_vfprintf:
   918                           	callstack 0
   919   00002A                     vfprintf@fp:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x29
   923   00002A                     	ds	1
   924   00002B                     ___flmul@aexp:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x2A
   928   00002B                     	ds	1
   929   00002C                     ___flmul@bexp:
   930                           	callstack 0
   931   00002C                     vfprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x2B
   935   00002C                     	ds	1
   936   00002D                     ___flmul@prod:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x2C
   940   00002D                     	ds	1
   941   00002E                     vfprintf@ap:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x2D
   945   00002E                     	ds	2
   946   000030                     vfprintf@cfmt:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x2F
   950   000030                     	ds	1
   951   000031                     ___flmul@temp:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x30
   955   000031                     	ds	1
   956   000032                     ?_sprintf:
   957                           	callstack 0
   958   000032                     sprintf@s:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x31
   962   000032                     	ds	1
   963   000033                     ?_getTimerValue:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x32
   967   000033                     	ds	1
   968   000034                     sprintf@fmt:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x33
   972   000034                     	ds	3
   973   000037                     ??_getTimerValue:
   974                           
   975                           ; 1 bytes @ 0x36
   976   000037                     	ds	1
   977   000038                     sprintf@ap:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x37
   981   000038                     	ds	1
   982   000039                     getTimerValue@timerCount:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x38
   986   000039                     	ds	1
   987   00003A                     sprintf@f:
   988                           	callstack 0
   989                           
   990                           ; 11 bytes @ 0x39
   991   00003A                     	ds	1
   992   00003B                     ?___fladd:
   993                           	callstack 0
   994   00003B                     ___fladd@b:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x3A
   998   00003B                     	ds	4
   999   00003F                     ___fladd@a:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x3E
  1003   00003F                     	ds	4
  1004   000043                     ??___fladd:
  1005                           
  1006                           ; 1 bytes @ 0x42
  1007   000043                     	ds	2
  1008   000045                     Color2String@buf:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x44
  1012   000045                     	ds	2
  1013   000047                     ___fladd@signs:
  1014                           	callstack 0
  1015   000047                     Color2String@cf:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x46
  1019   000047                     	ds	1
  1020   000048                     ___fladd@aexp:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x47
  1024   000048                     	ds	1
  1025   000049                     ___fladd@bexp:
  1026                           	callstack 0
  1027   000049                     Color2String@colourname:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x48
  1031   000049                     	ds	1
  1032   00004A                     ___fladd@grs:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x49
  1036   00004A                     	ds	1
  1037   00004B                     ?___flsub:
  1038                           	callstack 0
  1039   00004B                     ?___fltol:
  1040                           	callstack 0
  1041   00004B                     ___fltol@f1:
  1042                           	callstack 0
  1043   00004B                     ___flsub@b:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x4A
  1047   00004B                     	ds	4
  1048   00004F                     ??___fltol:
  1049   00004F                     ___flsub@a:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x4E
  1053   00004F                     	ds	4
  1054   000053                     ?___fldiv:
  1055                           	callstack 0
  1056   000053                     ___fltol@sign1:
  1057                           	callstack 0
  1058   000053                     ___fldiv@b:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x52
  1062   000053                     	ds	1
  1063   000054                     ___fltol@exp1:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x53
  1067   000054                     	ds	1
  1068   000055                     White@mL:
  1069                           	callstack 0
  1070   000055                     memoryUpdateTime@movementCount:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x54
  1074   000055                     	ds	2
  1075   000057                     White@mR:
  1076                           	callstack 0
  1077   000057                     memoryUpdateTime@timerMemory:
  1078                           	callstack 0
  1079   000057                     ___fldiv@a:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x56
  1083   000057                     	ds	2
  1084   000059                     White@movementCount:
  1085                           	callstack 0
  1086   000059                     _memoryUpdateTime$3171:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x58
  1090   000059                     	ds	2
  1091   00005B                     ??___fldiv:
  1092   00005B                     White@movementMemory:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x5A
  1096   00005B                     	ds	2
  1097   00005D                     White@timerMemory:
  1098                           	callstack 0
  1099   00005D                     memoryUpdateTime@timerVal:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x5C
  1103   00005D                     	ds	2
  1104                           
  1105 ;;
  1106 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1107 ;;
  1108 ;; *************** function _main *****************
  1109 ;; Defined at:
  1110 ;;		line 17 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  data          100   29[BANK0 ] unsigned char [100]
  1115 ;;  buf            20    0        unsigned char [20]
  1116 ;;  PWMcycle        2    0        unsigned int 
  1117 ;;  wall            1  129[BANK0 ] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1130 ;;      Totals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;Total ram usage:      103 bytes
  1132 ;; Hardware stack levels required when called: 9
  1133 ;; This function calls:
  1134 ;;		_ClickLEDOn
  1135 ;;		_Color2String
  1136 ;;		_Colour2Action
  1137 ;;		_Hue2Colour
  1138 ;;		_I2C_2_Master_Init
  1139 ;;		_LED_init
  1140 ;;		_RGB2Hue
  1141 ;;		_TimerReset
  1142 ;;		___flge
  1143 ;;		_color_click_init
  1144 ;;		_colour_read_all
  1145 ;;		_fullSpeedAhead
  1146 ;;		_initDCmotorsPWM
  1147 ;;		_initUSART4
  1148 ;;		_memoryUpdateMovement
  1149 ;;		_memoryUpdateTime
  1150 ;;		_stop
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text0
  1157   002A54                     __ptext0:
  1158                           	callstack 0
  1159   002A54                     _main:
  1160                           	callstack 22
  1161   002A54                     
  1162                           ;main.c: 18:     char data[100];;main.c: 20:     initUSART4();
  1163   002A54  EC77  F024         	call	_initUSART4	;wreg free
  1164   002A58                     
  1165                           ;main.c: 21:     color_click_init();
  1166   002A58  ECAE  F023         	call	_color_click_init	;wreg free
  1167   002A5C                     
  1168                           ;main.c: 22:     I2C_2_Master_Init();
  1169   002A5C  EC3B  F024         	call	_I2C_2_Master_Init	;wreg free
  1170   002A60                     
  1171                           ;main.c: 23:     LED_init();
  1172   002A60  ECAC  F024         	call	_LED_init	;wreg free
  1173   002A64                     
  1174                           ;main.c: 25:     initDCmotorsPWM(PWMcycle);
  1175   002A64  0E00               	movlw	0
  1176   002A66  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1177   002A68  0E63               	movlw	99
  1178   002A6A  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1179   002A6C  EC5C  F01F         	call	_initDCmotorsPWM	;wreg free
  1180   002A70                     
  1181                           ;main.c: 27:     motorL.power=0;
  1182   002A70  0E00               	movlw	0
  1183   002A72  0100               	movlb	0	; () banked
  1184   002A74  6FF6               	movwf	_motorL& (0+255),b
  1185   002A76                     
  1186                           ; BSR set to: 0
  1187                           ;main.c: 28:     motorL.direction=1;
  1188   002A76  0E01               	movlw	1
  1189   002A78  6FF7               	movwf	(_motorL+1)& (0+255),b
  1190   002A7A                     
  1191                           ; BSR set to: 0
  1192                           ;main.c: 29:     motorL.brakemode=1;
  1193   002A7A  0E01               	movlw	1
  1194   002A7C  6FF8               	movwf	(_motorL+2)& (0+255),b
  1195   002A7E                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1198   002A7E  0EAA               	movlw	170
  1199   002A80  6FFB               	movwf	(_motorL+5)& (0+255),b
  1200   002A82  0E0F               	movlw	15
  1201   002A84  6FFC               	movwf	(_motorL+6)& (0+255),b
  1202   002A86                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1205   002A86  0EA6               	movlw	166
  1206   002A88  6FFD               	movwf	(_motorL+7)& (0+255),b
  1207   002A8A  0E0F               	movlw	15
  1208   002A8C  6FFE               	movwf	(_motorL+8)& (0+255),b
  1209   002A8E                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
  1212   002A8E  0E00               	movlw	0
  1213   002A90  6FFA               	movwf	(_motorL+4)& (0+255),b
  1214   002A92  0E63               	movlw	99
  1215   002A94  6FF9               	movwf	(_motorL+3)& (0+255),b
  1216   002A96                     
  1217                           ; BSR set to: 0
  1218                           ;main.c: 34:     motorR.power=0;
  1219   002A96  0E00               	movlw	0
  1220   002A98  6FED               	movwf	_motorR& (0+255),b
  1221   002A9A                     
  1222                           ; BSR set to: 0
  1223                           ;main.c: 35:     motorR.direction=1;
  1224   002A9A  0E01               	movlw	1
  1225   002A9C  6FEE               	movwf	(_motorR+1)& (0+255),b
  1226   002A9E                     
  1227                           ; BSR set to: 0
  1228                           ;main.c: 36:     motorR.brakemode=1;
  1229   002A9E  0E01               	movlw	1
  1230   002AA0  6FEF               	movwf	(_motorR+2)& (0+255),b
  1231   002AA2                     
  1232                           ; BSR set to: 0
  1233                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1234   002AA2  0E25               	movlw	37
  1235   002AA4  6FF2               	movwf	(_motorR+5)& (0+255),b
  1236   002AA6  0E0F               	movlw	15
  1237   002AA8  6FF3               	movwf	(_motorR+6)& (0+255),b
  1238   002AAA                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1241   002AAA  0E21               	movlw	33
  1242   002AAC  6FF4               	movwf	(_motorR+7)& (0+255),b
  1243   002AAE  0E0F               	movlw	15
  1244   002AB0  6FF5               	movwf	(_motorR+8)& (0+255),b
  1245   002AB2                     
  1246                           ; BSR set to: 0
  1247                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
  1248   002AB2  0E00               	movlw	0
  1249   002AB4  6FF1               	movwf	(_motorR+4)& (0+255),b
  1250   002AB6  0E63               	movlw	99
  1251   002AB8  6FF0               	movwf	(_motorR+3)& (0+255),b
  1252   002ABA                     
  1253                           ; BSR set to: 0
  1254                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1255   002ABA  8486               	bsf	134,2,c	;volatile
  1256   002ABC                     
  1257                           ; BSR set to: 0
  1258                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1259   002ABC  010E               	movlb	14	; () banked
  1260   002ABE  95B4               	bcf	180,2,b	;volatile
  1261   002AC0                     l283:
  1262                           
  1263                           ;main.c: 43:     while(PORTFbits.RF2){
  1264   002AC0  B48E               	btfsc	142,2,c	;volatile
  1265   002AC2  EF65  F015         	goto	u4131
  1266   002AC6  EF67  F015         	goto	u4130
  1267   002ACA                     u4131:
  1268   002ACA  EF60  F015         	goto	l283
  1269   002ACE                     u4130:
  1270   002ACE                     
  1271                           ;main.c: 45:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1272   002ACE  0E52               	movlw	82
  1273   002AD0  0100               	movlb	0	; () banked
  1274   002AD2  6F7C               	movwf	(??_main+1)& (0+255),b
  1275   002AD4  0E2B               	movlw	43
  1276   002AD6  6F7B               	movwf	??_main& (0+255),b
  1277   002AD8  0E00               	movlw	0
  1278   002ADA                     u4207:
  1279   002ADA  2EE8               	decfsz	wreg,f,c
  1280   002ADC  D7FE               	bra	u4207
  1281   002ADE  2F7B               	decfsz	??_main& (0+255),f,b
  1282   002AE0  D7FC               	bra	u4207
  1283   002AE2  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1284   002AE4  D7FA               	bra	u4207
  1285   002AE6  F000               	nop	
  1286   002AE8                     
  1287                           ;main.c: 46:     TimerReset();
  1288   002AE8  ECC8  F024         	call	_TimerReset	;wreg free
  1289   002AEC                     
  1290                           ;main.c: 47:     char wall=0;
  1291   002AEC  0E00               	movlw	0
  1292   002AEE  0100               	movlb	0	; () banked
  1293   002AF0  6FE1               	movwf	main@wall& (0+255),b
  1294   002AF2                     
  1295                           ; BSR set to: 0
  1296                           ;main.c: 48:     ClickLEDOn(0);
  1297   002AF2  0E00               	movlw	0
  1298   002AF4  EC09  F024         	call	_ClickLEDOn
  1299                           
  1300                           ;main.c: 50:     char buf[20];;main.c: 51:     while (!retracingDone){
  1301   002AF8  EF2B  F016         	goto	l4476
  1302   002AFC                     l4432:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 52:         fullSpeedAhead(&motorL,&motorR);
  1306   002AFC  0EF6               	movlw	low _motorL
  1307   002AFE  6E14               	movwf	fullSpeedAhead@mL^0,c
  1308   002B00  0E00               	movlw	high _motorL
  1309   002B02  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1310   002B04  0EED               	movlw	low _motorR
  1311   002B06  6E16               	movwf	fullSpeedAhead@mR^0,c
  1312   002B08  0E00               	movlw	high _motorR
  1313   002B0A  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1314   002B0C  EC71  F020         	call	_fullSpeedAhead	;wreg free
  1315                           
  1316                           ;main.c: 54:         while (!wall){
  1317   002B10  EFDA  F015         	goto	l4450
  1318   002B14                     l4434:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;main.c: 56:             colour_read_all(&colorf);
  1322   002B14  0E70               	movlw	low _colorf
  1323   002B16  6E1A               	movwf	colour_read_all@cf^0,c
  1324   002B18  0E01               	movlw	high _colorf
  1325   002B1A  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1326   002B1C  ECEC  F019         	call	_colour_read_all	;wreg free
  1327   002B20                     
  1328                           ;main.c: 57:             Color2String(data,&colorf);
  1329   002B20  0E7D               	movlw	low main@data
  1330   002B22  6E45               	movwf	Color2String@buf^0,c
  1331   002B24  0E00               	movlw	high main@data
  1332   002B26  6E46               	movwf	(Color2String@buf+1)^0,c
  1333   002B28  0E70               	movlw	low _colorf
  1334   002B2A  6E47               	movwf	Color2String@cf^0,c
  1335   002B2C  0E01               	movlw	high _colorf
  1336   002B2E  6E48               	movwf	(Color2String@cf+1)^0,c
  1337   002B30  ECCE  F023         	call	_Color2String	;wreg free
  1338   002B34                     
  1339                           ;main.c: 60:              if (colorf.Cf<50)
  1340   002B34  C17C  F001         	movff	_colorf+12,___flge@ff1
  1341   002B38  C17D  F002         	movff	_colorf+13,___flge@ff1+1
  1342   002B3C  C17E  F003         	movff	_colorf+14,___flge@ff1+2
  1343   002B40  C17F  F004         	movff	_colorf+15,___flge@ff1+3
  1344   002B44  0E00               	movlw	0
  1345   002B46  6E05               	movwf	___flge@ff2^0,c
  1346   002B48  0E00               	movlw	0
  1347   002B4A  6E06               	movwf	(___flge@ff2+1)^0,c
  1348   002B4C  0E48               	movlw	72
  1349   002B4E  6E07               	movwf	(___flge@ff2+2)^0,c
  1350   002B50  0E42               	movlw	66
  1351   002B52  6E08               	movwf	(___flge@ff2+3)^0,c
  1352   002B54  ECF2  F01A         	call	___flge	;wreg free
  1353   002B58  B0D8               	btfsc	status,0,c
  1354   002B5A  EFB1  F015         	goto	u4141
  1355   002B5E  EFB3  F015         	goto	u4140
  1356   002B62                     u4141:
  1357   002B62  EFDA  F015         	goto	l4450
  1358   002B66                     u4140:
  1359   002B66                     
  1360                           ;main.c: 61:              {;main.c: 68:             memoryUpdateTime(movementCount,timer
      +                          Memory);
  1361   002B66  C0E8  F055         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1362   002B6A  C0E9  F056         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1363   002B6E  0E20               	movlw	low _timerMemory
  1364   002B70  6E57               	movwf	memoryUpdateTime@timerMemory^0,c
  1365   002B72  0E01               	movlw	high _timerMemory
  1366   002B74  6E58               	movwf	(memoryUpdateTime@timerMemory+1)^0,c
  1367   002B76  EC12  F01F         	call	_memoryUpdateTime	;wreg free
  1368   002B7A                     
  1369                           ;main.c: 70:             wall=1;
  1370   002B7A  0E01               	movlw	1
  1371   002B7C  0100               	movlb	0	; () banked
  1372   002B7E  6FE1               	movwf	main@wall& (0+255),b
  1373   002B80                     
  1374                           ; BSR set to: 0
  1375                           ;main.c: 71:             ClickLEDOn(1);
  1376   002B80  0E01               	movlw	1
  1377   002B82  EC09  F024         	call	_ClickLEDOn
  1378   002B86                     
  1379                           ;main.c: 72:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1380   002B86  0E52               	movlw	82
  1381   002B88  0100               	movlb	0	; () banked
  1382   002B8A  6F7C               	movwf	(??_main+1)& (0+255),b
  1383   002B8C  0E2B               	movlw	43
  1384   002B8E  6F7B               	movwf	??_main& (0+255),b
  1385   002B90  0E00               	movlw	0
  1386   002B92                     u4217:
  1387   002B92  2EE8               	decfsz	wreg,f,c
  1388   002B94  D7FE               	bra	u4217
  1389   002B96  2F7B               	decfsz	??_main& (0+255),f,b
  1390   002B98  D7FC               	bra	u4217
  1391   002B9A  2F7C               	decfsz	(??_main+1)& (0+255),f,b
  1392   002B9C  D7FA               	bra	u4217
  1393   002B9E  F000               	nop	
  1394   002BA0                     
  1395                           ;main.c: 73:             stop(&motorL,&motorR);
  1396   002BA0  0EF6               	movlw	low _motorL
  1397   002BA2  6E14               	movwf	stop@mL^0,c
  1398   002BA4  0E00               	movlw	high _motorL
  1399   002BA6  6E15               	movwf	(stop@mL+1)^0,c
  1400   002BA8  0EED               	movlw	low _motorR
  1401   002BAA  6E16               	movwf	stop@mR^0,c
  1402   002BAC  0E00               	movlw	high _motorR
  1403   002BAE  6E17               	movwf	(stop@mR+1)^0,c
  1404   002BB0  EC85  F01D         	call	_stop	;wreg free
  1405   002BB4                     l4450:
  1406                           
  1407                           ;main.c: 54:         while (!wall){
  1408   002BB4  0100               	movlb	0	; () banked
  1409   002BB6  51E1               	movf	main@wall& (0+255),w,b
  1410   002BB8  B4D8               	btfsc	status,2,c
  1411   002BBA  EFE1  F015         	goto	u4151
  1412   002BBE  EFE3  F015         	goto	u4150
  1413   002BC2                     u4151:
  1414   002BC2  EF8A  F015         	goto	l4434
  1415   002BC6                     u4150:
  1416   002BC6                     
  1417                           ; BSR set to: 0
  1418                           ;main.c: 76:         colour_read_all(&colorf);
  1419   002BC6  0E70               	movlw	low _colorf
  1420   002BC8  6E1A               	movwf	colour_read_all@cf^0,c
  1421   002BCA  0E01               	movlw	high _colorf
  1422   002BCC  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1423   002BCE  ECEC  F019         	call	_colour_read_all	;wreg free
  1424   002BD2                     
  1425                           ;main.c: 77:         wall=0;
  1426   002BD2  0E00               	movlw	0
  1427   002BD4  0100               	movlb	0	; () banked
  1428   002BD6  6FE1               	movwf	main@wall& (0+255),b
  1429   002BD8                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 78:         ClickLEDOn(0);
  1432   002BD8  0E00               	movlw	0
  1433   002BDA  EC09  F024         	call	_ClickLEDOn
  1434   002BDE                     
  1435                           ;main.c: 79:         RGB2Hue(&colorf);
  1436   002BDE  0E70               	movlw	low _colorf
  1437   002BE0  0100               	movlb	0	; () banked
  1438   002BE2  6F6D               	movwf	RGB2Hue@cf& (0+255),b
  1439   002BE4  0E01               	movlw	high _colorf
  1440   002BE6  6F6E               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1441   002BE8  EC29  F007         	call	_RGB2Hue	;wreg free
  1442   002BEC                     
  1443                           ;main.c: 80:         Hue2Colour(&colorf);
  1444   002BEC  0E70               	movlw	low _colorf
  1445   002BEE  6E0D               	movwf	Hue2Colour@cf^0,c
  1446   002BF0  0E01               	movlw	high _colorf
  1447   002BF2  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1448   002BF4  ECBF  F00A         	call	_Hue2Colour	;wreg free
  1449   002BF8                     
  1450                           ;main.c: 81:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1451   002BF8  0E70               	movlw	low _colorf
  1452   002BFA  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1453   002BFC  0E01               	movlw	high _colorf
  1454   002BFE  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1455   002C00  C0E8  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1456   002C04  C0E9  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1457   002C08  0E48               	movlw	low _movementMemory
  1458   002C0A  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1459   002C0C  0E01               	movlw	high _movementMemory
  1460   002C0E  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1461   002C10  EC23  F024         	call	_memoryUpdateMovement	;wreg free
  1462   002C14                     
  1463                           ;main.c: 82:         Colour2Action(&colorf);
  1464   002C14  0E70               	movlw	low _colorf
  1465   002C16  0100               	movlb	0	; () banked
  1466   002C18  6F66               	movwf	Colour2Action@cf& (0+255),b
  1467   002C1A  0E01               	movlw	high _colorf
  1468   002C1C  6F67               	movwf	(Colour2Action@cf+1)& (0+255),b
  1469   002C1E  EC37  F016         	call	_Colour2Action	;wreg free
  1470   002C22                     
  1471                           ;main.c: 83:         if (colorf.colourindex == 7)
  1472   002C22  0E07               	movlw	7
  1473   002C24  0101               	movlb	1	; () banked
  1474   002C26  1984               	xorwf	(_colorf+20)& (0+255),w,b
  1475   002C28  1185               	iorwf	(_colorf+21)& (0+255),w,b
  1476   002C2A  A4D8               	btfss	status,2,c
  1477   002C2C  EF1A  F016         	goto	u4161
  1478   002C30  EF1C  F016         	goto	u4160
  1479   002C34                     u4161:
  1480   002C34  EF26  F016         	goto	l4472
  1481   002C38                     u4160:
  1482   002C38                     l4470:
  1483   002C38  0100               	movlb	0	; () banked
  1484   002C3A  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1485   002C3C  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1486   002C3E  B4D8               	btfsc	status,2,c
  1487   002C40  EF24  F016         	goto	u4171
  1488   002C44  EF26  F016         	goto	u4170
  1489   002C48                     u4171:
  1490   002C48  EF1C  F016         	goto	l4470
  1491   002C4C                     u4170:
  1492   002C4C                     l4472:
  1493                           
  1494                           ;main.c: 87:         TimerReset();
  1495   002C4C  ECC8  F024         	call	_TimerReset	;wreg free
  1496   002C50                     
  1497                           ;main.c: 88:         movementCount++;
  1498   002C50  0100               	movlb	0	; () banked
  1499   002C52  4BE8               	infsnz	_movementCount& (0+255),f,b	;volatile
  1500   002C54  2BE9               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1501   002C56                     l4476:
  1502                           
  1503                           ;main.c: 51:     while (!retracingDone){
  1504   002C56  0100               	movlb	0	; () banked
  1505   002C58  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  1506   002C5A  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1507   002C5C  B4D8               	btfsc	status,2,c
  1508   002C5E  EF33  F016         	goto	u4181
  1509   002C62  EF35  F016         	goto	u4180
  1510   002C66                     u4181:
  1511   002C66  EF7E  F015         	goto	l4432
  1512   002C6A                     u4180:
  1513   002C6A                     
  1514                           ; BSR set to: 0
  1515   002C6A  EF16  F000         	goto	start
  1516   002C6E                     __end_of_main:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _memoryUpdateTime *****************
  1520 ;; Defined at:
  1521 ;;		line 16 in file "memory.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  movementCoun    2   84[COMRAM] volatile unsigned int 
  1524 ;;  timerMemory     2   86[COMRAM] PTR volatile unsigned in
  1525 ;;		 -> timerMemory(40), 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  timerVal        2   92[COMRAM] unsigned int 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;Total ram usage:       10 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 3
  1544 ;; This function calls:
  1545 ;;		___fladd
  1546 ;;		___fltol
  1547 ;;		_getTimerValue
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text1
  1554   003E24                     __ptext1:
  1555                           	callstack 0
  1556   003E24                     _memoryUpdateTime:
  1557                           	callstack 27
  1558   003E24                     
  1559                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile unsig
      +                          ned int *timerMemory);memory.c: 17: {;memory.c: 18:     unsigned int timerVal = getTimer
      +                          Value()-_halfsquare-650;
  1560   003E24  0E00               	movlw	0
  1561   003E26  6E3F               	movwf	___fladd@a^0,c
  1562   003E28  0E00               	movlw	0
  1563   003E2A  6E40               	movwf	(___fladd@a+1)^0,c
  1564   003E2C  0EAF               	movlw	175
  1565   003E2E  6E41               	movwf	(___fladd@a+2)^0,c
  1566   003E30  0EC3               	movlw	195
  1567   003E32  6E42               	movwf	(___fladd@a+3)^0,c
  1568   003E34  ECA7  F021         	call	_getTimerValue	;wreg free
  1569   003E38  C033  F03B         	movff	?_getTimerValue,___fladd@b
  1570   003E3C  C034  F03C         	movff	?_getTimerValue+1,___fladd@b+1
  1571   003E40  C035  F03D         	movff	?_getTimerValue+2,___fladd@b+2
  1572   003E44  C036  F03E         	movff	?_getTimerValue+3,___fladd@b+3
  1573   003E48  EC40  F00D         	call	___fladd	;wreg free
  1574   003E4C  C03B  F059         	movff	?___fladd,_memoryUpdateTime$3171
  1575   003E50  C03C  F05A         	movff	?___fladd+1,_memoryUpdateTime$3171+1
  1576   003E54  C03D  F05B         	movff	?___fladd+2,_memoryUpdateTime$3171+2
  1577   003E58  C03E  F05C         	movff	?___fladd+3,_memoryUpdateTime$3171+3
  1578   003E5C                     
  1579                           ;memory.c: 16: void memoryUpdateTime(volatile unsigned int movementCount, volatile unsig
      +                          ned int *timerMemory);memory.c: 17: {;memory.c: 18:     unsigned int timerVal = getTimer
      +                          Value()-_halfsquare-650;
  1580   003E5C  0E00               	movlw	0
  1581   003E5E  6E3F               	movwf	___fladd@a^0,c
  1582   003E60  0E80               	movlw	128
  1583   003E62  6E40               	movwf	(___fladd@a+1)^0,c
  1584   003E64  0E22               	movlw	34
  1585   003E66  6E41               	movwf	(___fladd@a+2)^0,c
  1586   003E68  0EC4               	movlw	196
  1587   003E6A  6E42               	movwf	(___fladd@a+3)^0,c
  1588   003E6C  C059  F03B         	movff	_memoryUpdateTime$3171,___fladd@b
  1589   003E70  C05A  F03C         	movff	_memoryUpdateTime$3171+1,___fladd@b+1
  1590   003E74  C05B  F03D         	movff	_memoryUpdateTime$3171+2,___fladd@b+2
  1591   003E78  C05C  F03E         	movff	_memoryUpdateTime$3171+3,___fladd@b+3
  1592   003E7C  EC40  F00D         	call	___fladd	;wreg free
  1593   003E80  C03B  F04B         	movff	?___fladd,___fltol@f1
  1594   003E84  C03C  F04C         	movff	?___fladd+1,___fltol@f1+1
  1595   003E88  C03D  F04D         	movff	?___fladd+2,___fltol@f1+2
  1596   003E8C  C03E  F04E         	movff	?___fladd+3,___fltol@f1+3
  1597   003E90  EC6F  F01A         	call	___fltol	;wreg free
  1598   003E94  C04B  F05D         	movff	?___fltol,memoryUpdateTime@timerVal
  1599   003E98  C04C  F05E         	movff	?___fltol+1,memoryUpdateTime@timerVal+1
  1600   003E9C                     
  1601                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1602   003E9C  90D8               	bcf	status,0,c
  1603   003E9E  3455               	rlcf	memoryUpdateTime@movementCount^0,w,c	;volatile
  1604   003EA0  6ED9               	movwf	fsr2l,c
  1605   003EA2  3456               	rlcf	(memoryUpdateTime@movementCount+1)^0,w,c	;volatile
  1606   003EA4  6EDA               	movwf	fsr2h,c
  1607   003EA6  5057               	movf	memoryUpdateTime@timerMemory^0,w,c
  1608   003EA8  26D9               	addwf	fsr2l,f,c
  1609   003EAA  5058               	movf	(memoryUpdateTime@timerMemory+1)^0,w,c
  1610   003EAC  22DA               	addwfc	fsr2h,f,c
  1611   003EAE  C05D  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1612   003EB2  C05E  FFDD         	movff	memoryUpdateTime@timerVal+1,postdec2
  1613   003EB6  0012               	return		;funcret
  1614   003EB8                     __end_of_memoryUpdateTime:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _memoryUpdateMovement *****************
  1618 ;; Defined at:
  1619 ;;		line 10 in file "memory.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  cf              2    0[COMRAM] PTR struct RGBC_rel
  1622 ;;		 -> colorf(22), 
  1623 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1624 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1625 ;;		 -> movementMemory(40), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  colourcode      2    6[COMRAM] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1637 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;Total ram usage:        8 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 1
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text2
  1652   004846                     __ptext2:
  1653                           	callstack 0
  1654   004846                     _memoryUpdateMovement:
  1655                           	callstack 29
  1656   004846                     
  1657                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC_rel *cf, volatile unsigned int move
      +                          mentCount, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int 
      +                          colourcode = cf->colourindex;
  1658   004846  EE20 F014          	lfsr	2,20
  1659   00484A  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1660   00484C  26D9               	addwf	fsr2l,f,c
  1661   00484E  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1662   004850  22DA               	addwfc	fsr2h,f,c
  1663   004852  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1664   004856  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1665                           
  1666                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1667   00485A  90D8               	bcf	status,0,c
  1668   00485C  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1669   00485E  6ED9               	movwf	fsr2l,c
  1670   004860  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1671   004862  6EDA               	movwf	fsr2h,c
  1672   004864  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1673   004866  26D9               	addwf	fsr2l,f,c
  1674   004868  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1675   00486A  22DA               	addwfc	fsr2h,f,c
  1676   00486C  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1677   004870  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1678   004874  0012               	return		;funcret
  1679   004876                     __end_of_memoryUpdateMovement:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _initUSART4 *****************
  1683 ;; Defined at:
  1684 ;;		line 7 in file "serial.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text3
  1713   0048EE                     __ptext3:
  1714                           	callstack 0
  1715   0048EE                     _initUSART4:
  1716                           	callstack 29
  1717   0048EE                     
  1718                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1719   0048EE  8883               	bsf	131,4,c	;volatile
  1720                           
  1721                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1722   0048F0  8283               	bsf	131,1,c	;volatile
  1723   0048F2                     
  1724                           ;serial.c: 10:     RC0PPS = 0x12;
  1725   0048F2  0E12               	movlw	18
  1726   0048F4  010E               	movlb	14	; () banked
  1727   0048F6  6F62               	movwf	98,b	;volatile
  1728                           
  1729                           ;serial.c: 11:     RX4PPS = 0x11;
  1730   0048F8  0E11               	movlw	17
  1731   0048FA  6F15               	movwf	21,b	;volatile
  1732   0048FC                     
  1733                           ; BSR set to: 14
  1734                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1735   0048FC  97E9               	bcf	233,3,b	;volatile
  1736   0048FE                     
  1737                           ; BSR set to: 14
  1738                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1739   0048FE  95E8               	bcf	232,2,b	;volatile
  1740                           
  1741                           ;serial.c: 15:     SP4BRGL = 51;
  1742   004900  0E33               	movlw	51
  1743   004902  6FE5               	movwf	229,b	;volatile
  1744                           
  1745                           ;serial.c: 16:     SP4BRGH = 0;
  1746   004904  0E00               	movlw	0
  1747   004906  6FE6               	movwf	230,b	;volatile
  1748   004908                     
  1749                           ; BSR set to: 14
  1750                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1751   004908  89E7               	bsf	231,4,b	;volatile
  1752   00490A                     
  1753                           ; BSR set to: 14
  1754                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1755   00490A  8BE8               	bsf	232,5,b	;volatile
  1756   00490C                     
  1757                           ; BSR set to: 14
  1758                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1759   00490C  8FE7               	bsf	231,7,b	;volatile
  1760   00490E                     
  1761                           ; BSR set to: 14
  1762   00490E  0012               	return		;funcret
  1763   004910                     __end_of_initUSART4:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _initDCmotorsPWM *****************
  1767 ;; Defined at:
  1768 ;;		line 11 in file "dc_motor.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;Total ram usage:        2 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text4
  1797   003EB8                     __ptext4:
  1798                           	callstack 0
  1799   003EB8                     _initDCmotorsPWM:
  1800                           	callstack 29
  1801   003EB8                     
  1802                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1803   003EB8  9485               	bcf	133,2,c	;volatile
  1804                           
  1805                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1806   003EBA  9E83               	bcf	131,7,c	;volatile
  1807                           
  1808                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1809   003EBC  9885               	bcf	133,4,c	;volatile
  1810                           
  1811                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1812   003EBE  9C87               	bcf	135,6,c	;volatile
  1813                           
  1814                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1815   003EC0  947D               	bcf	125,2,c	;volatile
  1816                           
  1817                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1818   003EC2  9E7B               	bcf	123,7,c	;volatile
  1819                           
  1820                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1821   003EC4  987D               	bcf	125,4,c	;volatile
  1822                           
  1823                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1824   003EC6  9C7F               	bcf	127,6,c	;volatile
  1825   003EC8                     
  1826                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1827   003EC8  0E05               	movlw	5
  1828   003ECA  010E               	movlb	14	; () banked
  1829   003ECC  6F74               	movwf	116,b	;volatile
  1830                           
  1831                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1832   003ECE  0E06               	movlw	6
  1833   003ED0  6F76               	movwf	118,b	;volatile
  1834                           
  1835                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1836   003ED2  0E07               	movlw	7
  1837   003ED4  6F69               	movwf	105,b	;volatile
  1838                           
  1839                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1840   003ED6  0E08               	movlw	8
  1841   003ED8  6F88               	movwf	136,b	;volatile
  1842                           
  1843                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1844   003EDA  50BD               	movf	189,w,c	;volatile
  1845   003EDC  0B8F               	andlw	-113
  1846   003EDE  0940               	iorlw	64
  1847   003EE0  6EBD               	movwf	189,c	;volatile
  1848                           
  1849                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1850   003EE2  0EE0               	movlw	-32
  1851   003EE4  16BE               	andwf	190,f,c	;volatile
  1852                           
  1853                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1854   003EE6  50BF               	movf	191,w,c	;volatile
  1855   003EE8  0BF0               	andlw	-16
  1856   003EEA  0901               	iorlw	1
  1857   003EEC  6EBF               	movwf	191,c	;volatile
  1858   003EEE                     
  1859                           ; BSR set to: 14
  1860                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1861   003EEE  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1862   003EF2                     
  1863                           ; BSR set to: 14
  1864                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1865   003EF2  8EBD               	bsf	189,7,c	;volatile
  1866                           
  1867                           ;dc_motor.c: 40:     CCPR1H=0;
  1868   003EF4  0E00               	movlw	0
  1869   003EF6  6EAA               	movwf	170,c	;volatile
  1870                           
  1871                           ;dc_motor.c: 41:     CCPR2H=0;
  1872   003EF8  0E00               	movlw	0
  1873   003EFA  6EA6               	movwf	166,c	;volatile
  1874                           
  1875                           ;dc_motor.c: 42:     CCPR3H=0;
  1876   003EFC  0E00               	movlw	0
  1877   003EFE  010F               	movlb	15	; () banked
  1878   003F00  6F25               	movwf	37,b	;volatile
  1879                           
  1880                           ;dc_motor.c: 43:     CCPR4H=0;
  1881   003F02  0E00               	movlw	0
  1882   003F04  6F21               	movwf	33,b	;volatile
  1883                           
  1884                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1885   003F06  0EFC               	movlw	-4
  1886   003F08  16AD               	andwf	173,f,c	;volatile
  1887                           
  1888                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1889   003F0A  0EF3               	movlw	-13
  1890   003F0C  16AD               	andwf	173,f,c	;volatile
  1891                           
  1892                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1893   003F0E  0ECF               	movlw	-49
  1894   003F10  16AD               	andwf	173,f,c	;volatile
  1895                           
  1896                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1897   003F12  0E3F               	movlw	-193
  1898   003F14  16AD               	andwf	173,f,c	;volatile
  1899   003F16                     
  1900                           ; BSR set to: 15
  1901                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1902   003F16  88AB               	bsf	171,4,c	;volatile
  1903                           
  1904                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1905   003F18  50AB               	movf	171,w,c	;volatile
  1906   003F1A  0BF0               	andlw	-16
  1907   003F1C  090C               	iorlw	12
  1908   003F1E  6EAB               	movwf	171,c	;volatile
  1909   003F20                     
  1910                           ; BSR set to: 15
  1911                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1912   003F20  8EAB               	bsf	171,7,c	;volatile
  1913   003F22                     
  1914                           ; BSR set to: 15
  1915                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1916   003F22  88A7               	bsf	167,4,c	;volatile
  1917                           
  1918                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1919   003F24  50A7               	movf	167,w,c	;volatile
  1920   003F26  0BF0               	andlw	-16
  1921   003F28  090C               	iorlw	12
  1922   003F2A  6EA7               	movwf	167,c	;volatile
  1923   003F2C                     
  1924                           ; BSR set to: 15
  1925                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1926   003F2C  8EA7               	bsf	167,7,c	;volatile
  1927   003F2E                     
  1928                           ; BSR set to: 15
  1929                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1930   003F2E  8926               	bsf	38,4,b	;volatile
  1931                           
  1932                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1933   003F30  5126               	movf	38,w,b	;volatile
  1934   003F32  0BF0               	andlw	-16
  1935   003F34  090C               	iorlw	12
  1936   003F36  6F26               	movwf	38,b	;volatile
  1937   003F38                     
  1938                           ; BSR set to: 15
  1939                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1940   003F38  8F26               	bsf	38,7,b	;volatile
  1941   003F3A                     
  1942                           ; BSR set to: 15
  1943                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1944   003F3A  8922               	bsf	34,4,b	;volatile
  1945                           
  1946                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1947   003F3C  5122               	movf	34,w,b	;volatile
  1948   003F3E  0BF0               	andlw	-16
  1949   003F40  090C               	iorlw	12
  1950   003F42  6F22               	movwf	34,b	;volatile
  1951   003F44                     
  1952                           ; BSR set to: 15
  1953                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1954   003F44  8F22               	bsf	34,7,b	;volatile
  1955   003F46                     
  1956                           ; BSR set to: 15
  1957   003F46  0012               	return		;funcret
  1958   003F48                     __end_of_initDCmotorsPWM:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _colour_read_all *****************
  1962 ;; Defined at:
  1963 ;;		line 8 in file "colorfunctions.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1966 ;;		 -> colorf(22), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  C               4   39[COMRAM] float 
  1969 ;;  B               4   35[COMRAM] float 
  1970 ;;  G               4   31[COMRAM] float 
  1971 ;;  R               4   27[COMRAM] float 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;Total ram usage:       18 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 4
  1988 ;; This function calls:
  1989 ;;		___xxtofl
  1990 ;;		_color_read_Blue
  1991 ;;		_color_read_Clear
  1992 ;;		_color_read_Green
  1993 ;;		_color_read_Red
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text5
  2000   0033D8                     __ptext5:
  2001                           	callstack 0
  2002   0033D8                     _colour_read_all:
  2003                           	callstack 26
  2004   0033D8                     
  2005                           ;colorfunctions.c: 10:     float R = color_read_Red();
  2006   0033D8  EC54  F022         	call	_color_read_Red	;wreg free
  2007   0033DC  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  2008   0033E0  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  2009   0033E4  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2010   0033E6  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2011   0033E8  0E00               	movlw	0
  2012   0033EA  EC11  F017         	call	___xxtofl
  2013   0033EE  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  2014   0033F2  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  2015   0033F6  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  2016   0033FA  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  2017                           
  2018                           ;colorfunctions.c: 11:     float G= color_read_Green();
  2019   0033FE  EC7C  F022         	call	_color_read_Green	;wreg free
  2020   003402  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  2021   003406  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  2022   00340A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2023   00340C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2024   00340E  0E00               	movlw	0
  2025   003410  EC11  F017         	call	___xxtofl
  2026   003414  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  2027   003418  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  2028   00341C  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  2029   003420  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  2030                           
  2031                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  2032   003424  ECCC  F022         	call	_color_read_Blue	;wreg free
  2033   003428  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  2034   00342C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2035   003430  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2036   003432  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2037   003434  0E00               	movlw	0
  2038   003436  EC11  F017         	call	___xxtofl
  2039   00343A  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  2040   00343E  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  2041   003442  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  2042   003446  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  2043                           
  2044                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  2045   00344A  ECA4  F022         	call	_color_read_Clear	;wreg free
  2046   00344E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  2047   003452  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2048   003456  6A0E               	clrf	(___xxtofl@val+2)^0,c
  2049   003458  6A0F               	clrf	(___xxtofl@val+3)^0,c
  2050   00345A  0E00               	movlw	0
  2051   00345C  EC11  F017         	call	___xxtofl
  2052   003460  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  2053   003464  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  2054   003468  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  2055   00346C  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  2056   003470                     
  2057                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  2058   003470  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  2059   003474  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  2060   003478  C01C  FFDE         	movff	colour_read_all@R,postinc2
  2061   00347C  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  2062   003480  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  2063   003484  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  2064   003488                     
  2065                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2066   003488  EE20 F008          	lfsr	2,8
  2067   00348C  501A               	movf	colour_read_all@cf^0,w,c
  2068   00348E  26D9               	addwf	fsr2l,f,c
  2069   003490  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2070   003492  22DA               	addwfc	fsr2h,f,c
  2071   003494  C024  FFDE         	movff	colour_read_all@B,postinc2
  2072   003498  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  2073   00349C  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  2074   0034A0  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  2075   0034A4                     
  2076                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2077   0034A4  EE20 F004          	lfsr	2,4
  2078   0034A8  501A               	movf	colour_read_all@cf^0,w,c
  2079   0034AA  26D9               	addwf	fsr2l,f,c
  2080   0034AC  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2081   0034AE  22DA               	addwfc	fsr2h,f,c
  2082   0034B0  C020  FFDE         	movff	colour_read_all@G,postinc2
  2083   0034B4  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  2084   0034B8  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  2085   0034BC  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  2086   0034C0                     
  2087                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2088   0034C0  EE20 F00C          	lfsr	2,12
  2089   0034C4  501A               	movf	colour_read_all@cf^0,w,c
  2090   0034C6  26D9               	addwf	fsr2l,f,c
  2091   0034C8  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2092   0034CA  22DA               	addwfc	fsr2h,f,c
  2093   0034CC  C028  FFDE         	movff	colour_read_all@C,postinc2
  2094   0034D0  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2095   0034D4  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2096   0034D8  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2097   0034DC  0012               	return		;funcret
  2098   0034DE                     __end_of_colour_read_all:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _color_read_Red *****************
  2102 ;; Defined at:
  2103 ;;		line 38 in file "colorclick.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  tmp             2    9[COMRAM] unsigned int 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2    4[COMRAM] unsigned int 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;Total ram usage:        7 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 3
  2124 ;; This function calls:
  2125 ;;		_I2C_2_Master_Read
  2126 ;;		_I2C_2_Master_RepStart
  2127 ;;		_I2C_2_Master_Start
  2128 ;;		_I2C_2_Master_Stop
  2129 ;;		_I2C_2_Master_Write
  2130 ;; This function is called by:
  2131 ;;		_colour_read_all
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text6
  2136   0044A8                     __ptext6:
  2137                           	callstack 0
  2138   0044A8                     _color_read_Red:
  2139                           	callstack 26
  2140   0044A8                     
  2141                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2142   0044A8  ECC3  F024         	call	_I2C_2_Master_Start	;wreg free
  2143                           
  2144                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2145   0044AC  0E52               	movlw	82
  2146   0044AE  ECB3  F024         	call	_I2C_2_Master_Write
  2147                           
  2148                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2149   0044B2  0EB6               	movlw	182
  2150   0044B4  ECB3  F024         	call	_I2C_2_Master_Write
  2151                           
  2152                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2153   0044B8  ECB9  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2154                           
  2155                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2156   0044BC  0E53               	movlw	83
  2157   0044BE  ECB3  F024         	call	_I2C_2_Master_Write
  2158                           
  2159                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2160   0044C2  0E01               	movlw	1
  2161   0044C4  EC8D  F023         	call	_I2C_2_Master_Read
  2162   0044C8  6E07               	movwf	??_color_read_Red^0,c
  2163   0044CA  5007               	movf	??_color_read_Red^0,w,c
  2164   0044CC  6E0A               	movwf	color_read_Red@tmp^0,c
  2165   0044CE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2166                           
  2167                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2168   0044D0  0E00               	movlw	0
  2169   0044D2  EC8D  F023         	call	_I2C_2_Master_Read
  2170   0044D6  6E07               	movwf	??_color_read_Red^0,c
  2171   0044D8  5007               	movf	??_color_read_Red^0,w,c
  2172   0044DA  6E09               	movwf	(??_color_read_Red+2)^0,c
  2173   0044DC  6A08               	clrf	(??_color_read_Red+1)^0,c
  2174   0044DE  500A               	movf	color_read_Red@tmp^0,w,c
  2175   0044E0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2176   0044E2  6E0A               	movwf	color_read_Red@tmp^0,c
  2177   0044E4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2178   0044E6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2179   0044E8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2180                           
  2181                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2182   0044EA  ECBE  F024         	call	_I2C_2_Master_Stop	;wreg free
  2183   0044EE                     
  2184                           ;colorclick.c: 49:  return tmp;
  2185   0044EE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2186   0044F2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2187   0044F6  0012               	return		;funcret
  2188   0044F8                     __end_of_color_read_Red:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _color_read_Green *****************
  2192 ;; Defined at:
  2193 ;;		line 51 in file "colorclick.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  tmp             2    9[COMRAM] unsigned int 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2    4[COMRAM] unsigned int 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;Total ram usage:        7 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 3
  2214 ;; This function calls:
  2215 ;;		_I2C_2_Master_Read
  2216 ;;		_I2C_2_Master_RepStart
  2217 ;;		_I2C_2_Master_Start
  2218 ;;		_I2C_2_Master_Stop
  2219 ;;		_I2C_2_Master_Write
  2220 ;; This function is called by:
  2221 ;;		_colour_read_all
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text7
  2226   0044F8                     __ptext7:
  2227                           	callstack 0
  2228   0044F8                     _color_read_Green:
  2229                           	callstack 26
  2230   0044F8                     
  2231                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2232   0044F8  ECC3  F024         	call	_I2C_2_Master_Start	;wreg free
  2233                           
  2234                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2235   0044FC  0E52               	movlw	82
  2236   0044FE  ECB3  F024         	call	_I2C_2_Master_Write
  2237                           
  2238                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2239   004502  0EB8               	movlw	184
  2240   004504  ECB3  F024         	call	_I2C_2_Master_Write
  2241                           
  2242                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2243   004508  ECB9  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2244                           
  2245                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2246   00450C  0E53               	movlw	83
  2247   00450E  ECB3  F024         	call	_I2C_2_Master_Write
  2248                           
  2249                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2250   004512  0E01               	movlw	1
  2251   004514  EC8D  F023         	call	_I2C_2_Master_Read
  2252   004518  6E07               	movwf	??_color_read_Green^0,c
  2253   00451A  5007               	movf	??_color_read_Green^0,w,c
  2254   00451C  6E0A               	movwf	color_read_Green@tmp^0,c
  2255   00451E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2256                           
  2257                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2258   004520  0E00               	movlw	0
  2259   004522  EC8D  F023         	call	_I2C_2_Master_Read
  2260   004526  6E07               	movwf	??_color_read_Green^0,c
  2261   004528  5007               	movf	??_color_read_Green^0,w,c
  2262   00452A  6E09               	movwf	(??_color_read_Green+2)^0,c
  2263   00452C  6A08               	clrf	(??_color_read_Green+1)^0,c
  2264   00452E  500A               	movf	color_read_Green@tmp^0,w,c
  2265   004530  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2266   004532  6E0A               	movwf	color_read_Green@tmp^0,c
  2267   004534  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2268   004536  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2269   004538  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2270                           
  2271                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2272   00453A  ECBE  F024         	call	_I2C_2_Master_Stop	;wreg free
  2273   00453E                     
  2274                           ;colorclick.c: 62:     return tmp;
  2275   00453E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2276   004542  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2277   004546  0012               	return		;funcret
  2278   004548                     __end_of_color_read_Green:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _color_read_Clear *****************
  2282 ;; Defined at:
  2283 ;;		line 80 in file "colorclick.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  tmp             2    9[COMRAM] unsigned int 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2    4[COMRAM] unsigned int 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;Total ram usage:        7 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 3
  2304 ;; This function calls:
  2305 ;;		_I2C_2_Master_Read
  2306 ;;		_I2C_2_Master_RepStart
  2307 ;;		_I2C_2_Master_Start
  2308 ;;		_I2C_2_Master_Stop
  2309 ;;		_I2C_2_Master_Write
  2310 ;; This function is called by:
  2311 ;;		_colour_read_all
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text8
  2316   004548                     __ptext8:
  2317                           	callstack 0
  2318   004548                     _color_read_Clear:
  2319                           	callstack 26
  2320   004548                     
  2321                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2322   004548  ECC3  F024         	call	_I2C_2_Master_Start	;wreg free
  2323                           
  2324                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2325   00454C  0E52               	movlw	82
  2326   00454E  ECB3  F024         	call	_I2C_2_Master_Write
  2327                           
  2328                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2329   004552  0EB4               	movlw	180
  2330   004554  ECB3  F024         	call	_I2C_2_Master_Write
  2331                           
  2332                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2333   004558  ECB9  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2334                           
  2335                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2336   00455C  0E53               	movlw	83
  2337   00455E  ECB3  F024         	call	_I2C_2_Master_Write
  2338                           
  2339                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2340   004562  0E01               	movlw	1
  2341   004564  EC8D  F023         	call	_I2C_2_Master_Read
  2342   004568  6E07               	movwf	??_color_read_Clear^0,c
  2343   00456A  5007               	movf	??_color_read_Clear^0,w,c
  2344   00456C  6E0A               	movwf	color_read_Clear@tmp^0,c
  2345   00456E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2346                           
  2347                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2348   004570  0E00               	movlw	0
  2349   004572  EC8D  F023         	call	_I2C_2_Master_Read
  2350   004576  6E07               	movwf	??_color_read_Clear^0,c
  2351   004578  5007               	movf	??_color_read_Clear^0,w,c
  2352   00457A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2353   00457C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2354   00457E  500A               	movf	color_read_Clear@tmp^0,w,c
  2355   004580  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2356   004582  6E0A               	movwf	color_read_Clear@tmp^0,c
  2357   004584  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2358   004586  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2359   004588  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2360                           
  2361                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2362   00458A  ECBE  F024         	call	_I2C_2_Master_Stop	;wreg free
  2363   00458E                     
  2364                           ;colorclick.c: 91:     return tmp;
  2365   00458E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2366   004592  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2367   004596  0012               	return		;funcret
  2368   004598                     __end_of_color_read_Clear:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _color_read_Blue *****************
  2372 ;; Defined at:
  2373 ;;		line 65 in file "colorclick.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  tmp             2    9[COMRAM] unsigned int 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  2    4[COMRAM] unsigned int 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2389 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;Total ram usage:        7 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 3
  2394 ;; This function calls:
  2395 ;;		_I2C_2_Master_Read
  2396 ;;		_I2C_2_Master_RepStart
  2397 ;;		_I2C_2_Master_Start
  2398 ;;		_I2C_2_Master_Stop
  2399 ;;		_I2C_2_Master_Write
  2400 ;; This function is called by:
  2401 ;;		_colour_read_all
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text9
  2406   004598                     __ptext9:
  2407                           	callstack 0
  2408   004598                     _color_read_Blue:
  2409                           	callstack 26
  2410   004598                     
  2411                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2412   004598  ECC3  F024         	call	_I2C_2_Master_Start	;wreg free
  2413                           
  2414                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2415   00459C  0E52               	movlw	82
  2416   00459E  ECB3  F024         	call	_I2C_2_Master_Write
  2417                           
  2418                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2419   0045A2  0EBA               	movlw	186
  2420   0045A4  ECB3  F024         	call	_I2C_2_Master_Write
  2421                           
  2422                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2423   0045A8  ECB9  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2424                           
  2425                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2426   0045AC  0E53               	movlw	83
  2427   0045AE  ECB3  F024         	call	_I2C_2_Master_Write
  2428                           
  2429                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2430   0045B2  0E01               	movlw	1
  2431   0045B4  EC8D  F023         	call	_I2C_2_Master_Read
  2432   0045B8  6E07               	movwf	??_color_read_Blue^0,c
  2433   0045BA  5007               	movf	??_color_read_Blue^0,w,c
  2434   0045BC  6E0A               	movwf	color_read_Blue@tmp^0,c
  2435   0045BE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2436                           
  2437                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2438   0045C0  0E00               	movlw	0
  2439   0045C2  EC8D  F023         	call	_I2C_2_Master_Read
  2440   0045C6  6E07               	movwf	??_color_read_Blue^0,c
  2441   0045C8  5007               	movf	??_color_read_Blue^0,w,c
  2442   0045CA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2443   0045CC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2444   0045CE  500A               	movf	color_read_Blue@tmp^0,w,c
  2445   0045D0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2446   0045D2  6E0A               	movwf	color_read_Blue@tmp^0,c
  2447   0045D4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2448   0045D6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2449   0045D8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2450                           
  2451                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2452   0045DA  ECBE  F024         	call	_I2C_2_Master_Stop	;wreg free
  2453   0045DE                     
  2454                           ;colorclick.c: 76:     return tmp;
  2455   0045DE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2456   0045E2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2457   0045E6  0012               	return		;funcret
  2458   0045E8                     __end_of_color_read_Blue:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _I2C_2_Master_RepStart *****************
  2462 ;; Defined at:
  2463 ;;		line 33 in file "i2c.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		_I2C_2_Master_Idle
  2486 ;; This function is called by:
  2487 ;;		_color_read_Red
  2488 ;;		_color_read_Green
  2489 ;;		_color_read_Blue
  2490 ;;		_color_read_Clear
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text10
  2495   004972                     __ptext10:
  2496                           	callstack 0
  2497   004972                     _I2C_2_Master_RepStart:
  2498                           	callstack 26
  2499   004972                     
  2500                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2501   004972  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2502   004976                     
  2503                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2504   004976  010E               	movlb	14	; () banked
  2505   004978  83DA               	bsf	218,1,b	;volatile
  2506   00497A                     
  2507                           ; BSR set to: 14
  2508   00497A  0012               	return		;funcret
  2509   00497C                     __end_of_I2C_2_Master_RepStart:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _I2C_2_Master_Read *****************
  2513 ;; Defined at:
  2514 ;;		line 51 in file "i2c.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  ack             1    wreg     unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  ack             1    2[COMRAM] unsigned char 
  2519 ;;  tmp             1    3[COMRAM] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      unsigned char 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;Total ram usage:        3 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; Hardware stack levels required when called: 2
  2536 ;; This function calls:
  2537 ;;		_I2C_2_Master_Idle
  2538 ;; This function is called by:
  2539 ;;		_color_read_Red
  2540 ;;		_color_read_Green
  2541 ;;		_color_read_Blue
  2542 ;;		_color_read_Clear
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text11
  2547   00471A                     __ptext11:
  2548                           	callstack 0
  2549   00471A                     _I2C_2_Master_Read:
  2550                           	callstack 26
  2551                           
  2552                           ; BSR set to: 14
  2553                           ;incstack = 0
  2554                           ;I2C_2_Master_Read@ack stored from wreg
  2555   00471A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2556   00471C                     
  2557                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2558   00471C  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2559   004720                     
  2560                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2561   004720  010E               	movlb	14	; () banked
  2562   004722  87DA               	bsf	218,3,b	;volatile
  2563                           
  2564                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2565   004724  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2566   004728                     
  2567                           ;i2c.c: 57:   tmp = SSP2BUF;
  2568   004728  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2569                           
  2570                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2571   00472C  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2572   004730                     
  2573                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2574   004730  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2575   004732  B4D8               	btfsc	status,2,c
  2576   004734  EF9E  F023         	goto	u2771
  2577   004738  EFA2  F023         	goto	u2770
  2578   00473C                     u2771:
  2579   00473C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2580   00473E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2581   004740  EFA3  F023         	goto	u2788
  2582   004744                     u2770:
  2583   004744  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2584   004746                     u2788:
  2585   004746  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2586   004748  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2587   00474A  010E               	movlb	14	; () banked
  2588   00474C  51DA               	movf	218,w,b	;volatile
  2589   00474E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2590   004750  0BDF               	andlw	-33
  2591   004752  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2592   004754  6FDA               	movwf	218,b	;volatile
  2593   004756                     
  2594                           ; BSR set to: 14
  2595                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2596   004756  89DA               	bsf	218,4,b	;volatile
  2597   004758                     
  2598                           ; BSR set to: 14
  2599                           ;i2c.c: 61:   return tmp;
  2600   004758  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2601   00475A                     
  2602                           ; BSR set to: 14
  2603   00475A  0012               	return		;funcret
  2604   00475C                     __end_of_I2C_2_Master_Read:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _color_click_init *****************
  2608 ;; Defined at:
  2609 ;;		line 6 in file "colorclick.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;Total ram usage:        1 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 4
  2630 ;; This function calls:
  2631 ;;		_I2C_2_Master_Init
  2632 ;;		_color_writetoaddr
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text12
  2639   00475C                     __ptext12:
  2640                           	callstack 0
  2641   00475C                     _color_click_init:
  2642                           	callstack 26
  2643   00475C                     
  2644                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2645   00475C  EC3B  F024         	call	_I2C_2_Master_Init	;wreg free
  2646   004760                     
  2647                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2648   004760  0E01               	movlw	1
  2649   004762  6E03               	movwf	color_writetoaddr@value^0,c
  2650   004764  0E00               	movlw	0
  2651   004766  EC88  F024         	call	_color_writetoaddr
  2652   00476A                     
  2653                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2654   00476A  0E3F               	movlw	63
  2655   00476C  6E05               	movwf	??_color_click_init^0,c
  2656   00476E  0E55               	movlw	85
  2657   004770                     u4227:
  2658   004770  2EE8               	decfsz	wreg,f,c
  2659   004772  D7FE               	bra	u4227
  2660   004774  2E05               	decfsz	??_color_click_init^0,f,c
  2661   004776  D7FC               	bra	u4227
  2662   004778  F000               	nop	
  2663   00477A                     
  2664                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2665   00477A  0E03               	movlw	3
  2666   00477C  6E03               	movwf	color_writetoaddr@value^0,c
  2667   00477E  0E00               	movlw	0
  2668   004780  EC88  F024         	call	_color_writetoaddr
  2669   004784                     
  2670                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2671   004784  0ED6               	movlw	214
  2672   004786  6E03               	movwf	color_writetoaddr@value^0,c
  2673   004788  0E01               	movlw	1
  2674   00478A  EC88  F024         	call	_color_writetoaddr
  2675   00478E                     
  2676                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2677   00478E  927F               	bcf	127,1,c	;volatile
  2678   004790                     
  2679                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2680   004790  9287               	bcf	135,1,c	;volatile
  2681   004792                     
  2682                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2683   004792  9879               	bcf	121,4,c	;volatile
  2684   004794                     
  2685                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2686   004794  9881               	bcf	129,4,c	;volatile
  2687   004796                     
  2688                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2689   004796  9E7E               	bcf	126,7,c	;volatile
  2690   004798                     
  2691                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2692   004798  9E86               	bcf	134,7,c	;volatile
  2693   00479A  0012               	return		;funcret
  2694   00479C                     __end_of_color_click_init:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _color_writetoaddr *****************
  2698 ;; Defined at:
  2699 ;;		line 30 in file "colorclick.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  address         1    wreg     unsigned char 
  2702 ;;  value           1    2[COMRAM] unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  address         1    3[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;Total ram usage:        2 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 3
  2721 ;; This function calls:
  2722 ;;		_I2C_2_Master_Start
  2723 ;;		_I2C_2_Master_Stop
  2724 ;;		_I2C_2_Master_Write
  2725 ;; This function is called by:
  2726 ;;		_color_click_init
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text13
  2731   004910                     __ptext13:
  2732                           	callstack 0
  2733   004910                     _color_writetoaddr:
  2734                           	callstack 26
  2735                           
  2736                           ;incstack = 0
  2737                           ;color_writetoaddr@address stored from wreg
  2738   004910  6E04               	movwf	color_writetoaddr@address^0,c
  2739   004912                     
  2740                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2741   004912  ECC3  F024         	call	_I2C_2_Master_Start	;wreg free
  2742                           
  2743                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2744   004916  0E52               	movlw	82
  2745   004918  ECB3  F024         	call	_I2C_2_Master_Write
  2746                           
  2747                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2748   00491C  5004               	movf	color_writetoaddr@address^0,w,c
  2749   00491E  0980               	iorlw	128
  2750   004920  ECB3  F024         	call	_I2C_2_Master_Write
  2751                           
  2752                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2753   004924  5003               	movf	color_writetoaddr@value^0,w,c
  2754   004926  ECB3  F024         	call	_I2C_2_Master_Write
  2755                           
  2756                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2757   00492A  ECBE  F024         	call	_I2C_2_Master_Stop	;wreg free
  2758   00492E  0012               	return		;funcret
  2759   004930                     __end_of_color_writetoaddr:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _I2C_2_Master_Write *****************
  2763 ;; Defined at:
  2764 ;;		line 45 in file "i2c.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  data_byte       1    wreg     unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  data_byte       1    1[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;Total ram usage:        1 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 2
  2785 ;; This function calls:
  2786 ;;		_I2C_2_Master_Idle
  2787 ;; This function is called by:
  2788 ;;		_color_writetoaddr
  2789 ;;		_color_read_Red
  2790 ;;		_color_read_Green
  2791 ;;		_color_read_Blue
  2792 ;;		_color_read_Clear
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text14
  2797   004966                     __ptext14:
  2798                           	callstack 0
  2799   004966                     _I2C_2_Master_Write:
  2800                           	callstack 26
  2801                           
  2802                           ;incstack = 0
  2803                           ;I2C_2_Master_Write@data_byte stored from wreg
  2804   004966  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2805   004968                     
  2806                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2807   004968  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2808   00496C                     
  2809                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2810   00496C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2811   004970  0012               	return		;funcret
  2812   004972                     __end_of_I2C_2_Master_Write:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _I2C_2_Master_Stop *****************
  2816 ;; Defined at:
  2817 ;;		line 39 in file "i2c.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;Total ram usage:        0 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 2
  2838 ;; This function calls:
  2839 ;;		_I2C_2_Master_Idle
  2840 ;; This function is called by:
  2841 ;;		_color_writetoaddr
  2842 ;;		_color_read_Red
  2843 ;;		_color_read_Green
  2844 ;;		_color_read_Blue
  2845 ;;		_color_read_Clear
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text15
  2850   00497C                     __ptext15:
  2851                           	callstack 0
  2852   00497C                     _I2C_2_Master_Stop:
  2853                           	callstack 26
  2854   00497C                     
  2855                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2856   00497C  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2857   004980                     
  2858                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2859   004980  010E               	movlb	14	; () banked
  2860   004982  85DA               	bsf	218,2,b	;volatile
  2861   004984                     
  2862                           ; BSR set to: 14
  2863   004984  0012               	return		;funcret
  2864   004986                     __end_of_I2C_2_Master_Stop:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _I2C_2_Master_Start *****************
  2868 ;; Defined at:
  2869 ;;		line 27 in file "i2c.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 2
  2890 ;; This function calls:
  2891 ;;		_I2C_2_Master_Idle
  2892 ;; This function is called by:
  2893 ;;		_color_writetoaddr
  2894 ;;		_color_read_Red
  2895 ;;		_color_read_Green
  2896 ;;		_color_read_Blue
  2897 ;;		_color_read_Clear
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text16
  2902   004986                     __ptext16:
  2903                           	callstack 0
  2904   004986                     _I2C_2_Master_Start:
  2905                           	callstack 26
  2906   004986                     
  2907                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2908   004986  EC50  F024         	call	_I2C_2_Master_Idle	;wreg free
  2909   00498A                     
  2910                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2911   00498A  010E               	movlb	14	; () banked
  2912   00498C  81DA               	bsf	218,0,b	;volatile
  2913   00498E                     
  2914                           ; BSR set to: 14
  2915   00498E  0012               	return		;funcret
  2916   004990                     __end_of_I2C_2_Master_Start:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _I2C_2_Master_Idle *****************
  2920 ;; Defined at:
  2921 ;;		line 22 in file "i2c.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_I2C_2_Master_Start
  2946 ;;		_I2C_2_Master_RepStart
  2947 ;;		_I2C_2_Master_Stop
  2948 ;;		_I2C_2_Master_Write
  2949 ;;		_I2C_2_Master_Read
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text17
  2954   0048A0                     __ptext17:
  2955                           	callstack 0
  2956   0048A0                     _I2C_2_Master_Idle:
  2957                           	callstack 26
  2958   0048A0                     l186:
  2959   0048A0  010E               	movlb	14	; () banked
  2960   0048A2  B5D8               	btfsc	216,2,b	;volatile
  2961   0048A4  EF56  F024         	goto	u2411
  2962   0048A8  EF58  F024         	goto	u2410
  2963   0048AC                     u2411:
  2964   0048AC  EF50  F024         	goto	l186
  2965   0048B0                     u2410:
  2966   0048B0                     
  2967                           ; BSR set to: 14
  2968   0048B0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2969   0048B4  0E1F               	movlw	31
  2970   0048B6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2971   0048B8  A4D8               	btfss	status,2,c
  2972   0048BA  EF61  F024         	goto	u2421
  2973   0048BE  EF63  F024         	goto	u2420
  2974   0048C2                     u2421:
  2975   0048C2  EF50  F024         	goto	l186
  2976   0048C6                     u2420:
  2977   0048C6                     
  2978                           ; BSR set to: 14
  2979   0048C6  0012               	return		;funcret
  2980   0048C8                     __end_of_I2C_2_Master_Idle:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _I2C_2_Master_Init *****************
  2984 ;; Defined at:
  2985 ;;		line 4 in file "i2c.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_color_click_init
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text18
  3015   004876                     __ptext18:
  3016                           	callstack 0
  3017   004876                     _I2C_2_Master_Init:
  3018                           	callstack 28
  3019   004876                     
  3020                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3021   004876  010E               	movlb	14	; () banked
  3022   004878  51D9               	movf	217,w,b	;volatile
  3023   00487A  0BF0               	andlw	-16
  3024   00487C  0908               	iorlw	8
  3025   00487E  6FD9               	movwf	217,b	;volatile
  3026   004880                     
  3027                           ; BSR set to: 14
  3028                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3029   004880  8BD9               	bsf	217,5,b	;volatile
  3030                           
  3031                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3032   004882  0E9F               	movlw	159
  3033   004884  6FD6               	movwf	214,b	;volatile
  3034   004886                     
  3035                           ; BSR set to: 14
  3036                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3037   004886  8A84               	bsf	132,5,c	;volatile
  3038   004888                     
  3039                           ; BSR set to: 14
  3040                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3041   004888  8C84               	bsf	132,6,c	;volatile
  3042   00488A                     
  3043                           ; BSR set to: 14
  3044                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3045   00488A  9BA7               	bcf	167,5,b	;volatile
  3046   00488C                     
  3047                           ; BSR set to: 14
  3048                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3049   00488C  9DA7               	bcf	167,6,b	;volatile
  3050                           
  3051                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3052   00488E  0E1D               	movlw	29
  3053   004890  6F1D               	movwf	29,b	;volatile
  3054                           
  3055                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3056   004892  0E1E               	movlw	30
  3057   004894  6F1C               	movwf	28,b	;volatile
  3058                           
  3059                           ;i2c.c: 18:   RD5PPS=0x1C;
  3060   004896  0E1C               	movlw	28
  3061   004898  6F6F               	movwf	111,b	;volatile
  3062                           
  3063                           ;i2c.c: 19:   RD6PPS=0x1B;
  3064   00489A  0E1B               	movlw	27
  3065   00489C  6F70               	movwf	112,b	;volatile
  3066   00489E                     
  3067                           ; BSR set to: 14
  3068   00489E  0012               	return		;funcret
  3069   0048A0                     __end_of_I2C_2_Master_Init:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _RGB2Hue *****************
  3073 ;; Defined at:
  3074 ;;		line 23 in file "colorfunctions.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  cf              2   13[BANK0 ] PTR struct RGBC_rel
  3077 ;;		 -> colorf(22), 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  min             2   25[BANK0 ] int 
  3080 ;;  max             2   23[BANK0 ] int 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:       14 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 3
  3097 ;; This function calls:
  3098 ;;		___fladd
  3099 ;;		___fldiv
  3100 ;;		___fleq
  3101 ;;		___flge
  3102 ;;		___flmul
  3103 ;;		___flsub
  3104 ;;		___fltol
  3105 ;;		___xxtofl
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text19
  3112   000E52                     __ptext19:
  3113                           	callstack 0
  3114   000E52                     _RGB2Hue:
  3115                           	callstack 27
  3116   000E52                     
  3117                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3118   000E52  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3119   000E56  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3120   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3121   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3122   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3123   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3124   000E6A  0100               	movlb	0	; () banked
  3125   000E6C  EE20 F004          	lfsr	2,4
  3126   000E70  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3127   000E72  26D9               	addwf	fsr2l,f,c
  3128   000E74  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3129   000E76  22DA               	addwfc	fsr2h,f,c
  3130   000E78  CFDE F005          	movff	postinc2,___fleq@ff2
  3131   000E7C  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3132   000E80  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3133   000E84  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3134   000E88  EC30  F01D         	call	___fleq	;wreg free
  3135   000E8C  A0D8               	btfss	status,0,c
  3136   000E8E  EF4B  F007         	goto	u3951
  3137   000E92  EF4D  F007         	goto	u3950
  3138   000E96                     u3951:
  3139   000E96  EF82  F007         	goto	l4258
  3140   000E9A                     u3950:
  3141   000E9A  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3142   000E9E  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3143   000EA2  CFDE F001          	movff	postinc2,___fleq@ff1
  3144   000EA6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3145   000EAA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3146   000EAE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3147   000EB2  0100               	movlb	0	; () banked
  3148   000EB4  EE20 F008          	lfsr	2,8
  3149   000EB8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3150   000EBA  26D9               	addwf	fsr2l,f,c
  3151   000EBC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3152   000EBE  22DA               	addwfc	fsr2h,f,c
  3153   000EC0  CFDE F005          	movff	postinc2,___fleq@ff2
  3154   000EC4  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3155   000EC8  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3156   000ECC  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3157   000ED0  EC30  F01D         	call	___fleq	;wreg free
  3158   000ED4  A0D8               	btfss	status,0,c
  3159   000ED6  EF6F  F007         	goto	u3961
  3160   000EDA  EF71  F007         	goto	u3960
  3161   000EDE                     u3961:
  3162   000EDE  EF82  F007         	goto	l4258
  3163   000EE2                     u3960:
  3164   000EE2                     
  3165                           ;colorfunctions.c: 25:         cf->h=0;
  3166   000EE2  0100               	movlb	0	; () banked
  3167   000EE4  EE20 F010          	lfsr	2,16
  3168   000EE8  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3169   000EEA  26D9               	addwf	fsr2l,f,c
  3170   000EEC  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3171   000EEE  22DA               	addwfc	fsr2h,f,c
  3172   000EF0  0E00               	movlw	0
  3173   000EF2  6EDE               	movwf	postinc2,c
  3174   000EF4  0E00               	movlw	0
  3175   000EF6  6EDE               	movwf	postinc2,c
  3176   000EF8  0E00               	movlw	0
  3177   000EFA  6EDE               	movwf	postinc2,c
  3178   000EFC  0E00               	movlw	0
  3179   000EFE  6EDD               	movwf	postdec2,c
  3180                           
  3181                           ;colorfunctions.c: 26:     } else{
  3182   000F00  EFBE  F00A         	goto	l119
  3183   000F04                     l4258:
  3184                           
  3185                           ;colorfunctions.c: 28:         signed int min=0;
  3186   000F04  0E00               	movlw	0
  3187   000F06  0100               	movlb	0	; () banked
  3188   000F08  6F7A               	movwf	(RGB2Hue@min+1)& (0+255),b
  3189   000F0A  0E00               	movlw	0
  3190   000F0C  6F79               	movwf	RGB2Hue@min& (0+255),b
  3191   000F0E                     
  3192                           ; BSR set to: 0
  3193                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3194   000F0E  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3195   000F12  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3196   000F16  CFDE F001          	movff	postinc2,___flge@ff1
  3197   000F1A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3198   000F1E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3199   000F22  CFDE F004          	movff	postinc2,___flge@ff1+3
  3200   000F26  EE20 F004          	lfsr	2,4
  3201   000F2A  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3202   000F2C  26D9               	addwf	fsr2l,f,c
  3203   000F2E  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3204   000F30  22DA               	addwfc	fsr2h,f,c
  3205   000F32  CFDE F005          	movff	postinc2,___flge@ff2
  3206   000F36  CFDE F006          	movff	postinc2,___flge@ff2+1
  3207   000F3A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3208   000F3E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3209   000F42  ECF2  F01A         	call	___flge	;wreg free
  3210   000F46  B0D8               	btfsc	status,0,c
  3211   000F48  EFA8  F007         	goto	u3971
  3212   000F4C  EFAA  F007         	goto	u3970
  3213   000F50                     u3971:
  3214   000F50  EFE2  F007         	goto	l4266
  3215   000F54                     u3970:
  3216   000F54  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3217   000F58  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3218   000F5C  CFDE F001          	movff	postinc2,___flge@ff1
  3219   000F60  CFDE F002          	movff	postinc2,___flge@ff1+1
  3220   000F64  CFDE F003          	movff	postinc2,___flge@ff1+2
  3221   000F68  CFDE F004          	movff	postinc2,___flge@ff1+3
  3222   000F6C  0100               	movlb	0	; () banked
  3223   000F6E  EE20 F008          	lfsr	2,8
  3224   000F72  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3225   000F74  26D9               	addwf	fsr2l,f,c
  3226   000F76  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3227   000F78  22DA               	addwfc	fsr2h,f,c
  3228   000F7A  CFDE F005          	movff	postinc2,___flge@ff2
  3229   000F7E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3230   000F82  CFDE F007          	movff	postinc2,___flge@ff2+2
  3231   000F86  CFDE F008          	movff	postinc2,___flge@ff2+3
  3232   000F8A  ECF2  F01A         	call	___flge	;wreg free
  3233   000F8E  B0D8               	btfsc	status,0,c
  3234   000F90  EFCC  F007         	goto	u3981
  3235   000F94  EFCE  F007         	goto	u3980
  3236   000F98                     u3981:
  3237   000F98  EFE2  F007         	goto	l4266
  3238   000F9C                     u3980:
  3239   000F9C                     
  3240                           ;colorfunctions.c: 31:             min=cf->Rf;
  3241   000F9C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3242   000FA0  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3243   000FA4  CFDE F04B          	movff	postinc2,___fltol@f1
  3244   000FA8  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3245   000FAC  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3246   000FB0  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3247   000FB4  EC6F  F01A         	call	___fltol	;wreg free
  3248   000FB8  C04B  F079         	movff	?___fltol,RGB2Hue@min
  3249   000FBC  C04C  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3250                           
  3251                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3252   000FC0  EF58  F008         	goto	l111
  3253   000FC4                     l4266:
  3254   000FC4  0100               	movlb	0	; () banked
  3255   000FC6  EE20 F004          	lfsr	2,4
  3256   000FCA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3257   000FCC  26D9               	addwf	fsr2l,f,c
  3258   000FCE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3259   000FD0  22DA               	addwfc	fsr2h,f,c
  3260   000FD2  CFDE F001          	movff	postinc2,___flge@ff1
  3261   000FD6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3262   000FDA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3263   000FDE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3264   000FE2  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3265   000FE6  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3266   000FEA  CFDE F005          	movff	postinc2,___flge@ff2
  3267   000FEE  CFDE F006          	movff	postinc2,___flge@ff2+1
  3268   000FF2  CFDE F007          	movff	postinc2,___flge@ff2+2
  3269   000FF6  CFDE F008          	movff	postinc2,___flge@ff2+3
  3270   000FFA  ECF2  F01A         	call	___flge	;wreg free
  3271   000FFE  B0D8               	btfsc	status,0,c
  3272   001000  EF04  F008         	goto	u3991
  3273   001004  EF06  F008         	goto	u3990
  3274   001008                     u3991:
  3275   001008  EF43  F008         	goto	l4272
  3276   00100C                     u3990:
  3277   00100C  0100               	movlb	0	; () banked
  3278   00100E  EE20 F004          	lfsr	2,4
  3279   001012  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3280   001014  26D9               	addwf	fsr2l,f,c
  3281   001016  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3282   001018  22DA               	addwfc	fsr2h,f,c
  3283   00101A  CFDE F001          	movff	postinc2,___flge@ff1
  3284   00101E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3285   001022  CFDE F003          	movff	postinc2,___flge@ff1+2
  3286   001026  CFDE F004          	movff	postinc2,___flge@ff1+3
  3287   00102A  EE20 F008          	lfsr	2,8
  3288   00102E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3289   001030  26D9               	addwf	fsr2l,f,c
  3290   001032  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3291   001034  22DA               	addwfc	fsr2h,f,c
  3292   001036  CFDE F005          	movff	postinc2,___flge@ff2
  3293   00103A  CFDE F006          	movff	postinc2,___flge@ff2+1
  3294   00103E  CFDE F007          	movff	postinc2,___flge@ff2+2
  3295   001042  CFDE F008          	movff	postinc2,___flge@ff2+3
  3296   001046  ECF2  F01A         	call	___flge	;wreg free
  3297   00104A  B0D8               	btfsc	status,0,c
  3298   00104C  EF2A  F008         	goto	u4001
  3299   001050  EF2C  F008         	goto	u4000
  3300   001054                     u4001:
  3301   001054  EF43  F008         	goto	l4272
  3302   001058                     u4000:
  3303   001058                     
  3304                           ;colorfunctions.c: 33:             min=cf->Gf;
  3305   001058  0100               	movlb	0	; () banked
  3306   00105A  EE20 F004          	lfsr	2,4
  3307   00105E  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3308   001060  26D9               	addwf	fsr2l,f,c
  3309   001062  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3310   001064  22DA               	addwfc	fsr2h,f,c
  3311   001066  CFDE F04B          	movff	postinc2,___fltol@f1
  3312   00106A  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3313   00106E  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3314   001072  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3315   001076  EC6F  F01A         	call	___fltol	;wreg free
  3316   00107A  C04B  F079         	movff	?___fltol,RGB2Hue@min
  3317   00107E  C04C  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3318                           
  3319                           ;colorfunctions.c: 34:         } else{
  3320   001082  EF58  F008         	goto	l111
  3321   001086                     l4272:
  3322                           
  3323                           ;colorfunctions.c: 35:             min=cf->Bf;
  3324   001086  0100               	movlb	0	; () banked
  3325   001088  EE20 F008          	lfsr	2,8
  3326   00108C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3327   00108E  26D9               	addwf	fsr2l,f,c
  3328   001090  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3329   001092  22DA               	addwfc	fsr2h,f,c
  3330   001094  CFDE F04B          	movff	postinc2,___fltol@f1
  3331   001098  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3332   00109C  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3333   0010A0  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3334   0010A4  EC6F  F01A         	call	___fltol	;wreg free
  3335   0010A8  C04B  F079         	movff	?___fltol,RGB2Hue@min
  3336   0010AC  C04C  F07A         	movff	?___fltol+1,RGB2Hue@min+1
  3337   0010B0                     l111:
  3338                           
  3339                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3340   0010B0  0100               	movlb	0	; () banked
  3341   0010B2  EE20 F004          	lfsr	2,4
  3342   0010B6  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3343   0010B8  26D9               	addwf	fsr2l,f,c
  3344   0010BA  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3345   0010BC  22DA               	addwfc	fsr2h,f,c
  3346   0010BE  CFDE F001          	movff	postinc2,___flge@ff1
  3347   0010C2  CFDE F002          	movff	postinc2,___flge@ff1+1
  3348   0010C6  CFDE F003          	movff	postinc2,___flge@ff1+2
  3349   0010CA  CFDE F004          	movff	postinc2,___flge@ff1+3
  3350   0010CE  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3351   0010D2  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3352   0010D6  CFDE F005          	movff	postinc2,___flge@ff2
  3353   0010DA  CFDE F006          	movff	postinc2,___flge@ff2+1
  3354   0010DE  CFDE F007          	movff	postinc2,___flge@ff2+2
  3355   0010E2  CFDE F008          	movff	postinc2,___flge@ff2+3
  3356   0010E6  ECF2  F01A         	call	___flge	;wreg free
  3357   0010EA  B0D8               	btfsc	status,0,c
  3358   0010EC  EF7A  F008         	goto	u4011
  3359   0010F0  EF7C  F008         	goto	u4010
  3360   0010F4                     u4011:
  3361   0010F4  EF19  F009         	goto	l4280
  3362   0010F8                     u4010:
  3363   0010F8  0100               	movlb	0	; () banked
  3364   0010FA  EE20 F008          	lfsr	2,8
  3365   0010FE  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3366   001100  26D9               	addwf	fsr2l,f,c
  3367   001102  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3368   001104  22DA               	addwfc	fsr2h,f,c
  3369   001106  CFDE F001          	movff	postinc2,___flge@ff1
  3370   00110A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3371   00110E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3372   001112  CFDE F004          	movff	postinc2,___flge@ff1+3
  3373   001116  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3374   00111A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3375   00111E  CFDE F005          	movff	postinc2,___flge@ff2
  3376   001122  CFDE F006          	movff	postinc2,___flge@ff2+1
  3377   001126  CFDE F007          	movff	postinc2,___flge@ff2+2
  3378   00112A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3379   00112E  ECF2  F01A         	call	___flge	;wreg free
  3380   001132  B0D8               	btfsc	status,0,c
  3381   001134  EF9E  F008         	goto	u4021
  3382   001138  EFA0  F008         	goto	u4020
  3383   00113C                     u4021:
  3384   00113C  EF19  F009         	goto	l4280
  3385   001140                     u4020:
  3386   001140                     
  3387                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3388   001140  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3389   001144  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3390   001148  CFDE F04B          	movff	postinc2,___fltol@f1
  3391   00114C  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3392   001150  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3393   001154  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3394   001158  EC6F  F01A         	call	___fltol	;wreg free
  3395   00115C  C04B  F077         	movff	?___fltol,RGB2Hue@max
  3396   001160  C04C  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3397   001164                     
  3398                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3399   001164  0100               	movlb	0	; () banked
  3400   001166  5179               	movf	RGB2Hue@min& (0+255),w,b
  3401   001168  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3402   00116A  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3403   00116C  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3404   00116E  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3405   001170  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3406   001172  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3407   001176  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3408   00117A  0E00               	movlw	0
  3409   00117C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3410   00117E  0EFF               	movlw	-1
  3411   001180  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3412   001182  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3413   001184  0E01               	movlw	1
  3414   001186  EC11  F017         	call	___xxtofl
  3415   00118A  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3416   00118E  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3417   001192  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3418   001196  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3419   00119A  0100               	movlb	0	; () banked
  3420   00119C  EE20 F008          	lfsr	2,8
  3421   0011A0  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3422   0011A2  26D9               	addwf	fsr2l,f,c
  3423   0011A4  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3424   0011A6  22DA               	addwfc	fsr2h,f,c
  3425   0011A8  CFDE F04F          	movff	postinc2,___flsub@a
  3426   0011AC  CFDE F050          	movff	postinc2,___flsub@a+1
  3427   0011B0  CFDE F051          	movff	postinc2,___flsub@a+2
  3428   0011B4  CFDE F052          	movff	postinc2,___flsub@a+3
  3429   0011B8  EE20 F004          	lfsr	2,4
  3430   0011BC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3431   0011BE  26D9               	addwf	fsr2l,f,c
  3432   0011C0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3433   0011C2  22DA               	addwfc	fsr2h,f,c
  3434   0011C4  CFDE F04B          	movff	postinc2,___flsub@b
  3435   0011C8  CFDE F04C          	movff	postinc2,___flsub@b+1
  3436   0011CC  CFDE F04D          	movff	postinc2,___flsub@b+2
  3437   0011D0  CFDE F04E          	movff	postinc2,___flsub@b+3
  3438   0011D4  EC6A  F023         	call	___flsub	;wreg free
  3439   0011D8  C04B  F053         	movff	?___flsub,___fldiv@b
  3440   0011DC  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3441   0011E0  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3442   0011E4  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3443   0011E8  ECB5  F011         	call	___fldiv	;wreg free
  3444   0011EC  C053  F01A         	movff	?___fldiv,___flmul@b
  3445   0011F0  C054  F01B         	movff	?___fldiv+1,___flmul@b+1
  3446   0011F4  C055  F01C         	movff	?___fldiv+2,___flmul@b+2
  3447   0011F8  C056  F01D         	movff	?___fldiv+3,___flmul@b+3
  3448   0011FC  0E00               	movlw	0
  3449   0011FE  6E1E               	movwf	___flmul@a^0,c
  3450   001200  0E00               	movlw	0
  3451   001202  6E1F               	movwf	(___flmul@a+1)^0,c
  3452   001204  0E70               	movlw	112
  3453   001206  6E20               	movwf	(___flmul@a+2)^0,c
  3454   001208  0E42               	movlw	66
  3455   00120A  6E21               	movwf	(___flmul@a+3)^0,c
  3456   00120C  ECA0  F00F         	call	___flmul	;wreg free
  3457   001210  0100               	movlb	0	; () banked
  3458   001212  EE20 F010          	lfsr	2,16
  3459   001216  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3460   001218  26D9               	addwf	fsr2l,f,c
  3461   00121A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3462   00121C  22DA               	addwfc	fsr2h,f,c
  3463   00121E  C01A  FFDE         	movff	?___flmul,postinc2
  3464   001222  C01B  FFDE         	movff	?___flmul+1,postinc2
  3465   001226  C01C  FFDE         	movff	?___flmul+2,postinc2
  3466   00122A  C01D  FFDE         	movff	?___flmul+3,postinc2
  3467                           
  3468                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3469   00122E  EF89  F00A         	goto	l4292
  3470   001232                     l4280:
  3471   001232  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3472   001236  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3473   00123A  CFDE F001          	movff	postinc2,___flge@ff1
  3474   00123E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3475   001242  CFDE F003          	movff	postinc2,___flge@ff1+2
  3476   001246  CFDE F004          	movff	postinc2,___flge@ff1+3
  3477   00124A  0100               	movlb	0	; () banked
  3478   00124C  EE20 F004          	lfsr	2,4
  3479   001250  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3480   001252  26D9               	addwf	fsr2l,f,c
  3481   001254  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3482   001256  22DA               	addwfc	fsr2h,f,c
  3483   001258  CFDE F005          	movff	postinc2,___flge@ff2
  3484   00125C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3485   001260  CFDE F007          	movff	postinc2,___flge@ff2+2
  3486   001264  CFDE F008          	movff	postinc2,___flge@ff2+3
  3487   001268  ECF2  F01A         	call	___flge	;wreg free
  3488   00126C  B0D8               	btfsc	status,0,c
  3489   00126E  EF3B  F009         	goto	u4031
  3490   001272  EF3D  F009         	goto	u4030
  3491   001276                     u4031:
  3492   001276  EFF7  F009         	goto	l4288
  3493   00127A                     u4030:
  3494   00127A  0100               	movlb	0	; () banked
  3495   00127C  EE20 F008          	lfsr	2,8
  3496   001280  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3497   001282  26D9               	addwf	fsr2l,f,c
  3498   001284  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3499   001286  22DA               	addwfc	fsr2h,f,c
  3500   001288  CFDE F001          	movff	postinc2,___flge@ff1
  3501   00128C  CFDE F002          	movff	postinc2,___flge@ff1+1
  3502   001290  CFDE F003          	movff	postinc2,___flge@ff1+2
  3503   001294  CFDE F004          	movff	postinc2,___flge@ff1+3
  3504   001298  EE20 F004          	lfsr	2,4
  3505   00129C  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3506   00129E  26D9               	addwf	fsr2l,f,c
  3507   0012A0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3508   0012A2  22DA               	addwfc	fsr2h,f,c
  3509   0012A4  CFDE F005          	movff	postinc2,___flge@ff2
  3510   0012A8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3511   0012AC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3512   0012B0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3513   0012B4  ECF2  F01A         	call	___flge	;wreg free
  3514   0012B8  B0D8               	btfsc	status,0,c
  3515   0012BA  EF61  F009         	goto	u4041
  3516   0012BE  EF63  F009         	goto	u4040
  3517   0012C2                     u4041:
  3518   0012C2  EFF7  F009         	goto	l4288
  3519   0012C6                     u4040:
  3520   0012C6                     
  3521                           ;colorfunctions.c: 44:             max=cf->Gf;
  3522   0012C6  0100               	movlb	0	; () banked
  3523   0012C8  EE20 F004          	lfsr	2,4
  3524   0012CC  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3525   0012CE  26D9               	addwf	fsr2l,f,c
  3526   0012D0  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3527   0012D2  22DA               	addwfc	fsr2h,f,c
  3528   0012D4  CFDE F04B          	movff	postinc2,___fltol@f1
  3529   0012D8  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3530   0012DC  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3531   0012E0  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3532   0012E4  EC6F  F01A         	call	___fltol	;wreg free
  3533   0012E8  C04B  F077         	movff	?___fltol,RGB2Hue@max
  3534   0012EC  C04C  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3535                           
  3536                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3537   0012F0  0100               	movlb	0	; () banked
  3538   0012F2  5179               	movf	RGB2Hue@min& (0+255),w,b
  3539   0012F4  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3540   0012F6  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3541   0012F8  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3542   0012FA  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3543   0012FC  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3544   0012FE  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3545   001302  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3546   001306  0E00               	movlw	0
  3547   001308  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3548   00130A  0EFF               	movlw	-1
  3549   00130C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3550   00130E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3551   001310  0E01               	movlw	1
  3552   001312  EC11  F017         	call	___xxtofl
  3553   001316  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3554   00131A  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3555   00131E  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3556   001322  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3557   001326  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3558   00132A  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3559   00132E  CFDE F04F          	movff	postinc2,___flsub@a
  3560   001332  CFDE F050          	movff	postinc2,___flsub@a+1
  3561   001336  CFDE F051          	movff	postinc2,___flsub@a+2
  3562   00133A  CFDE F052          	movff	postinc2,___flsub@a+3
  3563   00133E  0100               	movlb	0	; () banked
  3564   001340  EE20 F008          	lfsr	2,8
  3565   001344  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3566   001346  26D9               	addwf	fsr2l,f,c
  3567   001348  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3568   00134A  22DA               	addwfc	fsr2h,f,c
  3569   00134C  CFDE F04B          	movff	postinc2,___flsub@b
  3570   001350  CFDE F04C          	movff	postinc2,___flsub@b+1
  3571   001354  CFDE F04D          	movff	postinc2,___flsub@b+2
  3572   001358  CFDE F04E          	movff	postinc2,___flsub@b+3
  3573   00135C  EC6A  F023         	call	___flsub	;wreg free
  3574   001360  C04B  F053         	movff	?___flsub,___fldiv@b
  3575   001364  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3576   001368  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3577   00136C  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3578   001370  ECB5  F011         	call	___fldiv	;wreg free
  3579   001374  C053  F073         	movff	?___fldiv,_RGB2Hue$3169
  3580   001378  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3169+1
  3581   00137C  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3169+2
  3582   001380  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3169+3
  3583   001384                     
  3584                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3585   001384  0E00               	movlw	0
  3586   001386  6E3F               	movwf	___fladd@a^0,c
  3587   001388  0E00               	movlw	0
  3588   00138A  6E40               	movwf	(___fladd@a+1)^0,c
  3589   00138C  0E00               	movlw	0
  3590   00138E  6E41               	movwf	(___fladd@a+2)^0,c
  3591   001390  0E40               	movlw	64
  3592   001392  6E42               	movwf	(___fladd@a+3)^0,c
  3593   001394  C073  F03B         	movff	_RGB2Hue$3169,___fladd@b
  3594   001398  C074  F03C         	movff	_RGB2Hue$3169+1,___fladd@b+1
  3595   00139C  C075  F03D         	movff	_RGB2Hue$3169+2,___fladd@b+2
  3596   0013A0  C076  F03E         	movff	_RGB2Hue$3169+3,___fladd@b+3
  3597   0013A4  EC40  F00D         	call	___fladd	;wreg free
  3598   0013A8  C03B  F01A         	movff	?___fladd,___flmul@b
  3599   0013AC  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3600   0013B0  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3601   0013B4  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3602   0013B8  0E00               	movlw	0
  3603   0013BA  6E1E               	movwf	___flmul@a^0,c
  3604   0013BC  0E00               	movlw	0
  3605   0013BE  6E1F               	movwf	(___flmul@a+1)^0,c
  3606   0013C0  0E70               	movlw	112
  3607   0013C2  6E20               	movwf	(___flmul@a+2)^0,c
  3608   0013C4  0E42               	movlw	66
  3609   0013C6  6E21               	movwf	(___flmul@a+3)^0,c
  3610   0013C8  ECA0  F00F         	call	___flmul	;wreg free
  3611   0013CC  0100               	movlb	0	; () banked
  3612   0013CE  EE20 F010          	lfsr	2,16
  3613   0013D2  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3614   0013D4  26D9               	addwf	fsr2l,f,c
  3615   0013D6  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3616   0013D8  22DA               	addwfc	fsr2h,f,c
  3617   0013DA  C01A  FFDE         	movff	?___flmul,postinc2
  3618   0013DE  C01B  FFDE         	movff	?___flmul+1,postinc2
  3619   0013E2  C01C  FFDE         	movff	?___flmul+2,postinc2
  3620   0013E6  C01D  FFDE         	movff	?___flmul+3,postinc2
  3621                           
  3622                           ;colorfunctions.c: 46:         }else{
  3623   0013EA  EF89  F00A         	goto	l4292
  3624   0013EE                     l4288:
  3625                           
  3626                           ;colorfunctions.c: 47:             max=cf->Bf;
  3627   0013EE  0100               	movlb	0	; () banked
  3628   0013F0  EE20 F008          	lfsr	2,8
  3629   0013F4  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3630   0013F6  26D9               	addwf	fsr2l,f,c
  3631   0013F8  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3632   0013FA  22DA               	addwfc	fsr2h,f,c
  3633   0013FC  CFDE F04B          	movff	postinc2,___fltol@f1
  3634   001400  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3635   001404  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3636   001408  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3637   00140C  EC6F  F01A         	call	___fltol	;wreg free
  3638   001410  C04B  F077         	movff	?___fltol,RGB2Hue@max
  3639   001414  C04C  F078         	movff	?___fltol+1,RGB2Hue@max+1
  3640                           
  3641                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3642   001418  0100               	movlb	0	; () banked
  3643   00141A  5179               	movf	RGB2Hue@min& (0+255),w,b
  3644   00141C  5D77               	subwf	RGB2Hue@max& (0+255),w,b
  3645   00141E  6F6F               	movwf	??_RGB2Hue& (0+255),b
  3646   001420  517A               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3647   001422  5978               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3648   001424  6F70               	movwf	(??_RGB2Hue+1)& (0+255),b
  3649   001426  C06F  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3650   00142A  C070  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3651   00142E  0E00               	movlw	0
  3652   001430  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3653   001432  0EFF               	movlw	-1
  3654   001434  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3655   001436  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3656   001438  0E01               	movlw	1
  3657   00143A  EC11  F017         	call	___xxtofl
  3658   00143E  C00C  F057         	movff	?___xxtofl,___fldiv@a
  3659   001442  C00D  F058         	movff	?___xxtofl+1,___fldiv@a+1
  3660   001446  C00E  F059         	movff	?___xxtofl+2,___fldiv@a+2
  3661   00144A  C00F  F05A         	movff	?___xxtofl+3,___fldiv@a+3
  3662   00144E  0100               	movlb	0	; () banked
  3663   001450  EE20 F004          	lfsr	2,4
  3664   001454  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3665   001456  26D9               	addwf	fsr2l,f,c
  3666   001458  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3667   00145A  22DA               	addwfc	fsr2h,f,c
  3668   00145C  CFDE F04F          	movff	postinc2,___flsub@a
  3669   001460  CFDE F050          	movff	postinc2,___flsub@a+1
  3670   001464  CFDE F051          	movff	postinc2,___flsub@a+2
  3671   001468  CFDE F052          	movff	postinc2,___flsub@a+3
  3672   00146C  C06D  FFD9         	movff	RGB2Hue@cf,fsr2l
  3673   001470  C06E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3674   001474  CFDE F04B          	movff	postinc2,___flsub@b
  3675   001478  CFDE F04C          	movff	postinc2,___flsub@b+1
  3676   00147C  CFDE F04D          	movff	postinc2,___flsub@b+2
  3677   001480  CFDE F04E          	movff	postinc2,___flsub@b+3
  3678   001484  EC6A  F023         	call	___flsub	;wreg free
  3679   001488  C04B  F053         	movff	?___flsub,___fldiv@b
  3680   00148C  C04C  F054         	movff	?___flsub+1,___fldiv@b+1
  3681   001490  C04D  F055         	movff	?___flsub+2,___fldiv@b+2
  3682   001494  C04E  F056         	movff	?___flsub+3,___fldiv@b+3
  3683   001498  ECB5  F011         	call	___fldiv	;wreg free
  3684   00149C  C053  F073         	movff	?___fldiv,_RGB2Hue$3169
  3685   0014A0  C054  F074         	movff	?___fldiv+1,_RGB2Hue$3169+1
  3686   0014A4  C055  F075         	movff	?___fldiv+2,_RGB2Hue$3169+2
  3687   0014A8  C056  F076         	movff	?___fldiv+3,_RGB2Hue$3169+3
  3688   0014AC                     
  3689                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3690   0014AC  0E00               	movlw	0
  3691   0014AE  6E3F               	movwf	___fladd@a^0,c
  3692   0014B0  0E00               	movlw	0
  3693   0014B2  6E40               	movwf	(___fladd@a+1)^0,c
  3694   0014B4  0E80               	movlw	128
  3695   0014B6  6E41               	movwf	(___fladd@a+2)^0,c
  3696   0014B8  0E40               	movlw	64
  3697   0014BA  6E42               	movwf	(___fladd@a+3)^0,c
  3698   0014BC  C073  F03B         	movff	_RGB2Hue$3169,___fladd@b
  3699   0014C0  C074  F03C         	movff	_RGB2Hue$3169+1,___fladd@b+1
  3700   0014C4  C075  F03D         	movff	_RGB2Hue$3169+2,___fladd@b+2
  3701   0014C8  C076  F03E         	movff	_RGB2Hue$3169+3,___fladd@b+3
  3702   0014CC  EC40  F00D         	call	___fladd	;wreg free
  3703   0014D0  C03B  F01A         	movff	?___fladd,___flmul@b
  3704   0014D4  C03C  F01B         	movff	?___fladd+1,___flmul@b+1
  3705   0014D8  C03D  F01C         	movff	?___fladd+2,___flmul@b+2
  3706   0014DC  C03E  F01D         	movff	?___fladd+3,___flmul@b+3
  3707   0014E0  0E00               	movlw	0
  3708   0014E2  6E1E               	movwf	___flmul@a^0,c
  3709   0014E4  0E00               	movlw	0
  3710   0014E6  6E1F               	movwf	(___flmul@a+1)^0,c
  3711   0014E8  0E70               	movlw	112
  3712   0014EA  6E20               	movwf	(___flmul@a+2)^0,c
  3713   0014EC  0E42               	movlw	66
  3714   0014EE  6E21               	movwf	(___flmul@a+3)^0,c
  3715   0014F0  ECA0  F00F         	call	___flmul	;wreg free
  3716   0014F4  0100               	movlb	0	; () banked
  3717   0014F6  EE20 F010          	lfsr	2,16
  3718   0014FA  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3719   0014FC  26D9               	addwf	fsr2l,f,c
  3720   0014FE  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3721   001500  22DA               	addwfc	fsr2h,f,c
  3722   001502  C01A  FFDE         	movff	?___flmul,postinc2
  3723   001506  C01B  FFDE         	movff	?___flmul+1,postinc2
  3724   00150A  C01C  FFDE         	movff	?___flmul+2,postinc2
  3725   00150E  C01D  FFDE         	movff	?___flmul+3,postinc2
  3726   001512                     l4292:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3730   001512  EE20 F010          	lfsr	2,16
  3731   001516  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3732   001518  26D9               	addwf	fsr2l,f,c
  3733   00151A  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3734   00151C  22DA               	addwfc	fsr2h,f,c
  3735   00151E  0E03               	movlw	3
  3736   001520  BEDB               	btfsc	plusw2,7,c
  3737   001522  EF97  F00A         	goto	u4050
  3738   001526  EF95  F00A         	goto	u4051
  3739   00152A                     u4051:
  3740   00152A  EFBE  F00A         	goto	l119
  3741   00152E                     u4050:
  3742   00152E                     
  3743                           ; BSR set to: 0
  3744                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3745   00152E  EE20 F010          	lfsr	2,16
  3746   001532  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3747   001534  26D9               	addwf	fsr2l,f,c
  3748   001536  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3749   001538  22DA               	addwfc	fsr2h,f,c
  3750   00153A  CFDE F03B          	movff	postinc2,___fladd@b
  3751   00153E  CFDE F03C          	movff	postinc2,___fladd@b+1
  3752   001542  CFDE F03D          	movff	postinc2,___fladd@b+2
  3753   001546  CFDE F03E          	movff	postinc2,___fladd@b+3
  3754   00154A  0E00               	movlw	0
  3755   00154C  6E3F               	movwf	___fladd@a^0,c
  3756   00154E  0E00               	movlw	0
  3757   001550  6E40               	movwf	(___fladd@a+1)^0,c
  3758   001552  0EB4               	movlw	180
  3759   001554  6E41               	movwf	(___fladd@a+2)^0,c
  3760   001556  0E43               	movlw	67
  3761   001558  6E42               	movwf	(___fladd@a+3)^0,c
  3762   00155A  EC40  F00D         	call	___fladd	;wreg free
  3763   00155E  0100               	movlb	0	; () banked
  3764   001560  EE20 F010          	lfsr	2,16
  3765   001564  516D               	movf	RGB2Hue@cf& (0+255),w,b
  3766   001566  26D9               	addwf	fsr2l,f,c
  3767   001568  516E               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3768   00156A  22DA               	addwfc	fsr2h,f,c
  3769   00156C  C03B  FFDE         	movff	?___fladd,postinc2
  3770   001570  C03C  FFDE         	movff	?___fladd+1,postinc2
  3771   001574  C03D  FFDE         	movff	?___fladd+2,postinc2
  3772   001578  C03E  FFDE         	movff	?___fladd+3,postinc2
  3773   00157C                     l119:
  3774                           
  3775                           ; BSR set to: 0
  3776   00157C  0012               	return		;funcret
  3777   00157E                     __end_of_RGB2Hue:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function ___flsub *****************
  3781 ;; Defined at:
  3782 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  b               4   74[COMRAM] void 
  3785 ;;  a               4   78[COMRAM] void 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  4   74[COMRAM] void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        8 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 2
  3804 ;; This function calls:
  3805 ;;		___fladd
  3806 ;; This function is called by:
  3807 ;;		_RGB2Hue
  3808 ;;		_memoryUpdateTime
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text20
  3813   0046D4                     __ptext20:
  3814                           	callstack 0
  3815   0046D4                     ___flsub:
  3816                           	callstack 27
  3817   0046D4  0E00               	movlw	0
  3818   0046D6  1A4F               	xorwf	___flsub@a^0,f,c
  3819   0046D8  0E00               	movlw	0
  3820   0046DA  1A50               	xorwf	(___flsub@a+1)^0,f,c
  3821   0046DC  0E00               	movlw	0
  3822   0046DE  1A51               	xorwf	(___flsub@a+2)^0,f,c
  3823   0046E0  0E80               	movlw	128
  3824   0046E2  1A52               	xorwf	(___flsub@a+3)^0,f,c
  3825   0046E4  C04B  F03B         	movff	___flsub@b,___fladd@b
  3826   0046E8  C04C  F03C         	movff	___flsub@b+1,___fladd@b+1
  3827   0046EC  C04D  F03D         	movff	___flsub@b+2,___fladd@b+2
  3828   0046F0  C04E  F03E         	movff	___flsub@b+3,___fladd@b+3
  3829   0046F4  C04F  F03F         	movff	___flsub@a,___fladd@a
  3830   0046F8  C050  F040         	movff	___flsub@a+1,___fladd@a+1
  3831   0046FC  C051  F041         	movff	___flsub@a+2,___fladd@a+2
  3832   004700  C052  F042         	movff	___flsub@a+3,___fladd@a+3
  3833   004704  EC40  F00D         	call	___fladd	;wreg free
  3834   004708  C03B  F04B         	movff	?___fladd,?___flsub
  3835   00470C  C03C  F04C         	movff	?___fladd+1,?___flsub+1
  3836   004710  C03D  F04D         	movff	?___fladd+2,?___flsub+2
  3837   004714  C03E  F04E         	movff	?___fladd+3,?___flsub+3
  3838   004718  0012               	return		;funcret
  3839   00471A                     __end_of___flsub:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function ___fladd *****************
  3843 ;; Defined at:
  3844 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  b               4   58[COMRAM] void 
  3847 ;;  a               4   62[COMRAM] void 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  grs             1   73[COMRAM] unsigned char 
  3850 ;;  bexp            1   72[COMRAM] unsigned char 
  3851 ;;  aexp            1   71[COMRAM] unsigned char 
  3852 ;;  signs           1   70[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  4   58[COMRAM] unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3862 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;Total ram usage:       16 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_RGB2Hue
  3873 ;;		_memoryUpdateTime
  3874 ;;		___flsub
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text21
  3879   001A80                     __ptext21:
  3880                           	callstack 0
  3881   001A80                     ___fladd:
  3882                           	callstack 28
  3883   001A80  503E               	movf	(___fladd@b+3)^0,w,c
  3884   001A82  0B80               	andlw	128
  3885   001A84  6E47               	movwf	___fladd@signs^0,c
  3886   001A86  503E               	movf	(___fladd@b+3)^0,w,c
  3887   001A88  243E               	addwf	(___fladd@b+3)^0,w,c
  3888   001A8A  6E49               	movwf	___fladd@bexp^0,c
  3889   001A8C  AE3D               	btfss	(___fladd@b+2)^0,7,c
  3890   001A8E  EF4B  F00D         	goto	u2871
  3891   001A92  EF4D  F00D         	goto	u2870
  3892   001A96                     u2871:
  3893   001A96  EF4E  F00D         	goto	l3572
  3894   001A9A                     u2870:
  3895   001A9A  8049               	bsf	___fladd@bexp^0,0,c
  3896   001A9C                     l3572:
  3897   001A9C  5049               	movf	___fladd@bexp^0,w,c
  3898   001A9E  B4D8               	btfsc	status,2,c
  3899   001AA0  EF54  F00D         	goto	u2881
  3900   001AA4  EF56  F00D         	goto	u2880
  3901   001AA8                     u2881:
  3902   001AA8  EF6B  F00D         	goto	l3582
  3903   001AAC                     u2880:
  3904   001AAC  2849               	incf	___fladd@bexp^0,w,c
  3905   001AAE  A4D8               	btfss	status,2,c
  3906   001AB0  EF5C  F00D         	goto	u2891
  3907   001AB4  EF5E  F00D         	goto	u2890
  3908   001AB8                     u2891:
  3909   001AB8  EF66  F00D         	goto	l3578
  3910   001ABC                     u2890:
  3911   001ABC  0E00               	movlw	0
  3912   001ABE  6E3B               	movwf	___fladd@b^0,c
  3913   001AC0  0E00               	movlw	0
  3914   001AC2  6E3C               	movwf	(___fladd@b+1)^0,c
  3915   001AC4  0E00               	movlw	0
  3916   001AC6  6E3D               	movwf	(___fladd@b+2)^0,c
  3917   001AC8  0E00               	movlw	0
  3918   001ACA  6E3E               	movwf	(___fladd@b+3)^0,c
  3919   001ACC                     l3578:
  3920   001ACC  8E3D               	bsf	(___fladd@b+2)^0,7,c
  3921   001ACE  0E00               	movlw	0
  3922   001AD0  6E3E               	movwf	(___fladd@b+3)^0,c
  3923   001AD2  EF73  F00D         	goto	l3584
  3924   001AD6                     l3582:
  3925   001AD6  0E00               	movlw	0
  3926   001AD8  6E3B               	movwf	___fladd@b^0,c
  3927   001ADA  0E00               	movlw	0
  3928   001ADC  6E3C               	movwf	(___fladd@b+1)^0,c
  3929   001ADE  0E00               	movlw	0
  3930   001AE0  6E3D               	movwf	(___fladd@b+2)^0,c
  3931   001AE2  0E00               	movlw	0
  3932   001AE4  6E3E               	movwf	(___fladd@b+3)^0,c
  3933   001AE6                     l3584:
  3934   001AE6  5042               	movf	(___fladd@a+3)^0,w,c
  3935   001AE8  0B80               	andlw	128
  3936   001AEA  6E48               	movwf	___fladd@aexp^0,c
  3937   001AEC  5047               	movf	___fladd@signs^0,w,c
  3938   001AEE  1848               	xorwf	___fladd@aexp^0,w,c
  3939   001AF0  B4D8               	btfsc	status,2,c
  3940   001AF2  EF7D  F00D         	goto	u2901
  3941   001AF6  EF7F  F00D         	goto	u2900
  3942   001AFA                     u2901:
  3943   001AFA  EF80  F00D         	goto	l3590
  3944   001AFE                     u2900:
  3945   001AFE  8C47               	bsf	___fladd@signs^0,6,c
  3946   001B00                     l3590:
  3947   001B00  5042               	movf	(___fladd@a+3)^0,w,c
  3948   001B02  2442               	addwf	(___fladd@a+3)^0,w,c
  3949   001B04  6E48               	movwf	___fladd@aexp^0,c
  3950   001B06  AE41               	btfss	(___fladd@a+2)^0,7,c
  3951   001B08  EF88  F00D         	goto	u2911
  3952   001B0C  EF8A  F00D         	goto	u2910
  3953   001B10                     u2911:
  3954   001B10  EF8B  F00D         	goto	l3596
  3955   001B14                     u2910:
  3956   001B14  8048               	bsf	___fladd@aexp^0,0,c
  3957   001B16                     l3596:
  3958   001B16  5048               	movf	___fladd@aexp^0,w,c
  3959   001B18  B4D8               	btfsc	status,2,c
  3960   001B1A  EF91  F00D         	goto	u2921
  3961   001B1E  EF93  F00D         	goto	u2920
  3962   001B22                     u2921:
  3963   001B22  EFA8  F00D         	goto	l3606
  3964   001B26                     u2920:
  3965   001B26  2848               	incf	___fladd@aexp^0,w,c
  3966   001B28  A4D8               	btfss	status,2,c
  3967   001B2A  EF99  F00D         	goto	u2931
  3968   001B2E  EF9B  F00D         	goto	u2930
  3969   001B32                     u2931:
  3970   001B32  EFA3  F00D         	goto	l3602
  3971   001B36                     u2930:
  3972   001B36  0E00               	movlw	0
  3973   001B38  6E3F               	movwf	___fladd@a^0,c
  3974   001B3A  0E00               	movlw	0
  3975   001B3C  6E40               	movwf	(___fladd@a+1)^0,c
  3976   001B3E  0E00               	movlw	0
  3977   001B40  6E41               	movwf	(___fladd@a+2)^0,c
  3978   001B42  0E00               	movlw	0
  3979   001B44  6E42               	movwf	(___fladd@a+3)^0,c
  3980   001B46                     l3602:
  3981   001B46  8E41               	bsf	(___fladd@a+2)^0,7,c
  3982   001B48  0E00               	movlw	0
  3983   001B4A  6E42               	movwf	(___fladd@a+3)^0,c
  3984   001B4C  EFB0  F00D         	goto	l3608
  3985   001B50                     l3606:
  3986   001B50  0E00               	movlw	0
  3987   001B52  6E3F               	movwf	___fladd@a^0,c
  3988   001B54  0E00               	movlw	0
  3989   001B56  6E40               	movwf	(___fladd@a+1)^0,c
  3990   001B58  0E00               	movlw	0
  3991   001B5A  6E41               	movwf	(___fladd@a+2)^0,c
  3992   001B5C  0E00               	movlw	0
  3993   001B5E  6E42               	movwf	(___fladd@a+3)^0,c
  3994   001B60                     l3608:
  3995   001B60  5049               	movf	___fladd@bexp^0,w,c
  3996   001B62  5C48               	subwf	___fladd@aexp^0,w,c
  3997   001B64  B0D8               	btfsc	status,0,c
  3998   001B66  EFB7  F00D         	goto	u2941
  3999   001B6A  EFB9  F00D         	goto	u2940
  4000   001B6E                     u2941:
  4001   001B6E  EFE0  F00D         	goto	l3644
  4002   001B72                     u2940:
  4003   001B72  AC47               	btfss	___fladd@signs^0,6,c
  4004   001B74  EFBE  F00D         	goto	u2951
  4005   001B78  EFC0  F00D         	goto	u2950
  4006   001B7C                     u2951:
  4007   001B7C  EFC2  F00D         	goto	l3614
  4008   001B80                     u2950:
  4009   001B80  0E80               	movlw	128
  4010   001B82  1A47               	xorwf	___fladd@signs^0,f,c
  4011   001B84                     l3614:
  4012   001B84  C049  F04A         	movff	___fladd@bexp,___fladd@grs
  4013   001B88  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  4014   001B8C  C04A  F048         	movff	___fladd@grs,___fladd@aexp
  4015   001B90  C03B  F04A         	movff	___fladd@b,___fladd@grs
  4016   001B94  C03F  F03B         	movff	___fladd@a,___fladd@b
  4017   001B98  C04A  F03F         	movff	___fladd@grs,___fladd@a
  4018   001B9C  C03C  F04A         	movff	___fladd@b+1,___fladd@grs
  4019   001BA0  C040  F03C         	movff	___fladd@a+1,___fladd@b+1
  4020   001BA4  C04A  F040         	movff	___fladd@grs,___fladd@a+1
  4021   001BA8  C03D  F04A         	movff	___fladd@b+2,___fladd@grs
  4022   001BAC  C041  F03D         	movff	___fladd@a+2,___fladd@b+2
  4023   001BB0  C04A  F041         	movff	___fladd@grs,___fladd@a+2
  4024   001BB4  C03E  F04A         	movff	___fladd@b+3,___fladd@grs
  4025   001BB8  C042  F03E         	movff	___fladd@a+3,___fladd@b+3
  4026   001BBC  C04A  F042         	movff	___fladd@grs,___fladd@a+3
  4027   001BC0                     l3644:
  4028   001BC0  0E00               	movlw	0
  4029   001BC2  6E4A               	movwf	___fladd@grs^0,c
  4030   001BC4  5049               	movf	___fladd@bexp^0,w,c
  4031   001BC6  C048  F043         	movff	___fladd@aexp,??___fladd
  4032   001BCA  6A44               	clrf	(??___fladd+1)^0,c
  4033   001BCC  5E43               	subwf	??___fladd^0,f,c
  4034   001BCE  0E00               	movlw	0
  4035   001BD0  5A44               	subwfb	(??___fladd+1)^0,f,c
  4036   001BD2  BE44               	btfsc	(??___fladd+1)^0,7,c
  4037   001BD4  EFF5  F00D         	goto	u2961
  4038   001BD8  5044               	movf	(??___fladd+1)^0,w,c
  4039   001BDA  E109               	bnz	u2960
  4040   001BDC  0E1A               	movlw	26
  4041   001BDE  5C43               	subwf	??___fladd^0,w,c
  4042   001BE0  A0D8               	btfss	status,0,c
  4043   001BE2  EFF5  F00D         	goto	u2961
  4044   001BE6  EFF7  F00D         	goto	u2960
  4045   001BEA                     u2961:
  4046   001BEA  EF2E  F00E         	goto	l1198
  4047   001BEE                     u2960:
  4048   001BEE  503B               	movf	___fladd@b^0,w,c
  4049   001BF0  103C               	iorwf	(___fladd@b+1)^0,w,c
  4050   001BF2  103D               	iorwf	(___fladd@b+2)^0,w,c
  4051   001BF4  103E               	iorwf	(___fladd@b+3)^0,w,c
  4052   001BF6  A4D8               	btfss	status,2,c
  4053   001BF8  EF00  F00E         	goto	u2971
  4054   001BFC  EF03  F00E         	goto	u2970
  4055   001C00                     u2971:
  4056   001C00  0E01               	movlw	1
  4057   001C02  EF04  F00E         	goto	u2980
  4058   001C06                     u2970:
  4059   001C06  0E00               	movlw	0
  4060   001C08                     u2980:
  4061   001C08  6E4A               	movwf	___fladd@grs^0,c
  4062   001C0A  0E00               	movlw	0
  4063   001C0C  6E3B               	movwf	___fladd@b^0,c
  4064   001C0E  0E00               	movlw	0
  4065   001C10  6E3C               	movwf	(___fladd@b+1)^0,c
  4066   001C12  0E00               	movlw	0
  4067   001C14  6E3D               	movwf	(___fladd@b+2)^0,c
  4068   001C16  0E00               	movlw	0
  4069   001C18  6E3E               	movwf	(___fladd@b+3)^0,c
  4070   001C1A  C048  F049         	movff	___fladd@aexp,___fladd@bexp
  4071   001C1E  EF37  F00E         	goto	l1197
  4072   001C22                     l1199:
  4073   001C22  A04A               	btfss	___fladd@grs^0,0,c
  4074   001C24  EF16  F00E         	goto	u2991
  4075   001C28  EF18  F00E         	goto	u2990
  4076   001C2C                     u2991:
  4077   001C2C  EF1E  F00E         	goto	l3656
  4078   001C30                     u2990:
  4079   001C30  90D8               	bcf	status,0,c
  4080   001C32  304A               	rrcf	___fladd@grs^0,w,c
  4081   001C34  0901               	iorlw	1
  4082   001C36  6E4A               	movwf	___fladd@grs^0,c
  4083   001C38  EF20  F00E         	goto	l3658
  4084   001C3C                     l3656:
  4085   001C3C  90D8               	bcf	status,0,c
  4086   001C3E  324A               	rrcf	___fladd@grs^0,f,c
  4087   001C40                     l3658:
  4088   001C40  A03B               	btfss	___fladd@b^0,0,c
  4089   001C42  EF25  F00E         	goto	u3001
  4090   001C46  EF27  F00E         	goto	u3000
  4091   001C4A                     u3001:
  4092   001C4A  EF28  F00E         	goto	l3662
  4093   001C4E                     u3000:
  4094   001C4E  8E4A               	bsf	___fladd@grs^0,7,c
  4095   001C50                     l3662:
  4096   001C50  343E               	rlcf	(___fladd@b+3)^0,w,c
  4097   001C52  323E               	rrcf	(___fladd@b+3)^0,f,c
  4098   001C54  323D               	rrcf	(___fladd@b+2)^0,f,c
  4099   001C56  323C               	rrcf	(___fladd@b+1)^0,f,c
  4100   001C58  323B               	rrcf	___fladd@b^0,f,c
  4101   001C5A  2A49               	incf	___fladd@bexp^0,f,c
  4102   001C5C                     l1198:
  4103   001C5C  5048               	movf	___fladd@aexp^0,w,c
  4104   001C5E  5C49               	subwf	___fladd@bexp^0,w,c
  4105   001C60  A0D8               	btfss	status,0,c
  4106   001C62  EF35  F00E         	goto	u3011
  4107   001C66  EF37  F00E         	goto	u3010
  4108   001C6A                     u3011:
  4109   001C6A  EF11  F00E         	goto	l1199
  4110   001C6E                     u3010:
  4111   001C6E                     l1197:
  4112   001C6E  BC47               	btfsc	___fladd@signs^0,6,c
  4113   001C70  EF3C  F00E         	goto	u3021
  4114   001C74  EF3E  F00E         	goto	u3020
  4115   001C78                     u3021:
  4116   001C78  EF7E  F00E         	goto	l3690
  4117   001C7C                     u3020:
  4118   001C7C  5049               	movf	___fladd@bexp^0,w,c
  4119   001C7E  A4D8               	btfss	status,2,c
  4120   001C80  EF44  F00E         	goto	u3031
  4121   001C84  EF46  F00E         	goto	u3030
  4122   001C88                     u3031:
  4123   001C88  EF50  F00E         	goto	l3672
  4124   001C8C                     u3030:
  4125   001C8C  0E00               	movlw	0
  4126   001C8E  6E3B               	movwf	?___fladd^0,c
  4127   001C90  0E00               	movlw	0
  4128   001C92  6E3C               	movwf	(?___fladd+1)^0,c
  4129   001C94  0E00               	movlw	0
  4130   001C96  6E3D               	movwf	(?___fladd+2)^0,c
  4131   001C98  0E00               	movlw	0
  4132   001C9A  6E3E               	movwf	(?___fladd+3)^0,c
  4133   001C9C  EF9F  F00F         	goto	l1206
  4134   001CA0                     l3672:
  4135   001CA0  503F               	movf	___fladd@a^0,w,c
  4136   001CA2  263B               	addwf	___fladd@b^0,f,c
  4137   001CA4  5040               	movf	(___fladd@a+1)^0,w,c
  4138   001CA6  223C               	addwfc	(___fladd@b+1)^0,f,c
  4139   001CA8  5041               	movf	(___fladd@a+2)^0,w,c
  4140   001CAA  223D               	addwfc	(___fladd@b+2)^0,f,c
  4141   001CAC  5042               	movf	(___fladd@a+3)^0,w,c
  4142   001CAE  223E               	addwfc	(___fladd@b+3)^0,f,c
  4143   001CB0  A03E               	btfss	(___fladd@b+3)^0,0,c
  4144   001CB2  EF5D  F00E         	goto	u3041
  4145   001CB6  EF5F  F00E         	goto	u3040
  4146   001CBA                     u3041:
  4147   001CBA  EF0B  F00F         	goto	l3726
  4148   001CBE                     u3040:
  4149   001CBE  A04A               	btfss	___fladd@grs^0,0,c
  4150   001CC0  EF64  F00E         	goto	u3051
  4151   001CC4  EF66  F00E         	goto	u3050
  4152   001CC8                     u3051:
  4153   001CC8  EF6C  F00E         	goto	l3680
  4154   001CCC                     u3050:
  4155   001CCC  90D8               	bcf	status,0,c
  4156   001CCE  304A               	rrcf	___fladd@grs^0,w,c
  4157   001CD0  0901               	iorlw	1
  4158   001CD2  6E4A               	movwf	___fladd@grs^0,c
  4159   001CD4  EF6E  F00E         	goto	l3682
  4160   001CD8                     l3680:
  4161   001CD8  90D8               	bcf	status,0,c
  4162   001CDA  324A               	rrcf	___fladd@grs^0,f,c
  4163   001CDC                     l3682:
  4164   001CDC  A03B               	btfss	___fladd@b^0,0,c
  4165   001CDE  EF73  F00E         	goto	u3061
  4166   001CE2  EF75  F00E         	goto	u3060
  4167   001CE6                     u3061:
  4168   001CE6  EF76  F00E         	goto	l3686
  4169   001CEA                     u3060:
  4170   001CEA  8E4A               	bsf	___fladd@grs^0,7,c
  4171   001CEC                     l3686:
  4172   001CEC  343E               	rlcf	(___fladd@b+3)^0,w,c
  4173   001CEE  323E               	rrcf	(___fladd@b+3)^0,f,c
  4174   001CF0  323D               	rrcf	(___fladd@b+2)^0,f,c
  4175   001CF2  323C               	rrcf	(___fladd@b+1)^0,f,c
  4176   001CF4  323B               	rrcf	___fladd@b^0,f,c
  4177   001CF6  2A49               	incf	___fladd@bexp^0,f,c
  4178   001CF8  EF0B  F00F         	goto	l3726
  4179   001CFC                     l3690:
  4180   001CFC  503F               	movf	___fladd@a^0,w,c
  4181   001CFE  5C3B               	subwf	___fladd@b^0,w,c
  4182   001D00  5040               	movf	(___fladd@a+1)^0,w,c
  4183   001D02  583C               	subwfb	(___fladd@b+1)^0,w,c
  4184   001D04  5041               	movf	(___fladd@a+2)^0,w,c
  4185   001D06  583D               	subwfb	(___fladd@b+2)^0,w,c
  4186   001D08  503E               	movf	(___fladd@b+3)^0,w,c
  4187   001D0A  0A80               	xorlw	128
  4188   001D0C  6E43               	movwf	??___fladd^0,c
  4189   001D0E  5042               	movf	(___fladd@a+3)^0,w,c
  4190   001D10  0A80               	xorlw	128
  4191   001D12  5843               	subwfb	??___fladd^0,w,c
  4192   001D14  B0D8               	btfsc	status,0,c
  4193   001D16  EF8F  F00E         	goto	u3071
  4194   001D1A  EF91  F00E         	goto	u3070
  4195   001D1E                     u3071:
  4196   001D1E  EFBC  F00E         	goto	l3700
  4197   001D22                     u3070:
  4198   001D22  503B               	movf	___fladd@b^0,w,c
  4199   001D24  5C3F               	subwf	___fladd@a^0,w,c
  4200   001D26  6E43               	movwf	??___fladd^0,c
  4201   001D28  503C               	movf	(___fladd@b+1)^0,w,c
  4202   001D2A  5840               	subwfb	(___fladd@a+1)^0,w,c
  4203   001D2C  6E44               	movwf	(??___fladd+1)^0,c
  4204   001D2E  503D               	movf	(___fladd@b+2)^0,w,c
  4205   001D30  5841               	subwfb	(___fladd@a+2)^0,w,c
  4206   001D32  6E45               	movwf	(??___fladd+2)^0,c
  4207   001D34  503E               	movf	(___fladd@b+3)^0,w,c
  4208   001D36  5842               	subwfb	(___fladd@a+3)^0,w,c
  4209   001D38  6E46               	movwf	(??___fladd+3)^0,c
  4210   001D3A  0EFF               	movlw	255
  4211   001D3C  2443               	addwf	??___fladd^0,w,c
  4212   001D3E  6E3B               	movwf	___fladd@b^0,c
  4213   001D40  0EFF               	movlw	255
  4214   001D42  2044               	addwfc	(??___fladd+1)^0,w,c
  4215   001D44  6E3C               	movwf	(___fladd@b+1)^0,c
  4216   001D46  0EFF               	movlw	255
  4217   001D48  2045               	addwfc	(??___fladd+2)^0,w,c
  4218   001D4A  6E3D               	movwf	(___fladd@b+2)^0,c
  4219   001D4C  0EFF               	movlw	255
  4220   001D4E  2046               	addwfc	(??___fladd+3)^0,w,c
  4221   001D50  6E3E               	movwf	(___fladd@b+3)^0,c
  4222   001D52  0E80               	movlw	128
  4223   001D54  1A47               	xorwf	___fladd@signs^0,f,c
  4224   001D56  6C4A               	negf	___fladd@grs^0,c
  4225   001D58  504A               	movf	___fladd@grs^0,w,c
  4226   001D5A  A4D8               	btfss	status,2,c
  4227   001D5C  EFB2  F00E         	goto	u3081
  4228   001D60  EFB4  F00E         	goto	u3080
  4229   001D64                     u3081:
  4230   001D64  EFC4  F00E         	goto	l1214
  4231   001D68                     u3080:
  4232   001D68  0E01               	movlw	1
  4233   001D6A  263B               	addwf	___fladd@b^0,f,c
  4234   001D6C  0E00               	movlw	0
  4235   001D6E  223C               	addwfc	(___fladd@b+1)^0,f,c
  4236   001D70  223D               	addwfc	(___fladd@b+2)^0,f,c
  4237   001D72  223E               	addwfc	(___fladd@b+3)^0,f,c
  4238   001D74  EFC4  F00E         	goto	l1214
  4239   001D78                     l3700:
  4240   001D78  503F               	movf	___fladd@a^0,w,c
  4241   001D7A  5E3B               	subwf	___fladd@b^0,f,c
  4242   001D7C  5040               	movf	(___fladd@a+1)^0,w,c
  4243   001D7E  5A3C               	subwfb	(___fladd@b+1)^0,f,c
  4244   001D80  5041               	movf	(___fladd@a+2)^0,w,c
  4245   001D82  5A3D               	subwfb	(___fladd@b+2)^0,f,c
  4246   001D84  5042               	movf	(___fladd@a+3)^0,w,c
  4247   001D86  5A3E               	subwfb	(___fladd@b+3)^0,f,c
  4248   001D88                     l1214:
  4249   001D88  503B               	movf	___fladd@b^0,w,c
  4250   001D8A  103C               	iorwf	(___fladd@b+1)^0,w,c
  4251   001D8C  103D               	iorwf	(___fladd@b+2)^0,w,c
  4252   001D8E  103E               	iorwf	(___fladd@b+3)^0,w,c
  4253   001D90  A4D8               	btfss	status,2,c
  4254   001D92  EFCD  F00E         	goto	u3091
  4255   001D96  EFCF  F00E         	goto	u3090
  4256   001D9A                     u3091:
  4257   001D9A  EF04  F00F         	goto	l3724
  4258   001D9E                     u3090:
  4259   001D9E  504A               	movf	___fladd@grs^0,w,c
  4260   001DA0  A4D8               	btfss	status,2,c
  4261   001DA2  EFD5  F00E         	goto	u3101
  4262   001DA6  EFD7  F00E         	goto	u3100
  4263   001DAA                     u3101:
  4264   001DAA  EF04  F00F         	goto	l3724
  4265   001DAE                     u3100:
  4266   001DAE  0E00               	movlw	0
  4267   001DB0  6E3B               	movwf	?___fladd^0,c
  4268   001DB2  0E00               	movlw	0
  4269   001DB4  6E3C               	movwf	(?___fladd+1)^0,c
  4270   001DB6  0E00               	movlw	0
  4271   001DB8  6E3D               	movwf	(?___fladd+2)^0,c
  4272   001DBA  0E00               	movlw	0
  4273   001DBC  6E3E               	movwf	(?___fladd+3)^0,c
  4274   001DBE  EF9F  F00F         	goto	l1206
  4275   001DC2                     l3708:
  4276   001DC2  90D8               	bcf	status,0,c
  4277   001DC4  363B               	rlcf	___fladd@b^0,f,c
  4278   001DC6  363C               	rlcf	(___fladd@b+1)^0,f,c
  4279   001DC8  363D               	rlcf	(___fladd@b+2)^0,f,c
  4280   001DCA  363E               	rlcf	(___fladd@b+3)^0,f,c
  4281   001DCC  AE4A               	btfss	___fladd@grs^0,7,c
  4282   001DCE  EFEB  F00E         	goto	u3111
  4283   001DD2  EFED  F00E         	goto	u3110
  4284   001DD6                     u3111:
  4285   001DD6  EFEE  F00E         	goto	l3714
  4286   001DDA                     u3110:
  4287   001DDA  803B               	bsf	___fladd@b^0,0,c
  4288   001DDC                     l3714:
  4289   001DDC  A04A               	btfss	___fladd@grs^0,0,c
  4290   001DDE  EFF3  F00E         	goto	u3121
  4291   001DE2  EFF5  F00E         	goto	u3120
  4292   001DE6                     u3121:
  4293   001DE6  EFF9  F00E         	goto	l3718
  4294   001DEA                     u3120:
  4295   001DEA  80D8               	bsf	status,0,c
  4296   001DEC  364A               	rlcf	___fladd@grs^0,f,c
  4297   001DEE  EFFB  F00E         	goto	l3720
  4298   001DF2                     l3718:
  4299   001DF2  90D8               	bcf	status,0,c
  4300   001DF4  364A               	rlcf	___fladd@grs^0,f,c
  4301   001DF6                     l3720:
  4302   001DF6  5049               	movf	___fladd@bexp^0,w,c
  4303   001DF8  B4D8               	btfsc	status,2,c
  4304   001DFA  EF01  F00F         	goto	u3131
  4305   001DFE  EF03  F00F         	goto	u3130
  4306   001E02                     u3131:
  4307   001E02  EF04  F00F         	goto	l3724
  4308   001E06                     u3130:
  4309   001E06  0649               	decf	___fladd@bexp^0,f,c
  4310   001E08                     l3724:
  4311   001E08  AE3D               	btfss	(___fladd@b+2)^0,7,c
  4312   001E0A  EF09  F00F         	goto	u3141
  4313   001E0E  EF0B  F00F         	goto	u3140
  4314   001E12                     u3141:
  4315   001E12  EFE1  F00E         	goto	l3708
  4316   001E16                     u3140:
  4317   001E16                     l3726:
  4318   001E16  0E00               	movlw	0
  4319   001E18  6E48               	movwf	___fladd@aexp^0,c
  4320   001E1A  AE4A               	btfss	___fladd@grs^0,7,c
  4321   001E1C  EF12  F00F         	goto	u3151
  4322   001E20  EF14  F00F         	goto	u3150
  4323   001E24                     u3151:
  4324   001E24  EF2C  F00F         	goto	l1223
  4325   001E28                     u3150:
  4326   001E28  C04A  F043         	movff	___fladd@grs,??___fladd
  4327   001E2C  0E7F               	movlw	127
  4328   001E2E  1643               	andwf	??___fladd^0,f,c
  4329   001E30  B4D8               	btfsc	status,2,c
  4330   001E32  EF1D  F00F         	goto	u3161
  4331   001E36  EF1F  F00F         	goto	u3160
  4332   001E3A                     u3161:
  4333   001E3A  EF23  F00F         	goto	l1224
  4334   001E3E                     u3160:
  4335   001E3E                     l3732:
  4336   001E3E  0E01               	movlw	1
  4337   001E40  6E48               	movwf	___fladd@aexp^0,c
  4338   001E42  EF2C  F00F         	goto	l1223
  4339   001E46                     l1224:
  4340   001E46  A03B               	btfss	___fladd@b^0,0,c
  4341   001E48  EF28  F00F         	goto	u3171
  4342   001E4C  EF2A  F00F         	goto	u3170
  4343   001E50                     u3171:
  4344   001E50  EF2C  F00F         	goto	l1223
  4345   001E54                     u3170:
  4346   001E54  EF1F  F00F         	goto	l3732
  4347   001E58                     l1223:
  4348   001E58  5048               	movf	___fladd@aexp^0,w,c
  4349   001E5A  B4D8               	btfsc	status,2,c
  4350   001E5C  EF32  F00F         	goto	u3181
  4351   001E60  EF34  F00F         	goto	u3180
  4352   001E64                     u3181:
  4353   001E64  EF5F  F00F         	goto	l3744
  4354   001E68                     u3180:
  4355   001E68  0E01               	movlw	1
  4356   001E6A  263B               	addwf	___fladd@b^0,f,c
  4357   001E6C  0E00               	movlw	0
  4358   001E6E  223C               	addwfc	(___fladd@b+1)^0,f,c
  4359   001E70  223D               	addwfc	(___fladd@b+2)^0,f,c
  4360   001E72  223E               	addwfc	(___fladd@b+3)^0,f,c
  4361   001E74  A03E               	btfss	(___fladd@b+3)^0,0,c
  4362   001E76  EF3F  F00F         	goto	u3191
  4363   001E7A  EF41  F00F         	goto	u3190
  4364   001E7E                     u3191:
  4365   001E7E  EF5F  F00F         	goto	l3744
  4366   001E82                     u3190:
  4367   001E82  C03B  F043         	movff	___fladd@b,??___fladd
  4368   001E86  C03C  F044         	movff	___fladd@b+1,??___fladd+1
  4369   001E8A  C03D  F045         	movff	___fladd@b+2,??___fladd+2
  4370   001E8E  C03E  F046         	movff	___fladd@b+3,??___fladd+3
  4371   001E92  3446               	rlcf	(??___fladd+3)^0,w,c
  4372   001E94  3246               	rrcf	(??___fladd+3)^0,f,c
  4373   001E96  3245               	rrcf	(??___fladd+2)^0,f,c
  4374   001E98  3244               	rrcf	(??___fladd+1)^0,f,c
  4375   001E9A  3243               	rrcf	??___fladd^0,f,c
  4376   001E9C  C043  F03B         	movff	??___fladd,___fladd@b
  4377   001EA0  C044  F03C         	movff	??___fladd+1,___fladd@b+1
  4378   001EA4  C045  F03D         	movff	??___fladd+2,___fladd@b+2
  4379   001EA8  C046  F03E         	movff	??___fladd+3,___fladd@b+3
  4380   001EAC  2849               	incf	___fladd@bexp^0,w,c
  4381   001EAE  B4D8               	btfsc	status,2,c
  4382   001EB0  EF5C  F00F         	goto	u3201
  4383   001EB4  EF5E  F00F         	goto	u3200
  4384   001EB8                     u3201:
  4385   001EB8  EF5F  F00F         	goto	l3744
  4386   001EBC                     u3200:
  4387   001EBC  2A49               	incf	___fladd@bexp^0,f,c
  4388   001EBE                     l3744:
  4389   001EBE  2849               	incf	___fladd@bexp^0,w,c
  4390   001EC0  B4D8               	btfsc	status,2,c
  4391   001EC2  EF65  F00F         	goto	u3211
  4392   001EC6  EF67  F00F         	goto	u3210
  4393   001ECA                     u3211:
  4394   001ECA  EF6F  F00F         	goto	l3748
  4395   001ECE                     u3210:
  4396   001ECE  5049               	movf	___fladd@bexp^0,w,c
  4397   001ED0  A4D8               	btfss	status,2,c
  4398   001ED2  EF6D  F00F         	goto	u3221
  4399   001ED6  EF6F  F00F         	goto	u3220
  4400   001EDA                     u3221:
  4401   001EDA  EF81  F00F         	goto	l3752
  4402   001EDE                     u3220:
  4403   001EDE                     l3748:
  4404   001EDE  0E00               	movlw	0
  4405   001EE0  6E3B               	movwf	___fladd@b^0,c
  4406   001EE2  0E00               	movlw	0
  4407   001EE4  6E3C               	movwf	(___fladd@b+1)^0,c
  4408   001EE6  0E00               	movlw	0
  4409   001EE8  6E3D               	movwf	(___fladd@b+2)^0,c
  4410   001EEA  0E00               	movlw	0
  4411   001EEC  6E3E               	movwf	(___fladd@b+3)^0,c
  4412   001EEE  5049               	movf	___fladd@bexp^0,w,c
  4413   001EF0  A4D8               	btfss	status,2,c
  4414   001EF2  EF7D  F00F         	goto	u3231
  4415   001EF6  EF7F  F00F         	goto	u3230
  4416   001EFA                     u3231:
  4417   001EFA  EF81  F00F         	goto	l3752
  4418   001EFE                     u3230:
  4419   001EFE  0E00               	movlw	0
  4420   001F00  6E47               	movwf	___fladd@signs^0,c
  4421   001F02                     l3752:
  4422   001F02  A049               	btfss	___fladd@bexp^0,0,c
  4423   001F04  EF86  F00F         	goto	u3241
  4424   001F08  EF88  F00F         	goto	u3240
  4425   001F0C                     u3241:
  4426   001F0C  EF8B  F00F         	goto	l3756
  4427   001F10                     u3240:
  4428   001F10  8E3D               	bsf	(___fladd@b+2)^0,7,c
  4429   001F12  EF8C  F00F         	goto	l3758
  4430   001F16                     l3756:
  4431   001F16  9E3D               	bcf	(___fladd@b+2)^0,7,c
  4432   001F18                     l3758:
  4433   001F18  90D8               	bcf	status,0,c
  4434   001F1A  3049               	rrcf	___fladd@bexp^0,w,c
  4435   001F1C  6E3E               	movwf	(___fladd@b+3)^0,c
  4436   001F1E  AE47               	btfss	___fladd@signs^0,7,c
  4437   001F20  EF94  F00F         	goto	u3251
  4438   001F24  EF96  F00F         	goto	u3250
  4439   001F28                     u3251:
  4440   001F28  EF97  F00F         	goto	l3764
  4441   001F2C                     u3250:
  4442   001F2C  8E3E               	bsf	(___fladd@b+3)^0,7,c
  4443   001F2E                     l3764:
  4444   001F2E  C03B  F03B         	movff	___fladd@b,?___fladd
  4445   001F32  C03C  F03C         	movff	___fladd@b+1,?___fladd+1
  4446   001F36  C03D  F03D         	movff	___fladd@b+2,?___fladd+2
  4447   001F3A  C03E  F03E         	movff	___fladd@b+3,?___fladd+3
  4448   001F3E                     l1206:
  4449   001F3E  0012               	return		;funcret
  4450   001F40                     __end_of___fladd:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function ___fleq *****************
  4454 ;; Defined at:
  4455 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  ff1             4    0[COMRAM] unsigned char 
  4458 ;;  ff2             4    4[COMRAM] unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;		None               void
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;Total ram usage:       12 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 1
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_RGB2Hue
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text22
  4485   003A60                     __ptext22:
  4486                           	callstack 0
  4487   003A60                     ___fleq:
  4488                           	callstack 28
  4489   003A60  0E00               	movlw	0
  4490   003A62  1401               	andwf	___fleq@ff1^0,w,c
  4491   003A64  6E09               	movwf	??___fleq^0,c
  4492   003A66  0E00               	movlw	0
  4493   003A68  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4494   003A6A  6E0A               	movwf	(??___fleq+1)^0,c
  4495   003A6C  0E80               	movlw	128
  4496   003A6E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4497   003A70  6E0B               	movwf	(??___fleq+2)^0,c
  4498   003A72  0E7F               	movlw	127
  4499   003A74  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4500   003A76  6E0C               	movwf	(??___fleq+3)^0,c
  4501   003A78  5009               	movf	??___fleq^0,w,c
  4502   003A7A  100A               	iorwf	(??___fleq+1)^0,w,c
  4503   003A7C  100B               	iorwf	(??___fleq+2)^0,w,c
  4504   003A7E  100C               	iorwf	(??___fleq+3)^0,w,c
  4505   003A80  A4D8               	btfss	status,2,c
  4506   003A82  EF45  F01D         	goto	u3901
  4507   003A86  EF47  F01D         	goto	u3900
  4508   003A8A                     u3901:
  4509   003A8A  EF4F  F01D         	goto	l4200
  4510   003A8E                     u3900:
  4511   003A8E  0E00               	movlw	0
  4512   003A90  6E01               	movwf	___fleq@ff1^0,c
  4513   003A92  0E00               	movlw	0
  4514   003A94  6E02               	movwf	(___fleq@ff1+1)^0,c
  4515   003A96  0E00               	movlw	0
  4516   003A98  6E03               	movwf	(___fleq@ff1+2)^0,c
  4517   003A9A  0E00               	movlw	0
  4518   003A9C  6E04               	movwf	(___fleq@ff1+3)^0,c
  4519   003A9E                     l4200:
  4520   003A9E  0E00               	movlw	0
  4521   003AA0  1405               	andwf	___fleq@ff2^0,w,c
  4522   003AA2  6E09               	movwf	??___fleq^0,c
  4523   003AA4  0E00               	movlw	0
  4524   003AA6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4525   003AA8  6E0A               	movwf	(??___fleq+1)^0,c
  4526   003AAA  0E80               	movlw	128
  4527   003AAC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4528   003AAE  6E0B               	movwf	(??___fleq+2)^0,c
  4529   003AB0  0E7F               	movlw	127
  4530   003AB2  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4531   003AB4  6E0C               	movwf	(??___fleq+3)^0,c
  4532   003AB6  5009               	movf	??___fleq^0,w,c
  4533   003AB8  100A               	iorwf	(??___fleq+1)^0,w,c
  4534   003ABA  100B               	iorwf	(??___fleq+2)^0,w,c
  4535   003ABC  100C               	iorwf	(??___fleq+3)^0,w,c
  4536   003ABE  A4D8               	btfss	status,2,c
  4537   003AC0  EF64  F01D         	goto	u3911
  4538   003AC4  EF66  F01D         	goto	u3910
  4539   003AC8                     u3911:
  4540   003AC8  EF6E  F01D         	goto	l4204
  4541   003ACC                     u3910:
  4542   003ACC  0E00               	movlw	0
  4543   003ACE  6E05               	movwf	___fleq@ff2^0,c
  4544   003AD0  0E00               	movlw	0
  4545   003AD2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4546   003AD4  0E00               	movlw	0
  4547   003AD6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4548   003AD8  0E00               	movlw	0
  4549   003ADA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4550   003ADC                     l4204:
  4551   003ADC  5005               	movf	___fleq@ff2^0,w,c
  4552   003ADE  1801               	xorwf	___fleq@ff1^0,w,c
  4553   003AE0  E10F               	bnz	u3920
  4554   003AE2  5006               	movf	(___fleq@ff2+1)^0,w,c
  4555   003AE4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4556   003AE6  E10C               	bnz	u3920
  4557   003AE8  5007               	movf	(___fleq@ff2+2)^0,w,c
  4558   003AEA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4559   003AEC  E109               	bnz	u3920
  4560   003AEE  5008               	movf	(___fleq@ff2+3)^0,w,c
  4561   003AF0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4562   003AF2  B4D8               	btfsc	status,2,c
  4563   003AF4  EF7E  F01D         	goto	u3921
  4564   003AF8  EF80  F01D         	goto	u3920
  4565   003AFC                     u3921:
  4566   003AFC  EF83  F01D         	goto	l4208
  4567   003B00                     u3920:
  4568   003B00  90D8               	bcf	status,0,c
  4569   003B02  EF84  F01D         	goto	l928
  4570   003B06                     l4208:
  4571   003B06  80D8               	bsf	status,0,c
  4572   003B08                     l928:
  4573   003B08  0012               	return		;funcret
  4574   003B0A                     __end_of___fleq:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function ___fldiv *****************
  4578 ;; Defined at:
  4579 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  b               4   82[COMRAM] unsigned char 
  4582 ;;  a               4   86[COMRAM] unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  grs             4    7[BANK0 ] unsigned long 
  4585 ;;  rem             4    0[BANK0 ] unsigned long 
  4586 ;;  new_exp         2    5[BANK0 ] short 
  4587 ;;  aexp            1   12[BANK0 ] unsigned char 
  4588 ;;  bexp            1   11[BANK0 ] unsigned char 
  4589 ;;  sign            1    4[BANK0 ] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  4   82[COMRAM] unsigned char 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;Total ram usage:       25 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; Hardware stack levels required when called: 1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_RGB2Hue
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text23
  4614   00236A                     __ptext23:
  4615                           	callstack 0
  4616   00236A                     ___fldiv:
  4617                           	callstack 28
  4618   00236A  5056               	movf	(___fldiv@b+3)^0,w,c
  4619   00236C  0B80               	andlw	128
  4620   00236E  0100               	movlb	0	; () banked
  4621   002370  6F64               	movwf	___fldiv@sign& (0+255),b
  4622   002372  5056               	movf	(___fldiv@b+3)^0,w,c
  4623   002374  2456               	addwf	(___fldiv@b+3)^0,w,c
  4624   002376  6F6B               	movwf	___fldiv@bexp& (0+255),b
  4625   002378                     
  4626                           ; BSR set to: 0
  4627   002378  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4628   00237A  EFC1  F011         	goto	u3671
  4629   00237E  EFC3  F011         	goto	u3670
  4630   002382                     u3671:
  4631   002382  EFC4  F011         	goto	l4058
  4632   002386                     u3670:
  4633   002386                     
  4634                           ; BSR set to: 0
  4635   002386  816B               	bsf	___fldiv@bexp& (0+255),0,b
  4636   002388                     l4058:
  4637                           
  4638                           ; BSR set to: 0
  4639   002388  516B               	movf	___fldiv@bexp& (0+255),w,b
  4640   00238A  B4D8               	btfsc	status,2,c
  4641   00238C  EFCA  F011         	goto	u3681
  4642   002390  EFCC  F011         	goto	u3680
  4643   002394                     u3681:
  4644   002394  EFE1  F011         	goto	l4068
  4645   002398                     u3680:
  4646   002398                     
  4647                           ; BSR set to: 0
  4648   002398  296B               	incf	___fldiv@bexp& (0+255),w,b
  4649   00239A  A4D8               	btfss	status,2,c
  4650   00239C  EFD2  F011         	goto	u3691
  4651   0023A0  EFD4  F011         	goto	u3690
  4652   0023A4                     u3691:
  4653   0023A4  EFDC  F011         	goto	l4064
  4654   0023A8                     u3690:
  4655   0023A8                     
  4656                           ; BSR set to: 0
  4657   0023A8  0E00               	movlw	0
  4658   0023AA  6E53               	movwf	___fldiv@b^0,c
  4659   0023AC  0E00               	movlw	0
  4660   0023AE  6E54               	movwf	(___fldiv@b+1)^0,c
  4661   0023B0  0E00               	movlw	0
  4662   0023B2  6E55               	movwf	(___fldiv@b+2)^0,c
  4663   0023B4  0E00               	movlw	0
  4664   0023B6  6E56               	movwf	(___fldiv@b+3)^0,c
  4665   0023B8                     l4064:
  4666                           
  4667                           ; BSR set to: 0
  4668   0023B8  8E55               	bsf	(___fldiv@b+2)^0,7,c
  4669   0023BA                     
  4670                           ; BSR set to: 0
  4671   0023BA  0E00               	movlw	0
  4672   0023BC  6E56               	movwf	(___fldiv@b+3)^0,c
  4673   0023BE  EFE9  F011         	goto	l4070
  4674   0023C2                     l4068:
  4675                           
  4676                           ; BSR set to: 0
  4677   0023C2  0E00               	movlw	0
  4678   0023C4  6E53               	movwf	___fldiv@b^0,c
  4679   0023C6  0E00               	movlw	0
  4680   0023C8  6E54               	movwf	(___fldiv@b+1)^0,c
  4681   0023CA  0E00               	movlw	0
  4682   0023CC  6E55               	movwf	(___fldiv@b+2)^0,c
  4683   0023CE  0E00               	movlw	0
  4684   0023D0  6E56               	movwf	(___fldiv@b+3)^0,c
  4685   0023D2                     l4070:
  4686                           
  4687                           ; BSR set to: 0
  4688   0023D2  505A               	movf	(___fldiv@a+3)^0,w,c
  4689   0023D4  0B80               	andlw	128
  4690   0023D6  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  4691   0023D8                     
  4692                           ; BSR set to: 0
  4693   0023D8  505A               	movf	(___fldiv@a+3)^0,w,c
  4694   0023DA  245A               	addwf	(___fldiv@a+3)^0,w,c
  4695   0023DC  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4696   0023DE                     
  4697                           ; BSR set to: 0
  4698   0023DE  AE59               	btfss	(___fldiv@a+2)^0,7,c
  4699   0023E0  EFF4  F011         	goto	u3701
  4700   0023E4  EFF6  F011         	goto	u3700
  4701   0023E8                     u3701:
  4702   0023E8  EFF7  F011         	goto	l4078
  4703   0023EC                     u3700:
  4704   0023EC                     
  4705                           ; BSR set to: 0
  4706   0023EC  816C               	bsf	___fldiv@aexp& (0+255),0,b
  4707   0023EE                     l4078:
  4708                           
  4709                           ; BSR set to: 0
  4710   0023EE  516C               	movf	___fldiv@aexp& (0+255),w,b
  4711   0023F0  B4D8               	btfsc	status,2,c
  4712   0023F2  EFFD  F011         	goto	u3711
  4713   0023F6  EFFF  F011         	goto	u3710
  4714   0023FA                     u3711:
  4715   0023FA  EF14  F012         	goto	l4088
  4716   0023FE                     u3710:
  4717   0023FE                     
  4718                           ; BSR set to: 0
  4719   0023FE  296C               	incf	___fldiv@aexp& (0+255),w,b
  4720   002400  A4D8               	btfss	status,2,c
  4721   002402  EF05  F012         	goto	u3721
  4722   002406  EF07  F012         	goto	u3720
  4723   00240A                     u3721:
  4724   00240A  EF0F  F012         	goto	l4084
  4725   00240E                     u3720:
  4726   00240E                     
  4727                           ; BSR set to: 0
  4728   00240E  0E00               	movlw	0
  4729   002410  6E57               	movwf	___fldiv@a^0,c
  4730   002412  0E00               	movlw	0
  4731   002414  6E58               	movwf	(___fldiv@a+1)^0,c
  4732   002416  0E00               	movlw	0
  4733   002418  6E59               	movwf	(___fldiv@a+2)^0,c
  4734   00241A  0E00               	movlw	0
  4735   00241C  6E5A               	movwf	(___fldiv@a+3)^0,c
  4736   00241E                     l4084:
  4737                           
  4738                           ; BSR set to: 0
  4739   00241E  8E59               	bsf	(___fldiv@a+2)^0,7,c
  4740   002420                     
  4741                           ; BSR set to: 0
  4742   002420  0E00               	movlw	0
  4743   002422  6E5A               	movwf	(___fldiv@a+3)^0,c
  4744   002424  EF1C  F012         	goto	l4090
  4745   002428                     l4088:
  4746                           
  4747                           ; BSR set to: 0
  4748   002428  0E00               	movlw	0
  4749   00242A  6E57               	movwf	___fldiv@a^0,c
  4750   00242C  0E00               	movlw	0
  4751   00242E  6E58               	movwf	(___fldiv@a+1)^0,c
  4752   002430  0E00               	movlw	0
  4753   002432  6E59               	movwf	(___fldiv@a+2)^0,c
  4754   002434  0E00               	movlw	0
  4755   002436  6E5A               	movwf	(___fldiv@a+3)^0,c
  4756   002438                     l4090:
  4757                           
  4758                           ; BSR set to: 0
  4759   002438  5057               	movf	___fldiv@a^0,w,c
  4760   00243A  1058               	iorwf	(___fldiv@a+1)^0,w,c
  4761   00243C  1059               	iorwf	(___fldiv@a+2)^0,w,c
  4762   00243E  105A               	iorwf	(___fldiv@a+3)^0,w,c
  4763   002440  A4D8               	btfss	status,2,c
  4764   002442  EF25  F012         	goto	u3731
  4765   002446  EF27  F012         	goto	u3730
  4766   00244A                     u3731:
  4767   00244A  EF3F  F012         	goto	l4102
  4768   00244E                     u3730:
  4769   00244E                     
  4770                           ; BSR set to: 0
  4771   00244E  0E00               	movlw	0
  4772   002450  6E53               	movwf	___fldiv@b^0,c
  4773   002452  0E00               	movlw	0
  4774   002454  6E54               	movwf	(___fldiv@b+1)^0,c
  4775   002456  0E00               	movlw	0
  4776   002458  6E55               	movwf	(___fldiv@b+2)^0,c
  4777   00245A  0E00               	movlw	0
  4778   00245C  6E56               	movwf	(___fldiv@b+3)^0,c
  4779   00245E                     
  4780                           ; BSR set to: 0
  4781   00245E  0E80               	movlw	128
  4782   002460  1255               	iorwf	(___fldiv@b+2)^0,f,c
  4783   002462  0E7F               	movlw	127
  4784   002464  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4785   002466                     l4096:
  4786                           
  4787                           ; BSR set to: 0
  4788   002466  5164               	movf	___fldiv@sign& (0+255),w,b
  4789   002468  1256               	iorwf	(___fldiv@b+3)^0,f,c
  4790   00246A                     
  4791                           ; BSR set to: 0
  4792   00246A  C053  F053         	movff	___fldiv@b,?___fldiv
  4793   00246E  C054  F054         	movff	___fldiv@b+1,?___fldiv+1
  4794   002472  C055  F055         	movff	___fldiv@b+2,?___fldiv+2
  4795   002476  C056  F056         	movff	___fldiv@b+3,?___fldiv+3
  4796   00247A  EF82  F013         	goto	l1251
  4797   00247E                     l4102:
  4798                           
  4799                           ; BSR set to: 0
  4800   00247E  516B               	movf	___fldiv@bexp& (0+255),w,b
  4801   002480  A4D8               	btfss	status,2,c
  4802   002482  EF45  F012         	goto	u3741
  4803   002486  EF47  F012         	goto	u3740
  4804   00248A                     u3741:
  4805   00248A  EF51  F012         	goto	l4110
  4806   00248E                     u3740:
  4807   00248E                     
  4808                           ; BSR set to: 0
  4809   00248E  0E00               	movlw	0
  4810   002490  6E53               	movwf	?___fldiv^0,c
  4811   002492  0E00               	movlw	0
  4812   002494  6E54               	movwf	(?___fldiv+1)^0,c
  4813   002496  0E00               	movlw	0
  4814   002498  6E55               	movwf	(?___fldiv+2)^0,c
  4815   00249A  0E00               	movlw	0
  4816   00249C  6E56               	movwf	(?___fldiv+3)^0,c
  4817   00249E  EF82  F013         	goto	l1251
  4818   0024A2                     l4110:
  4819                           
  4820                           ; BSR set to: 0
  4821   0024A2  516C               	movf	___fldiv@aexp& (0+255),w,b
  4822   0024A4  C06B  F05B         	movff	___fldiv@bexp,??___fldiv
  4823   0024A8  6A5C               	clrf	(??___fldiv+1)^0,c
  4824   0024AA  5E5B               	subwf	??___fldiv^0,f,c
  4825   0024AC  0E00               	movlw	0
  4826   0024AE  5A5C               	subwfb	(??___fldiv+1)^0,f,c
  4827   0024B0  0E7F               	movlw	127
  4828   0024B2  245B               	addwf	??___fldiv^0,w,c
  4829   0024B4  6F65               	movwf	___fldiv@new_exp& (0+255),b
  4830   0024B6  0E00               	movlw	0
  4831   0024B8  205C               	addwfc	(??___fldiv+1)^0,w,c
  4832   0024BA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4833   0024BC                     
  4834                           ; BSR set to: 0
  4835   0024BC  C053  F060         	movff	___fldiv@b,___fldiv@rem
  4836   0024C0  C054  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  4837   0024C4  C055  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  4838   0024C8  C056  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  4839   0024CC                     
  4840                           ; BSR set to: 0
  4841   0024CC  0E00               	movlw	0
  4842   0024CE  6E53               	movwf	___fldiv@b^0,c
  4843   0024D0  0E00               	movlw	0
  4844   0024D2  6E54               	movwf	(___fldiv@b+1)^0,c
  4845   0024D4  0E00               	movlw	0
  4846   0024D6  6E55               	movwf	(___fldiv@b+2)^0,c
  4847   0024D8  0E00               	movlw	0
  4848   0024DA  6E56               	movwf	(___fldiv@b+3)^0,c
  4849   0024DC                     
  4850                           ; BSR set to: 0
  4851   0024DC  0E00               	movlw	0
  4852   0024DE  6F67               	movwf	___fldiv@grs& (0+255),b
  4853   0024E0  0E00               	movlw	0
  4854   0024E2  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  4855   0024E4  0E00               	movlw	0
  4856   0024E6  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  4857   0024E8  0E00               	movlw	0
  4858   0024EA  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  4859   0024EC                     
  4860                           ; BSR set to: 0
  4861   0024EC  0E00               	movlw	0
  4862   0024EE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  4863   0024F0  EFB2  F012         	goto	l1253
  4864   0024F4                     l4120:
  4865                           
  4866                           ; BSR set to: 0
  4867   0024F4  516C               	movf	___fldiv@aexp& (0+255),w,b
  4868   0024F6  B4D8               	btfsc	status,2,c
  4869   0024F8  EF80  F012         	goto	u3751
  4870   0024FC  EF82  F012         	goto	u3750
  4871   002500                     u3751:
  4872   002500  EF99  F012         	goto	l4128
  4873   002504                     u3750:
  4874   002504                     
  4875                           ; BSR set to: 0
  4876   002504  90D8               	bcf	status,0,c
  4877   002506  3760               	rlcf	___fldiv@rem& (0+255),f,b
  4878   002508  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  4879   00250A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  4880   00250C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  4881   00250E  90D8               	bcf	status,0,c
  4882   002510  3653               	rlcf	___fldiv@b^0,f,c
  4883   002512  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4884   002514  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4885   002516  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4886   002518                     
  4887                           ; BSR set to: 0
  4888   002518  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4889   00251A  EF91  F012         	goto	u3761
  4890   00251E  EF93  F012         	goto	u3760
  4891   002522                     u3761:
  4892   002522  EF94  F012         	goto	l1256
  4893   002526                     u3760:
  4894   002526                     
  4895                           ; BSR set to: 0
  4896   002526  8053               	bsf	___fldiv@b^0,0,c
  4897   002528                     l1256:
  4898                           
  4899                           ; BSR set to: 0
  4900   002528  90D8               	bcf	status,0,c
  4901   00252A  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4902   00252C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4903   00252E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4904   002530  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4905   002532                     l4128:
  4906                           
  4907                           ; BSR set to: 0
  4908   002532  5057               	movf	___fldiv@a^0,w,c
  4909   002534  5D60               	subwf	___fldiv@rem& (0+255),w,b
  4910   002536  5058               	movf	(___fldiv@a+1)^0,w,c
  4911   002538  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  4912   00253A  5059               	movf	(___fldiv@a+2)^0,w,c
  4913   00253C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  4914   00253E  505A               	movf	(___fldiv@a+3)^0,w,c
  4915   002540  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  4916   002542  A0D8               	btfss	status,0,c
  4917   002544  EFA6  F012         	goto	u3771
  4918   002548  EFA8  F012         	goto	u3770
  4919   00254C                     u3771:
  4920   00254C  EFB1  F012         	goto	l4134
  4921   002550                     u3770:
  4922   002550                     
  4923                           ; BSR set to: 0
  4924   002550  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  4925   002552                     
  4926                           ; BSR set to: 0
  4927   002552  5057               	movf	___fldiv@a^0,w,c
  4928   002554  5F60               	subwf	___fldiv@rem& (0+255),f,b
  4929   002556  5058               	movf	(___fldiv@a+1)^0,w,c
  4930   002558  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  4931   00255A  5059               	movf	(___fldiv@a+2)^0,w,c
  4932   00255C  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  4933   00255E  505A               	movf	(___fldiv@a+3)^0,w,c
  4934   002560  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  4935   002562                     l4134:
  4936                           
  4937                           ; BSR set to: 0
  4938   002562  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  4939   002564                     l1253:
  4940                           
  4941                           ; BSR set to: 0
  4942   002564  0E19               	movlw	25
  4943   002566  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  4944   002568  EFB8  F012         	goto	u3781
  4945   00256C  EFBA  F012         	goto	u3780
  4946   002570                     u3781:
  4947   002570  EF7A  F012         	goto	l4120
  4948   002574                     u3780:
  4949   002574                     
  4950                           ; BSR set to: 0
  4951   002574  5160               	movf	___fldiv@rem& (0+255),w,b
  4952   002576  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4953   002578  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4954   00257A  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4955   00257C  B4D8               	btfsc	status,2,c
  4956   00257E  EFC3  F012         	goto	u3791
  4957   002582  EFC5  F012         	goto	u3790
  4958   002586                     u3791:
  4959   002586  EFDD  F012         	goto	l4146
  4960   00258A                     u3790:
  4961   00258A                     
  4962                           ; BSR set to: 0
  4963   00258A  8167               	bsf	___fldiv@grs& (0+255),0,b
  4964   00258C  EFDD  F012         	goto	l4146
  4965   002590                     l4140:
  4966                           
  4967                           ; BSR set to: 0
  4968   002590  90D8               	bcf	status,0,c
  4969   002592  3653               	rlcf	___fldiv@b^0,f,c
  4970   002594  3654               	rlcf	(___fldiv@b+1)^0,f,c
  4971   002596  3655               	rlcf	(___fldiv@b+2)^0,f,c
  4972   002598  3656               	rlcf	(___fldiv@b+3)^0,f,c
  4973   00259A                     
  4974                           ; BSR set to: 0
  4975   00259A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4976   00259C  EFD2  F012         	goto	u3801
  4977   0025A0  EFD4  F012         	goto	u3800
  4978   0025A4                     u3801:
  4979   0025A4  EFD5  F012         	goto	l1262
  4980   0025A8                     u3800:
  4981   0025A8                     
  4982                           ; BSR set to: 0
  4983   0025A8  8053               	bsf	___fldiv@b^0,0,c
  4984   0025AA                     l1262:
  4985                           
  4986                           ; BSR set to: 0
  4987   0025AA  90D8               	bcf	status,0,c
  4988   0025AC  3767               	rlcf	___fldiv@grs& (0+255),f,b
  4989   0025AE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4990   0025B0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4991   0025B2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4992   0025B4  0765               	decf	___fldiv@new_exp& (0+255),f,b
  4993   0025B6  A0D8               	btfss	status,0,c
  4994   0025B8  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4995   0025BA                     l4146:
  4996                           
  4997                           ; BSR set to: 0
  4998   0025BA  AE55               	btfss	(___fldiv@b+2)^0,7,c
  4999   0025BC  EFE2  F012         	goto	u3811
  5000   0025C0  EFE4  F012         	goto	u3810
  5001   0025C4                     u3811:
  5002   0025C4  EFC8  F012         	goto	l4140
  5003   0025C8                     u3810:
  5004   0025C8                     
  5005                           ; BSR set to: 0
  5006   0025C8  0E00               	movlw	0
  5007   0025CA  6F6C               	movwf	___fldiv@aexp& (0+255),b
  5008   0025CC                     
  5009                           ; BSR set to: 0
  5010   0025CC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5011   0025CE  EFEB  F012         	goto	u3821
  5012   0025D2  EFED  F012         	goto	u3820
  5013   0025D6                     u3821:
  5014   0025D6  EF11  F013         	goto	l1264
  5015   0025DA                     u3820:
  5016   0025DA                     
  5017                           ; BSR set to: 0
  5018   0025DA  0EFF               	movlw	255
  5019   0025DC  1567               	andwf	___fldiv@grs& (0+255),w,b
  5020   0025DE  6E5B               	movwf	??___fldiv^0,c
  5021   0025E0  0EFF               	movlw	255
  5022   0025E2  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5023   0025E4  6E5C               	movwf	(??___fldiv+1)^0,c
  5024   0025E6  0EFF               	movlw	255
  5025   0025E8  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5026   0025EA  6E5D               	movwf	(??___fldiv+2)^0,c
  5027   0025EC  0E7F               	movlw	127
  5028   0025EE  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5029   0025F0  6E5E               	movwf	(??___fldiv+3)^0,c
  5030   0025F2  505B               	movf	??___fldiv^0,w,c
  5031   0025F4  105C               	iorwf	(??___fldiv+1)^0,w,c
  5032   0025F6  105D               	iorwf	(??___fldiv+2)^0,w,c
  5033   0025F8  105E               	iorwf	(??___fldiv+3)^0,w,c
  5034   0025FA  B4D8               	btfsc	status,2,c
  5035   0025FC  EF02  F013         	goto	u3831
  5036   002600  EF04  F013         	goto	u3830
  5037   002604                     u3831:
  5038   002604  EF08  F013         	goto	l1265
  5039   002608                     u3830:
  5040   002608                     l4154:
  5041                           
  5042                           ; BSR set to: 0
  5043   002608  0E01               	movlw	1
  5044   00260A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  5045   00260C  EF11  F013         	goto	l1264
  5046   002610                     l1265:
  5047                           
  5048                           ; BSR set to: 0
  5049   002610  A053               	btfss	___fldiv@b^0,0,c
  5050   002612  EF0D  F013         	goto	u3841
  5051   002616  EF0F  F013         	goto	u3840
  5052   00261A                     u3841:
  5053   00261A  EF11  F013         	goto	l1264
  5054   00261E                     u3840:
  5055   00261E  EF04  F013         	goto	l4154
  5056   002622                     l1264:
  5057                           
  5058                           ; BSR set to: 0
  5059   002622  516C               	movf	___fldiv@aexp& (0+255),w,b
  5060   002624  B4D8               	btfsc	status,2,c
  5061   002626  EF17  F013         	goto	u3851
  5062   00262A  EF19  F013         	goto	u3850
  5063   00262E                     u3851:
  5064   00262E  EF3D  F013         	goto	l4166
  5065   002632                     u3850:
  5066   002632                     
  5067                           ; BSR set to: 0
  5068   002632  0E01               	movlw	1
  5069   002634  2653               	addwf	___fldiv@b^0,f,c
  5070   002636  0E00               	movlw	0
  5071   002638  2254               	addwfc	(___fldiv@b+1)^0,f,c
  5072   00263A  2255               	addwfc	(___fldiv@b+2)^0,f,c
  5073   00263C  2256               	addwfc	(___fldiv@b+3)^0,f,c
  5074   00263E                     
  5075                           ; BSR set to: 0
  5076   00263E  A056               	btfss	(___fldiv@b+3)^0,0,c
  5077   002640  EF24  F013         	goto	u3861
  5078   002644  EF26  F013         	goto	u3860
  5079   002648                     u3861:
  5080   002648  EF3D  F013         	goto	l4166
  5081   00264C                     u3860:
  5082   00264C                     
  5083                           ; BSR set to: 0
  5084   00264C  C053  F05B         	movff	___fldiv@b,??___fldiv
  5085   002650  C054  F05C         	movff	___fldiv@b+1,??___fldiv+1
  5086   002654  C055  F05D         	movff	___fldiv@b+2,??___fldiv+2
  5087   002658  C056  F05E         	movff	___fldiv@b+3,??___fldiv+3
  5088   00265C  345E               	rlcf	(??___fldiv+3)^0,w,c
  5089   00265E  325E               	rrcf	(??___fldiv+3)^0,f,c
  5090   002660  325D               	rrcf	(??___fldiv+2)^0,f,c
  5091   002662  325C               	rrcf	(??___fldiv+1)^0,f,c
  5092   002664  325B               	rrcf	??___fldiv^0,f,c
  5093   002666  C05B  F053         	movff	??___fldiv,___fldiv@b
  5094   00266A  C05C  F054         	movff	??___fldiv+1,___fldiv@b+1
  5095   00266E  C05D  F055         	movff	??___fldiv+2,___fldiv@b+2
  5096   002672  C05E  F056         	movff	??___fldiv+3,___fldiv@b+3
  5097   002676                     
  5098                           ; BSR set to: 0
  5099   002676  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  5100   002678  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5101   00267A                     l4166:
  5102                           
  5103                           ; BSR set to: 0
  5104   00267A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5105   00267C  EF48  F013         	goto	u3871
  5106   002680  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5107   002682  E108               	bnz	u3870
  5108   002684  2965               	incf	___fldiv@new_exp& (0+255),w,b
  5109   002686  A0D8               	btfss	status,0,c
  5110   002688  EF48  F013         	goto	u3871
  5111   00268C  EF4A  F013         	goto	u3870
  5112   002690                     u3871:
  5113   002690  EF55  F013         	goto	l4170
  5114   002694                     u3870:
  5115   002694                     
  5116                           ; BSR set to: 0
  5117   002694  0E00               	movlw	0
  5118   002696  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5119   002698  6965               	setf	___fldiv@new_exp& (0+255),b
  5120   00269A  0E00               	movlw	0
  5121   00269C  6E53               	movwf	___fldiv@b^0,c
  5122   00269E  0E00               	movlw	0
  5123   0026A0  6E54               	movwf	(___fldiv@b+1)^0,c
  5124   0026A2  0E00               	movlw	0
  5125   0026A4  6E55               	movwf	(___fldiv@b+2)^0,c
  5126   0026A6  0E00               	movlw	0
  5127   0026A8  6E56               	movwf	(___fldiv@b+3)^0,c
  5128   0026AA                     l4170:
  5129                           
  5130                           ; BSR set to: 0
  5131   0026AA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5132   0026AC  EF62  F013         	goto	u3880
  5133   0026B0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5134   0026B2  E106               	bnz	u3881
  5135   0026B4  0565               	decf	___fldiv@new_exp& (0+255),w,b
  5136   0026B6  B0D8               	btfsc	status,0,c
  5137   0026B8  EF60  F013         	goto	u3881
  5138   0026BC  EF62  F013         	goto	u3880
  5139   0026C0                     u3881:
  5140   0026C0  EF70  F013         	goto	l4174
  5141   0026C4                     u3880:
  5142   0026C4                     
  5143                           ; BSR set to: 0
  5144   0026C4  0E00               	movlw	0
  5145   0026C6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5146   0026C8  0E00               	movlw	0
  5147   0026CA  6F65               	movwf	___fldiv@new_exp& (0+255),b
  5148   0026CC  0E00               	movlw	0
  5149   0026CE  6E53               	movwf	___fldiv@b^0,c
  5150   0026D0  0E00               	movlw	0
  5151   0026D2  6E54               	movwf	(___fldiv@b+1)^0,c
  5152   0026D4  0E00               	movlw	0
  5153   0026D6  6E55               	movwf	(___fldiv@b+2)^0,c
  5154   0026D8  0E00               	movlw	0
  5155   0026DA  6E56               	movwf	(___fldiv@b+3)^0,c
  5156   0026DC  0E00               	movlw	0
  5157   0026DE  6F64               	movwf	___fldiv@sign& (0+255),b
  5158   0026E0                     l4174:
  5159                           
  5160                           ; BSR set to: 0
  5161   0026E0  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  5162   0026E4                     
  5163                           ; BSR set to: 0
  5164   0026E4  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  5165   0026E6  EF77  F013         	goto	u3891
  5166   0026EA  EF79  F013         	goto	u3890
  5167   0026EE                     u3891:
  5168   0026EE  EF7C  F013         	goto	l4180
  5169   0026F2                     u3890:
  5170   0026F2                     
  5171                           ; BSR set to: 0
  5172   0026F2  8E55               	bsf	(___fldiv@b+2)^0,7,c
  5173   0026F4  EF7D  F013         	goto	l4182
  5174   0026F8                     l4180:
  5175                           
  5176                           ; BSR set to: 0
  5177   0026F8  9E55               	bcf	(___fldiv@b+2)^0,7,c
  5178   0026FA                     l4182:
  5179                           
  5180                           ; BSR set to: 0
  5181   0026FA  90D8               	bcf	status,0,c
  5182   0026FC  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  5183   0026FE  6E56               	movwf	(___fldiv@b+3)^0,c
  5184   002700  EF33  F012         	goto	l4096
  5185   002704                     l1251:
  5186                           
  5187                           ; BSR set to: 0
  5188   002704  0012               	return		;funcret
  5189   002706                     __end_of___fldiv:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _LED_init *****************
  5193 ;; Defined at:
  5194 ;;		line 4 in file "LED.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		None
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 1
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text24
  5223   004958                     __ptext24:
  5224                           	callstack 0
  5225   004958                     _LED_init:
  5226                           	callstack 29
  5227   004958                     
  5228                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5229   004958  9884               	bcf	132,4,c	;volatile
  5230                           
  5231                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5232   00495A  9088               	bcf	136,0,c	;volatile
  5233                           
  5234                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5235   00495C  9086               	bcf	134,0,c	;volatile
  5236                           
  5237                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5238   00495E  987C               	bcf	124,4,c	;volatile
  5239                           
  5240                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5241   004960  9080               	bcf	128,0,c	;volatile
  5242                           
  5243                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5244   004962  907E               	bcf	126,0,c	;volatile
  5245   004964  0012               	return		;funcret
  5246   004966                     __end_of_LED_init:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _Colour2Action *****************
  5250 ;; Defined at:
  5251 ;;		line 106 in file "colorfunctions.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  cf              2    6[BANK0 ] PTR struct RGBC_rel
  5254 ;;		 -> colorf(22), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;Total ram usage:        4 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 8
  5273 ;; This function calls:
  5274 ;;		_Blue_T180
  5275 ;;		_Green_L90
  5276 ;;		_LightBlue_L135
  5277 ;;		_Orange_R135
  5278 ;;		_Pink_rev1_L90
  5279 ;;		_Red_R90
  5280 ;;		_White
  5281 ;;		_Yellow_rev1_R90
  5282 ;; This function is called by:
  5283 ;;		_main
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text25
  5288   002C6E                     __ptext25:
  5289                           	callstack 0
  5290   002C6E                     _Colour2Action:
  5291                           	callstack 22
  5292   002C6E                     
  5293                           ;colorfunctions.c: 106: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 107: {
      +                          ;colorfunctions.c: 108:     if (cf->colourindex == 0)
  5294   002C6E  0100               	movlb	0	; () banked
  5295   002C70  EE20 F014          	lfsr	2,20
  5296   002C74  5166               	movf	Colour2Action@cf& (0+255),w,b
  5297   002C76  26D9               	addwf	fsr2l,f,c
  5298   002C78  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5299   002C7A  22DA               	addwfc	fsr2h,f,c
  5300   002C7C  50DE               	movf	postinc2,w,c
  5301   002C7E  10DE               	iorwf	postinc2,w,c
  5302   002C80  A4D8               	btfss	status,2,c
  5303   002C82  EF45  F016         	goto	u4061
  5304   002C86  EF47  F016         	goto	u4060
  5305   002C8A                     u4061:
  5306   002C8A  EF53  F016         	goto	l4300
  5307   002C8E                     u4060:
  5308   002C8E                     
  5309                           ; BSR set to: 0
  5310                           ;colorfunctions.c: 109:     {;colorfunctions.c: 110:         Red_R90(&motorL,&motorR);
  5311   002C8E  0EF6               	movlw	low _motorL
  5312   002C90  6E21               	movwf	Red_R90@mL^0,c
  5313   002C92  0E00               	movlw	high _motorL
  5314   002C94  6E22               	movwf	(Red_R90@mL+1)^0,c
  5315   002C96  0EED               	movlw	low _motorR
  5316   002C98  6E23               	movwf	Red_R90@mR^0,c
  5317   002C9A  0E00               	movlw	high _motorR
  5318   002C9C  6E24               	movwf	(Red_R90@mR+1)^0,c
  5319   002C9E  ECF1  F020         	call	_Red_R90	;wreg free
  5320                           
  5321                           ;colorfunctions.c: 111:     }
  5322   002CA2  EF10  F017         	goto	l156
  5323   002CA6                     l4300:
  5324                           
  5325                           ; BSR set to: 0
  5326   002CA6  EE20 F014          	lfsr	2,20
  5327   002CAA  5166               	movf	Colour2Action@cf& (0+255),w,b
  5328   002CAC  26D9               	addwf	fsr2l,f,c
  5329   002CAE  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5330   002CB0  22DA               	addwfc	fsr2h,f,c
  5331   002CB2  04DE               	decf	postinc2,w,c
  5332   002CB4  10DE               	iorwf	postinc2,w,c
  5333   002CB6  A4D8               	btfss	status,2,c
  5334   002CB8  EF60  F016         	goto	u4071
  5335   002CBC  EF62  F016         	goto	u4070
  5336   002CC0                     u4071:
  5337   002CC0  EF6E  F016         	goto	l4304
  5338   002CC4                     u4070:
  5339   002CC4                     
  5340                           ; BSR set to: 0
  5341                           ;colorfunctions.c: 113:     {;colorfunctions.c: 114:         Green_L90(&motorL,&motorR);
  5342   002CC4  0EF6               	movlw	low _motorL
  5343   002CC6  6E21               	movwf	Green_L90@mL^0,c
  5344   002CC8  0E00               	movlw	high _motorL
  5345   002CCA  6E22               	movwf	(Green_L90@mL+1)^0,c
  5346   002CCC  0EED               	movlw	low _motorR
  5347   002CCE  6E23               	movwf	Green_L90@mR^0,c
  5348   002CD0  0E00               	movlw	high _motorR
  5349   002CD2  6E24               	movwf	(Green_L90@mR+1)^0,c
  5350   002CD4  EC2F  F021         	call	_Green_L90	;wreg free
  5351                           
  5352                           ;colorfunctions.c: 115:     }
  5353   002CD8  EF10  F017         	goto	l156
  5354   002CDC                     l4304:
  5355                           
  5356                           ; BSR set to: 0
  5357   002CDC  EE20 F014          	lfsr	2,20
  5358   002CE0  5166               	movf	Colour2Action@cf& (0+255),w,b
  5359   002CE2  26D9               	addwf	fsr2l,f,c
  5360   002CE4  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5361   002CE6  22DA               	addwfc	fsr2h,f,c
  5362   002CE8  0E02               	movlw	2
  5363   002CEA  18DE               	xorwf	postinc2,w,c
  5364   002CEC  10DE               	iorwf	postinc2,w,c
  5365   002CEE  A4D8               	btfss	status,2,c
  5366   002CF0  EF7C  F016         	goto	u4081
  5367   002CF4  EF7E  F016         	goto	u4080
  5368   002CF8                     u4081:
  5369   002CF8  EF8A  F016         	goto	l4308
  5370   002CFC                     u4080:
  5371   002CFC                     
  5372                           ; BSR set to: 0
  5373                           ;colorfunctions.c: 117:     {;colorfunctions.c: 118:         Blue_T180(&motorL,&motorR);
  5374   002CFC  0EF6               	movlw	low _motorL
  5375   002CFE  6E24               	movwf	Blue_T180@mL^0,c
  5376   002D00  0E00               	movlw	high _motorL
  5377   002D02  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5378   002D04  0EED               	movlw	low _motorR
  5379   002D06  6E26               	movwf	Blue_T180@mR^0,c
  5380   002D08  0E00               	movlw	high _motorR
  5381   002D0A  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5382   002D0C  EC01  F022         	call	_Blue_T180	;wreg free
  5383                           
  5384                           ;colorfunctions.c: 119:     }
  5385   002D10  EF10  F017         	goto	l156
  5386   002D14                     l4308:
  5387                           
  5388                           ; BSR set to: 0
  5389   002D14  EE20 F014          	lfsr	2,20
  5390   002D18  5166               	movf	Colour2Action@cf& (0+255),w,b
  5391   002D1A  26D9               	addwf	fsr2l,f,c
  5392   002D1C  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5393   002D1E  22DA               	addwfc	fsr2h,f,c
  5394   002D20  0E03               	movlw	3
  5395   002D22  18DE               	xorwf	postinc2,w,c
  5396   002D24  10DE               	iorwf	postinc2,w,c
  5397   002D26  A4D8               	btfss	status,2,c
  5398   002D28  EF98  F016         	goto	u4091
  5399   002D2C  EF9A  F016         	goto	u4090
  5400   002D30                     u4091:
  5401   002D30  EFA6  F016         	goto	l4312
  5402   002D34                     u4090:
  5403   002D34                     
  5404                           ; BSR set to: 0
  5405                           ;colorfunctions.c: 121:     {;colorfunctions.c: 122:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5406   002D34  0EF6               	movlw	low _motorL
  5407   002D36  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5408   002D38  0E00               	movlw	high _motorL
  5409   002D3A  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5410   002D3C  0EED               	movlw	low _motorR
  5411   002D3E  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5412   002D40  0E00               	movlw	high _motorR
  5413   002D42  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5414   002D44  EC74  F01B         	call	_Yellow_rev1_R90	;wreg free
  5415                           
  5416                           ;colorfunctions.c: 123:     }
  5417   002D48  EF10  F017         	goto	l156
  5418   002D4C                     l4312:
  5419                           
  5420                           ; BSR set to: 0
  5421   002D4C  EE20 F014          	lfsr	2,20
  5422   002D50  5166               	movf	Colour2Action@cf& (0+255),w,b
  5423   002D52  26D9               	addwf	fsr2l,f,c
  5424   002D54  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5425   002D56  22DA               	addwfc	fsr2h,f,c
  5426   002D58  0E04               	movlw	4
  5427   002D5A  18DE               	xorwf	postinc2,w,c
  5428   002D5C  10DE               	iorwf	postinc2,w,c
  5429   002D5E  A4D8               	btfss	status,2,c
  5430   002D60  EFB4  F016         	goto	u4101
  5431   002D64  EFB6  F016         	goto	u4100
  5432   002D68                     u4101:
  5433   002D68  EFC2  F016         	goto	l4316
  5434   002D6C                     u4100:
  5435   002D6C                     
  5436                           ; BSR set to: 0
  5437                           ;colorfunctions.c: 125:     {;colorfunctions.c: 126:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5438   002D6C  0EF6               	movlw	low _motorL
  5439   002D6E  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5440   002D70  0E00               	movlw	high _motorL
  5441   002D72  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5442   002D74  0EED               	movlw	low _motorR
  5443   002D76  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5444   002D78  0E00               	movlw	high _motorR
  5445   002D7A  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5446   002D7C  ECE8  F01B         	call	_Pink_rev1_L90	;wreg free
  5447                           
  5448                           ;colorfunctions.c: 127:     }
  5449   002D80  EF10  F017         	goto	l156
  5450   002D84                     l4316:
  5451                           
  5452                           ; BSR set to: 0
  5453   002D84  EE20 F014          	lfsr	2,20
  5454   002D88  5166               	movf	Colour2Action@cf& (0+255),w,b
  5455   002D8A  26D9               	addwf	fsr2l,f,c
  5456   002D8C  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5457   002D8E  22DA               	addwfc	fsr2h,f,c
  5458   002D90  0E05               	movlw	5
  5459   002D92  18DE               	xorwf	postinc2,w,c
  5460   002D94  10DE               	iorwf	postinc2,w,c
  5461   002D96  A4D8               	btfss	status,2,c
  5462   002D98  EFD0  F016         	goto	u4111
  5463   002D9C  EFD2  F016         	goto	u4110
  5464   002DA0                     u4111:
  5465   002DA0  EFDE  F016         	goto	l4320
  5466   002DA4                     u4110:
  5467   002DA4                     
  5468                           ; BSR set to: 0
  5469                           ;colorfunctions.c: 129:     {;colorfunctions.c: 130:         Orange_R135(&motorL,&motorR
      +                          );
  5470   002DA4  0EF6               	movlw	low _motorL
  5471   002DA6  6E21               	movwf	Orange_R135@mL^0,c
  5472   002DA8  0E00               	movlw	high _motorL
  5473   002DAA  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5474   002DAC  0EED               	movlw	low _motorR
  5475   002DAE  6E23               	movwf	Orange_R135@mR^0,c
  5476   002DB0  0E00               	movlw	high _motorR
  5477   002DB2  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5478   002DB4  ECD8  F01D         	call	_Orange_R135	;wreg free
  5479                           
  5480                           ;colorfunctions.c: 131:     }
  5481   002DB8  EF10  F017         	goto	l156
  5482   002DBC                     l4320:
  5483                           
  5484                           ; BSR set to: 0
  5485   002DBC  EE20 F014          	lfsr	2,20
  5486   002DC0  5166               	movf	Colour2Action@cf& (0+255),w,b
  5487   002DC2  26D9               	addwf	fsr2l,f,c
  5488   002DC4  5167               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5489   002DC6  22DA               	addwfc	fsr2h,f,c
  5490   002DC8  0E06               	movlw	6
  5491   002DCA  18DE               	xorwf	postinc2,w,c
  5492   002DCC  10DE               	iorwf	postinc2,w,c
  5493   002DCE  A4D8               	btfss	status,2,c
  5494   002DD0  EFEC  F016         	goto	u4121
  5495   002DD4  EFEE  F016         	goto	u4120
  5496   002DD8                     u4121:
  5497   002DD8  EFFA  F016         	goto	l4324
  5498   002DDC                     u4120:
  5499   002DDC                     
  5500                           ; BSR set to: 0
  5501                           ;colorfunctions.c: 133:     {;colorfunctions.c: 134:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5502   002DDC  0EF6               	movlw	low _motorL
  5503   002DDE  6E21               	movwf	LightBlue_L135@mL^0,c
  5504   002DE0  0E00               	movlw	high _motorL
  5505   002DE2  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5506   002DE4  0EED               	movlw	low _motorR
  5507   002DE6  6E23               	movwf	LightBlue_L135@mR^0,c
  5508   002DE8  0E00               	movlw	high _motorR
  5509   002DEA  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5510   002DEC  EC2A  F01E         	call	_LightBlue_L135	;wreg free
  5511                           
  5512                           ;colorfunctions.c: 135:     }
  5513   002DF0  EF10  F017         	goto	l156
  5514   002DF4                     l4324:
  5515   002DF4                     
  5516                           ; BSR set to: 0
  5517                           ;colorfunctions.c: 137:     {;colorfunctions.c: 138:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5518   002DF4  0EF6               	movlw	low _motorL
  5519   002DF6  6E55               	movwf	White@mL^0,c
  5520   002DF8  0E00               	movlw	high _motorL
  5521   002DFA  6E56               	movwf	(White@mL+1)^0,c
  5522   002DFC  0EED               	movlw	low _motorR
  5523   002DFE  6E57               	movwf	White@mR^0,c
  5524   002E00  0E00               	movlw	high _motorR
  5525   002E02  6E58               	movwf	(White@mR+1)^0,c
  5526   002E04  C0E8  F059         	movff	_movementCount,White@movementCount	;volatile
  5527   002E08  C0E9  F05A         	movff	_movementCount+1,White@movementCount+1	;volatile
  5528   002E0C  0E48               	movlw	low _movementMemory
  5529   002E0E  6E5B               	movwf	White@movementMemory^0,c
  5530   002E10  0E01               	movlw	high _movementMemory
  5531   002E12  6E5C               	movwf	(White@movementMemory+1)^0,c
  5532   002E14  0E20               	movlw	low _timerMemory
  5533   002E16  6E5D               	movwf	White@timerMemory^0,c
  5534   002E18  0E01               	movlw	high _timerMemory
  5535   002E1A  6E5E               	movwf	(White@timerMemory+1)^0,c
  5536   002E1C  EC83  F013         	call	_White	;wreg free
  5537   002E20                     l156:
  5538   002E20  0012               	return		;funcret
  5539   002E22                     __end_of_Colour2Action:
  5540                           	callstack 0
  5541                           
  5542 ;; *************** function _White *****************
  5543 ;; Defined at:
  5544 ;;		line 341 in file "dc_motor.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  mL              2   84[COMRAM] PTR struct DC_motor
  5547 ;;		 -> motorL(9), 
  5548 ;;  mR              2   86[COMRAM] PTR struct DC_motor
  5549 ;;		 -> motorR(9), 
  5550 ;;  movementCoun    2   88[COMRAM] unsigned int 
  5551 ;;  movementMemo    2   90[COMRAM] PTR volatile unsigned in
  5552 ;;		 -> movementMemory(40), 
  5553 ;;  timerMemory     2   92[COMRAM] PTR volatile unsigned in
  5554 ;;		 -> timerMemory(40), 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  tempTimer       2    2[BANK0 ] unsigned int 
  5557 ;;  i               2    4[BANK0 ] int 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5567 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5570 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;Total ram usage:       16 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 7
  5574 ;; This function calls:
  5575 ;;		_Blue_T180
  5576 ;;		_Green_L90
  5577 ;;		_LightBlue_L135
  5578 ;;		_Orange_R135
  5579 ;;		_Pink_rev1_L90
  5580 ;;		_Red_R90
  5581 ;;		_TimerReset
  5582 ;;		_Yellow_rev1_R90
  5583 ;;		___fltol
  5584 ;;		_fullSpeedAhead
  5585 ;;		_getTimerValue
  5586 ;;		_reverseHalfSquare
  5587 ;;		_rotate180left
  5588 ;;		_stop
  5589 ;; This function is called by:
  5590 ;;		_Colour2Action
  5591 ;;		_maxTimeReturn
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text26
  5596   002706                     __ptext26:
  5597                           	callstack 0
  5598   002706                     _White:
  5599                           	callstack 22
  5600   002706                     
  5601                           ;dc_motor.c: 341: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile unsigned int *timerMemory);dc_
      +                          motor.c: 342: {;dc_motor.c: 343:     LATDbits.LATD4 = 1;;
  5602   002706  887C               	bsf	124,4,c	;volatile
  5603                           
  5604                           ;dc_motor.c: 345:     while (!retracingDone){
  5605   002708  EF07  F015         	goto	l4022
  5606   00270C                     l3956:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;dc_motor.c: 346:         reverseHalfSquare(mL,mR);
  5610   00270C  C055  F01B         	movff	White@mL,reverseHalfSquare@mL
  5611   002710  C056  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5612   002714  C057  F01D         	movff	White@mR,reverseHalfSquare@mR
  5613   002718  C058  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5614   00271C  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  5615                           
  5616                           ;dc_motor.c: 347:         rotate180left(mL,mR);
  5617   002720  C055  F020         	movff	White@mL,rotate180left@mL
  5618   002724  C056  F021         	movff	White@mL+1,rotate180left@mL+1
  5619   002728  C057  F022         	movff	White@mR,rotate180left@mR
  5620   00272C  C058  F023         	movff	White@mR+1,rotate180left@mR+1
  5621   002730  EC2B  F022         	call	_rotate180left	;wreg free
  5622   002734                     
  5623                           ;dc_motor.c: 348:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5624   002734  0E29               	movlw	41
  5625   002736  0100               	movlb	0	; () banked
  5626   002738  6F61               	movwf	(??_White+1)& (0+255),b
  5627   00273A  0E96               	movlw	150
  5628   00273C  6F60               	movwf	??_White& (0+255),b
  5629   00273E  0E7F               	movlw	127
  5630   002740                     u4237:
  5631   002740  2EE8               	decfsz	wreg,f,c
  5632   002742  D7FE               	bra	u4237
  5633   002744  2F60               	decfsz	??_White& (0+255),f,b
  5634   002746  D7FC               	bra	u4237
  5635   002748  2F61               	decfsz	(??_White+1)& (0+255),f,b
  5636   00274A  D7FA               	bra	u4237
  5637   00274C                     
  5638                           ;dc_motor.c: 349:         ForwardFlag = 0;
  5639   00274C  0E00               	movlw	0
  5640   00274E  0100               	movlb	0	; () banked
  5641   002750  6FFF               	movwf	_ForwardFlag& (0+255),b	;volatile
  5642   002752                     
  5643                           ; BSR set to: 0
  5644                           ;dc_motor.c: 350:         retracingDone = 1;
  5645   002752  0E00               	movlw	0
  5646   002754  6FE7               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5647   002756  0E01               	movlw	1
  5648   002758  6FE6               	movwf	_retracingDone& (0+255),b	;volatile
  5649   00275A                     
  5650                           ; BSR set to: 0
  5651                           ;dc_motor.c: 352:         for (int i=movementCount; i>=0;i--){
  5652   00275A  C059  F064         	movff	White@movementCount,White@i
  5653   00275E  C05A  F065         	movff	White@movementCount+1,White@i+1
  5654   002762                     l3966:
  5655                           
  5656                           ; BSR set to: 0
  5657   002762  BF65               	btfsc	(White@i+1)& (0+255),7,b
  5658   002764  EFB8  F013         	goto	u3550
  5659   002768  EFB6  F013         	goto	u3551
  5660   00276C                     u3551:
  5661   00276C  EFBA  F013         	goto	l544
  5662   002770                     u3550:
  5663   002770  EF07  F015         	goto	l4022
  5664   002774                     l544:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;dc_motor.c: 353:             LATDbits.LATD4 = 1;;
  5668   002774  887C               	bsf	124,4,c	;volatile
  5669   002776                     
  5670                           ; BSR set to: 0
  5671                           ;dc_motor.c: 354:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5672   002776  0E11               	movlw	17
  5673   002778  0100               	movlb	0	; () banked
  5674   00277A  6F61               	movwf	(??_White+1)& (0+255),b
  5675   00277C  0E3C               	movlw	60
  5676   00277E  6F60               	movwf	??_White& (0+255),b
  5677   002780  0ECB               	movlw	203
  5678   002782                     u4247:
  5679   002782  2EE8               	decfsz	wreg,f,c
  5680   002784  D7FE               	bra	u4247
  5681   002786  2F60               	decfsz	??_White& (0+255),f,b
  5682   002788  D7FC               	bra	u4247
  5683   00278A  2F61               	decfsz	(??_White+1)& (0+255),f,b
  5684   00278C  D7FA               	bra	u4247
  5685   00278E                     
  5686                           ;dc_motor.c: 355:             if (movementMemory[i]==0){
  5687   00278E  90D8               	bcf	status,0,c
  5688   002790  0100               	movlb	0	; () banked
  5689   002792  3564               	rlcf	White@i& (0+255),w,b
  5690   002794  6ED9               	movwf	fsr2l,c
  5691   002796  3565               	rlcf	(White@i+1)& (0+255),w,b
  5692   002798  6EDA               	movwf	fsr2h,c
  5693   00279A  505B               	movf	White@movementMemory^0,w,c
  5694   00279C  26D9               	addwf	fsr2l,f,c
  5695   00279E  505C               	movf	(White@movementMemory+1)^0,w,c
  5696   0027A0  22DA               	addwfc	fsr2h,f,c
  5697   0027A2  50DE               	movf	postinc2,w,c
  5698   0027A4  10DE               	iorwf	postinc2,w,c
  5699   0027A6  A4D8               	btfss	status,2,c
  5700   0027A8  EFD8  F013         	goto	u3561
  5701   0027AC  EFDA  F013         	goto	u3560
  5702   0027B0                     u3561:
  5703   0027B0  EFE6  F013         	goto	l3976
  5704   0027B4                     u3560:
  5705   0027B4                     
  5706                           ; BSR set to: 0
  5707                           ;dc_motor.c: 356:                 Red_R90(mL,mR);}
  5708   0027B4  C055  F021         	movff	White@mL,Red_R90@mL
  5709   0027B8  C056  F022         	movff	White@mL+1,Red_R90@mL+1
  5710   0027BC  C057  F023         	movff	White@mR,Red_R90@mR
  5711   0027C0  C058  F024         	movff	White@mR+1,Red_R90@mR+1
  5712   0027C4  ECF1  F020         	call	_Red_R90	;wreg free
  5713   0027C8  EFBE  F014         	goto	l4004
  5714   0027CC                     l3976:
  5715                           
  5716                           ; BSR set to: 0
  5717   0027CC  90D8               	bcf	status,0,c
  5718   0027CE  3564               	rlcf	White@i& (0+255),w,b
  5719   0027D0  6ED9               	movwf	fsr2l,c
  5720   0027D2  3565               	rlcf	(White@i+1)& (0+255),w,b
  5721   0027D4  6EDA               	movwf	fsr2h,c
  5722   0027D6  505B               	movf	White@movementMemory^0,w,c
  5723   0027D8  26D9               	addwf	fsr2l,f,c
  5724   0027DA  505C               	movf	(White@movementMemory+1)^0,w,c
  5725   0027DC  22DA               	addwfc	fsr2h,f,c
  5726   0027DE  04DE               	decf	postinc2,w,c
  5727   0027E0  10DE               	iorwf	postinc2,w,c
  5728   0027E2  A4D8               	btfss	status,2,c
  5729   0027E4  EFF6  F013         	goto	u3571
  5730   0027E8  EFF8  F013         	goto	u3570
  5731   0027EC                     u3571:
  5732   0027EC  EF04  F014         	goto	l3980
  5733   0027F0                     u3570:
  5734   0027F0                     
  5735                           ; BSR set to: 0
  5736                           ;dc_motor.c: 358:                 Green_L90(mL,mR);}
  5737   0027F0  C055  F021         	movff	White@mL,Green_L90@mL
  5738   0027F4  C056  F022         	movff	White@mL+1,Green_L90@mL+1
  5739   0027F8  C057  F023         	movff	White@mR,Green_L90@mR
  5740   0027FC  C058  F024         	movff	White@mR+1,Green_L90@mR+1
  5741   002800  EC2F  F021         	call	_Green_L90	;wreg free
  5742   002804  EFBE  F014         	goto	l4004
  5743   002808                     l3980:
  5744                           
  5745                           ; BSR set to: 0
  5746   002808  90D8               	bcf	status,0,c
  5747   00280A  3564               	rlcf	White@i& (0+255),w,b
  5748   00280C  6ED9               	movwf	fsr2l,c
  5749   00280E  3565               	rlcf	(White@i+1)& (0+255),w,b
  5750   002810  6EDA               	movwf	fsr2h,c
  5751   002812  505B               	movf	White@movementMemory^0,w,c
  5752   002814  26D9               	addwf	fsr2l,f,c
  5753   002816  505C               	movf	(White@movementMemory+1)^0,w,c
  5754   002818  22DA               	addwfc	fsr2h,f,c
  5755   00281A  0E02               	movlw	2
  5756   00281C  18DE               	xorwf	postinc2,w,c
  5757   00281E  10DE               	iorwf	postinc2,w,c
  5758   002820  A4D8               	btfss	status,2,c
  5759   002822  EF15  F014         	goto	u3581
  5760   002826  EF17  F014         	goto	u3580
  5761   00282A                     u3581:
  5762   00282A  EF23  F014         	goto	l3984
  5763   00282E                     u3580:
  5764   00282E                     
  5765                           ; BSR set to: 0
  5766                           ;dc_motor.c: 360:                 Blue_T180(mL,mR);}
  5767   00282E  C055  F024         	movff	White@mL,Blue_T180@mL
  5768   002832  C056  F025         	movff	White@mL+1,Blue_T180@mL+1
  5769   002836  C057  F026         	movff	White@mR,Blue_T180@mR
  5770   00283A  C058  F027         	movff	White@mR+1,Blue_T180@mR+1
  5771   00283E  EC01  F022         	call	_Blue_T180	;wreg free
  5772   002842  EFBE  F014         	goto	l4004
  5773   002846                     l3984:
  5774                           
  5775                           ; BSR set to: 0
  5776   002846  90D8               	bcf	status,0,c
  5777   002848  3564               	rlcf	White@i& (0+255),w,b
  5778   00284A  6ED9               	movwf	fsr2l,c
  5779   00284C  3565               	rlcf	(White@i+1)& (0+255),w,b
  5780   00284E  6EDA               	movwf	fsr2h,c
  5781   002850  505B               	movf	White@movementMemory^0,w,c
  5782   002852  26D9               	addwf	fsr2l,f,c
  5783   002854  505C               	movf	(White@movementMemory+1)^0,w,c
  5784   002856  22DA               	addwfc	fsr2h,f,c
  5785   002858  0E03               	movlw	3
  5786   00285A  18DE               	xorwf	postinc2,w,c
  5787   00285C  10DE               	iorwf	postinc2,w,c
  5788   00285E  A4D8               	btfss	status,2,c
  5789   002860  EF34  F014         	goto	u3591
  5790   002864  EF36  F014         	goto	u3590
  5791   002868                     u3591:
  5792   002868  EF42  F014         	goto	l3988
  5793   00286C                     u3590:
  5794   00286C                     
  5795                           ; BSR set to: 0
  5796                           ;dc_motor.c: 362:                 Yellow_rev1_R90(mL,mR);}
  5797   00286C  C055  F021         	movff	White@mL,Yellow_rev1_R90@mL
  5798   002870  C056  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  5799   002874  C057  F023         	movff	White@mR,Yellow_rev1_R90@mR
  5800   002878  C058  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  5801   00287C  EC74  F01B         	call	_Yellow_rev1_R90	;wreg free
  5802   002880  EFBE  F014         	goto	l4004
  5803   002884                     l3988:
  5804                           
  5805                           ; BSR set to: 0
  5806   002884  90D8               	bcf	status,0,c
  5807   002886  3564               	rlcf	White@i& (0+255),w,b
  5808   002888  6ED9               	movwf	fsr2l,c
  5809   00288A  3565               	rlcf	(White@i+1)& (0+255),w,b
  5810   00288C  6EDA               	movwf	fsr2h,c
  5811   00288E  505B               	movf	White@movementMemory^0,w,c
  5812   002890  26D9               	addwf	fsr2l,f,c
  5813   002892  505C               	movf	(White@movementMemory+1)^0,w,c
  5814   002894  22DA               	addwfc	fsr2h,f,c
  5815   002896  0E04               	movlw	4
  5816   002898  18DE               	xorwf	postinc2,w,c
  5817   00289A  10DE               	iorwf	postinc2,w,c
  5818   00289C  A4D8               	btfss	status,2,c
  5819   00289E  EF53  F014         	goto	u3601
  5820   0028A2  EF55  F014         	goto	u3600
  5821   0028A6                     u3601:
  5822   0028A6  EF61  F014         	goto	l3992
  5823   0028AA                     u3600:
  5824   0028AA                     
  5825                           ; BSR set to: 0
  5826                           ;dc_motor.c: 364:                 Pink_rev1_L90(mL,mR);}
  5827   0028AA  C055  F021         	movff	White@mL,Pink_rev1_L90@mL
  5828   0028AE  C056  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  5829   0028B2  C057  F023         	movff	White@mR,Pink_rev1_L90@mR
  5830   0028B6  C058  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  5831   0028BA  ECE8  F01B         	call	_Pink_rev1_L90	;wreg free
  5832   0028BE  EFBE  F014         	goto	l4004
  5833   0028C2                     l3992:
  5834                           
  5835                           ; BSR set to: 0
  5836   0028C2  90D8               	bcf	status,0,c
  5837   0028C4  3564               	rlcf	White@i& (0+255),w,b
  5838   0028C6  6ED9               	movwf	fsr2l,c
  5839   0028C8  3565               	rlcf	(White@i+1)& (0+255),w,b
  5840   0028CA  6EDA               	movwf	fsr2h,c
  5841   0028CC  505B               	movf	White@movementMemory^0,w,c
  5842   0028CE  26D9               	addwf	fsr2l,f,c
  5843   0028D0  505C               	movf	(White@movementMemory+1)^0,w,c
  5844   0028D2  22DA               	addwfc	fsr2h,f,c
  5845   0028D4  0E05               	movlw	5
  5846   0028D6  18DE               	xorwf	postinc2,w,c
  5847   0028D8  10DE               	iorwf	postinc2,w,c
  5848   0028DA  A4D8               	btfss	status,2,c
  5849   0028DC  EF72  F014         	goto	u3611
  5850   0028E0  EF74  F014         	goto	u3610
  5851   0028E4                     u3611:
  5852   0028E4  EF80  F014         	goto	l3996
  5853   0028E8                     u3610:
  5854   0028E8                     
  5855                           ; BSR set to: 0
  5856                           ;dc_motor.c: 366:                 Orange_R135(mL,mR);}
  5857   0028E8  C055  F021         	movff	White@mL,Orange_R135@mL
  5858   0028EC  C056  F022         	movff	White@mL+1,Orange_R135@mL+1
  5859   0028F0  C057  F023         	movff	White@mR,Orange_R135@mR
  5860   0028F4  C058  F024         	movff	White@mR+1,Orange_R135@mR+1
  5861   0028F8  ECD8  F01D         	call	_Orange_R135	;wreg free
  5862   0028FC  EFBE  F014         	goto	l4004
  5863   002900                     l3996:
  5864                           
  5865                           ; BSR set to: 0
  5866   002900  90D8               	bcf	status,0,c
  5867   002902  3564               	rlcf	White@i& (0+255),w,b
  5868   002904  6ED9               	movwf	fsr2l,c
  5869   002906  3565               	rlcf	(White@i+1)& (0+255),w,b
  5870   002908  6EDA               	movwf	fsr2h,c
  5871   00290A  505B               	movf	White@movementMemory^0,w,c
  5872   00290C  26D9               	addwf	fsr2l,f,c
  5873   00290E  505C               	movf	(White@movementMemory+1)^0,w,c
  5874   002910  22DA               	addwfc	fsr2h,f,c
  5875   002912  0E06               	movlw	6
  5876   002914  18DE               	xorwf	postinc2,w,c
  5877   002916  10DE               	iorwf	postinc2,w,c
  5878   002918  A4D8               	btfss	status,2,c
  5879   00291A  EF91  F014         	goto	u3621
  5880   00291E  EF93  F014         	goto	u3620
  5881   002922                     u3621:
  5882   002922  EF9F  F014         	goto	l4000
  5883   002926                     u3620:
  5884   002926                     
  5885                           ; BSR set to: 0
  5886                           ;dc_motor.c: 368:                 LightBlue_L135(mL,mR);}
  5887   002926  C055  F021         	movff	White@mL,LightBlue_L135@mL
  5888   00292A  C056  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  5889   00292E  C057  F023         	movff	White@mR,LightBlue_L135@mR
  5890   002932  C058  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  5891   002936  EC2A  F01E         	call	_LightBlue_L135	;wreg free
  5892   00293A  EFBE  F014         	goto	l4004
  5893   00293E                     l4000:
  5894                           
  5895                           ; BSR set to: 0
  5896   00293E  90D8               	bcf	status,0,c
  5897   002940  3564               	rlcf	White@i& (0+255),w,b
  5898   002942  6ED9               	movwf	fsr2l,c
  5899   002944  3565               	rlcf	(White@i+1)& (0+255),w,b
  5900   002946  6EDA               	movwf	fsr2h,c
  5901   002948  505B               	movf	White@movementMemory^0,w,c
  5902   00294A  26D9               	addwf	fsr2l,f,c
  5903   00294C  505C               	movf	(White@movementMemory+1)^0,w,c
  5904   00294E  22DA               	addwfc	fsr2h,f,c
  5905   002950  0E07               	movlw	7
  5906   002952  18DE               	xorwf	postinc2,w,c
  5907   002954  10DE               	iorwf	postinc2,w,c
  5908   002956  A4D8               	btfss	status,2,c
  5909   002958  EFB0  F014         	goto	u3631
  5910   00295C  EFB2  F014         	goto	u3630
  5911   002960                     u3631:
  5912   002960  EFBE  F014         	goto	l555
  5913   002964                     u3630:
  5914   002964                     
  5915                           ; BSR set to: 0
  5916                           ;dc_motor.c: 370:                 stop(mL,mR);}
  5917   002964  C055  F014         	movff	White@mL,stop@mL
  5918   002968  C056  F015         	movff	White@mL+1,stop@mL+1
  5919   00296C  C057  F016         	movff	White@mR,stop@mR
  5920   002970  C058  F017         	movff	White@mR+1,stop@mR+1
  5921   002974  EC85  F01D         	call	_stop	;wreg free
  5922   002978  EFBE  F014         	goto	l4004
  5923   00297C                     l555:
  5924   00297C                     l4004:
  5925                           
  5926                           ;dc_motor.c: 371:             LATDbits.LATD4 = 1;;
  5927   00297C  887C               	bsf	124,4,c	;volatile
  5928   00297E                     
  5929                           ;dc_motor.c: 373:             unsigned int tempTimer = 0;
  5930   00297E  0E00               	movlw	0
  5931   002980  0100               	movlb	0	; () banked
  5932   002982  6F63               	movwf	(White@tempTimer+1)& (0+255),b
  5933   002984  0E00               	movlw	0
  5934   002986  6F62               	movwf	White@tempTimer& (0+255),b
  5935   002988                     
  5936                           ; BSR set to: 0
  5937                           ;dc_motor.c: 374:             TimerReset();
  5938   002988  ECC8  F024         	call	_TimerReset	;wreg free
  5939   00298C                     
  5940                           ;dc_motor.c: 375:             fullSpeedAhead(mL,mR);
  5941   00298C  C055  F014         	movff	White@mL,fullSpeedAhead@mL
  5942   002990  C056  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  5943   002994  C057  F016         	movff	White@mR,fullSpeedAhead@mR
  5944   002998  C058  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  5945   00299C  EC71  F020         	call	_fullSpeedAhead	;wreg free
  5946                           
  5947                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5948   0029A0  EFE2  F014         	goto	l4014
  5949   0029A4                     l4012:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;dc_motor.c: 377:             {;dc_motor.c: 378:                 tempTimer = getTimerVal
      +                          ue();
  5953   0029A4  ECA7  F021         	call	_getTimerValue	;wreg free
  5954   0029A8  C033  F04B         	movff	?_getTimerValue,___fltol@f1
  5955   0029AC  C034  F04C         	movff	?_getTimerValue+1,___fltol@f1+1
  5956   0029B0  C035  F04D         	movff	?_getTimerValue+2,___fltol@f1+2
  5957   0029B4  C036  F04E         	movff	?_getTimerValue+3,___fltol@f1+3
  5958   0029B8  EC6F  F01A         	call	___fltol	;wreg free
  5959   0029BC  C04B  F062         	movff	?___fltol,White@tempTimer
  5960   0029C0  C04C  F063         	movff	?___fltol+1,White@tempTimer+1
  5961   0029C4                     l4014:
  5962                           
  5963                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5964   0029C4  90D8               	bcf	status,0,c
  5965   0029C6  0100               	movlb	0	; () banked
  5966   0029C8  3564               	rlcf	White@i& (0+255),w,b
  5967   0029CA  6ED9               	movwf	fsr2l,c
  5968   0029CC  3565               	rlcf	(White@i+1)& (0+255),w,b
  5969   0029CE  6EDA               	movwf	fsr2h,c
  5970   0029D0  505D               	movf	White@timerMemory^0,w,c
  5971   0029D2  26D9               	addwf	fsr2l,f,c
  5972   0029D4  505E               	movf	(White@timerMemory+1)^0,w,c
  5973   0029D6  22DA               	addwfc	fsr2h,f,c
  5974   0029D8  50DE               	movf	postinc2,w,c
  5975   0029DA  5D62               	subwf	White@tempTimer& (0+255),w,b
  5976   0029DC  50DE               	movf	postinc2,w,c
  5977   0029DE  5963               	subwfb	(White@tempTimer+1)& (0+255),w,b
  5978   0029E0  A0D8               	btfss	status,0,c
  5979   0029E2  EFF5  F014         	goto	u3641
  5980   0029E6  EFF7  F014         	goto	u3640
  5981   0029EA                     u3641:
  5982   0029EA  EFD2  F014         	goto	l4012
  5983   0029EE                     u3640:
  5984   0029EE                     
  5985                           ; BSR set to: 0
  5986                           ;dc_motor.c: 380:             stop(mL,mR);
  5987   0029EE  C055  F014         	movff	White@mL,stop@mL
  5988   0029F2  C056  F015         	movff	White@mL+1,stop@mL+1
  5989   0029F6  C057  F016         	movff	White@mR,stop@mR
  5990   0029FA  C058  F017         	movff	White@mR+1,stop@mR+1
  5991   0029FE  EC85  F01D         	call	_stop	;wreg free
  5992   002A02                     
  5993                           ;dc_motor.c: 381:         }
  5994   002A02  0100               	movlb	0	; () banked
  5995   002A04  0764               	decf	White@i& (0+255),f,b
  5996   002A06  A0D8               	btfss	status,0,c
  5997   002A08  0765               	decf	(White@i+1)& (0+255),f,b
  5998   002A0A  EFB1  F013         	goto	l3966
  5999   002A0E                     l4022:
  6000                           
  6001                           ;dc_motor.c: 345:     while (!retracingDone){
  6002   002A0E  0100               	movlb	0	; () banked
  6003   002A10  51E6               	movf	_retracingDone& (0+255),w,b	;volatile
  6004   002A12  11E7               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  6005   002A14  B4D8               	btfsc	status,2,c
  6006   002A16  EF0F  F015         	goto	u3651
  6007   002A1A  EF11  F015         	goto	u3650
  6008   002A1E                     u3651:
  6009   002A1E  EF86  F013         	goto	l3956
  6010   002A22                     u3650:
  6011   002A22                     
  6012                           ; BSR set to: 0
  6013                           ;dc_motor.c: 383:     stop(mL,mR);
  6014   002A22  C055  F014         	movff	White@mL,stop@mL
  6015   002A26  C056  F015         	movff	White@mL+1,stop@mL+1
  6016   002A2A  C057  F016         	movff	White@mR,stop@mR
  6017   002A2E  C058  F017         	movff	White@mR+1,stop@mR+1
  6018   002A32  EC85  F01D         	call	_stop	;wreg free
  6019   002A36                     
  6020                           ;dc_motor.c: 384:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6021   002A36  0E52               	movlw	82
  6022   002A38  0100               	movlb	0	; () banked
  6023   002A3A  6F61               	movwf	(??_White+1)& (0+255),b
  6024   002A3C  0E2B               	movlw	43
  6025   002A3E  6F60               	movwf	??_White& (0+255),b
  6026   002A40  0E00               	movlw	0
  6027   002A42                     u4257:
  6028   002A42  2EE8               	decfsz	wreg,f,c
  6029   002A44  D7FE               	bra	u4257
  6030   002A46  2F60               	decfsz	??_White& (0+255),f,b
  6031   002A48  D7FC               	bra	u4257
  6032   002A4A  2F61               	decfsz	(??_White+1)& (0+255),f,b
  6033   002A4C  D7FA               	bra	u4257
  6034   002A4E  F000               	nop	
  6035   002A50                     
  6036                           ;dc_motor.c: 385:     LATDbits.LATD4 = 0;;
  6037   002A50  987C               	bcf	124,4,c	;volatile
  6038   002A52  0012               	return		;funcret
  6039   002A54                     __end_of_White:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function _getTimerValue *****************
  6043 ;; Defined at:
  6044 ;;		line 28 in file "timer.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  timerCount      2   56[COMRAM] unsigned int 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4   50[COMRAM] float 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:        8 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 2
  6065 ;; This function calls:
  6066 ;;		___flmul
  6067 ;;		___xxtofl
  6068 ;; This function is called by:
  6069 ;;		_White
  6070 ;;		_memoryUpdateTime
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text27
  6075   00434E                     __ptext27:
  6076                           	callstack 0
  6077   00434E                     _getTimerValue:
  6078                           	callstack 27
  6079   00434E                     
  6080                           ;timer.c: 30:     unsigned int timerCount;;timer.c: 32:     timerCount = TMR0L;
  6081   00434E  CFD3 F039          	movff	4051,getTimerValue@timerCount	;volatile
  6082   004352  6A3A               	clrf	(getTimerValue@timerCount+1)^0,c
  6083   004354                     
  6084                           ;timer.c: 34:     timerCount |= (unsigned int)(TMR0H << 8);
  6085   004354  50D4               	movf	212,w,c	;volatile
  6086   004356  6E38               	movwf	(??_getTimerValue+1)^0,c
  6087   004358  6A37               	clrf	??_getTimerValue^0,c
  6088   00435A  5037               	movf	??_getTimerValue^0,w,c
  6089   00435C  1239               	iorwf	getTimerValue@timerCount^0,f,c
  6090   00435E  5038               	movf	(??_getTimerValue+1)^0,w,c
  6091   004360  123A               	iorwf	(getTimerValue@timerCount+1)^0,f,c
  6092   004362                     
  6093                           ;timer.c: 35:     return timerCount*1.048576;
  6094   004362  C039  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  6095   004366  C03A  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  6096   00436A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  6097   00436C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  6098   00436E  0E00               	movlw	0
  6099   004370  EC11  F017         	call	___xxtofl
  6100   004374  C00C  F01A         	movff	?___xxtofl,___flmul@b
  6101   004378  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  6102   00437C  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  6103   004380  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  6104   004384  0EBD               	movlw	189
  6105   004386  6E1E               	movwf	___flmul@a^0,c
  6106   004388  0E37               	movlw	55
  6107   00438A  6E1F               	movwf	(___flmul@a+1)^0,c
  6108   00438C  0E86               	movlw	134
  6109   00438E  6E20               	movwf	(___flmul@a+2)^0,c
  6110   004390  0E3F               	movlw	63
  6111   004392  6E21               	movwf	(___flmul@a+3)^0,c
  6112   004394  ECA0  F00F         	call	___flmul	;wreg free
  6113   004398  C01A  F033         	movff	?___flmul,?_getTimerValue
  6114   00439C  C01B  F034         	movff	?___flmul+1,?_getTimerValue+1
  6115   0043A0  C01C  F035         	movff	?___flmul+2,?_getTimerValue+2
  6116   0043A4  C01D  F036         	movff	?___flmul+3,?_getTimerValue+3
  6117   0043A8  0012               	return		;funcret
  6118   0043AA                     __end_of_getTimerValue:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function ___xxtofl *****************
  6122 ;; Defined at:
  6123 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  sign            1    wreg     unsigned char 
  6126 ;;  val             4   11[COMRAM] long 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  sign            1   19[COMRAM] unsigned char 
  6129 ;;  arg             4   21[COMRAM] unsigned long 
  6130 ;;  exp             1   20[COMRAM] unsigned char 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  4   11[COMRAM] unsigned char 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;Total ram usage:       14 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_colour_read_all
  6151 ;;		_RGB2Hue
  6152 ;;		_Left45
  6153 ;;		_Right45
  6154 ;;		_reverseHalfSquare
  6155 ;;		_Yellow_rev1_R90
  6156 ;;		_Pink_rev1_L90
  6157 ;;		_memoryUpdateTime
  6158 ;;		_getTimerValue
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text28
  6163   002E22                     __ptext28:
  6164                           	callstack 0
  6165   002E22                     ___xxtofl:
  6166                           	callstack 27
  6167                           
  6168                           ;incstack = 0
  6169                           ;___xxtofl@sign stored from wreg
  6170   002E22  6E14               	movwf	___xxtofl@sign^0,c
  6171   002E24  5014               	movf	___xxtofl@sign^0,w,c
  6172   002E26  B4D8               	btfsc	status,2,c
  6173   002E28  EF18  F017         	goto	u2631
  6174   002E2C  EF1A  F017         	goto	u2630
  6175   002E30                     u2631:
  6176   002E30  EF3C  F017         	goto	l1324
  6177   002E34                     u2630:
  6178   002E34  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6179   002E36  EF21  F017         	goto	u2640
  6180   002E3A  EF1F  F017         	goto	u2641
  6181   002E3E                     u2641:
  6182   002E3E  EF3C  F017         	goto	l1324
  6183   002E42                     u2640:
  6184   002E42  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6185   002E46  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6186   002E4A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6187   002E4E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6188   002E52  1E10               	comf	??___xxtofl^0,f,c
  6189   002E54  1E11               	comf	(??___xxtofl+1)^0,f,c
  6190   002E56  1E12               	comf	(??___xxtofl+2)^0,f,c
  6191   002E58  1E13               	comf	(??___xxtofl+3)^0,f,c
  6192   002E5A  2A10               	incf	??___xxtofl^0,f,c
  6193   002E5C  0E00               	movlw	0
  6194   002E5E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6195   002E60  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6196   002E62  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6197   002E64  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6198   002E68  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6199   002E6C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6200   002E70  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6201   002E74  EF44  F017         	goto	l3386
  6202   002E78                     l1324:
  6203   002E78  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6204   002E7C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6205   002E80  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6206   002E84  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6207   002E88                     l3386:
  6208   002E88  500C               	movf	___xxtofl@val^0,w,c
  6209   002E8A  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6210   002E8C  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6211   002E8E  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6212   002E90  A4D8               	btfss	status,2,c
  6213   002E92  EF4D  F017         	goto	u2651
  6214   002E96  EF4F  F017         	goto	u2650
  6215   002E9A                     u2651:
  6216   002E9A  EF59  F017         	goto	l3392
  6217   002E9E                     u2650:
  6218   002E9E  0E00               	movlw	0
  6219   002EA0  6E0C               	movwf	?___xxtofl^0,c
  6220   002EA2  0E00               	movlw	0
  6221   002EA4  6E0D               	movwf	(?___xxtofl+1)^0,c
  6222   002EA6  0E00               	movlw	0
  6223   002EA8  6E0E               	movwf	(?___xxtofl+2)^0,c
  6224   002EAA  0E00               	movlw	0
  6225   002EAC  6E0F               	movwf	(?___xxtofl+3)^0,c
  6226   002EAE  EFEA  F017         	goto	l1327
  6227   002EB2                     l3392:
  6228   002EB2  0E96               	movlw	150
  6229   002EB4  6E15               	movwf	___xxtofl@exp^0,c
  6230   002EB6  EF63  F017         	goto	l3396
  6231   002EBA                     l3394:
  6232   002EBA  2A15               	incf	___xxtofl@exp^0,f,c
  6233   002EBC  90D8               	bcf	status,0,c
  6234   002EBE  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6235   002EC0  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6236   002EC2  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6237   002EC4  3216               	rrcf	___xxtofl@arg^0,f,c
  6238   002EC6                     l3396:
  6239   002EC6  0E00               	movlw	0
  6240   002EC8  1416               	andwf	___xxtofl@arg^0,w,c
  6241   002ECA  6E10               	movwf	??___xxtofl^0,c
  6242   002ECC  0E00               	movlw	0
  6243   002ECE  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6244   002ED0  6E11               	movwf	(??___xxtofl+1)^0,c
  6245   002ED2  0E00               	movlw	0
  6246   002ED4  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6247   002ED6  6E12               	movwf	(??___xxtofl+2)^0,c
  6248   002ED8  0EFE               	movlw	254
  6249   002EDA  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6250   002EDC  6E13               	movwf	(??___xxtofl+3)^0,c
  6251   002EDE  5010               	movf	??___xxtofl^0,w,c
  6252   002EE0  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6253   002EE2  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6254   002EE4  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6255   002EE6  A4D8               	btfss	status,2,c
  6256   002EE8  EF78  F017         	goto	u2661
  6257   002EEC  EF7A  F017         	goto	u2660
  6258   002EF0                     u2661:
  6259   002EF0  EF5D  F017         	goto	l3394
  6260   002EF4                     u2660:
  6261   002EF4  EF88  F017         	goto	l1331
  6262   002EF8                     l3398:
  6263   002EF8  2A15               	incf	___xxtofl@exp^0,f,c
  6264   002EFA  0E01               	movlw	1
  6265   002EFC  2616               	addwf	___xxtofl@arg^0,f,c
  6266   002EFE  0E00               	movlw	0
  6267   002F00  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6268   002F02  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6269   002F04  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6270   002F06  90D8               	bcf	status,0,c
  6271   002F08  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6272   002F0A  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6273   002F0C  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6274   002F0E  3216               	rrcf	___xxtofl@arg^0,f,c
  6275   002F10                     l1331:
  6276   002F10  0E00               	movlw	0
  6277   002F12  1416               	andwf	___xxtofl@arg^0,w,c
  6278   002F14  6E10               	movwf	??___xxtofl^0,c
  6279   002F16  0E00               	movlw	0
  6280   002F18  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6281   002F1A  6E11               	movwf	(??___xxtofl+1)^0,c
  6282   002F1C  0E00               	movlw	0
  6283   002F1E  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6284   002F20  6E12               	movwf	(??___xxtofl+2)^0,c
  6285   002F22  0EFF               	movlw	255
  6286   002F24  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6287   002F26  6E13               	movwf	(??___xxtofl+3)^0,c
  6288   002F28  5010               	movf	??___xxtofl^0,w,c
  6289   002F2A  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6290   002F2C  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6291   002F2E  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6292   002F30  A4D8               	btfss	status,2,c
  6293   002F32  EF9D  F017         	goto	u2671
  6294   002F36  EF9F  F017         	goto	u2670
  6295   002F3A                     u2671:
  6296   002F3A  EF7C  F017         	goto	l3398
  6297   002F3E                     u2670:
  6298   002F3E  EFA7  F017         	goto	l3406
  6299   002F42                     l3404:
  6300   002F42  0615               	decf	___xxtofl@exp^0,f,c
  6301   002F44  90D8               	bcf	status,0,c
  6302   002F46  3616               	rlcf	___xxtofl@arg^0,f,c
  6303   002F48  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6304   002F4A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6305   002F4C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6306   002F4E                     l3406:
  6307   002F4E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6308   002F50  EFAC  F017         	goto	u2681
  6309   002F54  EFAE  F017         	goto	u2680
  6310   002F58                     u2681:
  6311   002F58  EFB6  F017         	goto	l1338
  6312   002F5C                     u2680:
  6313   002F5C  0E02               	movlw	2
  6314   002F5E  6015               	cpfslt	___xxtofl@exp^0,c
  6315   002F60  EFB4  F017         	goto	u2691
  6316   002F64  EFB6  F017         	goto	u2690
  6317   002F68                     u2691:
  6318   002F68  EFA1  F017         	goto	l3404
  6319   002F6C                     u2690:
  6320   002F6C                     l1338:
  6321   002F6C  B015               	btfsc	___xxtofl@exp^0,0,c
  6322   002F6E  EFBB  F017         	goto	u2701
  6323   002F72  EFBD  F017         	goto	u2700
  6324   002F76                     u2701:
  6325   002F76  EFBE  F017         	goto	l3412
  6326   002F7A                     u2700:
  6327   002F7A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6328   002F7C                     l3412:
  6329   002F7C  90D8               	bcf	status,0,c
  6330   002F7E  3215               	rrcf	___xxtofl@exp^0,f,c
  6331   002F80  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6332   002F84  6A11               	clrf	(??___xxtofl+1)^0,c
  6333   002F86  6A12               	clrf	(??___xxtofl+2)^0,c
  6334   002F88  6A13               	clrf	(??___xxtofl+3)^0,c
  6335   002F8A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6336   002F8E  6A12               	clrf	(??___xxtofl+2)^0,c
  6337   002F90  6A11               	clrf	(??___xxtofl+1)^0,c
  6338   002F92  6A10               	clrf	??___xxtofl^0,c
  6339   002F94  5010               	movf	??___xxtofl^0,w,c
  6340   002F96  1216               	iorwf	___xxtofl@arg^0,f,c
  6341   002F98  5011               	movf	(??___xxtofl+1)^0,w,c
  6342   002F9A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6343   002F9C  5012               	movf	(??___xxtofl+2)^0,w,c
  6344   002F9E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6345   002FA0  5013               	movf	(??___xxtofl+3)^0,w,c
  6346   002FA2  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6347   002FA4  5014               	movf	___xxtofl@sign^0,w,c
  6348   002FA6  B4D8               	btfsc	status,2,c
  6349   002FA8  EFD8  F017         	goto	u2711
  6350   002FAC  EFDA  F017         	goto	u2710
  6351   002FB0                     u2711:
  6352   002FB0  EFE2  F017         	goto	l3422
  6353   002FB4                     u2710:
  6354   002FB4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6355   002FB6  EFE1  F017         	goto	u2720
  6356   002FBA  EFDF  F017         	goto	u2721
  6357   002FBE                     u2721:
  6358   002FBE  EFE2  F017         	goto	l3422
  6359   002FC2                     u2720:
  6360   002FC2  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6361   002FC4                     l3422:
  6362   002FC4  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6363   002FC8  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6364   002FCC  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6365   002FD0  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6366   002FD4                     l1327:
  6367   002FD4  0012               	return		;funcret
  6368   002FD6                     __end_of___xxtofl:
  6369                           	callstack 0
  6370                           
  6371 ;; *************** function ___flmul *****************
  6372 ;; Defined at:
  6373 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  b               4   25[COMRAM] unsigned char 
  6376 ;;  a               4   29[COMRAM] unsigned char 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  prod            4   44[COMRAM] struct .
  6379 ;;  grs             4   38[COMRAM] unsigned long 
  6380 ;;  temp            2   48[COMRAM] struct .
  6381 ;;  bexp            1   43[COMRAM] unsigned char 
  6382 ;;  aexp            1   42[COMRAM] unsigned char 
  6383 ;;  sign            1   37[COMRAM] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  4   25[COMRAM] unsigned char 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0, prodl, prodh
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6393 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;Total ram usage:       25 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_RGB2Hue
  6404 ;;		_Left45
  6405 ;;		_Right45
  6406 ;;		_reverseHalfSquare
  6407 ;;		_Yellow_rev1_R90
  6408 ;;		_Pink_rev1_L90
  6409 ;;		_getTimerValue
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text29
  6414   001F40                     __ptext29:
  6415                           	callstack 0
  6416   001F40                     ___flmul:
  6417                           	callstack 27
  6418   001F40  501D               	movf	(___flmul@b+3)^0,w,c
  6419   001F42  0B80               	andlw	128
  6420   001F44  6E26               	movwf	___flmul@sign^0,c
  6421   001F46  501D               	movf	(___flmul@b+3)^0,w,c
  6422   001F48  241D               	addwf	(___flmul@b+3)^0,w,c
  6423   001F4A  6E2C               	movwf	___flmul@bexp^0,c
  6424   001F4C  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6425   001F4E  EFAB  F00F         	goto	u2441
  6426   001F52  EFAD  F00F         	goto	u2440
  6427   001F56                     u2441:
  6428   001F56  EFAE  F00F         	goto	l3256
  6429   001F5A                     u2440:
  6430   001F5A  802C               	bsf	___flmul@bexp^0,0,c
  6431   001F5C                     l3256:
  6432   001F5C  502C               	movf	___flmul@bexp^0,w,c
  6433   001F5E  B4D8               	btfsc	status,2,c
  6434   001F60  EFB4  F00F         	goto	u2451
  6435   001F64  EFB6  F00F         	goto	u2450
  6436   001F68                     u2451:
  6437   001F68  EFC9  F00F         	goto	l3264
  6438   001F6C                     u2450:
  6439   001F6C  282C               	incf	___flmul@bexp^0,w,c
  6440   001F6E  A4D8               	btfss	status,2,c
  6441   001F70  EFBC  F00F         	goto	u2461
  6442   001F74  EFBE  F00F         	goto	u2460
  6443   001F78                     u2461:
  6444   001F78  EFC6  F00F         	goto	l3262
  6445   001F7C                     u2460:
  6446   001F7C  0E00               	movlw	0
  6447   001F7E  6E1A               	movwf	___flmul@b^0,c
  6448   001F80  0E00               	movlw	0
  6449   001F82  6E1B               	movwf	(___flmul@b+1)^0,c
  6450   001F84  0E00               	movlw	0
  6451   001F86  6E1C               	movwf	(___flmul@b+2)^0,c
  6452   001F88  0E00               	movlw	0
  6453   001F8A  6E1D               	movwf	(___flmul@b+3)^0,c
  6454   001F8C                     l3262:
  6455   001F8C  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6456   001F8E  EFD1  F00F         	goto	l3266
  6457   001F92                     l3264:
  6458   001F92  0E00               	movlw	0
  6459   001F94  6E1A               	movwf	___flmul@b^0,c
  6460   001F96  0E00               	movlw	0
  6461   001F98  6E1B               	movwf	(___flmul@b+1)^0,c
  6462   001F9A  0E00               	movlw	0
  6463   001F9C  6E1C               	movwf	(___flmul@b+2)^0,c
  6464   001F9E  0E00               	movlw	0
  6465   001FA0  6E1D               	movwf	(___flmul@b+3)^0,c
  6466   001FA2                     l3266:
  6467   001FA2  5021               	movf	(___flmul@a+3)^0,w,c
  6468   001FA4  0B80               	andlw	128
  6469   001FA6  1A26               	xorwf	___flmul@sign^0,f,c
  6470   001FA8  5021               	movf	(___flmul@a+3)^0,w,c
  6471   001FAA  2421               	addwf	(___flmul@a+3)^0,w,c
  6472   001FAC  6E2B               	movwf	___flmul@aexp^0,c
  6473   001FAE  AE20               	btfss	(___flmul@a+2)^0,7,c
  6474   001FB0  EFDC  F00F         	goto	u2471
  6475   001FB4  EFDE  F00F         	goto	u2470
  6476   001FB8                     u2471:
  6477   001FB8  EFDF  F00F         	goto	l3274
  6478   001FBC                     u2470:
  6479   001FBC  802B               	bsf	___flmul@aexp^0,0,c
  6480   001FBE                     l3274:
  6481   001FBE  502B               	movf	___flmul@aexp^0,w,c
  6482   001FC0  B4D8               	btfsc	status,2,c
  6483   001FC2  EFE5  F00F         	goto	u2481
  6484   001FC6  EFE7  F00F         	goto	u2480
  6485   001FCA                     u2481:
  6486   001FCA  EFFA  F00F         	goto	l3282
  6487   001FCE                     u2480:
  6488   001FCE  282B               	incf	___flmul@aexp^0,w,c
  6489   001FD0  A4D8               	btfss	status,2,c
  6490   001FD2  EFED  F00F         	goto	u2491
  6491   001FD6  EFEF  F00F         	goto	u2490
  6492   001FDA                     u2491:
  6493   001FDA  EFF7  F00F         	goto	l3280
  6494   001FDE                     u2490:
  6495   001FDE  0E00               	movlw	0
  6496   001FE0  6E1E               	movwf	___flmul@a^0,c
  6497   001FE2  0E00               	movlw	0
  6498   001FE4  6E1F               	movwf	(___flmul@a+1)^0,c
  6499   001FE6  0E00               	movlw	0
  6500   001FE8  6E20               	movwf	(___flmul@a+2)^0,c
  6501   001FEA  0E00               	movlw	0
  6502   001FEC  6E21               	movwf	(___flmul@a+3)^0,c
  6503   001FEE                     l3280:
  6504   001FEE  8E20               	bsf	(___flmul@a+2)^0,7,c
  6505   001FF0  EF02  F010         	goto	l1283
  6506   001FF4                     l3282:
  6507   001FF4  0E00               	movlw	0
  6508   001FF6  6E1E               	movwf	___flmul@a^0,c
  6509   001FF8  0E00               	movlw	0
  6510   001FFA  6E1F               	movwf	(___flmul@a+1)^0,c
  6511   001FFC  0E00               	movlw	0
  6512   001FFE  6E20               	movwf	(___flmul@a+2)^0,c
  6513   002000  0E00               	movlw	0
  6514   002002  6E21               	movwf	(___flmul@a+3)^0,c
  6515   002004                     l1283:
  6516   002004  502B               	movf	___flmul@aexp^0,w,c
  6517   002006  B4D8               	btfsc	status,2,c
  6518   002008  EF08  F010         	goto	u2501
  6519   00200C  EF0A  F010         	goto	u2500
  6520   002010                     u2501:
  6521   002010  EF12  F010         	goto	l3286
  6522   002014                     u2500:
  6523   002014  502C               	movf	___flmul@bexp^0,w,c
  6524   002016  A4D8               	btfss	status,2,c
  6525   002018  EF10  F010         	goto	u2511
  6526   00201C  EF12  F010         	goto	u2510
  6527   002020                     u2511:
  6528   002020  EF1C  F010         	goto	l3290
  6529   002024                     u2510:
  6530   002024                     l3286:
  6531   002024  0E00               	movlw	0
  6532   002026  6E1A               	movwf	?___flmul^0,c
  6533   002028  0E00               	movlw	0
  6534   00202A  6E1B               	movwf	(?___flmul+1)^0,c
  6535   00202C  0E00               	movlw	0
  6536   00202E  6E1C               	movwf	(?___flmul+2)^0,c
  6537   002030  0E00               	movlw	0
  6538   002032  6E1D               	movwf	(?___flmul+3)^0,c
  6539   002034  EFB4  F011         	goto	l1287
  6540   002038                     l3290:
  6541   002038  5020               	movf	(___flmul@a+2)^0,w,c
  6542   00203A  021A               	mulwf	___flmul@b^0,c
  6543   00203C  CFF3 F031          	movff	prodl,___flmul@temp
  6544   002040  CFF4 F032          	movff	prodh,___flmul@temp+1
  6545   002044  5031               	movf	___flmul@temp^0,w,c
  6546   002046  6E27               	movwf	___flmul@grs^0,c
  6547   002048  6A28               	clrf	(___flmul@grs+1)^0,c
  6548   00204A  6A29               	clrf	(___flmul@grs+2)^0,c
  6549   00204C  6A2A               	clrf	(___flmul@grs+3)^0,c
  6550   00204E  5032               	movf	(___flmul@temp+1)^0,w,c
  6551   002050  6E2D               	movwf	___flmul@prod^0,c
  6552   002052  6A2E               	clrf	(___flmul@prod+1)^0,c
  6553   002054  6A2F               	clrf	(___flmul@prod+2)^0,c
  6554   002056  6A30               	clrf	(___flmul@prod+3)^0,c
  6555   002058  501F               	movf	(___flmul@a+1)^0,w,c
  6556   00205A  021B               	mulwf	(___flmul@b+1)^0,c
  6557   00205C  CFF3 F031          	movff	prodl,___flmul@temp
  6558   002060  CFF4 F032          	movff	prodh,___flmul@temp+1
  6559   002064  5031               	movf	___flmul@temp^0,w,c
  6560   002066  2627               	addwf	___flmul@grs^0,f,c
  6561   002068  0E00               	movlw	0
  6562   00206A  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6563   00206C  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6564   00206E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6565   002070  5032               	movf	(___flmul@temp+1)^0,w,c
  6566   002072  262D               	addwf	___flmul@prod^0,f,c
  6567   002074  0E00               	movlw	0
  6568   002076  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6569   002078  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6570   00207A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6571   00207C  501E               	movf	___flmul@a^0,w,c
  6572   00207E  021C               	mulwf	(___flmul@b+2)^0,c
  6573   002080  CFF3 F031          	movff	prodl,___flmul@temp
  6574   002084  CFF4 F032          	movff	prodh,___flmul@temp+1
  6575   002088  5031               	movf	___flmul@temp^0,w,c
  6576   00208A  2627               	addwf	___flmul@grs^0,f,c
  6577   00208C  0E00               	movlw	0
  6578   00208E  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6579   002090  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6580   002092  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6581   002094  5032               	movf	(___flmul@temp+1)^0,w,c
  6582   002096  262D               	addwf	___flmul@prod^0,f,c
  6583   002098  0E00               	movlw	0
  6584   00209A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6585   00209C  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6586   00209E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6587   0020A0  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6588   0020A4  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6589   0020A8  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6590   0020AC  6A27               	clrf	___flmul@grs^0,c
  6591   0020AE  501E               	movf	___flmul@a^0,w,c
  6592   0020B0  021B               	mulwf	(___flmul@b+1)^0,c
  6593   0020B2  CFF3 F031          	movff	prodl,___flmul@temp
  6594   0020B6  CFF4 F032          	movff	prodh,___flmul@temp+1
  6595   0020BA  5031               	movf	___flmul@temp^0,w,c
  6596   0020BC  2627               	addwf	___flmul@grs^0,f,c
  6597   0020BE  5032               	movf	(___flmul@temp+1)^0,w,c
  6598   0020C0  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6599   0020C2  0E00               	movlw	0
  6600   0020C4  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6601   0020C6  0E00               	movlw	0
  6602   0020C8  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6603   0020CA  501F               	movf	(___flmul@a+1)^0,w,c
  6604   0020CC  021A               	mulwf	___flmul@b^0,c
  6605   0020CE  CFF3 F031          	movff	prodl,___flmul@temp
  6606   0020D2  CFF4 F032          	movff	prodh,___flmul@temp+1
  6607   0020D6  5031               	movf	___flmul@temp^0,w,c
  6608   0020D8  2627               	addwf	___flmul@grs^0,f,c
  6609   0020DA  5032               	movf	(___flmul@temp+1)^0,w,c
  6610   0020DC  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6611   0020DE  0E00               	movlw	0
  6612   0020E0  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6613   0020E2  0E00               	movlw	0
  6614   0020E4  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6615   0020E6  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6616   0020EA  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6617   0020EE  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6618   0020F2  6A27               	clrf	___flmul@grs^0,c
  6619   0020F4  501E               	movf	___flmul@a^0,w,c
  6620   0020F6  021A               	mulwf	___flmul@b^0,c
  6621   0020F8  CFF3 F031          	movff	prodl,___flmul@temp
  6622   0020FC  CFF4 F032          	movff	prodh,___flmul@temp+1
  6623   002100  5031               	movf	___flmul@temp^0,w,c
  6624   002102  2627               	addwf	___flmul@grs^0,f,c
  6625   002104  5032               	movf	(___flmul@temp+1)^0,w,c
  6626   002106  2228               	addwfc	(___flmul@grs+1)^0,f,c
  6627   002108  0E00               	movlw	0
  6628   00210A  2229               	addwfc	(___flmul@grs+2)^0,f,c
  6629   00210C  0E00               	movlw	0
  6630   00210E  222A               	addwfc	(___flmul@grs+3)^0,f,c
  6631   002110  5020               	movf	(___flmul@a+2)^0,w,c
  6632   002112  021B               	mulwf	(___flmul@b+1)^0,c
  6633   002114  CFF3 F031          	movff	prodl,___flmul@temp
  6634   002118  CFF4 F032          	movff	prodh,___flmul@temp+1
  6635   00211C  5031               	movf	___flmul@temp^0,w,c
  6636   00211E  262D               	addwf	___flmul@prod^0,f,c
  6637   002120  5032               	movf	(___flmul@temp+1)^0,w,c
  6638   002122  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6639   002124  0E00               	movlw	0
  6640   002126  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6641   002128  0E00               	movlw	0
  6642   00212A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6643   00212C  501F               	movf	(___flmul@a+1)^0,w,c
  6644   00212E  021C               	mulwf	(___flmul@b+2)^0,c
  6645   002130  CFF3 F031          	movff	prodl,___flmul@temp
  6646   002134  CFF4 F032          	movff	prodh,___flmul@temp+1
  6647   002138  5031               	movf	___flmul@temp^0,w,c
  6648   00213A  262D               	addwf	___flmul@prod^0,f,c
  6649   00213C  5032               	movf	(___flmul@temp+1)^0,w,c
  6650   00213E  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6651   002140  0E00               	movlw	0
  6652   002142  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6653   002144  0E00               	movlw	0
  6654   002146  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6655   002148  5020               	movf	(___flmul@a+2)^0,w,c
  6656   00214A  021C               	mulwf	(___flmul@b+2)^0,c
  6657   00214C  CFF3 F031          	movff	prodl,___flmul@temp
  6658   002150  CFF4 F032          	movff	prodh,___flmul@temp+1
  6659   002154  5031               	movf	___flmul@temp^0,w,c
  6660   002156  6E22               	movwf	??___flmul^0,c
  6661   002158  5032               	movf	(___flmul@temp+1)^0,w,c
  6662   00215A  6E23               	movwf	(??___flmul+1)^0,c
  6663   00215C  6A24               	clrf	(??___flmul+2)^0,c
  6664   00215E  6A25               	clrf	(??___flmul+3)^0,c
  6665   002160  C024  F025         	movff	??___flmul+2,??___flmul+3
  6666   002164  C023  F024         	movff	??___flmul+1,??___flmul+2
  6667   002168  C022  F023         	movff	??___flmul,??___flmul+1
  6668   00216C  6A22               	clrf	??___flmul^0,c
  6669   00216E  5022               	movf	??___flmul^0,w,c
  6670   002170  262D               	addwf	___flmul@prod^0,f,c
  6671   002172  5023               	movf	(??___flmul+1)^0,w,c
  6672   002174  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6673   002176  5024               	movf	(??___flmul+2)^0,w,c
  6674   002178  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6675   00217A  5025               	movf	(??___flmul+3)^0,w,c
  6676   00217C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6677   00217E  C027  F022         	movff	___flmul@grs,??___flmul
  6678   002182  C028  F023         	movff	___flmul@grs+1,??___flmul+1
  6679   002186  C029  F024         	movff	___flmul@grs+2,??___flmul+2
  6680   00218A  C02A  F025         	movff	___flmul@grs+3,??___flmul+3
  6681   00218E  0E19               	movlw	25
  6682   002190  EFCF  F010         	goto	u2520
  6683   002194                     u2525:
  6684   002194  90D8               	bcf	status,0,c
  6685   002196  3225               	rrcf	(??___flmul+3)^0,f,c
  6686   002198  3224               	rrcf	(??___flmul+2)^0,f,c
  6687   00219A  3223               	rrcf	(??___flmul+1)^0,f,c
  6688   00219C  3222               	rrcf	??___flmul^0,f,c
  6689   00219E                     u2520:
  6690   00219E  2EE8               	decfsz	wreg,f,c
  6691   0021A0  EFCA  F010         	goto	u2525
  6692   0021A4  5022               	movf	??___flmul^0,w,c
  6693   0021A6  262D               	addwf	___flmul@prod^0,f,c
  6694   0021A8  5023               	movf	(??___flmul+1)^0,w,c
  6695   0021AA  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6696   0021AC  5024               	movf	(??___flmul+2)^0,w,c
  6697   0021AE  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6698   0021B0  5025               	movf	(??___flmul+3)^0,w,c
  6699   0021B2  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6700   0021B4  C029  F02A         	movff	___flmul@grs+2,___flmul@grs+3
  6701   0021B8  C028  F029         	movff	___flmul@grs+1,___flmul@grs+2
  6702   0021BC  C027  F028         	movff	___flmul@grs,___flmul@grs+1
  6703   0021C0  6A27               	clrf	___flmul@grs^0,c
  6704   0021C2  502B               	movf	___flmul@aexp^0,w,c
  6705   0021C4  C02C  F022         	movff	___flmul@bexp,??___flmul
  6706   0021C8  6A23               	clrf	(??___flmul+1)^0,c
  6707   0021CA  2622               	addwf	??___flmul^0,f,c
  6708   0021CC  0E00               	movlw	0
  6709   0021CE  2223               	addwfc	(??___flmul+1)^0,f,c
  6710   0021D0  0E82               	movlw	130
  6711   0021D2  2422               	addwf	??___flmul^0,w,c
  6712   0021D4  6E31               	movwf	___flmul@temp^0,c
  6713   0021D6  0EFF               	movlw	255
  6714   0021D8  2023               	addwfc	(??___flmul+1)^0,w,c
  6715   0021DA  6E32               	movwf	(___flmul@temp+1)^0,c
  6716   0021DC  EF05  F011         	goto	l3338
  6717   0021E0                     l3332:
  6718   0021E0  90D8               	bcf	status,0,c
  6719   0021E2  362D               	rlcf	___flmul@prod^0,f,c
  6720   0021E4  362E               	rlcf	(___flmul@prod+1)^0,f,c
  6721   0021E6  362F               	rlcf	(___flmul@prod+2)^0,f,c
  6722   0021E8  3630               	rlcf	(___flmul@prod+3)^0,f,c
  6723   0021EA  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6724   0021EC  EFFA  F010         	goto	u2531
  6725   0021F0  EFFC  F010         	goto	u2530
  6726   0021F4                     u2531:
  6727   0021F4  EFFD  F010         	goto	l1290
  6728   0021F8                     u2530:
  6729   0021F8  802D               	bsf	___flmul@prod^0,0,c
  6730   0021FA                     l1290:
  6731   0021FA  90D8               	bcf	status,0,c
  6732   0021FC  3627               	rlcf	___flmul@grs^0,f,c
  6733   0021FE  3628               	rlcf	(___flmul@grs+1)^0,f,c
  6734   002200  3629               	rlcf	(___flmul@grs+2)^0,f,c
  6735   002202  362A               	rlcf	(___flmul@grs+3)^0,f,c
  6736   002204  0631               	decf	___flmul@temp^0,f,c
  6737   002206  A0D8               	btfss	status,0,c
  6738   002208  0632               	decf	(___flmul@temp+1)^0,f,c
  6739   00220A                     l3338:
  6740   00220A  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  6741   00220C  EF0A  F011         	goto	u2541
  6742   002210  EF0C  F011         	goto	u2540
  6743   002214                     u2541:
  6744   002214  EFF0  F010         	goto	l3332
  6745   002218                     u2540:
  6746   002218  0E00               	movlw	0
  6747   00221A  6E2B               	movwf	___flmul@aexp^0,c
  6748   00221C  AE2A               	btfss	(___flmul@grs+3)^0,7,c
  6749   00221E  EF13  F011         	goto	u2551
  6750   002222  EF15  F011         	goto	u2550
  6751   002226                     u2551:
  6752   002226  EF39  F011         	goto	l1292
  6753   00222A                     u2550:
  6754   00222A  0EFF               	movlw	255
  6755   00222C  1427               	andwf	___flmul@grs^0,w,c
  6756   00222E  6E22               	movwf	??___flmul^0,c
  6757   002230  0EFF               	movlw	255
  6758   002232  1428               	andwf	(___flmul@grs+1)^0,w,c
  6759   002234  6E23               	movwf	(??___flmul+1)^0,c
  6760   002236  0EFF               	movlw	255
  6761   002238  1429               	andwf	(___flmul@grs+2)^0,w,c
  6762   00223A  6E24               	movwf	(??___flmul+2)^0,c
  6763   00223C  0E7F               	movlw	127
  6764   00223E  142A               	andwf	(___flmul@grs+3)^0,w,c
  6765   002240  6E25               	movwf	(??___flmul+3)^0,c
  6766   002242  5022               	movf	??___flmul^0,w,c
  6767   002244  1023               	iorwf	(??___flmul+1)^0,w,c
  6768   002246  1024               	iorwf	(??___flmul+2)^0,w,c
  6769   002248  1025               	iorwf	(??___flmul+3)^0,w,c
  6770   00224A  B4D8               	btfsc	status,2,c
  6771   00224C  EF2A  F011         	goto	u2561
  6772   002250  EF2C  F011         	goto	u2560
  6773   002254                     u2561:
  6774   002254  EF30  F011         	goto	l1293
  6775   002258                     u2560:
  6776   002258                     l3346:
  6777   002258  0E01               	movlw	1
  6778   00225A  6E2B               	movwf	___flmul@aexp^0,c
  6779   00225C  EF39  F011         	goto	l1292
  6780   002260                     l1293:
  6781   002260  A02D               	btfss	___flmul@prod^0,0,c
  6782   002262  EF35  F011         	goto	u2571
  6783   002266  EF37  F011         	goto	u2570
  6784   00226A                     u2571:
  6785   00226A  EF39  F011         	goto	l1292
  6786   00226E                     u2570:
  6787   00226E  EF2C  F011         	goto	l3346
  6788   002272                     l1292:
  6789   002272  502B               	movf	___flmul@aexp^0,w,c
  6790   002274  B4D8               	btfsc	status,2,c
  6791   002276  EF3F  F011         	goto	u2581
  6792   00227A  EF41  F011         	goto	u2580
  6793   00227E                     u2581:
  6794   00227E  EF65  F011         	goto	l3358
  6795   002282                     u2580:
  6796   002282  0E01               	movlw	1
  6797   002284  262D               	addwf	___flmul@prod^0,f,c
  6798   002286  0E00               	movlw	0
  6799   002288  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6800   00228A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6801   00228C  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6802   00228E  A030               	btfss	(___flmul@prod+3)^0,0,c
  6803   002290  EF4C  F011         	goto	u2591
  6804   002294  EF4E  F011         	goto	u2590
  6805   002298                     u2591:
  6806   002298  EF65  F011         	goto	l3358
  6807   00229C                     u2590:
  6808   00229C  C02D  F022         	movff	___flmul@prod,??___flmul
  6809   0022A0  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  6810   0022A4  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  6811   0022A8  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  6812   0022AC  3425               	rlcf	(??___flmul+3)^0,w,c
  6813   0022AE  3225               	rrcf	(??___flmul+3)^0,f,c
  6814   0022B0  3224               	rrcf	(??___flmul+2)^0,f,c
  6815   0022B2  3223               	rrcf	(??___flmul+1)^0,f,c
  6816   0022B4  3222               	rrcf	??___flmul^0,f,c
  6817   0022B6  C022  F02D         	movff	??___flmul,___flmul@prod
  6818   0022BA  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  6819   0022BE  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  6820   0022C2  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  6821   0022C6  4A31               	infsnz	___flmul@temp^0,f,c
  6822   0022C8  2A32               	incf	(___flmul@temp+1)^0,f,c
  6823   0022CA                     l3358:
  6824   0022CA  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6825   0022CC  EF70  F011         	goto	u2601
  6826   0022D0  5032               	movf	(___flmul@temp+1)^0,w,c
  6827   0022D2  E108               	bnz	u2600
  6828   0022D4  2831               	incf	___flmul@temp^0,w,c
  6829   0022D6  A0D8               	btfss	status,0,c
  6830   0022D8  EF70  F011         	goto	u2601
  6831   0022DC  EF72  F011         	goto	u2600
  6832   0022E0                     u2601:
  6833   0022E0  EF7C  F011         	goto	l3362
  6834   0022E4                     u2600:
  6835   0022E4  0E00               	movlw	0
  6836   0022E6  6E2D               	movwf	___flmul@prod^0,c
  6837   0022E8  0E00               	movlw	0
  6838   0022EA  6E2E               	movwf	(___flmul@prod+1)^0,c
  6839   0022EC  0E80               	movlw	128
  6840   0022EE  6E2F               	movwf	(___flmul@prod+2)^0,c
  6841   0022F0  0E7F               	movlw	127
  6842   0022F2  6E30               	movwf	(___flmul@prod+3)^0,c
  6843   0022F4  EFAA  F011         	goto	l3374
  6844   0022F8                     l3362:
  6845   0022F8  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6846   0022FA  EF89  F011         	goto	u2610
  6847   0022FE  5032               	movf	(___flmul@temp+1)^0,w,c
  6848   002300  E106               	bnz	u2611
  6849   002302  0431               	decf	___flmul@temp^0,w,c
  6850   002304  B0D8               	btfsc	status,0,c
  6851   002306  EF87  F011         	goto	u2611
  6852   00230A  EF89  F011         	goto	u2610
  6853   00230E                     u2611:
  6854   00230E  EF95  F011         	goto	l1300
  6855   002312                     u2610:
  6856   002312  0E00               	movlw	0
  6857   002314  6E2D               	movwf	___flmul@prod^0,c
  6858   002316  0E00               	movlw	0
  6859   002318  6E2E               	movwf	(___flmul@prod+1)^0,c
  6860   00231A  0E00               	movlw	0
  6861   00231C  6E2F               	movwf	(___flmul@prod+2)^0,c
  6862   00231E  0E00               	movlw	0
  6863   002320  6E30               	movwf	(___flmul@prod+3)^0,c
  6864   002322  0E00               	movlw	0
  6865   002324  6E26               	movwf	___flmul@sign^0,c
  6866   002326  EFAA  F011         	goto	l3374
  6867   00232A                     l1300:
  6868   00232A  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  6869   00232E  0EFF               	movlw	255
  6870   002330  162D               	andwf	___flmul@prod^0,f,c
  6871   002332  0EFF               	movlw	255
  6872   002334  162E               	andwf	(___flmul@prod+1)^0,f,c
  6873   002336  0E7F               	movlw	127
  6874   002338  162F               	andwf	(___flmul@prod+2)^0,f,c
  6875   00233A  0E00               	movlw	0
  6876   00233C  1630               	andwf	(___flmul@prod+3)^0,f,c
  6877   00233E  A02C               	btfss	___flmul@bexp^0,0,c
  6878   002340  EFA4  F011         	goto	u2621
  6879   002344  EFA6  F011         	goto	u2620
  6880   002348                     u2621:
  6881   002348  EFA7  F011         	goto	l3372
  6882   00234C                     u2620:
  6883   00234C  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  6884   00234E                     l3372:
  6885   00234E  90D8               	bcf	status,0,c
  6886   002350  302C               	rrcf	___flmul@bexp^0,w,c
  6887   002352  6E30               	movwf	(___flmul@prod+3)^0,c
  6888   002354                     l3374:
  6889   002354  5026               	movf	___flmul@sign^0,w,c
  6890   002356  1230               	iorwf	(___flmul@prod+3)^0,f,c
  6891   002358  C02D  F01A         	movff	___flmul@prod,?___flmul
  6892   00235C  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  6893   002360  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  6894   002364  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  6895   002368                     l1287:
  6896   002368  0012               	return		;funcret
  6897   00236A                     __end_of___flmul:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function ___fltol *****************
  6901 ;; Defined at:
  6902 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  f1              4   74[COMRAM] unsigned char 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  exp1            1   83[COMRAM] unsigned char 
  6907 ;;  sign1           1   82[COMRAM] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  4   74[COMRAM] long 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;Total ram usage:       10 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_RGB2Hue
  6928 ;;		_Left45
  6929 ;;		_Right45
  6930 ;;		_reverseHalfSquare
  6931 ;;		_Yellow_rev1_R90
  6932 ;;		_Pink_rev1_L90
  6933 ;;		_White
  6934 ;;		_memoryUpdateTime
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text30
  6939   0034DE                     __ptext30:
  6940                           	callstack 0
  6941   0034DE                     ___fltol:
  6942                           	callstack 28
  6943   0034DE  344D               	rlcf	(___fltol@f1+2)^0,w,c
  6944   0034E0  344E               	rlcf	(___fltol@f1+3)^0,w,c
  6945   0034E2  6E54               	movwf	___fltol@exp1^0,c
  6946   0034E4  5054               	movf	___fltol@exp1^0,w,c
  6947   0034E6  A4D8               	btfss	status,2,c
  6948   0034E8  EF78  F01A         	goto	u3311
  6949   0034EC  EF7A  F01A         	goto	u3310
  6950   0034F0                     u3311:
  6951   0034F0  EF84  F01A         	goto	l3796
  6952   0034F4                     u3310:
  6953   0034F4                     l3792:
  6954   0034F4  0E00               	movlw	0
  6955   0034F6  6E4B               	movwf	?___fltol^0,c
  6956   0034F8  0E00               	movlw	0
  6957   0034FA  6E4C               	movwf	(?___fltol+1)^0,c
  6958   0034FC  0E00               	movlw	0
  6959   0034FE  6E4D               	movwf	(?___fltol+2)^0,c
  6960   003500  0E00               	movlw	0
  6961   003502  6E4E               	movwf	(?___fltol+3)^0,c
  6962   003504  EFF1  F01A         	goto	l966
  6963   003508                     l3796:
  6964   003508  C04B  F04F         	movff	___fltol@f1,??___fltol
  6965   00350C  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  6966   003510  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  6967   003514  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  6968   003518  0E20               	movlw	32
  6969   00351A  EF94  F01A         	goto	u3320
  6970   00351E                     u3325:
  6971   00351E  90D8               	bcf	status,0,c
  6972   003520  3252               	rrcf	(??___fltol+3)^0,f,c
  6973   003522  3251               	rrcf	(??___fltol+2)^0,f,c
  6974   003524  3250               	rrcf	(??___fltol+1)^0,f,c
  6975   003526  324F               	rrcf	??___fltol^0,f,c
  6976   003528                     u3320:
  6977   003528  2EE8               	decfsz	wreg,f,c
  6978   00352A  EF8F  F01A         	goto	u3325
  6979   00352E  504F               	movf	??___fltol^0,w,c
  6980   003530  6E53               	movwf	___fltol@sign1^0,c
  6981   003532  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  6982   003534  0EFF               	movlw	255
  6983   003536  164B               	andwf	___fltol@f1^0,f,c
  6984   003538  0EFF               	movlw	255
  6985   00353A  164C               	andwf	(___fltol@f1+1)^0,f,c
  6986   00353C  0EFF               	movlw	255
  6987   00353E  164D               	andwf	(___fltol@f1+2)^0,f,c
  6988   003540  0E00               	movlw	0
  6989   003542  164E               	andwf	(___fltol@f1+3)^0,f,c
  6990   003544  0E96               	movlw	150
  6991   003546  5E54               	subwf	___fltol@exp1^0,f,c
  6992   003548  BE54               	btfsc	___fltol@exp1^0,7,c
  6993   00354A  EFAB  F01A         	goto	u3330
  6994   00354E  EFA9  F01A         	goto	u3331
  6995   003552                     u3331:
  6996   003552  EFC1  F01A         	goto	l3816
  6997   003556                     u3330:
  6998   003556  5054               	movf	___fltol@exp1^0,w,c
  6999   003558  0A80               	xorlw	128
  7000   00355A  0F97               	addlw	151
  7001   00355C  B0D8               	btfsc	status,0,c
  7002   00355E  EFB3  F01A         	goto	u3341
  7003   003562  EFB5  F01A         	goto	u3340
  7004   003566                     u3341:
  7005   003566  EFB7  F01A         	goto	l3812
  7006   00356A                     u3340:
  7007   00356A  EF7A  F01A         	goto	l3792
  7008   00356E                     l3812:
  7009   00356E  90D8               	bcf	status,0,c
  7010   003570  324E               	rrcf	(___fltol@f1+3)^0,f,c
  7011   003572  324D               	rrcf	(___fltol@f1+2)^0,f,c
  7012   003574  324C               	rrcf	(___fltol@f1+1)^0,f,c
  7013   003576  324B               	rrcf	___fltol@f1^0,f,c
  7014   003578  3E54               	incfsz	___fltol@exp1^0,f,c
  7015   00357A  EFB7  F01A         	goto	l3812
  7016   00357E  EFD9  F01A         	goto	l3826
  7017   003582                     l3816:
  7018   003582  0E1F               	movlw	31
  7019   003584  6454               	cpfsgt	___fltol@exp1^0,c
  7020   003586  EFC7  F01A         	goto	u3351
  7021   00358A  EFC9  F01A         	goto	u3350
  7022   00358E                     u3351:
  7023   00358E  EFD1  F01A         	goto	l3824
  7024   003592                     u3350:
  7025   003592  EF7A  F01A         	goto	l3792
  7026   003596                     l3822:
  7027   003596  90D8               	bcf	status,0,c
  7028   003598  364B               	rlcf	___fltol@f1^0,f,c
  7029   00359A  364C               	rlcf	(___fltol@f1+1)^0,f,c
  7030   00359C  364D               	rlcf	(___fltol@f1+2)^0,f,c
  7031   00359E  364E               	rlcf	(___fltol@f1+3)^0,f,c
  7032   0035A0  0654               	decf	___fltol@exp1^0,f,c
  7033   0035A2                     l3824:
  7034   0035A2  5054               	movf	___fltol@exp1^0,w,c
  7035   0035A4  A4D8               	btfss	status,2,c
  7036   0035A6  EFD7  F01A         	goto	u3361
  7037   0035AA  EFD9  F01A         	goto	u3360
  7038   0035AE                     u3361:
  7039   0035AE  EFCB  F01A         	goto	l3822
  7040   0035B2                     u3360:
  7041   0035B2                     l3826:
  7042   0035B2  5053               	movf	___fltol@sign1^0,w,c
  7043   0035B4  B4D8               	btfsc	status,2,c
  7044   0035B6  EFDF  F01A         	goto	u3371
  7045   0035BA  EFE1  F01A         	goto	u3370
  7046   0035BE                     u3371:
  7047   0035BE  EFE9  F01A         	goto	l3830
  7048   0035C2                     u3370:
  7049   0035C2  1E4E               	comf	(___fltol@f1+3)^0,f,c
  7050   0035C4  1E4D               	comf	(___fltol@f1+2)^0,f,c
  7051   0035C6  1E4C               	comf	(___fltol@f1+1)^0,f,c
  7052   0035C8  6C4B               	negf	___fltol@f1^0,c
  7053   0035CA  0E00               	movlw	0
  7054   0035CC  224C               	addwfc	(___fltol@f1+1)^0,f,c
  7055   0035CE  224D               	addwfc	(___fltol@f1+2)^0,f,c
  7056   0035D0  224E               	addwfc	(___fltol@f1+3)^0,f,c
  7057   0035D2                     l3830:
  7058   0035D2  C04B  F04B         	movff	___fltol@f1,?___fltol
  7059   0035D6  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  7060   0035DA  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  7061   0035DE  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  7062   0035E2                     l966:
  7063   0035E2  0012               	return		;funcret
  7064   0035E4                     __end_of___fltol:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function _Yellow_rev1_R90 *****************
  7068 ;; Defined at:
  7069 ;;		line 266 in file "dc_motor.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7072 ;;		 -> motorL(9), 
  7073 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7074 ;;		 -> motorR(9), 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;		None
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used: 1
  7092 ;; Hardware stack levels required when called: 5
  7093 ;; This function calls:
  7094 ;;		_Left45
  7095 ;;		_Right45
  7096 ;;		_fullSpeedAhead
  7097 ;;		_fullSpeedReverse
  7098 ;;		_reverseHalfSquare
  7099 ;;		_stop
  7100 ;; This function is called by:
  7101 ;;		_Colour2Action
  7102 ;;		_White
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text31
  7107   0036E8                     __ptext31:
  7108                           	callstack 0
  7109   0036E8                     _Yellow_rev1_R90:
  7110                           	callstack 24
  7111   0036E8                     
  7112                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7113   0036E8  0100               	movlb	0	; () banked
  7114   0036EA  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7115   0036EC  B4D8               	btfsc	status,2,c
  7116   0036EE  EF7B  F01B         	goto	u2821
  7117   0036F2  EF7D  F01B         	goto	u2820
  7118   0036F6                     u2821:
  7119   0036F6  EFB3  F01B         	goto	l3518
  7120   0036FA                     u2820:
  7121   0036FA                     
  7122                           ; BSR set to: 0
  7123                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7124   0036FA  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7125   0036FE  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7126   003702  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7127   003706  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7128   00370A  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7129                           
  7130                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7131   00370E  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7132   003712  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7133   003716  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7134   00371A  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7135   00371E  ECB1  F020         	call	_fullSpeedReverse	;wreg free
  7136   003722                     
  7137                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7138   003722  0E39               	movlw	57
  7139   003724  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7140   003726  0ED2               	movlw	210
  7141   003728  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7142   00372A  0E4C               	movlw	76
  7143   00372C                     u4267:
  7144   00372C  2EE8               	decfsz	wreg,f,c
  7145   00372E  D7FE               	bra	u4267
  7146   003730  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7147   003732  D7FC               	bra	u4267
  7148   003734  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7149   003736  D7FA               	bra	u4267
  7150   003738  D000               	nop2	
  7151   00373A                     
  7152                           ;dc_motor.c: 274:         Right45(mL,mR);
  7153   00373A  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7154   00373E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7155   003742  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7156   003746  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7157   00374A  ECA4  F01F         	call	_Right45	;wreg free
  7158   00374E                     
  7159                           ;dc_motor.c: 275:         Right45(mL,mR);
  7160   00374E  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7161   003752  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7162   003756  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7163   00375A  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7164   00375E  ECA4  F01F         	call	_Right45	;wreg free
  7165                           
  7166                           ;dc_motor.c: 276:     }
  7167   003762  EFE7  F01B         	goto	l524
  7168   003766                     l3518:
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;dc_motor.c: 279:         Left45(mL,mR);
  7172   003766  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7173   00376A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7174   00376E  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7175   003772  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7176   003776  ECE9  F01F         	call	_Left45	;wreg free
  7177                           
  7178                           ;dc_motor.c: 280:         Left45(mL,mR);
  7179   00377A  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7180   00377E  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7181   003782  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7182   003786  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7183   00378A  ECE9  F01F         	call	_Left45	;wreg free
  7184                           
  7185                           ;dc_motor.c: 281:         fullSpeedAhead(mL,mR);
  7186   00378E  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  7187   003792  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  7188   003796  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  7189   00379A  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  7190   00379E  EC71  F020         	call	_fullSpeedAhead	;wreg free
  7191   0037A2                     
  7192                           ;dc_motor.c: 282:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7193   0037A2  0E39               	movlw	57
  7194   0037A4  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7195   0037A6  0ED2               	movlw	210
  7196   0037A8  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7197   0037AA  0E4C               	movlw	76
  7198   0037AC                     u4277:
  7199   0037AC  2EE8               	decfsz	wreg,f,c
  7200   0037AE  D7FE               	bra	u4277
  7201   0037B0  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7202   0037B2  D7FC               	bra	u4277
  7203   0037B4  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7204   0037B6  D7FA               	bra	u4277
  7205   0037B8  D000               	nop2	
  7206   0037BA                     
  7207                           ;dc_motor.c: 283:         stop(mL,mR);
  7208   0037BA  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  7209   0037BE  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  7210   0037C2  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  7211   0037C6  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  7212   0037CA  EC85  F01D         	call	_stop	;wreg free
  7213   0037CE                     l524:
  7214   0037CE  0012               	return		;funcret
  7215   0037D0                     __end_of_Yellow_rev1_R90:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _TimerReset *****************
  7219 ;; Defined at:
  7220 ;;		line 23 in file "timer.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;		None
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;Total ram usage:        0 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 1
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_main
  7245 ;;		_White
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text32
  7250   004990                     __ptext32:
  7251                           	callstack 0
  7252   004990                     _TimerReset:
  7253                           	callstack 29
  7254   004990                     
  7255                           ;timer.c: 25:     TMR0L = 0;
  7256   004990  0E00               	movlw	0
  7257   004992  6ED3               	movwf	211,c	;volatile
  7258                           
  7259                           ;timer.c: 26:     TMR0H = 0;
  7260   004994  0E00               	movlw	0
  7261   004996  6ED4               	movwf	212,c	;volatile
  7262   004998  0012               	return		;funcret
  7263   00499A                     __end_of_TimerReset:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function _Red_R90 *****************
  7267 ;; Defined at:
  7268 ;;		line 226 in file "dc_motor.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7271 ;;		 -> motorL(9), 
  7272 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7273 ;;		 -> motorR(9), 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;Total ram usage:        4 bytes
  7290 ;; Hardware stack levels used: 1
  7291 ;; Hardware stack levels required when called: 5
  7292 ;; This function calls:
  7293 ;;		_Left45
  7294 ;;		_Right45
  7295 ;;		_reverseHalfSquare
  7296 ;; This function is called by:
  7297 ;;		_Colour2Action
  7298 ;;		_White
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text33
  7303   0041E2                     __ptext33:
  7304                           	callstack 0
  7305   0041E2                     _Red_R90:
  7306                           	callstack 23
  7307   0041E2                     
  7308                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7309   0041E2  0100               	movlb	0	; () banked
  7310   0041E4  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7311   0041E6  B4D8               	btfsc	status,2,c
  7312   0041E8  EFF8  F020         	goto	u2791
  7313   0041EC  EFFA  F020         	goto	u2790
  7314   0041F0                     u2791:
  7315   0041F0  EF1A  F021         	goto	l3494
  7316   0041F4                     u2790:
  7317   0041F4                     
  7318                           ; BSR set to: 0
  7319                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7320   0041F4  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7321   0041F8  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7322   0041FC  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7323   004200  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7324   004204  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7325                           
  7326                           ;dc_motor.c: 230:         Right45(mL,mR);
  7327   004208  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7328   00420C  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7329   004210  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7330   004214  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7331   004218  ECA4  F01F         	call	_Right45	;wreg free
  7332                           
  7333                           ;dc_motor.c: 231:         Right45(mL,mR);
  7334   00421C  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7335   004220  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7336   004224  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7337   004228  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7338   00422C  ECA4  F01F         	call	_Right45	;wreg free
  7339                           
  7340                           ;dc_motor.c: 232:     }
  7341   004230  EF2E  F021         	goto	l509
  7342   004234                     l3494:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;dc_motor.c: 235:         Left45(mL,mR);
  7346   004234  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7347   004238  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7348   00423C  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7349   004240  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7350   004244  ECE9  F01F         	call	_Left45	;wreg free
  7351                           
  7352                           ;dc_motor.c: 236:         Left45(mL,mR);
  7353   004248  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7354   00424C  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7355   004250  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7356   004254  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7357   004258  ECE9  F01F         	call	_Left45	;wreg free
  7358   00425C                     l509:
  7359   00425C  0012               	return		;funcret
  7360   00425E                     __end_of_Red_R90:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function _Pink_rev1_L90 *****************
  7364 ;; Defined at:
  7365 ;;		line 286 in file "dc_motor.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7368 ;;		 -> motorL(9), 
  7369 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7370 ;;		 -> motorR(9), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  1    wreg      void 
  7375 ;; Registers used:
  7376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;Total ram usage:        6 bytes
  7387 ;; Hardware stack levels used: 1
  7388 ;; Hardware stack levels required when called: 5
  7389 ;; This function calls:
  7390 ;;		_Left45
  7391 ;;		_Right45
  7392 ;;		_fullSpeedAhead
  7393 ;;		_fullSpeedReverse
  7394 ;;		_reverseHalfSquare
  7395 ;;		_stop
  7396 ;; This function is called by:
  7397 ;;		_Colour2Action
  7398 ;;		_White
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text34
  7403   0037D0                     __ptext34:
  7404                           	callstack 0
  7405   0037D0                     _Pink_rev1_L90:
  7406                           	callstack 23
  7407   0037D0                     
  7408                           ;dc_motor.c: 286: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 287: {;dc_motor.c: 288:     if (ForwardFlag){
  7409   0037D0  0100               	movlb	0	; () banked
  7410   0037D2  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7411   0037D4  B4D8               	btfsc	status,2,c
  7412   0037D6  EFEF  F01B         	goto	u2831
  7413   0037DA  EFF1  F01B         	goto	u2830
  7414   0037DE                     u2831:
  7415   0037DE  EF27  F01C         	goto	l3534
  7416   0037E2                     u2830:
  7417   0037E2                     
  7418                           ; BSR set to: 0
  7419                           ;dc_motor.c: 289:         reverseHalfSquare(mL,mR);
  7420   0037E2  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7421   0037E6  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7422   0037EA  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7423   0037EE  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7424   0037F2  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7425                           
  7426                           ;dc_motor.c: 291:         fullSpeedReverse(mL,mR);
  7427   0037F6  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7428   0037FA  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7429   0037FE  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7430   003802  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7431   003806  ECB1  F020         	call	_fullSpeedReverse	;wreg free
  7432   00380A                     
  7433                           ;dc_motor.c: 292:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7434   00380A  0E39               	movlw	57
  7435   00380C  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7436   00380E  0ED2               	movlw	210
  7437   003810  6E25               	movwf	??_Pink_rev1_L90^0,c
  7438   003812  0E4C               	movlw	76
  7439   003814                     u4287:
  7440   003814  2EE8               	decfsz	wreg,f,c
  7441   003816  D7FE               	bra	u4287
  7442   003818  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7443   00381A  D7FC               	bra	u4287
  7444   00381C  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7445   00381E  D7FA               	bra	u4287
  7446   003820  D000               	nop2	
  7447   003822                     
  7448                           ;dc_motor.c: 293:         Left45(mL,mR);
  7449   003822  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7450   003826  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7451   00382A  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7452   00382E  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7453   003832  ECE9  F01F         	call	_Left45	;wreg free
  7454   003836                     
  7455                           ;dc_motor.c: 294:         Left45(mL,mR);
  7456   003836  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7457   00383A  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7458   00383E  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7459   003842  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7460   003846  ECE9  F01F         	call	_Left45	;wreg free
  7461                           
  7462                           ;dc_motor.c: 295:     }
  7463   00384A  EF5B  F01C         	goto	l529
  7464   00384E                     l3534:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;dc_motor.c: 298:         Right45(mL,mR);
  7468   00384E  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7469   003852  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7470   003856  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7471   00385A  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7472   00385E  ECA4  F01F         	call	_Right45	;wreg free
  7473                           
  7474                           ;dc_motor.c: 299:         Right45(mL,mR);
  7475   003862  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7476   003866  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7477   00386A  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7478   00386E  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7479   003872  ECA4  F01F         	call	_Right45	;wreg free
  7480                           
  7481                           ;dc_motor.c: 300:         fullSpeedAhead(mL,mR);
  7482   003876  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  7483   00387A  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  7484   00387E  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  7485   003882  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  7486   003886  EC71  F020         	call	_fullSpeedAhead	;wreg free
  7487   00388A                     
  7488                           ;dc_motor.c: 301:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7489   00388A  0E39               	movlw	57
  7490   00388C  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7491   00388E  0ED2               	movlw	210
  7492   003890  6E25               	movwf	??_Pink_rev1_L90^0,c
  7493   003892  0E4C               	movlw	76
  7494   003894                     u4297:
  7495   003894  2EE8               	decfsz	wreg,f,c
  7496   003896  D7FE               	bra	u4297
  7497   003898  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7498   00389A  D7FC               	bra	u4297
  7499   00389C  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7500   00389E  D7FA               	bra	u4297
  7501   0038A0  D000               	nop2	
  7502   0038A2                     
  7503                           ;dc_motor.c: 302:         stop(mL,mR);
  7504   0038A2  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  7505   0038A6  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  7506   0038AA  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  7507   0038AE  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  7508   0038B2  EC85  F01D         	call	_stop	;wreg free
  7509   0038B6                     l529:
  7510   0038B6  0012               	return		;funcret
  7511   0038B8                     __end_of_Pink_rev1_L90:
  7512                           	callstack 0
  7513                           
  7514 ;; *************** function _fullSpeedAhead *****************
  7515 ;; Defined at:
  7516 ;;		line 149 in file "dc_motor.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7519 ;;		 -> motorL(9), 
  7520 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7521 ;;		 -> motorR(9), 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  i               2   24[COMRAM] unsigned int 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7536 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;Total ram usage:        7 bytes
  7538 ;; Hardware stack levels used: 1
  7539 ;; Hardware stack levels required when called: 3
  7540 ;; This function calls:
  7541 ;;		_setMotorPWM
  7542 ;; This function is called by:
  7543 ;;		_main
  7544 ;;		_Yellow_rev1_R90
  7545 ;;		_Pink_rev1_L90
  7546 ;;		_White
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text35
  7551   0040E2                     __ptext35:
  7552                           	callstack 0
  7553   0040E2                     _fullSpeedAhead:
  7554                           	callstack 27
  7555   0040E2                     
  7556                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  7557   0040E2  EE20 F001          	lfsr	2,1
  7558   0040E6  5014               	movf	fullSpeedAhead@mL^0,w,c
  7559   0040E8  26D9               	addwf	fsr2l,f,c
  7560   0040EA  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7561   0040EC  22DA               	addwfc	fsr2h,f,c
  7562   0040EE  0E01               	movlw	1
  7563   0040F0  6EDF               	movwf	indf2,c
  7564                           
  7565                           ;dc_motor.c: 152:  (mR->direction) = 1;
  7566   0040F2  EE20 F001          	lfsr	2,1
  7567   0040F6  5016               	movf	fullSpeedAhead@mR^0,w,c
  7568   0040F8  26D9               	addwf	fsr2l,f,c
  7569   0040FA  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7570   0040FC  22DA               	addwfc	fsr2h,f,c
  7571   0040FE  0E01               	movlw	1
  7572   004100  6EDF               	movwf	indf2,c
  7573   004102                     
  7574                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  7575   004102  0E00               	movlw	0
  7576   004104  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7577   004106  0E00               	movlw	0
  7578   004108  6E19               	movwf	fullSpeedAhead@i^0,c
  7579   00410A                     l3212:
  7580                           
  7581                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  7582   00410A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7583   00410E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7584   004112  2ADF               	incf	indf2,f,c
  7585                           
  7586                           ;dc_motor.c: 157:         (mR->power)++;
  7587   004114  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7588   004118  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7589   00411C  2ADF               	incf	indf2,f,c
  7590   00411E                     
  7591                           ;dc_motor.c: 158:         setMotorPWM(mL);
  7592   00411E  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7593   004122  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7594   004126  ECEB  F017         	call	_setMotorPWM	;wreg free
  7595   00412A                     
  7596                           ;dc_motor.c: 159:         setMotorPWM(mR);
  7597   00412A  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7598   00412E  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7599   004132  ECEB  F017         	call	_setMotorPWM	;wreg free
  7600   004136                     
  7601                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7602   004136  0E09               	movlw	9
  7603   004138  6E18               	movwf	??_fullSpeedAhead^0,c
  7604   00413A  0E4E               	movlw	78
  7605   00413C                     u4307:
  7606   00413C  2EE8               	decfsz	wreg,f,c
  7607   00413E  D7FE               	bra	u4307
  7608   004140  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7609   004142  D7FC               	bra	u4307
  7610   004144  D000               	nop2	
  7611   004146                     
  7612                           ;dc_motor.c: 161:     }
  7613   004146  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7614   004148  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7615   00414A  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7616   00414C  E109               	bnz	u2430
  7617   00414E  0E32               	movlw	50
  7618   004150  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7619   004152  A0D8               	btfss	status,0,c
  7620   004154  EFAE  F020         	goto	u2431
  7621   004158  EFB0  F020         	goto	u2430
  7622   00415C                     u2431:
  7623   00415C  EF85  F020         	goto	l3212
  7624   004160                     u2430:
  7625   004160  0012               	return		;funcret
  7626   004162                     __end_of_fullSpeedAhead:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function _Orange_R135 *****************
  7630 ;; Defined at:
  7631 ;;		line 305 in file "dc_motor.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7634 ;;		 -> motorL(9), 
  7635 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7636 ;;		 -> motorR(9), 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;Total ram usage:        4 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 5
  7655 ;; This function calls:
  7656 ;;		_Left45
  7657 ;;		_Right45
  7658 ;;		_reverseHalfSquare
  7659 ;; This function is called by:
  7660 ;;		_Colour2Action
  7661 ;;		_White
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text36
  7666   003BB0                     __ptext36:
  7667                           	callstack 0
  7668   003BB0                     _Orange_R135:
  7669                           	callstack 23
  7670   003BB0                     
  7671                           ;dc_motor.c: 305: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           306: {;dc_motor.c: 307:     if (ForwardFlag){
  7672   003BB0  0100               	movlb	0	; () banked
  7673   003BB2  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7674   003BB4  B4D8               	btfsc	status,2,c
  7675   003BB6  EFDF  F01D         	goto	u2841
  7676   003BBA  EFE1  F01D         	goto	u2840
  7677   003BBE                     u2841:
  7678   003BBE  EF0B  F01E         	goto	l3544
  7679   003BC2                     u2840:
  7680   003BC2                     
  7681                           ; BSR set to: 0
  7682                           ;dc_motor.c: 308:         reverseHalfSquare(mL,mR);
  7683   003BC2  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7684   003BC6  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7685   003BCA  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7686   003BCE  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7687   003BD2  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7688                           
  7689                           ;dc_motor.c: 310:         Right45(mL,mR);
  7690   003BD6  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7691   003BDA  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7692   003BDE  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7693   003BE2  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7694   003BE6  ECA4  F01F         	call	_Right45	;wreg free
  7695                           
  7696                           ;dc_motor.c: 311:         Right45(mL,mR);
  7697   003BEA  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7698   003BEE  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7699   003BF2  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7700   003BF6  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7701   003BFA  ECA4  F01F         	call	_Right45	;wreg free
  7702                           
  7703                           ;dc_motor.c: 312:         Right45(mL,mR);
  7704   003BFE  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7705   003C02  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7706   003C06  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7707   003C0A  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7708   003C0E  ECA4  F01F         	call	_Right45	;wreg free
  7709                           
  7710                           ;dc_motor.c: 315:     }
  7711   003C12  EF29  F01E         	goto	l534
  7712   003C16                     l3544:
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;dc_motor.c: 318:         Left45(mL,mR);
  7716   003C16  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7717   003C1A  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7718   003C1E  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7719   003C22  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7720   003C26  ECE9  F01F         	call	_Left45	;wreg free
  7721                           
  7722                           ;dc_motor.c: 319:         Left45(mL,mR);
  7723   003C2A  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7724   003C2E  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7725   003C32  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7726   003C36  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7727   003C3A  ECE9  F01F         	call	_Left45	;wreg free
  7728                           
  7729                           ;dc_motor.c: 320:         Left45(mL,mR);
  7730   003C3E  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7731   003C42  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7732   003C46  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7733   003C4A  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7734   003C4E  ECE9  F01F         	call	_Left45	;wreg free
  7735   003C52                     l534:
  7736   003C52  0012               	return		;funcret
  7737   003C54                     __end_of_Orange_R135:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _LightBlue_L135 *****************
  7741 ;; Defined at:
  7742 ;;		line 323 in file "dc_motor.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7745 ;;		 -> motorL(9), 
  7746 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7747 ;;		 -> motorR(9), 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;Total ram usage:        4 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 5
  7766 ;; This function calls:
  7767 ;;		_Left45
  7768 ;;		_Right45
  7769 ;;		_reverseHalfSquare
  7770 ;; This function is called by:
  7771 ;;		_Colour2Action
  7772 ;;		_White
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text37
  7777   003C54                     __ptext37:
  7778                           	callstack 0
  7779   003C54                     _LightBlue_L135:
  7780                           	callstack 23
  7781   003C54                     
  7782                           ;dc_motor.c: 323: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 324: {;dc_motor.c: 326:      if (ForwardFlag){
  7783   003C54  0100               	movlb	0	; () banked
  7784   003C56  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7785   003C58  B4D8               	btfsc	status,2,c
  7786   003C5A  EF31  F01E         	goto	u2851
  7787   003C5E  EF33  F01E         	goto	u2850
  7788   003C62                     u2851:
  7789   003C62  EF5D  F01E         	goto	l3550
  7790   003C66                     u2850:
  7791   003C66                     
  7792                           ; BSR set to: 0
  7793                           ;dc_motor.c: 327:         reverseHalfSquare(mL,mR);
  7794   003C66  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7795   003C6A  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7796   003C6E  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7797   003C72  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7798   003C76  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7799                           
  7800                           ;dc_motor.c: 329:         Left45(mL,mR);
  7801   003C7A  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7802   003C7E  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7803   003C82  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7804   003C86  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7805   003C8A  ECE9  F01F         	call	_Left45	;wreg free
  7806                           
  7807                           ;dc_motor.c: 330:         Left45(mL,mR);
  7808   003C8E  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7809   003C92  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7810   003C96  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7811   003C9A  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7812   003C9E  ECE9  F01F         	call	_Left45	;wreg free
  7813                           
  7814                           ;dc_motor.c: 331:         Left45(mL,mR);
  7815   003CA2  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7816   003CA6  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7817   003CAA  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7818   003CAE  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7819   003CB2  ECE9  F01F         	call	_Left45	;wreg free
  7820                           
  7821                           ;dc_motor.c: 333:     }
  7822   003CB6  EF7B  F01E         	goto	l539
  7823   003CBA                     l3550:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;dc_motor.c: 336:         Right45(mL,mR);
  7827   003CBA  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7828   003CBE  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7829   003CC2  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7830   003CC6  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7831   003CCA  ECA4  F01F         	call	_Right45	;wreg free
  7832                           
  7833                           ;dc_motor.c: 337:         Right45(mL,mR);
  7834   003CCE  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7835   003CD2  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7836   003CD6  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7837   003CDA  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7838   003CDE  ECA4  F01F         	call	_Right45	;wreg free
  7839                           
  7840                           ;dc_motor.c: 338:         Right45(mL,mR);
  7841   003CE2  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7842   003CE6  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7843   003CEA  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7844   003CEE  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7845   003CF2  ECA4  F01F         	call	_Right45	;wreg free
  7846   003CF6                     l539:
  7847   003CF6  0012               	return		;funcret
  7848   003CF8                     __end_of_LightBlue_L135:
  7849                           	callstack 0
  7850                           
  7851 ;; *************** function _Green_L90 *****************
  7852 ;; Defined at:
  7853 ;;		line 240 in file "dc_motor.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7856 ;;		 -> motorL(9), 
  7857 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7858 ;;		 -> motorR(9), 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;Total ram usage:        4 bytes
  7875 ;; Hardware stack levels used: 1
  7876 ;; Hardware stack levels required when called: 5
  7877 ;; This function calls:
  7878 ;;		_Left45
  7879 ;;		_Right45
  7880 ;;		_reverseHalfSquare
  7881 ;; This function is called by:
  7882 ;;		_Colour2Action
  7883 ;;		_White
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text38
  7888   00425E                     __ptext38:
  7889                           	callstack 0
  7890   00425E                     _Green_L90:
  7891                           	callstack 23
  7892   00425E                     
  7893                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  7894   00425E  0100               	movlb	0	; () banked
  7895   004260  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7896   004262  B4D8               	btfsc	status,2,c
  7897   004264  EF36  F021         	goto	u2801
  7898   004268  EF38  F021         	goto	u2800
  7899   00426C                     u2801:
  7900   00426C  EF58  F021         	goto	l3500
  7901   004270                     u2800:
  7902   004270                     
  7903                           ; BSR set to: 0
  7904                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  7905   004270  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  7906   004274  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  7907   004278  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  7908   00427C  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  7909   004280  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  7910                           
  7911                           ;dc_motor.c: 245:         Left45(mL,mR);
  7912   004284  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7913   004288  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7914   00428C  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7915   004290  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7916   004294  ECE9  F01F         	call	_Left45	;wreg free
  7917                           
  7918                           ;dc_motor.c: 246:         Left45(mL,mR);
  7919   004298  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7920   00429C  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7921   0042A0  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7922   0042A4  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7923   0042A8  ECE9  F01F         	call	_Left45	;wreg free
  7924                           
  7925                           ;dc_motor.c: 247:     }
  7926   0042AC  EF6C  F021         	goto	l514
  7927   0042B0                     l3500:
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;dc_motor.c: 250:         Right45(mL,mR);
  7931   0042B0  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7932   0042B4  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7933   0042B8  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7934   0042BC  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7935   0042C0  ECA4  F01F         	call	_Right45	;wreg free
  7936                           
  7937                           ;dc_motor.c: 251:         Right45(mL,mR);
  7938   0042C4  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7939   0042C8  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7940   0042CC  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7941   0042D0  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7942   0042D4  ECA4  F01F         	call	_Right45	;wreg free
  7943   0042D8                     l514:
  7944   0042D8  0012               	return		;funcret
  7945   0042DA                     __end_of_Green_L90:
  7946                           	callstack 0
  7947                           
  7948 ;; *************** function _Right45 *****************
  7949 ;; Defined at:
  7950 ;;		line 193 in file "dc_motor.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7953 ;;		 -> motorL(9), 
  7954 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7955 ;;		 -> motorR(9), 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;Total ram usage:        6 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 4
  7974 ;; This function calls:
  7975 ;;		_stop
  7976 ;;		_turnRight
  7977 ;; This function is called by:
  7978 ;;		_Red_R90
  7979 ;;		_Green_L90
  7980 ;;		_Yellow_rev1_R90
  7981 ;;		_Pink_rev1_L90
  7982 ;;		_Orange_R135
  7983 ;;		_LightBlue_L135
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text39
  7988   003F48                     __ptext39:
  7989                           	callstack 0
  7990   003F48                     _Right45:
  7991                           	callstack 24
  7992   003F48                     
  7993                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7994   003F48  8080               	bsf	128,0,c	;volatile
  7995   003F4A                     
  7996                           ;dc_motor.c: 197:     stop(mL,mR);
  7997   003F4A  C01A  F014         	movff	Right45@mL,stop@mL
  7998   003F4E  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7999   003F52  C01C  F016         	movff	Right45@mR,stop@mR
  8000   003F56  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8001   003F5A  EC85  F01D         	call	_stop	;wreg free
  8002   003F5E                     
  8003                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8004   003F5E  0E05               	movlw	5
  8005   003F60  6E1F               	movwf	(??_Right45+1)^0,c
  8006   003F62  0E0F               	movlw	15
  8007   003F64  6E1E               	movwf	??_Right45^0,c
  8008   003F66  0EF1               	movlw	241
  8009   003F68                     u4317:
  8010   003F68  2EE8               	decfsz	wreg,f,c
  8011   003F6A  D7FE               	bra	u4317
  8012   003F6C  2E1E               	decfsz	??_Right45^0,f,c
  8013   003F6E  D7FC               	bra	u4317
  8014   003F70  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8015   003F72  D7FA               	bra	u4317
  8016   003F74  F000               	nop	
  8017   003F76                     
  8018                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8019   003F76  C01A  F014         	movff	Right45@mL,turnRight@mL
  8020   003F7A  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8021   003F7E  C01C  F016         	movff	Right45@mR,turnRight@mR
  8022   003F82  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8023   003F86  EC7C  F01E         	call	_turnRight	;wreg free
  8024                           
  8025                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8026   003F8A  0E0D               	movlw	13
  8027   003F8C  6E1F               	movwf	(??_Right45+1)^0,c
  8028   003F8E  0EFD               	movlw	253
  8029   003F90  6E1E               	movwf	??_Right45^0,c
  8030   003F92  0EA2               	movlw	162
  8031   003F94                     u4327:
  8032   003F94  2EE8               	decfsz	wreg,f,c
  8033   003F96  D7FE               	bra	u4327
  8034   003F98  2E1E               	decfsz	??_Right45^0,f,c
  8035   003F9A  D7FC               	bra	u4327
  8036   003F9C  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8037   003F9E  D7FA               	bra	u4327
  8038   003FA0  D000               	nop2	
  8039   003FA2                     
  8040                           ;dc_motor.c: 201:     stop(mL,mR);
  8041   003FA2  C01A  F014         	movff	Right45@mL,stop@mL
  8042   003FA6  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8043   003FAA  C01C  F016         	movff	Right45@mR,stop@mR
  8044   003FAE  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8045   003FB2  EC85  F01D         	call	_stop	;wreg free
  8046   003FB6                     
  8047                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8048   003FB6  0E05               	movlw	5
  8049   003FB8  6E1F               	movwf	(??_Right45+1)^0,c
  8050   003FBA  0E0F               	movlw	15
  8051   003FBC  6E1E               	movwf	??_Right45^0,c
  8052   003FBE  0EF1               	movlw	241
  8053   003FC0                     u4337:
  8054   003FC0  2EE8               	decfsz	wreg,f,c
  8055   003FC2  D7FE               	bra	u4337
  8056   003FC4  2E1E               	decfsz	??_Right45^0,f,c
  8057   003FC6  D7FC               	bra	u4337
  8058   003FC8  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8059   003FCA  D7FA               	bra	u4337
  8060   003FCC  F000               	nop	
  8061   003FCE                     
  8062                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8063   003FCE  9080               	bcf	128,0,c	;volatile
  8064   003FD0  0012               	return		;funcret
  8065   003FD2                     __end_of_Right45:
  8066                           	callstack 0
  8067                           
  8068 ;; *************** function _turnRight *****************
  8069 ;; Defined at:
  8070 ;;		line 132 in file "dc_motor.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8073 ;;		 -> motorL(9), 
  8074 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8075 ;;		 -> motorR(9), 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  i               2   23[COMRAM] unsigned int 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;Total ram usage:        6 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; Hardware stack levels required when called: 3
  8094 ;; This function calls:
  8095 ;;		_setMotorPWM
  8096 ;; This function is called by:
  8097 ;;		_Right45
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text40
  8102   003CF8                     __ptext40:
  8103                           	callstack 0
  8104   003CF8                     _turnRight:
  8105                           	callstack 24
  8106   003CF8                     
  8107                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8108   003CF8  EE20 F001          	lfsr	2,1
  8109   003CFC  5014               	movf	turnRight@mL^0,w,c
  8110   003CFE  26D9               	addwf	fsr2l,f,c
  8111   003D00  5015               	movf	(turnRight@mL+1)^0,w,c
  8112   003D02  22DA               	addwfc	fsr2h,f,c
  8113   003D04  0E01               	movlw	1
  8114   003D06  6EDF               	movwf	indf2,c
  8115                           
  8116                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8117   003D08  EE20 F001          	lfsr	2,1
  8118   003D0C  5016               	movf	turnRight@mR^0,w,c
  8119   003D0E  26D9               	addwf	fsr2l,f,c
  8120   003D10  5017               	movf	(turnRight@mR+1)^0,w,c
  8121   003D12  22DA               	addwfc	fsr2h,f,c
  8122   003D14  0E00               	movlw	0
  8123   003D16  6EDF               	movwf	indf2,c
  8124   003D18                     
  8125                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8126   003D18  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8127   003D1C  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8128   003D20  ECEB  F017         	call	_setMotorPWM	;wreg free
  8129   003D24                     
  8130                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8131   003D24  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8132   003D28  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8133   003D2C  ECEB  F017         	call	_setMotorPWM	;wreg free
  8134   003D30                     
  8135                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8136   003D30  0E00               	movlw	0
  8137   003D32  6E19               	movwf	(turnRight@i+1)^0,c
  8138   003D34  0E00               	movlw	0
  8139   003D36  6E18               	movwf	turnRight@i^0,c
  8140   003D38                     l3102:
  8141                           
  8142                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8143   003D38  C014  FFD9         	movff	turnRight@mL,fsr2l
  8144   003D3C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8145   003D40  2ADF               	incf	indf2,f,c
  8146                           
  8147                           ;dc_motor.c: 141:         mR->power++;
  8148   003D42  C016  FFD9         	movff	turnRight@mR,fsr2l
  8149   003D46  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8150   003D4A  2ADF               	incf	indf2,f,c
  8151   003D4C                     
  8152                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8153   003D4C  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8154   003D50  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8155   003D54  ECEB  F017         	call	_setMotorPWM	;wreg free
  8156   003D58                     
  8157                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8158   003D58  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8159   003D5C  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8160   003D60  ECEB  F017         	call	_setMotorPWM	;wreg free
  8161   003D64                     
  8162                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8163   003D64  0EE4               	movlw	228
  8164   003D66                     u4347:
  8165   003D66  D000               	nop2	
  8166   003D68  D000               	nop2	
  8167   003D6A  2EE8               	decfsz	wreg,f,c
  8168   003D6C  D7FC               	bra	u4347
  8169   003D6E  D000               	nop2	
  8170   003D70  D000               	nop2	
  8171   003D72                     
  8172                           ;dc_motor.c: 145:     }
  8173   003D72  4A18               	infsnz	turnRight@i^0,f,c
  8174   003D74  2A19               	incf	(turnRight@i+1)^0,f,c
  8175   003D76  5019               	movf	(turnRight@i+1)^0,w,c
  8176   003D78  E109               	bnz	u2270
  8177   003D7A  0E32               	movlw	50
  8178   003D7C  5C18               	subwf	turnRight@i^0,w,c
  8179   003D7E  A0D8               	btfss	status,0,c
  8180   003D80  EFC4  F01E         	goto	u2271
  8181   003D84  EFC6  F01E         	goto	u2270
  8182   003D88                     u2271:
  8183   003D88  EF9C  F01E         	goto	l3102
  8184   003D8C                     u2270:
  8185   003D8C  0012               	return		;funcret
  8186   003D8E                     __end_of_turnRight:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function _Blue_T180 *****************
  8190 ;; Defined at:
  8191 ;;		line 255 in file "dc_motor.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8194 ;;		 -> motorL(9), 
  8195 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8196 ;;		 -> motorR(9), 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  1    wreg      void 
  8201 ;; Registers used:
  8202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;Total ram usage:        4 bytes
  8213 ;; Hardware stack levels used: 1
  8214 ;; Hardware stack levels required when called: 6
  8215 ;; This function calls:
  8216 ;;		_reverseHalfSquare
  8217 ;;		_rotate180left
  8218 ;; This function is called by:
  8219 ;;		_Colour2Action
  8220 ;;		_White
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text41
  8225   004402                     __ptext41:
  8226                           	callstack 0
  8227   004402                     _Blue_T180:
  8228                           	callstack 22
  8229   004402                     
  8230                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8231   004402  0100               	movlb	0	; () banked
  8232   004404  51FF               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8233   004406  B4D8               	btfsc	status,2,c
  8234   004408  EF08  F022         	goto	u2811
  8235   00440C  EF0A  F022         	goto	u2810
  8236   004410                     u2811:
  8237   004410  EF20  F022         	goto	l3506
  8238   004414                     u2810:
  8239   004414                     
  8240                           ; BSR set to: 0
  8241                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8242   004414  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8243   004418  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8244   00441C  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8245   004420  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8246   004424  EC2E  F020         	call	_reverseHalfSquare	;wreg free
  8247                           
  8248                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8249   004428  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8250   00442C  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8251   004430  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8252   004434  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8253   004438  EC2B  F022         	call	_rotate180left	;wreg free
  8254                           
  8255                           ;dc_motor.c: 261:     }else{
  8256   00443C  EF2A  F022         	goto	l519
  8257   004440                     l3506:
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8261   004440  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8262   004444  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8263   004448  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8264   00444C  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8265   004450  EC2B  F022         	call	_rotate180left	;wreg free
  8266   004454                     l519:
  8267   004454  0012               	return		;funcret
  8268   004456                     __end_of_Blue_T180:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _rotate180left *****************
  8272 ;; Defined at:
  8273 ;;		line 207 in file "dc_motor.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8276 ;;		 -> motorL(9), 
  8277 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8278 ;;		 -> motorR(9), 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;Total ram usage:        4 bytes
  8295 ;; Hardware stack levels used: 1
  8296 ;; Hardware stack levels required when called: 5
  8297 ;; This function calls:
  8298 ;;		_Left45
  8299 ;; This function is called by:
  8300 ;;		_Blue_T180
  8301 ;;		_White
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text42
  8306   004456                     __ptext42:
  8307                           	callstack 0
  8308   004456                     _rotate180left:
  8309                           	callstack 23
  8310   004456                     
  8311                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8312   004456  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8313   00445A  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8314   00445E  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8315   004462  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8316   004466  ECE9  F01F         	call	_Left45	;wreg free
  8317                           
  8318                           ;dc_motor.c: 211:     Left45(mL,mR);
  8319   00446A  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8320   00446E  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8321   004472  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8322   004476  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8323   00447A  ECE9  F01F         	call	_Left45	;wreg free
  8324                           
  8325                           ;dc_motor.c: 212:     Left45(mL,mR);
  8326   00447E  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8327   004482  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8328   004486  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8329   00448A  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8330   00448E  ECE9  F01F         	call	_Left45	;wreg free
  8331                           
  8332                           ;dc_motor.c: 213:     Left45(mL,mR);
  8333   004492  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8334   004496  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8335   00449A  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8336   00449E  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8337   0044A2  ECE9  F01F         	call	_Left45	;wreg free
  8338   0044A6  0012               	return		;funcret
  8339   0044A8                     __end_of_rotate180left:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function _Left45 *****************
  8343 ;; Defined at:
  8344 ;;		line 179 in file "dc_motor.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8347 ;;		 -> motorL(9), 
  8348 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8349 ;;		 -> motorR(9), 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8361 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8365 ;;Total ram usage:        6 bytes
  8366 ;; Hardware stack levels used: 1
  8367 ;; Hardware stack levels required when called: 4
  8368 ;; This function calls:
  8369 ;;		_stop
  8370 ;;		_turnLeft
  8371 ;; This function is called by:
  8372 ;;		_rotate180left
  8373 ;;		_Red_R90
  8374 ;;		_Green_L90
  8375 ;;		_Yellow_rev1_R90
  8376 ;;		_Pink_rev1_L90
  8377 ;;		_Orange_R135
  8378 ;;		_LightBlue_L135
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text43
  8383   003FD2                     __ptext43:
  8384                           	callstack 0
  8385   003FD2                     _Left45:
  8386                           	callstack 24
  8387   003FD2                     
  8388                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8389   003FD2  807E               	bsf	126,0,c	;volatile
  8390   003FD4                     
  8391                           ;dc_motor.c: 183:     stop(mL,mR);
  8392   003FD4  C01A  F014         	movff	Left45@mL,stop@mL
  8393   003FD8  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8394   003FDC  C01C  F016         	movff	Left45@mR,stop@mR
  8395   003FE0  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8396   003FE4  EC85  F01D         	call	_stop	;wreg free
  8397   003FE8                     
  8398                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8399   003FE8  0E05               	movlw	5
  8400   003FEA  6E1F               	movwf	(??_Left45+1)^0,c
  8401   003FEC  0E0F               	movlw	15
  8402   003FEE  6E1E               	movwf	??_Left45^0,c
  8403   003FF0  0EF1               	movlw	241
  8404   003FF2                     u4357:
  8405   003FF2  2EE8               	decfsz	wreg,f,c
  8406   003FF4  D7FE               	bra	u4357
  8407   003FF6  2E1E               	decfsz	??_Left45^0,f,c
  8408   003FF8  D7FC               	bra	u4357
  8409   003FFA  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8410   003FFC  D7FA               	bra	u4357
  8411   003FFE  F000               	nop	
  8412   004000                     
  8413                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8414   004000  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8415   004004  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8416   004008  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8417   00400C  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8418   004010  ECC7  F01E         	call	_turnLeft	;wreg free
  8419                           
  8420                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8421   004014  0E0D               	movlw	13
  8422   004016  6E1F               	movwf	(??_Left45+1)^0,c
  8423   004018  0EFD               	movlw	253
  8424   00401A  6E1E               	movwf	??_Left45^0,c
  8425   00401C  0EA2               	movlw	162
  8426   00401E                     u4367:
  8427   00401E  2EE8               	decfsz	wreg,f,c
  8428   004020  D7FE               	bra	u4367
  8429   004022  2E1E               	decfsz	??_Left45^0,f,c
  8430   004024  D7FC               	bra	u4367
  8431   004026  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8432   004028  D7FA               	bra	u4367
  8433   00402A  D000               	nop2	
  8434   00402C                     
  8435                           ;dc_motor.c: 187:     stop(mL,mR);
  8436   00402C  C01A  F014         	movff	Left45@mL,stop@mL
  8437   004030  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8438   004034  C01C  F016         	movff	Left45@mR,stop@mR
  8439   004038  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8440   00403C  EC85  F01D         	call	_stop	;wreg free
  8441   004040                     
  8442                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8443   004040  0E05               	movlw	5
  8444   004042  6E1F               	movwf	(??_Left45+1)^0,c
  8445   004044  0E0F               	movlw	15
  8446   004046  6E1E               	movwf	??_Left45^0,c
  8447   004048  0EF1               	movlw	241
  8448   00404A                     u4377:
  8449   00404A  2EE8               	decfsz	wreg,f,c
  8450   00404C  D7FE               	bra	u4377
  8451   00404E  2E1E               	decfsz	??_Left45^0,f,c
  8452   004050  D7FC               	bra	u4377
  8453   004052  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8454   004054  D7FA               	bra	u4377
  8455   004056  F000               	nop	
  8456   004058                     
  8457                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8458   004058  907E               	bcf	126,0,c	;volatile
  8459   00405A  0012               	return		;funcret
  8460   00405C                     __end_of_Left45:
  8461                           	callstack 0
  8462                           
  8463 ;; *************** function _turnLeft *****************
  8464 ;; Defined at:
  8465 ;;		line 113 in file "dc_motor.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8468 ;;		 -> motorL(9), 
  8469 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8470 ;;		 -> motorR(9), 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  i               2   23[COMRAM] unsigned int 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8485 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8486 ;;Total ram usage:        6 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; Hardware stack levels required when called: 3
  8489 ;; This function calls:
  8490 ;;		_setMotorPWM
  8491 ;; This function is called by:
  8492 ;;		_Left45
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text44
  8497   003D8E                     __ptext44:
  8498                           	callstack 0
  8499   003D8E                     _turnLeft:
  8500                           	callstack 24
  8501   003D8E                     
  8502                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8503   003D8E  EE20 F001          	lfsr	2,1
  8504   003D92  5014               	movf	turnLeft@mL^0,w,c
  8505   003D94  26D9               	addwf	fsr2l,f,c
  8506   003D96  5015               	movf	(turnLeft@mL+1)^0,w,c
  8507   003D98  22DA               	addwfc	fsr2h,f,c
  8508   003D9A  0E00               	movlw	0
  8509   003D9C  6EDF               	movwf	indf2,c
  8510                           
  8511                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8512   003D9E  EE20 F001          	lfsr	2,1
  8513   003DA2  5016               	movf	turnLeft@mR^0,w,c
  8514   003DA4  26D9               	addwf	fsr2l,f,c
  8515   003DA6  5017               	movf	(turnLeft@mR+1)^0,w,c
  8516   003DA8  22DA               	addwfc	fsr2h,f,c
  8517   003DAA  0E01               	movlw	1
  8518   003DAC  6EDF               	movwf	indf2,c
  8519   003DAE                     
  8520                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8521   003DAE  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8522   003DB2  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8523   003DB6  ECEB  F017         	call	_setMotorPWM	;wreg free
  8524   003DBA                     
  8525                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8526   003DBA  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8527   003DBE  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8528   003DC2  ECEB  F017         	call	_setMotorPWM	;wreg free
  8529   003DC6                     
  8530                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8531   003DC6  0E00               	movlw	0
  8532   003DC8  6E19               	movwf	(turnLeft@i+1)^0,c
  8533   003DCA  0E00               	movlw	0
  8534   003DCC  6E18               	movwf	turnLeft@i^0,c
  8535   003DCE                     l3054:
  8536                           
  8537                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8538   003DCE  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8539   003DD2  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8540   003DD6  2ADF               	incf	indf2,f,c
  8541                           
  8542                           ;dc_motor.c: 123:         mR->power++;
  8543   003DD8  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8544   003DDC  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8545   003DE0  2ADF               	incf	indf2,f,c
  8546   003DE2                     
  8547                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8548   003DE2  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8549   003DE6  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8550   003DEA  ECEB  F017         	call	_setMotorPWM	;wreg free
  8551   003DEE                     
  8552                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8553   003DEE  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8554   003DF2  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8555   003DF6  ECEB  F017         	call	_setMotorPWM	;wreg free
  8556   003DFA                     
  8557                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8558   003DFA  0EE4               	movlw	228
  8559   003DFC                     u4387:
  8560   003DFC  D000               	nop2	
  8561   003DFE  D000               	nop2	
  8562   003E00  2EE8               	decfsz	wreg,f,c
  8563   003E02  D7FC               	bra	u4387
  8564   003E04  D000               	nop2	
  8565   003E06  D000               	nop2	
  8566   003E08                     
  8567                           ;dc_motor.c: 127:     }
  8568   003E08  4A18               	infsnz	turnLeft@i^0,f,c
  8569   003E0A  2A19               	incf	(turnLeft@i+1)^0,f,c
  8570   003E0C  5019               	movf	(turnLeft@i+1)^0,w,c
  8571   003E0E  E109               	bnz	u2200
  8572   003E10  0E32               	movlw	50
  8573   003E12  5C18               	subwf	turnLeft@i^0,w,c
  8574   003E14  A0D8               	btfss	status,0,c
  8575   003E16  EF0F  F01F         	goto	u2201
  8576   003E1A  EF11  F01F         	goto	u2200
  8577   003E1E                     u2201:
  8578   003E1E  EFE7  F01E         	goto	l3054
  8579   003E22                     u2200:
  8580   003E22  0012               	return		;funcret
  8581   003E24                     __end_of_turnLeft:
  8582                           	callstack 0
  8583                           
  8584 ;; *************** function _reverseHalfSquare *****************
  8585 ;; Defined at:
  8586 ;;		line 216 in file "dc_motor.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8589 ;;		 -> motorL(9), 
  8590 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8591 ;;		 -> motorR(9), 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8607 ;;Total ram usage:        6 bytes
  8608 ;; Hardware stack levels used: 1
  8609 ;; Hardware stack levels required when called: 4
  8610 ;; This function calls:
  8611 ;;		_fullSpeedReverse
  8612 ;;		_stop
  8613 ;; This function is called by:
  8614 ;;		_Red_R90
  8615 ;;		_Green_L90
  8616 ;;		_Blue_T180
  8617 ;;		_Yellow_rev1_R90
  8618 ;;		_Pink_rev1_L90
  8619 ;;		_Orange_R135
  8620 ;;		_LightBlue_L135
  8621 ;;		_White
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text45
  8626   00405C                     __ptext45:
  8627                           	callstack 0
  8628   00405C                     _reverseHalfSquare:
  8629                           	callstack 24
  8630   00405C                     
  8631                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8632   00405C  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8633   004060  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8634   004064  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8635   004068  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8636   00406C  EC85  F01D         	call	_stop	;wreg free
  8637   004070                     
  8638                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8639   004070  0E09               	movlw	9
  8640   004072  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8641   004074  0E1E               	movlw	30
  8642   004076  6E1F               	movwf	??_reverseHalfSquare^0,c
  8643   004078  0EE4               	movlw	228
  8644   00407A                     u4397:
  8645   00407A  2EE8               	decfsz	wreg,f,c
  8646   00407C  D7FE               	bra	u4397
  8647   00407E  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8648   004080  D7FC               	bra	u4397
  8649   004082  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8650   004084  D7FA               	bra	u4397
  8651   004086  D000               	nop2	
  8652   004088                     
  8653                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8654   004088  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8655   00408C  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8656   004090  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8657   004094  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8658   004098  ECB1  F020         	call	_fullSpeedReverse	;wreg free
  8659                           
  8660                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8661   00409C  0E1D               	movlw	29
  8662   00409E  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8663   0040A0  0E69               	movlw	105
  8664   0040A2  6E1F               	movwf	??_reverseHalfSquare^0,c
  8665   0040A4  0EA5               	movlw	165
  8666   0040A6                     u4407:
  8667   0040A6  2EE8               	decfsz	wreg,f,c
  8668   0040A8  D7FE               	bra	u4407
  8669   0040AA  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8670   0040AC  D7FC               	bra	u4407
  8671   0040AE  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8672   0040B0  D7FA               	bra	u4407
  8673   0040B2  F000               	nop	
  8674   0040B4                     
  8675                           ;dc_motor.c: 222:     stop(mL,mR);
  8676   0040B4  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8677   0040B8  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8678   0040BC  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8679   0040C0  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8680   0040C4  EC85  F01D         	call	_stop	;wreg free
  8681   0040C8                     
  8682                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8683   0040C8  0E09               	movlw	9
  8684   0040CA  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8685   0040CC  0E1E               	movlw	30
  8686   0040CE  6E1F               	movwf	??_reverseHalfSquare^0,c
  8687   0040D0  0EE4               	movlw	228
  8688   0040D2                     u4417:
  8689   0040D2  2EE8               	decfsz	wreg,f,c
  8690   0040D4  D7FE               	bra	u4417
  8691   0040D6  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8692   0040D8  D7FC               	bra	u4417
  8693   0040DA  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8694   0040DC  D7FA               	bra	u4417
  8695   0040DE  D000               	nop2	
  8696   0040E0  0012               	return		;funcret
  8697   0040E2                     __end_of_reverseHalfSquare:
  8698                           	callstack 0
  8699                           
  8700 ;; *************** function _stop *****************
  8701 ;; Defined at:
  8702 ;;		line 93 in file "dc_motor.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8705 ;;		 -> motorL(9), 
  8706 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8707 ;;		 -> motorR(9), 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;Total ram usage:        5 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; Hardware stack levels required when called: 3
  8726 ;; This function calls:
  8727 ;;		_setMotorPWM
  8728 ;; This function is called by:
  8729 ;;		_main
  8730 ;;		_Left45
  8731 ;;		_Right45
  8732 ;;		_reverseHalfSquare
  8733 ;;		_Yellow_rev1_R90
  8734 ;;		_Pink_rev1_L90
  8735 ;;		_White
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text46
  8740   003B0A                     __ptext46:
  8741                           	callstack 0
  8742   003B0A                     _stop:
  8743                           	callstack 27
  8744   003B0A                     
  8745                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8746   003B0A  887C               	bsf	124,4,c	;volatile
  8747                           
  8748                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8749   003B0C  EFBE  F01D         	goto	l3038
  8750   003B10                     l3024:
  8751                           
  8752                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8753   003B10  C014  FFD9         	movff	stop@mL,fsr2l
  8754   003B14  C015  FFDA         	movff	stop@mL+1,fsr2h
  8755   003B18  50DF               	movf	indf2,w,c
  8756   003B1A  B4D8               	btfsc	status,2,c
  8757   003B1C  EF92  F01D         	goto	u2161
  8758   003B20  EF94  F01D         	goto	u2160
  8759   003B24                     u2161:
  8760   003B24  EF99  F01D         	goto	l3028
  8761   003B28                     u2160:
  8762   003B28                     
  8763                           ;dc_motor.c: 100:             mL->power--;
  8764   003B28  C014  FFD9         	movff	stop@mL,fsr2l
  8765   003B2C  C015  FFDA         	movff	stop@mL+1,fsr2h
  8766   003B30  06DF               	decf	indf2,f,c
  8767   003B32                     l3028:
  8768                           
  8769                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8770   003B32  C016  FFD9         	movff	stop@mR,fsr2l
  8771   003B36  C017  FFDA         	movff	stop@mR+1,fsr2h
  8772   003B3A  50DF               	movf	indf2,w,c
  8773   003B3C  B4D8               	btfsc	status,2,c
  8774   003B3E  EFA3  F01D         	goto	u2171
  8775   003B42  EFA5  F01D         	goto	u2170
  8776   003B46                     u2171:
  8777   003B46  EFAA  F01D         	goto	l3032
  8778   003B4A                     u2170:
  8779   003B4A                     
  8780                           ;dc_motor.c: 103:             mR->power--;
  8781   003B4A  C016  FFD9         	movff	stop@mR,fsr2l
  8782   003B4E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8783   003B52  06DF               	decf	indf2,f,c
  8784   003B54                     l3032:
  8785                           
  8786                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8787   003B54  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8788   003B58  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8789   003B5C  ECEB  F017         	call	_setMotorPWM	;wreg free
  8790   003B60                     
  8791                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8792   003B60  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8793   003B64  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8794   003B68  ECEB  F017         	call	_setMotorPWM	;wreg free
  8795   003B6C                     
  8796                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8797   003B6C  0E09               	movlw	9
  8798   003B6E  6E18               	movwf	??_stop^0,c
  8799   003B70  0E4E               	movlw	78
  8800   003B72                     u4427:
  8801   003B72  2EE8               	decfsz	wreg,f,c
  8802   003B74  D7FE               	bra	u4427
  8803   003B76  2E18               	decfsz	??_stop^0,f,c
  8804   003B78  D7FC               	bra	u4427
  8805   003B7A  D000               	nop2	
  8806   003B7C                     l3038:
  8807                           
  8808                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8809   003B7C  C014  FFD9         	movff	stop@mL,fsr2l
  8810   003B80  C015  FFDA         	movff	stop@mL+1,fsr2h
  8811   003B84  50DF               	movf	indf2,w,c
  8812   003B86  B4D8               	btfsc	status,2,c
  8813   003B88  EFC8  F01D         	goto	u2181
  8814   003B8C  EFCA  F01D         	goto	u2180
  8815   003B90                     u2181:
  8816   003B90  EFD6  F01D         	goto	l471
  8817   003B94                     u2180:
  8818   003B94  C016  FFD9         	movff	stop@mR,fsr2l
  8819   003B98  C017  FFDA         	movff	stop@mR+1,fsr2h
  8820   003B9C  50DF               	movf	indf2,w,c
  8821   003B9E  A4D8               	btfss	status,2,c
  8822   003BA0  EFD4  F01D         	goto	u2191
  8823   003BA4  EFD6  F01D         	goto	u2190
  8824   003BA8                     u2191:
  8825   003BA8  EF88  F01D         	goto	l3024
  8826   003BAC                     u2190:
  8827   003BAC                     l471:
  8828                           
  8829                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8830   003BAC  987C               	bcf	124,4,c	;volatile
  8831   003BAE  0012               	return		;funcret
  8832   003BB0                     __end_of_stop:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _fullSpeedReverse *****************
  8836 ;; Defined at:
  8837 ;;		line 163 in file "dc_motor.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8840 ;;		 -> motorL(9), 
  8841 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8842 ;;		 -> motorR(9), 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;  i               2   24[COMRAM] unsigned int 
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;Total ram usage:        7 bytes
  8859 ;; Hardware stack levels used: 1
  8860 ;; Hardware stack levels required when called: 3
  8861 ;; This function calls:
  8862 ;;		_setMotorPWM
  8863 ;; This function is called by:
  8864 ;;		_reverseHalfSquare
  8865 ;;		_Yellow_rev1_R90
  8866 ;;		_Pink_rev1_L90
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text47
  8871   004162                     __ptext47:
  8872                           	callstack 0
  8873   004162                     _fullSpeedReverse:
  8874                           	callstack 24
  8875   004162                     
  8876                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  8877   004162  EE20 F001          	lfsr	2,1
  8878   004166  5014               	movf	fullSpeedReverse@mL^0,w,c
  8879   004168  26D9               	addwf	fsr2l,f,c
  8880   00416A  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  8881   00416C  22DA               	addwfc	fsr2h,f,c
  8882   00416E  0E00               	movlw	0
  8883   004170  6EDF               	movwf	indf2,c
  8884                           
  8885                           ;dc_motor.c: 166:  (mR->direction) = 0;
  8886   004172  EE20 F001          	lfsr	2,1
  8887   004176  5016               	movf	fullSpeedReverse@mR^0,w,c
  8888   004178  26D9               	addwf	fsr2l,f,c
  8889   00417A  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  8890   00417C  22DA               	addwfc	fsr2h,f,c
  8891   00417E  0E00               	movlw	0
  8892   004180  6EDF               	movwf	indf2,c
  8893   004182                     
  8894                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  8895   004182  0E00               	movlw	0
  8896   004184  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  8897   004186  0E00               	movlw	0
  8898   004188  6E19               	movwf	fullSpeedReverse@i^0,c
  8899   00418A                     l3122:
  8900                           
  8901                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  8902   00418A  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  8903   00418E  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  8904   004192  2ADF               	incf	indf2,f,c
  8905                           
  8906                           ;dc_motor.c: 171:         (mR->power)++;
  8907   004194  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  8908   004198  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  8909   00419C  2ADF               	incf	indf2,f,c
  8910   00419E                     
  8911                           ;dc_motor.c: 172:         setMotorPWM(mL);
  8912   00419E  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  8913   0041A2  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  8914   0041A6  ECEB  F017         	call	_setMotorPWM	;wreg free
  8915   0041AA                     
  8916                           ;dc_motor.c: 173:         setMotorPWM(mR);
  8917   0041AA  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  8918   0041AE  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  8919   0041B2  ECEB  F017         	call	_setMotorPWM	;wreg free
  8920   0041B6                     
  8921                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8922   0041B6  0E09               	movlw	9
  8923   0041B8  6E18               	movwf	??_fullSpeedReverse^0,c
  8924   0041BA  0E4E               	movlw	78
  8925   0041BC                     u4437:
  8926   0041BC  2EE8               	decfsz	wreg,f,c
  8927   0041BE  D7FE               	bra	u4437
  8928   0041C0  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  8929   0041C2  D7FC               	bra	u4437
  8930   0041C4  D000               	nop2	
  8931   0041C6                     
  8932                           ;dc_motor.c: 175:     }
  8933   0041C6  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  8934   0041C8  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  8935   0041CA  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  8936   0041CC  E109               	bnz	u2280
  8937   0041CE  0E32               	movlw	50
  8938   0041D0  5C19               	subwf	fullSpeedReverse@i^0,w,c
  8939   0041D2  A0D8               	btfss	status,0,c
  8940   0041D4  EFEE  F020         	goto	u2281
  8941   0041D8  EFF0  F020         	goto	u2280
  8942   0041DC                     u2281:
  8943   0041DC  EFC5  F020         	goto	l3122
  8944   0041E0                     u2280:
  8945   0041E0  0012               	return		;funcret
  8946   0041E2                     __end_of_fullSpeedReverse:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function _setMotorPWM *****************
  8950 ;; Defined at:
  8951 ;;		line 70 in file "dc_motor.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8954 ;;		 -> motorR(9), motorL(9), 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  negDuty         1   18[COMRAM] unsigned char 
  8957 ;;  posDuty         1   17[COMRAM] unsigned char 
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;Total ram usage:        6 bytes
  8972 ;; Hardware stack levels used: 1
  8973 ;; Hardware stack levels required when called: 2
  8974 ;; This function calls:
  8975 ;;		___lwdiv
  8976 ;;		___wmul
  8977 ;; This function is called by:
  8978 ;;		_stop
  8979 ;;		_turnLeft
  8980 ;;		_turnRight
  8981 ;;		_fullSpeedAhead
  8982 ;;		_fullSpeedReverse
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           	psect	text48
  8987   002FD6                     __ptext48:
  8988                           	callstack 0
  8989   002FD6                     _setMotorPWM:
  8990                           	callstack 27
  8991   002FD6                     
  8992                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8993   002FD6  EE20 F002          	lfsr	2,2
  8994   002FDA  500E               	movf	setMotorPWM@m^0,w,c
  8995   002FDC  26D9               	addwf	fsr2l,f,c
  8996   002FDE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8997   002FE0  22DA               	addwfc	fsr2h,f,c
  8998   002FE2  50DF               	movf	indf2,w,c
  8999   002FE4  B4D8               	btfsc	status,2,c
  9000   002FE6  EFF7  F017         	goto	u2141
  9001   002FEA  EFF9  F017         	goto	u2140
  9002   002FEE                     u2141:
  9003   002FEE  EF2D  F018         	goto	l3012
  9004   002FF2                     u2140:
  9005   002FF2                     
  9006                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9007   002FF2  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9008   002FF6  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9009   002FFA  50DF               	movf	indf2,w,c
  9010   002FFC  6E10               	movwf	??_setMotorPWM^0,c
  9011   002FFE  5010               	movf	??_setMotorPWM^0,w,c
  9012   003000  6E01               	movwf	___wmul@multiplier^0,c
  9013   003002  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9014   003004  EE20 F003          	lfsr	2,3
  9015   003008  500E               	movf	setMotorPWM@m^0,w,c
  9016   00300A  26D9               	addwf	fsr2l,f,c
  9017   00300C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9018   00300E  22DA               	addwfc	fsr2h,f,c
  9019   003010  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9020   003014  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9021   003018  EC64  F024         	call	___wmul	;wreg free
  9022   00301C  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9023   003020  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9024   003024  0E00               	movlw	0
  9025   003026  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9026   003028  0E64               	movlw	100
  9027   00302A  6E09               	movwf	___lwdiv@divisor^0,c
  9028   00302C  EC6D  F021         	call	___lwdiv	;wreg free
  9029   003030  EE20 F003          	lfsr	2,3
  9030   003034  500E               	movf	setMotorPWM@m^0,w,c
  9031   003036  26D9               	addwf	fsr2l,f,c
  9032   003038  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9033   00303A  22DA               	addwfc	fsr2h,f,c
  9034   00303C  50DF               	movf	indf2,w,c
  9035   00303E  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9036   003040  5007               	movf	?___lwdiv^0,w,c
  9037   003042  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9038   003044  6E12               	movwf	setMotorPWM@posDuty^0,c
  9039   003046                     
  9040                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9041   003046  EE20 F003          	lfsr	2,3
  9042   00304A  500E               	movf	setMotorPWM@m^0,w,c
  9043   00304C  26D9               	addwf	fsr2l,f,c
  9044   00304E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9045   003050  22DA               	addwfc	fsr2h,f,c
  9046   003052  50DF               	movf	indf2,w,c
  9047   003054  6E13               	movwf	setMotorPWM@negDuty^0,c
  9048                           
  9049                           ;dc_motor.c: 77:     }
  9050   003056  EF50  F018         	goto	l3016
  9051   00305A                     l3012:
  9052                           
  9053                           ;dc_motor.c: 79:         posDuty=0;
  9054   00305A  0E00               	movlw	0
  9055   00305C  6E12               	movwf	setMotorPWM@posDuty^0,c
  9056   00305E                     
  9057                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9058   00305E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9059   003062  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9060   003066  50DF               	movf	indf2,w,c
  9061   003068  6E10               	movwf	??_setMotorPWM^0,c
  9062   00306A  5010               	movf	??_setMotorPWM^0,w,c
  9063   00306C  6E01               	movwf	___wmul@multiplier^0,c
  9064   00306E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9065   003070  EE20 F003          	lfsr	2,3
  9066   003074  500E               	movf	setMotorPWM@m^0,w,c
  9067   003076  26D9               	addwf	fsr2l,f,c
  9068   003078  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9069   00307A  22DA               	addwfc	fsr2h,f,c
  9070   00307C  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9071   003080  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9072   003084  EC64  F024         	call	___wmul	;wreg free
  9073   003088  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9074   00308C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9075   003090  0E00               	movlw	0
  9076   003092  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9077   003094  0E64               	movlw	100
  9078   003096  6E09               	movwf	___lwdiv@divisor^0,c
  9079   003098  EC6D  F021         	call	___lwdiv	;wreg free
  9080   00309C  5007               	movf	?___lwdiv^0,w,c
  9081   00309E  6E13               	movwf	setMotorPWM@negDuty^0,c
  9082   0030A0                     l3016:
  9083                           
  9084                           ;dc_motor.c: 83:     if (m->direction) {
  9085   0030A0  EE20 F001          	lfsr	2,1
  9086   0030A4  500E               	movf	setMotorPWM@m^0,w,c
  9087   0030A6  26D9               	addwf	fsr2l,f,c
  9088   0030A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9089   0030AA  22DA               	addwfc	fsr2h,f,c
  9090   0030AC  50DF               	movf	indf2,w,c
  9091   0030AE  B4D8               	btfsc	status,2,c
  9092   0030B0  EF5C  F018         	goto	u2151
  9093   0030B4  EF5E  F018         	goto	u2150
  9094   0030B8                     u2151:
  9095   0030B8  EF80  F018         	goto	l3020
  9096   0030BC                     u2150:
  9097   0030BC                     
  9098                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9099   0030BC  EE20 F005          	lfsr	2,5
  9100   0030C0  500E               	movf	setMotorPWM@m^0,w,c
  9101   0030C2  26D9               	addwf	fsr2l,f,c
  9102   0030C4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9103   0030C6  22DA               	addwfc	fsr2h,f,c
  9104   0030C8  CFDE F010          	movff	postinc2,??_setMotorPWM
  9105   0030CC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9106   0030D0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9107   0030D4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9108   0030D8  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9109                           
  9110                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9111   0030DC  EE20 F007          	lfsr	2,7
  9112   0030E0  500E               	movf	setMotorPWM@m^0,w,c
  9113   0030E2  26D9               	addwf	fsr2l,f,c
  9114   0030E4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9115   0030E6  22DA               	addwfc	fsr2h,f,c
  9116   0030E8  CFDE F010          	movff	postinc2,??_setMotorPWM
  9117   0030EC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9118   0030F0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9119   0030F4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9120   0030F8  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9121                           
  9122                           ;dc_motor.c: 86:     } else {
  9123   0030FC  EFA0  F018         	goto	l462
  9124   003100                     l3020:
  9125                           
  9126                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9127   003100  EE20 F005          	lfsr	2,5
  9128   003104  500E               	movf	setMotorPWM@m^0,w,c
  9129   003106  26D9               	addwf	fsr2l,f,c
  9130   003108  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9131   00310A  22DA               	addwfc	fsr2h,f,c
  9132   00310C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9133   003110  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9134   003114  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9135   003118  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9136   00311C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9137                           
  9138                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9139   003120  EE20 F007          	lfsr	2,7
  9140   003124  500E               	movf	setMotorPWM@m^0,w,c
  9141   003126  26D9               	addwf	fsr2l,f,c
  9142   003128  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9143   00312A  22DA               	addwfc	fsr2h,f,c
  9144   00312C  CFDE F010          	movff	postinc2,??_setMotorPWM
  9145   003130  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9146   003134  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9147   003138  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9148   00313C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9149   003140                     l462:
  9150   003140  0012               	return		;funcret
  9151   003142                     __end_of_setMotorPWM:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function ___wmul *****************
  9155 ;; Defined at:
  9156 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  multiplier      2    0[COMRAM] unsigned int 
  9159 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  product         2    4[COMRAM] unsigned int 
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  2    0[COMRAM] unsigned int 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, prodl, prodh
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9175 ;;Total ram usage:        6 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 1
  9178 ;; This function calls:
  9179 ;;		Nothing
  9180 ;; This function is called by:
  9181 ;;		_setMotorPWM
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text49
  9186   0048C8                     __ptext49:
  9187                           	callstack 0
  9188   0048C8                     ___wmul:
  9189                           	callstack 27
  9190   0048C8  5001               	movf	___wmul@multiplier^0,w,c
  9191   0048CA  0203               	mulwf	___wmul@multiplicand^0,c
  9192   0048CC  CFF3 F005          	movff	prodl,___wmul@product
  9193   0048D0  CFF4 F006          	movff	prodh,___wmul@product+1
  9194   0048D4  5001               	movf	___wmul@multiplier^0,w,c
  9195   0048D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9196   0048D8  50F3               	movf	243,w,c
  9197   0048DA  2606               	addwf	(___wmul@product+1)^0,f,c
  9198   0048DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9199   0048DE  0203               	mulwf	___wmul@multiplicand^0,c
  9200   0048E0  50F3               	movf	243,w,c
  9201   0048E2  2606               	addwf	(___wmul@product+1)^0,f,c
  9202   0048E4  C005  F001         	movff	___wmul@product,?___wmul
  9203   0048E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9204   0048EC  0012               	return		;funcret
  9205   0048EE                     __end_of___wmul:
  9206                           	callstack 0
  9207                           
  9208 ;; *************** function ___lwdiv *****************
  9209 ;; Defined at:
  9210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  dividend        2    6[COMRAM] unsigned int 
  9213 ;;  divisor         2    8[COMRAM] unsigned int 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  quotient        2   10[COMRAM] unsigned int 
  9216 ;;  counter         1   12[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  2    6[COMRAM] unsigned int 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;Total ram usage:        7 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; Hardware stack levels required when called: 1
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_setMotorPWM
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           	psect	text50
  9241   0042DA                     __ptext50:
  9242                           	callstack 0
  9243   0042DA                     ___lwdiv:
  9244                           	callstack 27
  9245   0042DA  0E00               	movlw	0
  9246   0042DC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9247   0042DE  0E00               	movlw	0
  9248   0042E0  6E0B               	movwf	___lwdiv@quotient^0,c
  9249   0042E2  5009               	movf	___lwdiv@divisor^0,w,c
  9250   0042E4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9251   0042E6  B4D8               	btfsc	status,2,c
  9252   0042E8  EF78  F021         	goto	u2111
  9253   0042EC  EF7A  F021         	goto	u2110
  9254   0042F0                     u2111:
  9255   0042F0  EFA2  F021         	goto	l1160
  9256   0042F4                     u2110:
  9257   0042F4  0E01               	movlw	1
  9258   0042F6  6E0D               	movwf	___lwdiv@counter^0,c
  9259   0042F8  EF82  F021         	goto	l2992
  9260   0042FC                     l2990:
  9261   0042FC  90D8               	bcf	status,0,c
  9262   0042FE  3609               	rlcf	___lwdiv@divisor^0,f,c
  9263   004300  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9264   004302  2A0D               	incf	___lwdiv@counter^0,f,c
  9265   004304                     l2992:
  9266   004304  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9267   004306  EF87  F021         	goto	u2121
  9268   00430A  EF89  F021         	goto	u2120
  9269   00430E                     u2121:
  9270   00430E  EF7E  F021         	goto	l2990
  9271   004312                     u2120:
  9272   004312                     l2994:
  9273   004312  90D8               	bcf	status,0,c
  9274   004314  360B               	rlcf	___lwdiv@quotient^0,f,c
  9275   004316  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9276   004318  5009               	movf	___lwdiv@divisor^0,w,c
  9277   00431A  5C07               	subwf	___lwdiv@dividend^0,w,c
  9278   00431C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9279   00431E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9280   004320  A0D8               	btfss	status,0,c
  9281   004322  EF95  F021         	goto	u2131
  9282   004326  EF97  F021         	goto	u2130
  9283   00432A                     u2131:
  9284   00432A  EF9C  F021         	goto	l3002
  9285   00432E                     u2130:
  9286   00432E  5009               	movf	___lwdiv@divisor^0,w,c
  9287   004330  5E07               	subwf	___lwdiv@dividend^0,f,c
  9288   004332  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9289   004334  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9290   004336  800B               	bsf	___lwdiv@quotient^0,0,c
  9291   004338                     l3002:
  9292   004338  90D8               	bcf	status,0,c
  9293   00433A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9294   00433C  3209               	rrcf	___lwdiv@divisor^0,f,c
  9295   00433E  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9296   004340  EF89  F021         	goto	l2994
  9297   004344                     l1160:
  9298   004344  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9299   004348  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9300   00434C  0012               	return		;funcret
  9301   00434E                     __end_of___lwdiv:
  9302                           	callstack 0
  9303                           
  9304 ;; *************** function _Color2String *****************
  9305 ;; Defined at:
  9306 ;;		line 39 in file "serial.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  buf             2   68[COMRAM] PTR unsigned char 
  9309 ;;		 -> main@data(100), 
  9310 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  9311 ;;		 -> colorf(22), 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  9314 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  9315 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  9316 ;;		 -> STR_1(1), 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;Total ram usage:        6 bytes
  9331 ;; Hardware stack levels used: 1
  9332 ;; Hardware stack levels required when called: 7
  9333 ;; This function calls:
  9334 ;;		_Hue2Colour
  9335 ;;		_sendStringSerial4
  9336 ;;		_sprintf
  9337 ;; This function is called by:
  9338 ;;		_main
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           	psect	text51
  9343   00479C                     __ptext51:
  9344                           	callstack 0
  9345   00479C                     _Color2String:
  9346                           	callstack 23
  9347   00479C                     
  9348                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9349   00479C  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  9350   0047A0  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9351   0047A4  ECBF  F00A         	call	_Hue2Colour	;wreg free
  9352   0047A8  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  9353   0047AC  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9354   0047B0                     
  9355                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9356   0047B0  C045  F032         	movff	Color2String@buf,sprintf@s
  9357   0047B4  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  9358   0047B8  0E01               	movlw	low STR_10
  9359   0047BA  6E34               	movwf	sprintf@fmt^0,c
  9360   0047BC  0E0E               	movlw	high STR_10
  9361   0047BE  6E35               	movwf	(sprintf@fmt+1)^0,c
  9362   0047C0  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  9363   0047C4  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9364   0047C8  EC1C  F023         	call	_sprintf	;wreg free
  9365   0047CC                     
  9366                           ;serial.c: 45:     sendStringSerial4(buf);
  9367   0047CC  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  9368   0047D0  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9369   0047D4  ECED  F023         	call	_sendStringSerial4	;wreg free
  9370   0047D8  0012               	return		;funcret
  9371   0047DA                     __end_of_Color2String:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _sprintf *****************
  9375 ;; Defined at:
  9376 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  s               2   49[COMRAM] PTR unsigned char 
  9379 ;;		 -> main@data(100), 
  9380 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9381 ;;		 -> STR_10(16), 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  f              11   57[COMRAM] struct _IO_FILE
  9384 ;;  ap              2   55[COMRAM] PTR void [1]
  9385 ;;		 -> ?_sprintf(2), 
  9386 ;;  ret             2    0        int 
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  2   49[COMRAM] int 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9396 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9397 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9399 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;Total ram usage:       19 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 6
  9403 ;; This function calls:
  9404 ;;		_vfprintf
  9405 ;; This function is called by:
  9406 ;;		_Color2String
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text52
  9411   004638                     __ptext52:
  9412                           	callstack 0
  9413   004638                     _sprintf:
  9414                           	callstack 23
  9415   004638  0E36               	movlw	low (?_sprintf+4)
  9416   00463A  6E38               	movwf	sprintf@ap^0,c
  9417   00463C  0E00               	movlw	high (?_sprintf+4)
  9418   00463E  6E39               	movwf	(sprintf@ap+1)^0,c
  9419   004640  C032  F03A         	movff	sprintf@s,sprintf@f
  9420   004644  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9421   004648  0E00               	movlw	0
  9422   00464A  6E3E               	movwf	(sprintf@f+4)^0,c
  9423   00464C  0E00               	movlw	0
  9424   00464E  6E3D               	movwf	(sprintf@f+3)^0,c
  9425   004650  0E00               	movlw	0
  9426   004652  6E44               	movwf	(sprintf@f+10)^0,c
  9427   004654  0E00               	movlw	0
  9428   004656  6E43               	movwf	(sprintf@f+9)^0,c
  9429   004658  0E3A               	movlw	low sprintf@f
  9430   00465A  6E2A               	movwf	vfprintf@fp^0,c
  9431   00465C  0E00               	movlw	high sprintf@f
  9432   00465E  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9433   004660  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9434   004664  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9435   004668  0E38               	movlw	low sprintf@ap
  9436   00466A  6E2E               	movwf	vfprintf@ap^0,c
  9437   00466C  0E00               	movlw	high sprintf@ap
  9438   00466E  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9439   004670  EC43  F023         	call	_vfprintf	;wreg free
  9440   004674  503D               	movf	(sprintf@f+3)^0,w,c
  9441   004676  2432               	addwf	sprintf@s^0,w,c
  9442   004678  6ED9               	movwf	fsr2l,c
  9443   00467A  503E               	movf	(sprintf@f+4)^0,w,c
  9444   00467C  2033               	addwfc	(sprintf@s+1)^0,w,c
  9445   00467E  6EDA               	movwf	fsr2h,c
  9446   004680  0E00               	movlw	0
  9447   004682  6EDF               	movwf	indf2,c
  9448   004684  0012               	return		;funcret
  9449   004686                     __end_of_sprintf:
  9450                           	callstack 0
  9451                           
  9452 ;; *************** function _vfprintf *****************
  9453 ;; Defined at:
  9454 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9457 ;;		 -> sprintf@f(11), 
  9458 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9459 ;;		 -> STR_10(16), 
  9460 ;;  ap              2   45[COMRAM] PTR PTR void 
  9461 ;;		 -> sprintf@ap(2), 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9464 ;;		 -> STR_10(16), 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  2   41[COMRAM] int 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9474 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9478 ;;Total ram usage:        8 bytes
  9479 ;; Hardware stack levels used: 1
  9480 ;; Hardware stack levels required when called: 5
  9481 ;; This function calls:
  9482 ;;		_vfpfcnvrt
  9483 ;; This function is called by:
  9484 ;;		_sprintf
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text53
  9489   004686                     __ptext53:
  9490                           	callstack 0
  9491   004686                     _vfprintf:
  9492                           	callstack 23
  9493   004686                     
  9494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9495   004686  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9496   00468A  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9497                           
  9498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9499   00468E  EF57  F023         	goto	l3838
  9500   004692                     l3836:
  9501                           
  9502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9503   004692  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9504   004696  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9505   00469A  0E30               	movlw	low vfprintf@cfmt
  9506   00469C  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9507   00469E  0E00               	movlw	high vfprintf@cfmt
  9508   0046A0  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9509   0046A2  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9510   0046A6  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9511   0046AA  ECA1  F018         	call	_vfpfcnvrt	;wreg free
  9512   0046AE                     l3838:
  9513                           
  9514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9515   0046AE  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9516   0046B2  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9517   0046B6                     	if	0	;tblptru may be non-zero
  9518   0046B6                     	endif
  9519   0046B6                     	if	0	;tblptru may be non-zero
  9520   0046B6                     	endif
  9521   0046B6  0008               	tblrd		*
  9522   0046B8  50F5               	movf	tablat,w,c
  9523   0046BA  0900               	iorlw	0
  9524   0046BC  A4D8               	btfss	status,2,c
  9525   0046BE  EF63  F023         	goto	u3381
  9526   0046C2  EF65  F023         	goto	u3380
  9527   0046C6                     u3381:
  9528   0046C6  EF49  F023         	goto	l3836
  9529   0046CA                     u3380:
  9530   0046CA                     
  9531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9532   0046CA  0E00               	movlw	0
  9533   0046CC  6E2B               	movwf	(?_vfprintf+1)^0,c
  9534   0046CE  0E00               	movlw	0
  9535   0046D0  6E2A               	movwf	?_vfprintf^0,c
  9536   0046D2  0012               	return		;funcret
  9537   0046D4                     __end_of_vfprintf:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _vfpfcnvrt *****************
  9541 ;; Defined at:
  9542 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9545 ;;		 -> sprintf@f(11), 
  9546 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9547 ;;		 -> vfprintf@cfmt(2), 
  9548 ;;  ap              2   35[COMRAM] PTR PTR void 
  9549 ;;		 -> sprintf@ap(2), 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  convarg         8    0        struct .
  9552 ;;  cp              3    0        PTR unsigned char 
  9553 ;;  i               2    0        int 
  9554 ;;  done            2    0        int 
  9555 ;;  c               1    0        unsigned char 
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;Total ram usage:       10 bytes
  9570 ;; Hardware stack levels used: 1
  9571 ;; Hardware stack levels required when called: 4
  9572 ;; This function calls:
  9573 ;;		_fputc
  9574 ;;		_stoa
  9575 ;;		_strncmp
  9576 ;; This function is called by:
  9577 ;;		_vfprintf
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text54
  9582   003142                     __ptext54:
  9583                           	callstack 0
  9584   003142                     _vfpfcnvrt:
  9585                           	callstack 23
  9586   003142                     
  9587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9588   003142  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9589   003146  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9590   00314A  CFDE FFF6          	movff	postinc2,tblptrl
  9591   00314E  CFDD FFF7          	movff	postdec2,tblptrh
  9592   003152                     	if	0	;tblptru may be non-zero
  9593   003152                     	endif
  9594   003152                     	if	0	;tblptru may be non-zero
  9595   003152                     	endif
  9596   003152  0008               	tblrd		*
  9597   003154  50F5               	movf	tablat,w,c
  9598   003156  0A25               	xorlw	37
  9599   003158  A4D8               	btfss	status,2,c
  9600   00315A  EFB1  F018         	goto	u2731
  9601   00315E  EFB3  F018         	goto	u2730
  9602   003162                     u2731:
  9603   003162  EF39  F019         	goto	l3454
  9604   003166                     u2730:
  9605   003166                     
  9606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9607   003166  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9608   00316A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9609   00316E  2ADE               	incf	postinc2,f,c
  9610   003170  0E00               	movlw	0
  9611   003172  22DD               	addwfc	postdec2,f,c
  9612   003174                     
  9613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9614   003174  0E00               	movlw	0
  9615   003176  0100               	movlb	0	; () banked
  9616   003178  6FE3               	movwf	(_width+1)& (0+255),b
  9617   00317A  0E00               	movlw	0
  9618   00317C  6FE2               	movwf	_width& (0+255),b
  9619   00317E  C0E2  F0EC         	movff	_width,_flags
  9620   003182                     
  9621                           ; BSR set to: 0
  9622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9623   003182  69E4               	setf	_prec& (0+255),b
  9624   003184  69E5               	setf	(_prec+1)& (0+255),b
  9625   003186                     
  9626                           ; BSR set to: 0
  9627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9628   003186  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9629   00318A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9630   00318E  CFDE FFF6          	movff	postinc2,tblptrl
  9631   003192  CFDD FFF7          	movff	postdec2,tblptrh
  9632   003196                     	if	0	;tblptru may be non-zero
  9633   003196                     	endif
  9634   003196                     	if	0	;tblptru may be non-zero
  9635   003196                     	endif
  9636   003196  0008               	tblrd		*
  9637   003198  50F5               	movf	tablat,w,c
  9638   00319A  0A73               	xorlw	115
  9639   00319C  B4D8               	btfsc	status,2,c
  9640   00319E  EFD3  F018         	goto	u2741
  9641   0031A2  EFD5  F018         	goto	u2740
  9642   0031A6                     u2741:
  9643   0031A6  EFF0  F018         	goto	l3438
  9644   0031AA                     u2740:
  9645   0031AA                     
  9646                           ; BSR set to: 0
  9647   0031AA  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9648   0031AE  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9649   0031B2  CFDE F001          	movff	postinc2,strncmp@_l
  9650   0031B6  CFDD F002          	movff	postdec2,strncmp@_l+1
  9651   0031BA  0E48               	movlw	low STR_11
  9652   0031BC  6E03               	movwf	strncmp@_r^0,c
  9653   0031BE  0E0E               	movlw	high STR_11
  9654   0031C0  6E04               	movwf	(strncmp@_r+1)^0,c
  9655   0031C2  0E00               	movlw	0
  9656   0031C4  6E06               	movwf	(strncmp@n+1)^0,c
  9657   0031C6  0E03               	movlw	3
  9658   0031C8  6E05               	movwf	strncmp@n^0,c
  9659   0031CA  EC5C  F01C         	call	_strncmp	;wreg free
  9660   0031CE  5001               	movf	?_strncmp^0,w,c
  9661   0031D0  1002               	iorwf	(?_strncmp+1)^0,w,c
  9662   0031D2  A4D8               	btfss	status,2,c
  9663   0031D4  EFEE  F018         	goto	u2751
  9664   0031D8  EFF0  F018         	goto	u2750
  9665   0031DC                     u2751:
  9666   0031DC  EF30  F019         	goto	l3450
  9667   0031E0                     u2750:
  9668   0031E0                     l3438:
  9669                           
  9670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9671   0031E0  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9672   0031E4  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9673   0031E8  CFDE FFF6          	movff	postinc2,tblptrl
  9674   0031EC  CFDD FFF7          	movff	postdec2,tblptrh
  9675   0031F0                     	if	0	;tblptru may be non-zero
  9676   0031F0                     	endif
  9677   0031F0                     	if	0	;tblptru may be non-zero
  9678   0031F0                     	endif
  9679   0031F0  0008               	tblrd		*
  9680   0031F2  50F5               	movf	tablat,w,c
  9681   0031F4  0A73               	xorlw	115
  9682   0031F6  B4D8               	btfsc	status,2,c
  9683   0031F8  EF00  F019         	goto	u2761
  9684   0031FC  EF02  F019         	goto	u2760
  9685   003200                     u2761:
  9686   003200  EF08  F019         	goto	l3442
  9687   003204                     u2760:
  9688   003204  0E00               	movlw	0
  9689   003206  6E29               	movwf	(_vfpfcnvrt$2880+1)^0,c
  9690   003208  0E03               	movlw	3
  9691   00320A  6E28               	movwf	_vfpfcnvrt$2880^0,c
  9692   00320C  EF0C  F019         	goto	l3444
  9693   003210                     l3442:
  9694   003210  0E00               	movlw	0
  9695   003212  6E29               	movwf	(_vfpfcnvrt$2880+1)^0,c
  9696   003214  0E01               	movlw	1
  9697   003216  6E28               	movwf	_vfpfcnvrt$2880^0,c
  9698   003218                     l3444:
  9699   003218  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9700   00321C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9701   003220  5028               	movf	_vfpfcnvrt$2880^0,w,c
  9702   003222  26DE               	addwf	postinc2,f,c
  9703   003224  5029               	movf	(_vfpfcnvrt$2880+1)^0,w,c
  9704   003226  22DD               	addwfc	postdec2,f,c
  9705   003228                     
  9706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9707   003228  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9708   00322C  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9709   003230  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9710   003234  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9711   003238  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9712   00323C  0E02               	movlw	2
  9713   00323E  26DE               	addwf	postinc2,f,c
  9714   003240  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9715   003244  0E00               	movlw	0
  9716   003246  22DD               	addwfc	postdec2,f,c
  9717   003248  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9718   00324C  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9719   003250  CFDE F00C          	movff	postinc2,stoa@s
  9720   003254  CFDD F00D          	movff	postdec2,stoa@s+1
  9721   003258  EC4E  F019         	call	_stoa	;wreg free
  9722   00325C  EF4D  F019         	goto	l1404
  9723   003260                     l3450:
  9724                           
  9725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9726   003260  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9727   003264  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9728   003268  2ADE               	incf	postinc2,f,c
  9729   00326A  0E00               	movlw	0
  9730   00326C  22DD               	addwfc	postdec2,f,c
  9731   00326E  EF4D  F019         	goto	l1404
  9732   003272                     l3454:
  9733                           
  9734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9735   003272  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9736   003276  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9737   00327A  CFDE FFF6          	movff	postinc2,tblptrl
  9738   00327E  CFDD FFF7          	movff	postdec2,tblptrh
  9739   003282                     	if	0	;tblptru may be non-zero
  9740   003282                     	endif
  9741   003282                     	if	0	;tblptru may be non-zero
  9742   003282                     	endif
  9743   003282  0008               	tblrd		*
  9744   003284  50F5               	movf	tablat,w,c
  9745   003286  6E01               	movwf	fputc@c^0,c
  9746   003288  6A02               	clrf	(fputc@c+1)^0,c
  9747   00328A  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9748   00328E  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9749   003292  ECCB  F01C         	call	_fputc	;wreg free
  9750   003296  EF30  F019         	goto	l3450
  9751   00329A                     l1404:
  9752   00329A  0012               	return		;funcret
  9753   00329C                     __end_of_vfpfcnvrt:
  9754                           	callstack 0
  9755                           
  9756 ;; *************** function _strncmp *****************
  9757 ;; Defined at:
  9758 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9761 ;;		 -> STR_10(16), 
  9762 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9763 ;;		 -> STR_13(4), 
  9764 ;;  n               2    4[COMRAM] unsigned int 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9767 ;;		 -> STR_13(4), 
  9768 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9769 ;;		 -> STR_10(16), 
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  2    0[COMRAM] int 
  9772 ;; Registers used:
  9773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;Total ram usage:       11 bytes
  9784 ;; Hardware stack levels used: 1
  9785 ;; Hardware stack levels required when called: 1
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_vfpfcnvrt
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text55
  9794   0038B8                     __ptext55:
  9795                           	callstack 0
  9796   0038B8                     _strncmp:
  9797                           	callstack 25
  9798   0038B8  C001  F008         	movff	strncmp@_l,strncmp@l
  9799   0038BC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9800   0038C0  C003  F00A         	movff	strncmp@_r,strncmp@r
  9801   0038C4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9802   0038C8  0605               	decf	strncmp@n^0,f,c
  9803   0038CA  A0D8               	btfss	status,0,c
  9804   0038CC  0606               	decf	(strncmp@n+1)^0,f,c
  9805   0038CE  2805               	incf	strncmp@n^0,w,c
  9806   0038D0  E106               	bnz	u2361
  9807   0038D2  2806               	incf	(strncmp@n+1)^0,w,c
  9808   0038D4  A4D8               	btfss	status,2,c
  9809   0038D6  EF6F  F01C         	goto	u2361
  9810   0038DA  EF71  F01C         	goto	u2360
  9811   0038DE                     u2361:
  9812   0038DE  EF7E  F01C         	goto	l3188
  9813   0038E2                     u2360:
  9814   0038E2  0E00               	movlw	0
  9815   0038E4  6E02               	movwf	(?_strncmp+1)^0,c
  9816   0038E6  0E00               	movlw	0
  9817   0038E8  6E01               	movwf	?_strncmp^0,c
  9818   0038EA  EFCA  F01C         	goto	l1443
  9819   0038EE                     l3186:
  9820   0038EE  4A08               	infsnz	strncmp@l^0,f,c
  9821   0038F0  2A09               	incf	(strncmp@l+1)^0,f,c
  9822   0038F2  4A0A               	infsnz	strncmp@r^0,f,c
  9823   0038F4  2A0B               	incf	(strncmp@r+1)^0,f,c
  9824   0038F6  0605               	decf	strncmp@n^0,f,c
  9825   0038F8  A0D8               	btfss	status,0,c
  9826   0038FA  0606               	decf	(strncmp@n+1)^0,f,c
  9827   0038FC                     l3188:
  9828   0038FC  C008  FFF6         	movff	strncmp@l,tblptrl
  9829   003900  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9830   003904                     	if	0	;tblptru may be non-zero
  9831   003904                     	endif
  9832   003904                     	if	0	;tblptru may be non-zero
  9833   003904                     	endif
  9834   003904  0008               	tblrd		*
  9835   003906  50F5               	movf	tablat,w,c
  9836   003908  0900               	iorlw	0
  9837   00390A  B4D8               	btfsc	status,2,c
  9838   00390C  EF8A  F01C         	goto	u2371
  9839   003910  EF8C  F01C         	goto	u2370
  9840   003914                     u2371:
  9841   003914  EFB8  F01C         	goto	l3196
  9842   003918                     u2370:
  9843   003918  C00A  FFF6         	movff	strncmp@r,tblptrl
  9844   00391C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9845   003920                     	if	0	;tblptru may be non-zero
  9846   003920                     	endif
  9847   003920                     	if	0	;tblptru may be non-zero
  9848   003920                     	endif
  9849   003920  0008               	tblrd		*
  9850   003922  50F5               	movf	tablat,w,c
  9851   003924  0900               	iorlw	0
  9852   003926  B4D8               	btfsc	status,2,c
  9853   003928  EF98  F01C         	goto	u2381
  9854   00392C  EF9A  F01C         	goto	u2380
  9855   003930                     u2381:
  9856   003930  EFB8  F01C         	goto	l3196
  9857   003934                     u2380:
  9858   003934  5005               	movf	strncmp@n^0,w,c
  9859   003936  1006               	iorwf	(strncmp@n+1)^0,w,c
  9860   003938  B4D8               	btfsc	status,2,c
  9861   00393A  EFA1  F01C         	goto	u2391
  9862   00393E  EFA3  F01C         	goto	u2390
  9863   003942                     u2391:
  9864   003942  EFB8  F01C         	goto	l3196
  9865   003946                     u2390:
  9866   003946  C008  FFF6         	movff	strncmp@l,tblptrl
  9867   00394A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9868   00394E                     	if	0	;tblptru may be non-zero
  9869   00394E                     	endif
  9870   00394E                     	if	0	;tblptru may be non-zero
  9871   00394E                     	endif
  9872   00394E  0008               	tblrd		*
  9873   003950  CFF5 F007          	movff	tablat,??_strncmp
  9874   003954  C00A  FFF6         	movff	strncmp@r,tblptrl
  9875   003958  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9876   00395C                     	if	0	;tblptru may be non-zero
  9877   00395C                     	endif
  9878   00395C                     	if	0	;tblptru may be non-zero
  9879   00395C                     	endif
  9880   00395C  0008               	tblrd		*
  9881   00395E  50F5               	movf	tablat,w,c
  9882   003960  1807               	xorwf	??_strncmp^0,w,c
  9883   003962  B4D8               	btfsc	status,2,c
  9884   003964  EFB6  F01C         	goto	u2401
  9885   003968  EFB8  F01C         	goto	u2400
  9886   00396C                     u2401:
  9887   00396C  EF77  F01C         	goto	l3186
  9888   003970                     u2400:
  9889   003970                     l3196:
  9890   003970  C008  FFF6         	movff	strncmp@l,tblptrl
  9891   003974  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9892   003978                     	if	0	;tblptru may be non-zero
  9893   003978                     	endif
  9894   003978                     	if	0	;tblptru may be non-zero
  9895   003978                     	endif
  9896   003978  0008               	tblrd		*
  9897   00397A  CFF5 F007          	movff	tablat,??_strncmp
  9898   00397E  C00A  FFF6         	movff	strncmp@r,tblptrl
  9899   003982  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9900   003986                     	if	0	;tblptru may be non-zero
  9901   003986                     	endif
  9902   003986                     	if	0	;tblptru may be non-zero
  9903   003986                     	endif
  9904   003986  0008               	tblrd		*
  9905   003988  50F5               	movf	tablat,w,c
  9906   00398A  5C07               	subwf	??_strncmp^0,w,c
  9907   00398C  6E01               	movwf	?_strncmp^0,c
  9908   00398E  6A02               	clrf	(?_strncmp+1)^0,c
  9909   003990  A0D8               	btfss	status,0,c
  9910   003992  0602               	decf	(?_strncmp+1)^0,f,c
  9911   003994                     l1443:
  9912   003994  0012               	return		;funcret
  9913   003996                     __end_of_strncmp:
  9914                           	callstack 0
  9915                           
  9916 ;; *************** function _stoa *****************
  9917 ;; Defined at:
  9918 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9921 ;;		 -> sprintf@f(11), 
  9922 ;;  s               2   11[COMRAM] PTR unsigned char 
  9923 ;;		 -> ?_sprintf(2), STR_9(9), STR_8(11), STR_7(7), 
  9924 ;;		 -> STR_6(5), STR_5(7), STR_4(10), STR_3(6), 
  9925 ;;		 -> STR_2(4), STR_1(1), 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9928 ;;  p               2   29[COMRAM] int 
  9929 ;;  l               2   27[COMRAM] int 
  9930 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9931 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9932 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9933 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9934 ;;  i               2   23[COMRAM] int 
  9935 ;;  w               2   21[COMRAM] int 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9946 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9948 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;Total ram usage:       22 bytes
  9950 ;; Hardware stack levels used: 1
  9951 ;; Hardware stack levels required when called: 3
  9952 ;; This function calls:
  9953 ;;		_fputc
  9954 ;;		_strlen
  9955 ;; This function is called by:
  9956 ;;		_vfpfcnvrt
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           	psect	text56
  9961   00329C                     __ptext56:
  9962                           	callstack 0
  9963   00329C                     _stoa:
  9964                           	callstack 23
  9965   00329C                     
  9966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9967   00329C  EE21  F086         	lfsr	2,stoa@F1144
  9968   0032A0  EE10  F00F         	lfsr	1,stoa@nuls
  9969   0032A4  0E06               	movlw	6
  9970   0032A6                     u2291:
  9971   0032A6  CFDB FFE3          	movff	plusw2,plusw1
  9972   0032AA  06E8               	decf	wreg,f,c
  9973   0032AC  E2FC               	bc	u2291
  9974   0032AE                     
  9975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9976   0032AE  C00C  F01A         	movff	stoa@s,stoa@cp
  9977   0032B2  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9978   0032B6                     
  9979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9980   0032B6  501A               	movf	stoa@cp^0,w,c
  9981   0032B8  101B               	iorwf	(stoa@cp+1)^0,w,c
  9982   0032BA  A4D8               	btfss	status,2,c
  9983   0032BC  EF62  F019         	goto	u2301
  9984   0032C0  EF64  F019         	goto	u2300
  9985   0032C4                     u2301:
  9986   0032C4  EF68  F019         	goto	l3156
  9987   0032C8                     u2300:
  9988   0032C8                     
  9989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9990   0032C8  0E0F               	movlw	low stoa@nuls
  9991   0032CA  6E1A               	movwf	stoa@cp^0,c
  9992   0032CC  0E00               	movlw	high stoa@nuls
  9993   0032CE  6E1B               	movwf	(stoa@cp+1)^0,c
  9994   0032D0                     l3156:
  9995                           
  9996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9997   0032D0  C01A  F001         	movff	stoa@cp,strlen@s
  9998   0032D4  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9999   0032D8  ECF4  F022         	call	_strlen	;wreg free
 10000   0032DC  C001  F01C         	movff	?_strlen,stoa@l
 10001   0032E0  C002  F01D         	movff	?_strlen+1,stoa@l+1
 10002   0032E4                     
 10003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 10004   0032E4  C0E4  F01E         	movff	_prec,stoa@p
 10005   0032E8  C0E5  F01F         	movff	_prec+1,stoa@p+1
 10006   0032EC                     
 10007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 10008   0032EC  BE1F               	btfsc	(stoa@p+1)^0,7,c
 10009   0032EE  EF7B  F019         	goto	u2311
 10010   0032F2  EF7D  F019         	goto	u2310
 10011   0032F6                     u2311:
 10012   0032F6  EF92  F019         	goto	l1384
 10013   0032FA                     u2310:
 10014   0032FA  501C               	movf	stoa@l^0,w,c
 10015   0032FC  5C1E               	subwf	stoa@p^0,w,c
 10016   0032FE  501F               	movf	(stoa@p+1)^0,w,c
 10017   003300  0A80               	xorlw	128
 10018   003302  6E0E               	movwf	??_stoa^0,c
 10019   003304  501D               	movf	(stoa@l+1)^0,w,c
 10020   003306  0A80               	xorlw	128
 10021   003308  580E               	subwfb	??_stoa^0,w,c
 10022   00330A  A0D8               	btfss	status,0,c
 10023   00330C  EF8A  F019         	goto	u2321
 10024   003310  EF8C  F019         	goto	u2320
 10025   003314                     u2321:
 10026   003314  EF8E  F019         	goto	l1382
 10027   003318                     u2320:
 10028   003318  EF92  F019         	goto	l1384
 10029   00331C                     l1382:
 10030   00331C  C01E  F01C         	movff	stoa@p,stoa@l
 10031   003320  C01F  F01D         	movff	stoa@p+1,stoa@l+1
 10032   003324                     l1384:
 10033                           
 10034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 10035   003324  C01C  F01E         	movff	stoa@l,stoa@p
 10036   003328  C01D  F01F         	movff	stoa@l+1,stoa@p+1
 10037                           
 10038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 10039   00332C  C0E2  F016         	movff	_width,stoa@w
 10040   003330  C0E3  F017         	movff	_width+1,stoa@w+1
 10041                           
 10042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10043   003334  EFA8  F019         	goto	l3168
 10044   003338                     l3164:
 10045                           
 10046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 10047   003338  0E00               	movlw	0
 10048   00333A  6E02               	movwf	(fputc@c+1)^0,c
 10049   00333C  0E20               	movlw	32
 10050   00333E  6E01               	movwf	fputc@c^0,c
 10051   003340  C00A  F003         	movff	stoa@fp,fputc@fp
 10052   003344  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10053   003348  ECCB  F01C         	call	_fputc	;wreg free
 10054   00334C                     
 10055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10056   00334C  4A1C               	infsnz	stoa@l^0,f,c
 10057   00334E  2A1D               	incf	(stoa@l+1)^0,f,c
 10058   003350                     l3168:
 10059                           
 10060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10061   003350  5016               	movf	stoa@w^0,w,c
 10062   003352  5C1C               	subwf	stoa@l^0,w,c
 10063   003354  501D               	movf	(stoa@l+1)^0,w,c
 10064   003356  0A80               	xorlw	128
 10065   003358  6E0E               	movwf	??_stoa^0,c
 10066   00335A  5017               	movf	(stoa@w+1)^0,w,c
 10067   00335C  0A80               	xorlw	128
 10068   00335E  580E               	subwfb	??_stoa^0,w,c
 10069   003360  A0D8               	btfss	status,0,c
 10070   003362  EFB5  F019         	goto	u2331
 10071   003366  EFB7  F019         	goto	u2330
 10072   00336A                     u2331:
 10073   00336A  EF9C  F019         	goto	l3164
 10074   00336E                     u2330:
 10075   00336E                     
 10076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10077   00336E  0E00               	movlw	0
 10078   003370  6E19               	movwf	(stoa@i+1)^0,c
 10079   003372  0E00               	movlw	0
 10080   003374  6E18               	movwf	stoa@i^0,c
 10081                           
 10082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10083   003376  EFDC  F019         	goto	l3178
 10084   00337A                     l3172:
 10085                           
 10086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10087   00337A  C01A  FFF6         	movff	stoa@cp,tblptrl
 10088   00337E  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10089   003382  0E00               	movlw	low (__smallconst shr (0+16))
 10090   003384  6EF8               	movwf	tblptru,c
 10091   003386  0E0D               	movlw	(high __ramtop+-1)
 10092   003388  64F7               	cpfsgt	tblptrh,c
 10093   00338A  D003               	bra	u2347
 10094   00338C  0008               	tblrd		*
 10095   00338E  50F5               	movf	tablat,w,c
 10096   003390  D005               	bra	u2340
 10097   003392                     u2347:
 10098   003392  CFF6 FFE1          	movff	tblptrl,fsr1l
 10099   003396  CFF7 FFE2          	movff	tblptrh,fsr1h
 10100   00339A  50E7               	movf	indf1,w,c
 10101   00339C                     u2340:
 10102   00339C  6E0E               	movwf	??_stoa^0,c
 10103   00339E  500E               	movf	??_stoa^0,w,c
 10104   0033A0  6E01               	movwf	fputc@c^0,c
 10105   0033A2  6A02               	clrf	(fputc@c+1)^0,c
 10106   0033A4  C00A  F003         	movff	stoa@fp,fputc@fp
 10107   0033A8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10108   0033AC  ECCB  F01C         	call	_fputc	;wreg free
 10109   0033B0                     
 10110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10111   0033B0  4A1A               	infsnz	stoa@cp^0,f,c
 10112   0033B2  2A1B               	incf	(stoa@cp+1)^0,f,c
 10113   0033B4                     
 10114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10115   0033B4  4A18               	infsnz	stoa@i^0,f,c
 10116   0033B6  2A19               	incf	(stoa@i+1)^0,f,c
 10117   0033B8                     l3178:
 10118                           
 10119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10120   0033B8  501E               	movf	stoa@p^0,w,c
 10121   0033BA  5C18               	subwf	stoa@i^0,w,c
 10122   0033BC  5019               	movf	(stoa@i+1)^0,w,c
 10123   0033BE  0A80               	xorlw	128
 10124   0033C0  6E0E               	movwf	??_stoa^0,c
 10125   0033C2  501F               	movf	(stoa@p+1)^0,w,c
 10126   0033C4  0A80               	xorlw	128
 10127   0033C6  580E               	subwfb	??_stoa^0,w,c
 10128   0033C8  A0D8               	btfss	status,0,c
 10129   0033CA  EFE9  F019         	goto	u2351
 10130   0033CE  EFEB  F019         	goto	u2350
 10131   0033D2                     u2351:
 10132   0033D2  EFBD  F019         	goto	l3172
 10133   0033D6                     u2350:
 10134   0033D6  0012               	return		;funcret
 10135   0033D8                     __end_of_stoa:
 10136                           	callstack 0
 10137                           
 10138 ;; *************** function _strlen *****************
 10139 ;; Defined at:
 10140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10143 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
 10144 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
 10145 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10148 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
 10149 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
 10150 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  2    0[COMRAM] unsigned int 
 10153 ;; Registers used:
 10154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;Total ram usage:        4 bytes
 10165 ;; Hardware stack levels used: 1
 10166 ;; Hardware stack levels required when called: 1
 10167 ;; This function calls:
 10168 ;;		Nothing
 10169 ;; This function is called by:
 10170 ;;		_stoa
 10171 ;; This function uses a non-reentrant model
 10172 ;;
 10173                           
 10174                           	psect	text57
 10175   0045E8                     __ptext57:
 10176                           	callstack 0
 10177   0045E8                     _strlen:
 10178                           	callstack 24
 10179   0045E8  C001  F003         	movff	strlen@s,strlen@a
 10180   0045EC  C002  F004         	movff	strlen@s+1,strlen@a+1
 10181   0045F0  EFFC  F022         	goto	l3084
 10182   0045F4                     l3082:
 10183   0045F4  4A01               	infsnz	strlen@s^0,f,c
 10184   0045F6  2A02               	incf	(strlen@s+1)^0,f,c
 10185   0045F8                     l3084:
 10186   0045F8  C001  FFF6         	movff	strlen@s,tblptrl
 10187   0045FC  C002  FFF7         	movff	strlen@s+1,tblptrh
 10188   004600  0E00               	movlw	low (__smallconst shr (0+16))
 10189   004602  6EF8               	movwf	tblptru,c
 10190   004604  0E0D               	movlw	(high __ramtop+-1)
 10191   004606  64F7               	cpfsgt	tblptrh,c
 10192   004608  D003               	bra	u2257
 10193   00460A  0008               	tblrd		*
 10194   00460C  50F5               	movf	tablat,w,c
 10195   00460E  D005               	bra	u2250
 10196   004610                     u2257:
 10197   004610  CFF6 FFE1          	movff	tblptrl,fsr1l
 10198   004614  CFF7 FFE2          	movff	tblptrh,fsr1h
 10199   004618  50E7               	movf	indf1,w,c
 10200   00461A                     u2250:
 10201   00461A  0900               	iorlw	0
 10202   00461C  A4D8               	btfss	status,2,c
 10203   00461E  EF13  F023         	goto	u2261
 10204   004622  EF15  F023         	goto	u2260
 10205   004626                     u2261:
 10206   004626  EFFA  F022         	goto	l3082
 10207   00462A                     u2260:
 10208   00462A  5003               	movf	strlen@a^0,w,c
 10209   00462C  5C01               	subwf	strlen@s^0,w,c
 10210   00462E  6E01               	movwf	?_strlen^0,c
 10211   004630  5004               	movf	(strlen@a+1)^0,w,c
 10212   004632  5802               	subwfb	(strlen@s+1)^0,w,c
 10213   004634  6E02               	movwf	(?_strlen+1)^0,c
 10214   004636  0012               	return		;funcret
 10215   004638                     __end_of_strlen:
 10216                           	callstack 0
 10217                           
 10218 ;; *************** function _fputc *****************
 10219 ;; Defined at:
 10220 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  c               2    0[COMRAM] int 
 10223 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10224 ;;		 -> sprintf@f(11), 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  2    0[COMRAM] int 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10238 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10239 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10240 ;;Total ram usage:        9 bytes
 10241 ;; Hardware stack levels used: 1
 10242 ;; Hardware stack levels required when called: 2
 10243 ;; This function calls:
 10244 ;;		_putch
 10245 ;; This function is called by:
 10246 ;;		_stoa
 10247 ;;		_vfpfcnvrt
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text58
 10252   003996                     __ptext58:
 10253                           	callstack 0
 10254   003996                     _fputc:
 10255                           	callstack 23
 10256   003996  5003               	movf	fputc@fp^0,w,c
 10257   003998  1004               	iorwf	(fputc@fp+1)^0,w,c
 10258   00399A  B4D8               	btfsc	status,2,c
 10259   00399C  EFD2  F01C         	goto	u2211
 10260   0039A0  EFD4  F01C         	goto	u2210
 10261   0039A4                     u2211:
 10262   0039A4  EFDD  F01C         	goto	l3070
 10263   0039A8                     u2210:
 10264   0039A8  5003               	movf	fputc@fp^0,w,c
 10265   0039AA  1004               	iorwf	(fputc@fp+1)^0,w,c
 10266   0039AC  A4D8               	btfss	status,2,c
 10267   0039AE  EFDB  F01C         	goto	u2221
 10268   0039B2  EFDD  F01C         	goto	u2220
 10269   0039B6                     u2221:
 10270   0039B6  EFE2  F01C         	goto	l3072
 10271   0039BA                     u2220:
 10272   0039BA                     l3070:
 10273   0039BA  5001               	movf	fputc@c^0,w,c
 10274   0039BC  ECCD  F024         	call	_putch
 10275   0039C0  EF2F  F01D         	goto	l1422
 10276   0039C4                     l3072:
 10277   0039C4  EE20 F009          	lfsr	2,9
 10278   0039C8  5003               	movf	fputc@fp^0,w,c
 10279   0039CA  26D9               	addwf	fsr2l,f,c
 10280   0039CC  5004               	movf	(fputc@fp+1)^0,w,c
 10281   0039CE  22DA               	addwfc	fsr2h,f,c
 10282   0039D0  50DE               	movf	postinc2,w,c
 10283   0039D2  10DE               	iorwf	postinc2,w,c
 10284   0039D4  B4D8               	btfsc	status,2,c
 10285   0039D6  EFEF  F01C         	goto	u2231
 10286   0039DA  EFF1  F01C         	goto	u2230
 10287   0039DE                     u2231:
 10288   0039DE  EF0C  F01D         	goto	l3076
 10289   0039E2                     u2230:
 10290   0039E2  EE20 F009          	lfsr	2,9
 10291   0039E6  5003               	movf	fputc@fp^0,w,c
 10292   0039E8  26D9               	addwf	fsr2l,f,c
 10293   0039EA  5004               	movf	(fputc@fp+1)^0,w,c
 10294   0039EC  22DA               	addwfc	fsr2h,f,c
 10295   0039EE  EE10 F003          	lfsr	1,3
 10296   0039F2  5003               	movf	fputc@fp^0,w,c
 10297   0039F4  26E1               	addwf	fsr1l,f,c
 10298   0039F6  5004               	movf	(fputc@fp+1)^0,w,c
 10299   0039F8  22E2               	addwfc	fsr1h,f,c
 10300   0039FA  50DE               	movf	postinc2,w,c
 10301   0039FC  5CE6               	subwf	postinc1,w,c
 10302   0039FE  50E6               	movf	postinc1,w,c
 10303   003A00  0A80               	xorlw	128
 10304   003A02  6E09               	movwf	(??_fputc+4)^0,c
 10305   003A04  50DE               	movf	postinc2,w,c
 10306   003A06  0A80               	xorlw	128
 10307   003A08  5809               	subwfb	(??_fputc+4)^0,w,c
 10308   003A0A  B0D8               	btfsc	status,0,c
 10309   003A0C  EF0A  F01D         	goto	u2241
 10310   003A10  EF0C  F01D         	goto	u2240
 10311   003A14                     u2241:
 10312   003A14  EF2F  F01D         	goto	l1422
 10313   003A18                     u2240:
 10314   003A18                     l3076:
 10315   003A18  EE20 F003          	lfsr	2,3
 10316   003A1C  5003               	movf	fputc@fp^0,w,c
 10317   003A1E  26D9               	addwf	fsr2l,f,c
 10318   003A20  5004               	movf	(fputc@fp+1)^0,w,c
 10319   003A22  22DA               	addwfc	fsr2h,f,c
 10320   003A24  CFDE F005          	movff	postinc2,??_fputc
 10321   003A28  CFDD F006          	movff	postdec2,??_fputc+1
 10322   003A2C  C003  FFD9         	movff	fputc@fp,fsr2l
 10323   003A30  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10324   003A34  CFDE F007          	movff	postinc2,??_fputc+2
 10325   003A38  CFDD F008          	movff	postdec2,??_fputc+3
 10326   003A3C  5005               	movf	??_fputc^0,w,c
 10327   003A3E  2407               	addwf	(??_fputc+2)^0,w,c
 10328   003A40  6ED9               	movwf	fsr2l,c
 10329   003A42  5006               	movf	(??_fputc+1)^0,w,c
 10330   003A44  2008               	addwfc	(??_fputc+3)^0,w,c
 10331   003A46  6EDA               	movwf	fsr2h,c
 10332   003A48  C001  FFDF         	movff	fputc@c,indf2
 10333   003A4C  EE20 F003          	lfsr	2,3
 10334   003A50  5003               	movf	fputc@fp^0,w,c
 10335   003A52  26D9               	addwf	fsr2l,f,c
 10336   003A54  5004               	movf	(fputc@fp+1)^0,w,c
 10337   003A56  22DA               	addwfc	fsr2h,f,c
 10338   003A58  2ADE               	incf	postinc2,f,c
 10339   003A5A  0E00               	movlw	0
 10340   003A5C  22DD               	addwfc	postdec2,f,c
 10341   003A5E                     l1422:
 10342   003A5E  0012               	return		;funcret
 10343   003A60                     __end_of_fputc:
 10344                           	callstack 0
 10345                           
 10346 ;; *************** function _putch *****************
 10347 ;; Defined at:
 10348 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  c               1    wreg     unsigned char 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;  c               1    0[COMRAM] unsigned char 
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		wreg
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;Total ram usage:        0 bytes
 10367 ;; Hardware stack levels used: 1
 10368 ;; Hardware stack levels required when called: 1
 10369 ;; This function calls:
 10370 ;;		Nothing
 10371 ;; This function is called by:
 10372 ;;		_fputc
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text59
 10377   00499A                     __ptext59:
 10378                           	callstack 0
 10379   00499A                     _putch:
 10380                           	callstack 23
 10381   00499A  0012               	return		;funcret
 10382   00499C                     __end_of_putch:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function _sendStringSerial4 *****************
 10386 ;; Defined at:
 10387 ;;		line 48 in file "serial.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  string          2    1[COMRAM] PTR unsigned char 
 10390 ;;		 -> main@data(100), 
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;Total ram usage:        2 bytes
 10407 ;; Hardware stack levels used: 1
 10408 ;; Hardware stack levels required when called: 2
 10409 ;; This function calls:
 10410 ;;		_sendCharSerial4
 10411 ;; This function is called by:
 10412 ;;		_Color2String
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           	psect	text60
 10417   0047DA                     __ptext60:
 10418                           	callstack 0
 10419   0047DA                     _sendStringSerial4:
 10420                           	callstack 27
 10421   0047DA                     
 10422                           ;serial.c: 51:     while(*string != 0){
 10423   0047DA  EFFC  F023         	goto	l4050
 10424   0047DE                     l4044:
 10425                           
 10426                           ;serial.c: 53:   sendCharSerial4(*string++);
 10427   0047DE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10428   0047E2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10429   0047E6  50DF               	movf	indf2,w,c
 10430   0047E8  EC98  F024         	call	_sendCharSerial4
 10431   0047EC  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10432   0047EE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10433   0047F0                     
 10434                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10435   0047F0  0E6A               	movlw	106
 10436   0047F2                     u4447:
 10437   0047F2  2EE8               	decfsz	wreg,f,c
 10438   0047F4  D7FE               	bra	u4447
 10439   0047F6  D000               	nop2	
 10440   0047F8                     l4050:
 10441                           
 10442                           ;serial.c: 51:     while(*string != 0){
 10443   0047F8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10444   0047FC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10445   004800  50DF               	movf	indf2,w,c
 10446   004802  A4D8               	btfss	status,2,c
 10447   004804  EF06  F024         	goto	u3661
 10448   004808  EF08  F024         	goto	u3660
 10449   00480C                     u3661:
 10450   00480C  EFEF  F023         	goto	l4044
 10451   004810                     u3660:
 10452   004810  0012               	return		;funcret
 10453   004812                     __end_of_sendStringSerial4:
 10454                           	callstack 0
 10455                           
 10456 ;; *************** function _sendCharSerial4 *****************
 10457 ;; Defined at:
 10458 ;;		line 34 in file "serial.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;  charToSend      1    wreg     unsigned char 
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;  charToSend      1    0[COMRAM] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;Total ram usage:        1 bytes
 10477 ;; Hardware stack levels used: 1
 10478 ;; Hardware stack levels required when called: 1
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_sendStringSerial4
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text61
 10487   004930                     __ptext61:
 10488                           	callstack 0
 10489   004930                     _sendCharSerial4:
 10490                           	callstack 27
 10491                           
 10492                           ;incstack = 0
 10493                           ;sendCharSerial4@charToSend stored from wreg
 10494   004930  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10495   004932                     l341:
 10496   004932  010E               	movlb	14	; () banked
 10497   004934  A537               	btfss	55,2,b	;volatile
 10498   004936  EF9F  F024         	goto	u2861
 10499   00493A  EFA1  F024         	goto	u2860
 10500   00493E                     u2861:
 10501   00493E  EF99  F024         	goto	l341
 10502   004942                     u2860:
 10503   004942                     
 10504                           ; BSR set to: 14
 10505                           ;serial.c: 36:     TX4REG = charToSend;
 10506   004942  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10507   004946                     
 10508                           ; BSR set to: 14
 10509   004946  0012               	return		;funcret
 10510   004948                     __end_of_sendCharSerial4:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _Hue2Colour *****************
 10514 ;; Defined at:
 10515 ;;		line 56 in file "colorfunctions.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
 10518 ;;		 -> colorf(22), 
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  colourname      2   14[COMRAM] PTR unsigned char 
 10521 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
 10522 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
 10523 ;;		 -> STR_1(1), 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  2   12[COMRAM] PTR unsigned char 
 10526 ;; Registers used:
 10527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10536 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10537 ;;Total ram usage:        4 bytes
 10538 ;; Hardware stack levels used: 1
 10539 ;; Hardware stack levels required when called: 2
 10540 ;; This function calls:
 10541 ;;		___flge
 10542 ;; This function is called by:
 10543 ;;		_main
 10544 ;;		_Color2String
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text62
 10549   00157E                     __ptext62:
 10550                           	callstack 0
 10551   00157E                     _Hue2Colour:
 10552                           	callstack 28
 10553   00157E                     
 10554                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10555   00157E  0E10               	movlw	low (STR_10+15)
 10556   001580  6E0F               	movwf	Hue2Colour@colourname^0,c
 10557   001582  0E0E               	movlw	high (STR_10+15)
 10558   001584  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10559   001586                     
 10560                           ;colorfunctions.c: 59:     if (((cf->h)>350)&&((cf->h)<360))
 10561   001586  0E00               	movlw	0
 10562   001588  6E01               	movwf	___flge@ff1^0,c
 10563   00158A  0E00               	movlw	0
 10564   00158C  6E02               	movwf	(___flge@ff1+1)^0,c
 10565   00158E  0EAF               	movlw	175
 10566   001590  6E03               	movwf	(___flge@ff1+2)^0,c
 10567   001592  0E43               	movlw	67
 10568   001594  6E04               	movwf	(___flge@ff1+3)^0,c
 10569   001596  EE20 F010          	lfsr	2,16
 10570   00159A  500D               	movf	Hue2Colour@cf^0,w,c
 10571   00159C  26D9               	addwf	fsr2l,f,c
 10572   00159E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10573   0015A0  22DA               	addwfc	fsr2h,f,c
 10574   0015A2  CFDE F005          	movff	postinc2,___flge@ff2
 10575   0015A6  CFDE F006          	movff	postinc2,___flge@ff2+1
 10576   0015AA  CFDE F007          	movff	postinc2,___flge@ff2+2
 10577   0015AE  CFDE F008          	movff	postinc2,___flge@ff2+3
 10578   0015B2  ECF2  F01A         	call	___flge	;wreg free
 10579   0015B6  B0D8               	btfsc	status,0,c
 10580   0015B8  EFE0  F00A         	goto	u3391
 10581   0015BC  EFE2  F00A         	goto	u3390
 10582   0015C0                     u3391:
 10583   0015C0  EF0F  F00B         	goto	l3892
 10584   0015C4                     u3390:
 10585   0015C4  EE20 F010          	lfsr	2,16
 10586   0015C8  500D               	movf	Hue2Colour@cf^0,w,c
 10587   0015CA  26D9               	addwf	fsr2l,f,c
 10588   0015CC  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10589   0015CE  22DA               	addwfc	fsr2h,f,c
 10590   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
 10591   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10592   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10593   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10594   0015E0  0E00               	movlw	0
 10595   0015E2  6E05               	movwf	___flge@ff2^0,c
 10596   0015E4  0E00               	movlw	0
 10597   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
 10598   0015E8  0EB4               	movlw	180
 10599   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
 10600   0015EC  0E43               	movlw	67
 10601   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
 10602   0015F0  ECF2  F01A         	call	___flge	;wreg free
 10603   0015F4  B0D8               	btfsc	status,0,c
 10604   0015F6  EFFF  F00A         	goto	u3401
 10605   0015FA  EF01  F00B         	goto	u3400
 10606   0015FE                     u3401:
 10607   0015FE  EF0F  F00B         	goto	l3892
 10608   001602                     u3400:
 10609   001602                     
 10610                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10611   001602  0E4C               	movlw	low STR_2
 10612   001604  6E0F               	movwf	Hue2Colour@colourname^0,c
 10613   001606  0E0E               	movlw	high STR_2
 10614   001608  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10615   00160A                     
 10616                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10617   00160A  EE20 F014          	lfsr	2,20
 10618   00160E  500D               	movf	Hue2Colour@cf^0,w,c
 10619   001610  26D9               	addwf	fsr2l,f,c
 10620   001612  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10621   001614  22DA               	addwfc	fsr2h,f,c
 10622   001616  0E00               	movlw	0
 10623   001618  6EDE               	movwf	postinc2,c
 10624   00161A  0E00               	movlw	0
 10625   00161C  6EDD               	movwf	postdec2,c
 10626   00161E                     l3892:
 10627                           
 10628                           ;colorfunctions.c: 67:      if (((cf->h)>70)&&((cf->h)<79))
 10629   00161E  0E00               	movlw	0
 10630   001620  6E01               	movwf	___flge@ff1^0,c
 10631   001622  0E00               	movlw	0
 10632   001624  6E02               	movwf	(___flge@ff1+1)^0,c
 10633   001626  0E8C               	movlw	140
 10634   001628  6E03               	movwf	(___flge@ff1+2)^0,c
 10635   00162A  0E42               	movlw	66
 10636   00162C  6E04               	movwf	(___flge@ff1+3)^0,c
 10637   00162E  EE20 F010          	lfsr	2,16
 10638   001632  500D               	movf	Hue2Colour@cf^0,w,c
 10639   001634  26D9               	addwf	fsr2l,f,c
 10640   001636  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10641   001638  22DA               	addwfc	fsr2h,f,c
 10642   00163A  CFDE F005          	movff	postinc2,___flge@ff2
 10643   00163E  CFDE F006          	movff	postinc2,___flge@ff2+1
 10644   001642  CFDE F007          	movff	postinc2,___flge@ff2+2
 10645   001646  CFDE F008          	movff	postinc2,___flge@ff2+3
 10646   00164A  ECF2  F01A         	call	___flge	;wreg free
 10647   00164E  B0D8               	btfsc	status,0,c
 10648   001650  EF2C  F00B         	goto	u3411
 10649   001654  EF2E  F00B         	goto	u3410
 10650   001658                     u3411:
 10651   001658  EF5D  F00B         	goto	l3900
 10652   00165C                     u3410:
 10653   00165C  EE20 F010          	lfsr	2,16
 10654   001660  500D               	movf	Hue2Colour@cf^0,w,c
 10655   001662  26D9               	addwf	fsr2l,f,c
 10656   001664  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10657   001666  22DA               	addwfc	fsr2h,f,c
 10658   001668  CFDE F001          	movff	postinc2,___flge@ff1
 10659   00166C  CFDE F002          	movff	postinc2,___flge@ff1+1
 10660   001670  CFDE F003          	movff	postinc2,___flge@ff1+2
 10661   001674  CFDE F004          	movff	postinc2,___flge@ff1+3
 10662   001678  0E00               	movlw	0
 10663   00167A  6E05               	movwf	___flge@ff2^0,c
 10664   00167C  0E00               	movlw	0
 10665   00167E  6E06               	movwf	(___flge@ff2+1)^0,c
 10666   001680  0E9E               	movlw	158
 10667   001682  6E07               	movwf	(___flge@ff2+2)^0,c
 10668   001684  0E42               	movlw	66
 10669   001686  6E08               	movwf	(___flge@ff2+3)^0,c
 10670   001688  ECF2  F01A         	call	___flge	;wreg free
 10671   00168C  B0D8               	btfsc	status,0,c
 10672   00168E  EF4B  F00B         	goto	u3421
 10673   001692  EF4D  F00B         	goto	u3420
 10674   001696                     u3421:
 10675   001696  EF5D  F00B         	goto	l3900
 10676   00169A                     u3420:
 10677   00169A                     
 10678                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10679   00169A  0E3D               	movlw	low STR_3
 10680   00169C  6E0F               	movwf	Hue2Colour@colourname^0,c
 10681   00169E  0E0E               	movlw	high STR_3
 10682   0016A0  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10683   0016A2                     
 10684                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10685   0016A2  EE20 F014          	lfsr	2,20
 10686   0016A6  500D               	movf	Hue2Colour@cf^0,w,c
 10687   0016A8  26D9               	addwf	fsr2l,f,c
 10688   0016AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10689   0016AC  22DA               	addwfc	fsr2h,f,c
 10690   0016AE  0E01               	movlw	1
 10691   0016B0  6EDE               	movwf	postinc2,c
 10692   0016B2  0E00               	movlw	0
 10693   0016B4  6EDD               	movwf	postdec2,c
 10694                           
 10695                           ;colorfunctions.c: 71:     }
 10696   0016B6  EF3B  F00D         	goto	l3950
 10697   0016BA                     l3900:
 10698   0016BA  0E00               	movlw	0
 10699   0016BC  6E01               	movwf	___flge@ff1^0,c
 10700   0016BE  0E00               	movlw	0
 10701   0016C0  6E02               	movwf	(___flge@ff1+1)^0,c
 10702   0016C2  0E11               	movlw	17
 10703   0016C4  6E03               	movwf	(___flge@ff1+2)^0,c
 10704   0016C6  0E43               	movlw	67
 10705   0016C8  6E04               	movwf	(___flge@ff1+3)^0,c
 10706   0016CA  EE20 F010          	lfsr	2,16
 10707   0016CE  500D               	movf	Hue2Colour@cf^0,w,c
 10708   0016D0  26D9               	addwf	fsr2l,f,c
 10709   0016D2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10710   0016D4  22DA               	addwfc	fsr2h,f,c
 10711   0016D6  CFDE F005          	movff	postinc2,___flge@ff2
 10712   0016DA  CFDE F006          	movff	postinc2,___flge@ff2+1
 10713   0016DE  CFDE F007          	movff	postinc2,___flge@ff2+2
 10714   0016E2  CFDE F008          	movff	postinc2,___flge@ff2+3
 10715   0016E6  ECF2  F01A         	call	___flge	;wreg free
 10716   0016EA  B0D8               	btfsc	status,0,c
 10717   0016EC  EF7A  F00B         	goto	u3431
 10718   0016F0  EF7C  F00B         	goto	u3430
 10719   0016F4                     u3431:
 10720   0016F4  EFAB  F00B         	goto	l3908
 10721   0016F8                     u3430:
 10722   0016F8  EE20 F010          	lfsr	2,16
 10723   0016FC  500D               	movf	Hue2Colour@cf^0,w,c
 10724   0016FE  26D9               	addwf	fsr2l,f,c
 10725   001700  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10726   001702  22DA               	addwfc	fsr2h,f,c
 10727   001704  CFDE F001          	movff	postinc2,___flge@ff1
 10728   001708  CFDE F002          	movff	postinc2,___flge@ff1+1
 10729   00170C  CFDE F003          	movff	postinc2,___flge@ff1+2
 10730   001710  CFDE F004          	movff	postinc2,___flge@ff1+3
 10731   001714  0E00               	movlw	0
 10732   001716  6E05               	movwf	___flge@ff2^0,c
 10733   001718  0E00               	movlw	0
 10734   00171A  6E06               	movwf	(___flge@ff2+1)^0,c
 10735   00171C  0E34               	movlw	52
 10736   00171E  6E07               	movwf	(___flge@ff2+2)^0,c
 10737   001720  0E43               	movlw	67
 10738   001722  6E08               	movwf	(___flge@ff2+3)^0,c
 10739   001724  ECF2  F01A         	call	___flge	;wreg free
 10740   001728  B0D8               	btfsc	status,0,c
 10741   00172A  EF99  F00B         	goto	u3441
 10742   00172E  EF9B  F00B         	goto	u3440
 10743   001732                     u3441:
 10744   001732  EFAB  F00B         	goto	l3908
 10745   001736                     u3440:
 10746   001736                     
 10747                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10748   001736  0E1C               	movlw	low STR_4
 10749   001738  6E0F               	movwf	Hue2Colour@colourname^0,c
 10750   00173A  0E0E               	movlw	high STR_4
 10751   00173C  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10752   00173E                     
 10753                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10754   00173E  EE20 F014          	lfsr	2,20
 10755   001742  500D               	movf	Hue2Colour@cf^0,w,c
 10756   001744  26D9               	addwf	fsr2l,f,c
 10757   001746  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10758   001748  22DA               	addwfc	fsr2h,f,c
 10759   00174A  0E02               	movlw	2
 10760   00174C  6EDE               	movwf	postinc2,c
 10761   00174E  0E00               	movlw	0
 10762   001750  6EDD               	movwf	postdec2,c
 10763                           
 10764                           ;colorfunctions.c: 76:     }
 10765   001752  EF3B  F00D         	goto	l3950
 10766   001756                     l3908:
 10767   001756  0E00               	movlw	0
 10768   001758  6E01               	movwf	___flge@ff1^0,c
 10769   00175A  0E00               	movlw	0
 10770   00175C  6E02               	movwf	(___flge@ff1+1)^0,c
 10771   00175E  0EA8               	movlw	168
 10772   001760  6E03               	movwf	(___flge@ff1+2)^0,c
 10773   001762  0E41               	movlw	65
 10774   001764  6E04               	movwf	(___flge@ff1+3)^0,c
 10775   001766  EE20 F010          	lfsr	2,16
 10776   00176A  500D               	movf	Hue2Colour@cf^0,w,c
 10777   00176C  26D9               	addwf	fsr2l,f,c
 10778   00176E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10779   001770  22DA               	addwfc	fsr2h,f,c
 10780   001772  CFDE F005          	movff	postinc2,___flge@ff2
 10781   001776  CFDE F006          	movff	postinc2,___flge@ff2+1
 10782   00177A  CFDE F007          	movff	postinc2,___flge@ff2+2
 10783   00177E  CFDE F008          	movff	postinc2,___flge@ff2+3
 10784   001782  ECF2  F01A         	call	___flge	;wreg free
 10785   001786  B0D8               	btfsc	status,0,c
 10786   001788  EFC8  F00B         	goto	u3451
 10787   00178C  EFCA  F00B         	goto	u3450
 10788   001790                     u3451:
 10789   001790  EFF9  F00B         	goto	l3916
 10790   001794                     u3450:
 10791   001794  EE20 F010          	lfsr	2,16
 10792   001798  500D               	movf	Hue2Colour@cf^0,w,c
 10793   00179A  26D9               	addwf	fsr2l,f,c
 10794   00179C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10795   00179E  22DA               	addwfc	fsr2h,f,c
 10796   0017A0  CFDE F001          	movff	postinc2,___flge@ff1
 10797   0017A4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10798   0017A8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10799   0017AC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10800   0017B0  0E00               	movlw	0
 10801   0017B2  6E05               	movwf	___flge@ff2^0,c
 10802   0017B4  0E00               	movlw	0
 10803   0017B6  6E06               	movwf	(___flge@ff2+1)^0,c
 10804   0017B8  0EC8               	movlw	200
 10805   0017BA  6E07               	movwf	(___flge@ff2+2)^0,c
 10806   0017BC  0E41               	movlw	65
 10807   0017BE  6E08               	movwf	(___flge@ff2+3)^0,c
 10808   0017C0  ECF2  F01A         	call	___flge	;wreg free
 10809   0017C4  B0D8               	btfsc	status,0,c
 10810   0017C6  EFE7  F00B         	goto	u3461
 10811   0017CA  EFE9  F00B         	goto	u3460
 10812   0017CE                     u3461:
 10813   0017CE  EFF9  F00B         	goto	l3916
 10814   0017D2                     u3460:
 10815   0017D2                     
 10816                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10817   0017D2  0E36               	movlw	low STR_5
 10818   0017D4  6E0F               	movwf	Hue2Colour@colourname^0,c
 10819   0017D6  0E0E               	movlw	high STR_5
 10820   0017D8  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10821   0017DA                     
 10822                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10823   0017DA  EE20 F014          	lfsr	2,20
 10824   0017DE  500D               	movf	Hue2Colour@cf^0,w,c
 10825   0017E0  26D9               	addwf	fsr2l,f,c
 10826   0017E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10827   0017E4  22DA               	addwfc	fsr2h,f,c
 10828   0017E6  0E03               	movlw	3
 10829   0017E8  6EDE               	movwf	postinc2,c
 10830   0017EA  0E00               	movlw	0
 10831   0017EC  6EDD               	movwf	postdec2,c
 10832                           
 10833                           ;colorfunctions.c: 81:     }
 10834   0017EE  EF3B  F00D         	goto	l3950
 10835   0017F2                     l3916:
 10836   0017F2  0E00               	movlw	0
 10837   0017F4  6E01               	movwf	___flge@ff1^0,c
 10838   0017F6  0E00               	movlw	0
 10839   0017F8  6E02               	movwf	(___flge@ff1+1)^0,c
 10840   0017FA  0E70               	movlw	112
 10841   0017FC  6E03               	movwf	(___flge@ff1+2)^0,c
 10842   0017FE  0E41               	movlw	65
 10843   001800  6E04               	movwf	(___flge@ff1+3)^0,c
 10844   001802  EE20 F010          	lfsr	2,16
 10845   001806  500D               	movf	Hue2Colour@cf^0,w,c
 10846   001808  26D9               	addwf	fsr2l,f,c
 10847   00180A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10848   00180C  22DA               	addwfc	fsr2h,f,c
 10849   00180E  CFDE F005          	movff	postinc2,___flge@ff2
 10850   001812  CFDE F006          	movff	postinc2,___flge@ff2+1
 10851   001816  CFDE F007          	movff	postinc2,___flge@ff2+2
 10852   00181A  CFDE F008          	movff	postinc2,___flge@ff2+3
 10853   00181E  ECF2  F01A         	call	___flge	;wreg free
 10854   001822  B0D8               	btfsc	status,0,c
 10855   001824  EF16  F00C         	goto	u3471
 10856   001828  EF18  F00C         	goto	u3470
 10857   00182C                     u3471:
 10858   00182C  EF47  F00C         	goto	l3924
 10859   001830                     u3470:
 10860   001830  EE20 F010          	lfsr	2,16
 10861   001834  500D               	movf	Hue2Colour@cf^0,w,c
 10862   001836  26D9               	addwf	fsr2l,f,c
 10863   001838  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10864   00183A  22DA               	addwfc	fsr2h,f,c
 10865   00183C  CFDE F001          	movff	postinc2,___flge@ff1
 10866   001840  CFDE F002          	movff	postinc2,___flge@ff1+1
 10867   001844  CFDE F003          	movff	postinc2,___flge@ff1+2
 10868   001848  CFDE F004          	movff	postinc2,___flge@ff1+3
 10869   00184C  0E00               	movlw	0
 10870   00184E  6E05               	movwf	___flge@ff2^0,c
 10871   001850  0E00               	movlw	0
 10872   001852  6E06               	movwf	(___flge@ff2+1)^0,c
 10873   001854  0E98               	movlw	152
 10874   001856  6E07               	movwf	(___flge@ff2+2)^0,c
 10875   001858  0E41               	movlw	65
 10876   00185A  6E08               	movwf	(___flge@ff2+3)^0,c
 10877   00185C  ECF2  F01A         	call	___flge	;wreg free
 10878   001860  B0D8               	btfsc	status,0,c
 10879   001862  EF35  F00C         	goto	u3481
 10880   001866  EF37  F00C         	goto	u3480
 10881   00186A                     u3481:
 10882   00186A  EF47  F00C         	goto	l3924
 10883   00186E                     u3480:
 10884   00186E                     
 10885                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 10886   00186E  0E43               	movlw	low STR_6
 10887   001870  6E0F               	movwf	Hue2Colour@colourname^0,c
 10888   001872  0E0E               	movlw	high STR_6
 10889   001874  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10890   001876                     
 10891                           ;colorfunctions.c: 85:         cf->colourindex=4;
 10892   001876  EE20 F014          	lfsr	2,20
 10893   00187A  500D               	movf	Hue2Colour@cf^0,w,c
 10894   00187C  26D9               	addwf	fsr2l,f,c
 10895   00187E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10896   001880  22DA               	addwfc	fsr2h,f,c
 10897   001882  0E04               	movlw	4
 10898   001884  6EDE               	movwf	postinc2,c
 10899   001886  0E00               	movlw	0
 10900   001888  6EDD               	movwf	postdec2,c
 10901                           
 10902                           ;colorfunctions.c: 86:     }
 10903   00188A  EF3B  F00D         	goto	l3950
 10904   00188E                     l3924:
 10905   00188E  0E00               	movlw	0
 10906   001890  6E01               	movwf	___flge@ff1^0,c
 10907   001892  0E00               	movlw	0
 10908   001894  6E02               	movwf	(___flge@ff1+1)^0,c
 10909   001896  0E40               	movlw	64
 10910   001898  6E03               	movwf	(___flge@ff1+2)^0,c
 10911   00189A  0E40               	movlw	64
 10912   00189C  6E04               	movwf	(___flge@ff1+3)^0,c
 10913   00189E  EE20 F010          	lfsr	2,16
 10914   0018A2  500D               	movf	Hue2Colour@cf^0,w,c
 10915   0018A4  26D9               	addwf	fsr2l,f,c
 10916   0018A6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10917   0018A8  22DA               	addwfc	fsr2h,f,c
 10918   0018AA  CFDE F005          	movff	postinc2,___flge@ff2
 10919   0018AE  CFDE F006          	movff	postinc2,___flge@ff2+1
 10920   0018B2  CFDE F007          	movff	postinc2,___flge@ff2+2
 10921   0018B6  CFDE F008          	movff	postinc2,___flge@ff2+3
 10922   0018BA  ECF2  F01A         	call	___flge	;wreg free
 10923   0018BE  B0D8               	btfsc	status,0,c
 10924   0018C0  EF64  F00C         	goto	u3491
 10925   0018C4  EF66  F00C         	goto	u3490
 10926   0018C8                     u3491:
 10927   0018C8  EF95  F00C         	goto	l3932
 10928   0018CC                     u3490:
 10929   0018CC  EE20 F010          	lfsr	2,16
 10930   0018D0  500D               	movf	Hue2Colour@cf^0,w,c
 10931   0018D2  26D9               	addwf	fsr2l,f,c
 10932   0018D4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10933   0018D6  22DA               	addwfc	fsr2h,f,c
 10934   0018D8  CFDE F001          	movff	postinc2,___flge@ff1
 10935   0018DC  CFDE F002          	movff	postinc2,___flge@ff1+1
 10936   0018E0  CFDE F003          	movff	postinc2,___flge@ff1+2
 10937   0018E4  CFDE F004          	movff	postinc2,___flge@ff1+3
 10938   0018E8  0E00               	movlw	0
 10939   0018EA  6E05               	movwf	___flge@ff2^0,c
 10940   0018EC  0E00               	movlw	0
 10941   0018EE  6E06               	movwf	(___flge@ff2+1)^0,c
 10942   0018F0  0E30               	movlw	48
 10943   0018F2  6E07               	movwf	(___flge@ff2+2)^0,c
 10944   0018F4  0E41               	movlw	65
 10945   0018F6  6E08               	movwf	(___flge@ff2+3)^0,c
 10946   0018F8  ECF2  F01A         	call	___flge	;wreg free
 10947   0018FC  B0D8               	btfsc	status,0,c
 10948   0018FE  EF83  F00C         	goto	u3501
 10949   001902  EF85  F00C         	goto	u3500
 10950   001906                     u3501:
 10951   001906  EF95  F00C         	goto	l3932
 10952   00190A                     u3500:
 10953   00190A                     
 10954                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10955   00190A  0E2F               	movlw	low STR_7
 10956   00190C  6E0F               	movwf	Hue2Colour@colourname^0,c
 10957   00190E  0E0E               	movlw	high STR_7
 10958   001910  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10959   001912                     
 10960                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10961   001912  EE20 F014          	lfsr	2,20
 10962   001916  500D               	movf	Hue2Colour@cf^0,w,c
 10963   001918  26D9               	addwf	fsr2l,f,c
 10964   00191A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10965   00191C  22DA               	addwfc	fsr2h,f,c
 10966   00191E  0E05               	movlw	5
 10967   001920  6EDE               	movwf	postinc2,c
 10968   001922  0E00               	movlw	0
 10969   001924  6EDD               	movwf	postdec2,c
 10970                           
 10971                           ;colorfunctions.c: 91:     }
 10972   001926  EF3B  F00D         	goto	l3950
 10973   00192A                     l3932:
 10974   00192A  0E00               	movlw	0
 10975   00192C  6E01               	movwf	___flge@ff1^0,c
 10976   00192E  0E00               	movlw	0
 10977   001930  6E02               	movwf	(___flge@ff1+1)^0,c
 10978   001932  0EAA               	movlw	170
 10979   001934  6E03               	movwf	(___flge@ff1+2)^0,c
 10980   001936  0E42               	movlw	66
 10981   001938  6E04               	movwf	(___flge@ff1+3)^0,c
 10982   00193A  EE20 F010          	lfsr	2,16
 10983   00193E  500D               	movf	Hue2Colour@cf^0,w,c
 10984   001940  26D9               	addwf	fsr2l,f,c
 10985   001942  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10986   001944  22DA               	addwfc	fsr2h,f,c
 10987   001946  CFDE F005          	movff	postinc2,___flge@ff2
 10988   00194A  CFDE F006          	movff	postinc2,___flge@ff2+1
 10989   00194E  CFDE F007          	movff	postinc2,___flge@ff2+2
 10990   001952  CFDE F008          	movff	postinc2,___flge@ff2+3
 10991   001956  ECF2  F01A         	call	___flge	;wreg free
 10992   00195A  B0D8               	btfsc	status,0,c
 10993   00195C  EFB2  F00C         	goto	u3511
 10994   001960  EFB4  F00C         	goto	u3510
 10995   001964                     u3511:
 10996   001964  EFE3  F00C         	goto	l3940
 10997   001968                     u3510:
 10998   001968  EE20 F010          	lfsr	2,16
 10999   00196C  500D               	movf	Hue2Colour@cf^0,w,c
 11000   00196E  26D9               	addwf	fsr2l,f,c
 11001   001970  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11002   001972  22DA               	addwfc	fsr2h,f,c
 11003   001974  CFDE F001          	movff	postinc2,___flge@ff1
 11004   001978  CFDE F002          	movff	postinc2,___flge@ff1+1
 11005   00197C  CFDE F003          	movff	postinc2,___flge@ff1+2
 11006   001980  CFDE F004          	movff	postinc2,___flge@ff1+3
 11007   001984  0E00               	movlw	0
 11008   001986  6E05               	movwf	___flge@ff2^0,c
 11009   001988  0E00               	movlw	0
 11010   00198A  6E06               	movwf	(___flge@ff2+1)^0,c
 11011   00198C  0ED2               	movlw	210
 11012   00198E  6E07               	movwf	(___flge@ff2+2)^0,c
 11013   001990  0E42               	movlw	66
 11014   001992  6E08               	movwf	(___flge@ff2+3)^0,c
 11015   001994  ECF2  F01A         	call	___flge	;wreg free
 11016   001998  B0D8               	btfsc	status,0,c
 11017   00199A  EFD1  F00C         	goto	u3521
 11018   00199E  EFD3  F00C         	goto	u3520
 11019   0019A2                     u3521:
 11020   0019A2  EFE3  F00C         	goto	l3940
 11021   0019A6                     u3520:
 11022   0019A6                     
 11023                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 11024   0019A6  0E11               	movlw	low STR_8
 11025   0019A8  6E0F               	movwf	Hue2Colour@colourname^0,c
 11026   0019AA  0E0E               	movlw	high STR_8
 11027   0019AC  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11028   0019AE                     
 11029                           ;colorfunctions.c: 95:         cf->colourindex=6;
 11030   0019AE  EE20 F014          	lfsr	2,20
 11031   0019B2  500D               	movf	Hue2Colour@cf^0,w,c
 11032   0019B4  26D9               	addwf	fsr2l,f,c
 11033   0019B6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11034   0019B8  22DA               	addwfc	fsr2h,f,c
 11035   0019BA  0E06               	movlw	6
 11036   0019BC  6EDE               	movwf	postinc2,c
 11037   0019BE  0E00               	movlw	0
 11038   0019C0  6EDD               	movwf	postdec2,c
 11039                           
 11040                           ;colorfunctions.c: 96:     }
 11041   0019C2  EF3B  F00D         	goto	l3950
 11042   0019C6                     l3940:
 11043   0019C6  0E00               	movlw	0
 11044   0019C8  6E01               	movwf	___flge@ff1^0,c
 11045   0019CA  0E00               	movlw	0
 11046   0019CC  6E02               	movwf	(___flge@ff1+1)^0,c
 11047   0019CE  0EC8               	movlw	200
 11048   0019D0  6E03               	movwf	(___flge@ff1+2)^0,c
 11049   0019D2  0E41               	movlw	65
 11050   0019D4  6E04               	movwf	(___flge@ff1+3)^0,c
 11051   0019D6  EE20 F010          	lfsr	2,16
 11052   0019DA  500D               	movf	Hue2Colour@cf^0,w,c
 11053   0019DC  26D9               	addwf	fsr2l,f,c
 11054   0019DE  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11055   0019E0  22DA               	addwfc	fsr2h,f,c
 11056   0019E2  CFDE F005          	movff	postinc2,___flge@ff2
 11057   0019E6  CFDE F006          	movff	postinc2,___flge@ff2+1
 11058   0019EA  CFDE F007          	movff	postinc2,___flge@ff2+2
 11059   0019EE  CFDE F008          	movff	postinc2,___flge@ff2+3
 11060   0019F2  ECF2  F01A         	call	___flge	;wreg free
 11061   0019F6  B0D8               	btfsc	status,0,c
 11062   0019F8  EF00  F00D         	goto	u3531
 11063   0019FC  EF02  F00D         	goto	u3530
 11064   001A00                     u3531:
 11065   001A00  EF31  F00D         	goto	l3948
 11066   001A04                     u3530:
 11067   001A04  EE20 F010          	lfsr	2,16
 11068   001A08  500D               	movf	Hue2Colour@cf^0,w,c
 11069   001A0A  26D9               	addwf	fsr2l,f,c
 11070   001A0C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11071   001A0E  22DA               	addwfc	fsr2h,f,c
 11072   001A10  CFDE F001          	movff	postinc2,___flge@ff1
 11073   001A14  CFDE F002          	movff	postinc2,___flge@ff1+1
 11074   001A18  CFDE F003          	movff	postinc2,___flge@ff1+2
 11075   001A1C  CFDE F004          	movff	postinc2,___flge@ff1+3
 11076   001A20  0E00               	movlw	0
 11077   001A22  6E05               	movwf	___flge@ff2^0,c
 11078   001A24  0E00               	movlw	0
 11079   001A26  6E06               	movwf	(___flge@ff2+1)^0,c
 11080   001A28  0E04               	movlw	4
 11081   001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
 11082   001A2C  0E42               	movlw	66
 11083   001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
 11084   001A30  ECF2  F01A         	call	___flge	;wreg free
 11085   001A34  B0D8               	btfsc	status,0,c
 11086   001A36  EF1F  F00D         	goto	u3541
 11087   001A3A  EF21  F00D         	goto	u3540
 11088   001A3E                     u3541:
 11089   001A3E  EF31  F00D         	goto	l3948
 11090   001A42                     u3540:
 11091   001A42                     
 11092                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11093   001A42  0E26               	movlw	low STR_9
 11094   001A44  6E0F               	movwf	Hue2Colour@colourname^0,c
 11095   001A46  0E0E               	movlw	high STR_9
 11096   001A48  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11097   001A4A                     
 11098                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11099   001A4A  EE20 F014          	lfsr	2,20
 11100   001A4E  500D               	movf	Hue2Colour@cf^0,w,c
 11101   001A50  26D9               	addwf	fsr2l,f,c
 11102   001A52  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11103   001A54  22DA               	addwfc	fsr2h,f,c
 11104   001A56  0E07               	movlw	7
 11105   001A58  6EDE               	movwf	postinc2,c
 11106   001A5A  0E00               	movlw	0
 11107   001A5C  6EDD               	movwf	postdec2,c
 11108                           
 11109                           ;colorfunctions.c: 101:     }
 11110   001A5E  EF3B  F00D         	goto	l3950
 11111   001A62                     l3948:
 11112   001A62  EE20 F014          	lfsr	2,20
 11113   001A66  500D               	movf	Hue2Colour@cf^0,w,c
 11114   001A68  26D9               	addwf	fsr2l,f,c
 11115   001A6A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11116   001A6C  22DA               	addwfc	fsr2h,f,c
 11117   001A6E  0E08               	movlw	8
 11118   001A70  6EDE               	movwf	postinc2,c
 11119   001A72  0E00               	movlw	0
 11120   001A74  6EDD               	movwf	postdec2,c
 11121   001A76                     l3950:
 11122                           
 11123                           ;colorfunctions.c: 103:     return colourname;
 11124   001A76  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 11125   001A7A  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11126   001A7E  0012               	return		;funcret
 11127   001A80                     __end_of_Hue2Colour:
 11128                           	callstack 0
 11129                           
 11130 ;; *************** function ___flge *****************
 11131 ;; Defined at:
 11132 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 11135 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;		None               void
 11140 ;; Registers used:
 11141 ;;		wreg, status,2, status,0
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11147 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;Total ram usage:       12 bytes
 11152 ;; Hardware stack levels used: 1
 11153 ;; Hardware stack levels required when called: 1
 11154 ;; This function calls:
 11155 ;;		Nothing
 11156 ;; This function is called by:
 11157 ;;		_RGB2Hue
 11158 ;;		_Hue2Colour
 11159 ;;		_main
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text63
 11164   0035E4                     __ptext63:
 11165                           	callstack 0
 11166   0035E4                     ___flge:
 11167                           	callstack 29
 11168   0035E4  0E00               	movlw	0
 11169   0035E6  1401               	andwf	___flge@ff1^0,w,c
 11170   0035E8  6E09               	movwf	??___flge^0,c
 11171   0035EA  0E00               	movlw	0
 11172   0035EC  1402               	andwf	(___flge@ff1+1)^0,w,c
 11173   0035EE  6E0A               	movwf	(??___flge+1)^0,c
 11174   0035F0  0E80               	movlw	128
 11175   0035F2  1403               	andwf	(___flge@ff1+2)^0,w,c
 11176   0035F4  6E0B               	movwf	(??___flge+2)^0,c
 11177   0035F6  0E7F               	movlw	127
 11178   0035F8  1404               	andwf	(___flge@ff1+3)^0,w,c
 11179   0035FA  6E0C               	movwf	(??___flge+3)^0,c
 11180   0035FC  5009               	movf	??___flge^0,w,c
 11181   0035FE  100A               	iorwf	(??___flge+1)^0,w,c
 11182   003600  100B               	iorwf	(??___flge+2)^0,w,c
 11183   003602  100C               	iorwf	(??___flge+3)^0,w,c
 11184   003604  A4D8               	btfss	status,2,c
 11185   003606  EF07  F01B         	goto	u3261
 11186   00360A  EF09  F01B         	goto	u3260
 11187   00360E                     u3261:
 11188   00360E  EF11  F01B         	goto	l3772
 11189   003612                     u3260:
 11190   003612  0E00               	movlw	0
 11191   003614  6E01               	movwf	___flge@ff1^0,c
 11192   003616  0E00               	movlw	0
 11193   003618  6E02               	movwf	(___flge@ff1+1)^0,c
 11194   00361A  0E00               	movlw	0
 11195   00361C  6E03               	movwf	(___flge@ff1+2)^0,c
 11196   00361E  0E00               	movlw	0
 11197   003620  6E04               	movwf	(___flge@ff1+3)^0,c
 11198   003622                     l3772:
 11199   003622  0E00               	movlw	0
 11200   003624  1405               	andwf	___flge@ff2^0,w,c
 11201   003626  6E09               	movwf	??___flge^0,c
 11202   003628  0E00               	movlw	0
 11203   00362A  1406               	andwf	(___flge@ff2+1)^0,w,c
 11204   00362C  6E0A               	movwf	(??___flge+1)^0,c
 11205   00362E  0E80               	movlw	128
 11206   003630  1407               	andwf	(___flge@ff2+2)^0,w,c
 11207   003632  6E0B               	movwf	(??___flge+2)^0,c
 11208   003634  0E7F               	movlw	127
 11209   003636  1408               	andwf	(___flge@ff2+3)^0,w,c
 11210   003638  6E0C               	movwf	(??___flge+3)^0,c
 11211   00363A  5009               	movf	??___flge^0,w,c
 11212   00363C  100A               	iorwf	(??___flge+1)^0,w,c
 11213   00363E  100B               	iorwf	(??___flge+2)^0,w,c
 11214   003640  100C               	iorwf	(??___flge+3)^0,w,c
 11215   003642  A4D8               	btfss	status,2,c
 11216   003644  EF26  F01B         	goto	u3271
 11217   003648  EF28  F01B         	goto	u3270
 11218   00364C                     u3271:
 11219   00364C  EF30  F01B         	goto	l3776
 11220   003650                     u3270:
 11221   003650  0E00               	movlw	0
 11222   003652  6E05               	movwf	___flge@ff2^0,c
 11223   003654  0E00               	movlw	0
 11224   003656  6E06               	movwf	(___flge@ff2+1)^0,c
 11225   003658  0E00               	movlw	0
 11226   00365A  6E07               	movwf	(___flge@ff2+2)^0,c
 11227   00365C  0E00               	movlw	0
 11228   00365E  6E08               	movwf	(___flge@ff2+3)^0,c
 11229   003660                     l3776:
 11230   003660  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11231   003662  EF35  F01B         	goto	u3281
 11232   003666  EF37  F01B         	goto	u3280
 11233   00366A                     u3281:
 11234   00366A  EF40  F01B         	goto	l3780
 11235   00366E                     u3280:
 11236   00366E  6C01               	negf	___flge@ff1^0,c
 11237   003670  1E02               	comf	(___flge@ff1+1)^0,f,c
 11238   003672  B0D8               	btfsc	status,0,c
 11239   003674  2A02               	incf	(___flge@ff1+1)^0,f,c
 11240   003676  1E03               	comf	(___flge@ff1+2)^0,f,c
 11241   003678  B0D8               	btfsc	status,0,c
 11242   00367A  2A03               	incf	(___flge@ff1+2)^0,f,c
 11243   00367C  0E80               	movlw	128
 11244   00367E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11245   003680                     l3780:
 11246   003680  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11247   003682  EF45  F01B         	goto	u3291
 11248   003686  EF47  F01B         	goto	u3290
 11249   00368A                     u3291:
 11250   00368A  EF50  F01B         	goto	l934
 11251   00368E                     u3290:
 11252   00368E  6C05               	negf	___flge@ff2^0,c
 11253   003690  1E06               	comf	(___flge@ff2+1)^0,f,c
 11254   003692  B0D8               	btfsc	status,0,c
 11255   003694  2A06               	incf	(___flge@ff2+1)^0,f,c
 11256   003696  1E07               	comf	(___flge@ff2+2)^0,f,c
 11257   003698  B0D8               	btfsc	status,0,c
 11258   00369A  2A07               	incf	(___flge@ff2+2)^0,f,c
 11259   00369C  0E80               	movlw	128
 11260   00369E  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11261   0036A0                     l934:
 11262   0036A0  0E00               	movlw	0
 11263   0036A2  1A01               	xorwf	___flge@ff1^0,f,c
 11264   0036A4  0E00               	movlw	0
 11265   0036A6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11266   0036A8  0E00               	movlw	0
 11267   0036AA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11268   0036AC  0E80               	movlw	128
 11269   0036AE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11270   0036B0  0E00               	movlw	0
 11271   0036B2  1A05               	xorwf	___flge@ff2^0,f,c
 11272   0036B4  0E00               	movlw	0
 11273   0036B6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11274   0036B8  0E00               	movlw	0
 11275   0036BA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11276   0036BC  0E80               	movlw	128
 11277   0036BE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11278   0036C0  5005               	movf	___flge@ff2^0,w,c
 11279   0036C2  5C01               	subwf	___flge@ff1^0,w,c
 11280   0036C4  5006               	movf	(___flge@ff2+1)^0,w,c
 11281   0036C6  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11282   0036C8  5007               	movf	(___flge@ff2+2)^0,w,c
 11283   0036CA  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11284   0036CC  5008               	movf	(___flge@ff2+3)^0,w,c
 11285   0036CE  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11286   0036D0  B0D8               	btfsc	status,0,c
 11287   0036D2  EF6D  F01B         	goto	u3301
 11288   0036D6  EF6F  F01B         	goto	u3300
 11289   0036DA                     u3301:
 11290   0036DA  EF72  F01B         	goto	l3786
 11291   0036DE                     u3300:
 11292   0036DE  90D8               	bcf	status,0,c
 11293   0036E0  EF73  F01B         	goto	l939
 11294   0036E4                     l3786:
 11295   0036E4  80D8               	bsf	status,0,c
 11296   0036E6                     l939:
 11297   0036E6  0012               	return		;funcret
 11298   0036E8                     __end_of___flge:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function _ClickLEDOn *****************
 11302 ;; Defined at:
 11303 ;;		line 93 in file "colorclick.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  power           1    wreg     unsigned char 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;  power           1    0[COMRAM] unsigned char 
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11321 ;;Total ram usage:        1 bytes
 11322 ;; Hardware stack levels used: 1
 11323 ;; Hardware stack levels required when called: 1
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text64
 11332   004812                     __ptext64:
 11333                           	callstack 0
 11334   004812                     _ClickLEDOn:
 11335                           	callstack 29
 11336                           
 11337                           ;incstack = 0
 11338                           ;ClickLEDOn@power stored from wreg
 11339   004812  6E01               	movwf	ClickLEDOn@power^0,c
 11340   004814                     
 11341                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11342   004814  5001               	movf	ClickLEDOn@power^0,w,c
 11343   004816  B4D8               	btfsc	status,2,c
 11344   004818  EF10  F024         	goto	u3931
 11345   00481C  EF12  F024         	goto	u3930
 11346   004820                     u3931:
 11347   004820  EF17  F024         	goto	l4238
 11348   004824                     u3930:
 11349   004824                     
 11350                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11351   004824  827F               	bsf	127,1,c	;volatile
 11352                           
 11353                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11354   004826  8879               	bsf	121,4,c	;volatile
 11355                           
 11356                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11357   004828  8E7E               	bsf	126,7,c	;volatile
 11358                           
 11359                           ;colorclick.c: 99:     }
 11360   00482A  EF22  F024         	goto	l52
 11361   00482E                     l4238:
 11362   00482E  5001               	movf	ClickLEDOn@power^0,w,c
 11363   004830  A4D8               	btfss	status,2,c
 11364   004832  EF1D  F024         	goto	u3941
 11365   004836  EF1F  F024         	goto	u3940
 11366   00483A                     u3941:
 11367   00483A  EF22  F024         	goto	l52
 11368   00483E                     u3940:
 11369   00483E                     
 11370                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11371   00483E  927F               	bcf	127,1,c	;volatile
 11372                           
 11373                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11374   004840  9879               	bcf	121,4,c	;volatile
 11375                           
 11376                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11377   004842  9E7E               	bcf	126,7,c	;volatile
 11378   004844                     l52:
 11379   004844  0012               	return		;funcret
 11380   004846                     __end_of_ClickLEDOn:
 11381                           	callstack 0
 11382                           
 11383 ;; *************** function _HighISR *****************
 11384 ;; Defined at:
 11385 ;;		line 25 in file "interrupts.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;		None
 11388 ;; Auto vars:     Size  Location     Type
 11389 ;;		None
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  1    wreg      void 
 11392 ;; Registers used:
 11393 ;;		wreg, status,2
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;Total ram usage:        0 bytes
 11404 ;; Hardware stack levels used: 1
 11405 ;; This function calls:
 11406 ;;		Nothing
 11407 ;; This function is called by:
 11408 ;;		Interrupt level 2
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	intcode
 11413   000008                     __pintcode:
 11414                           	callstack 0
 11415   000008                     _HighISR:
 11416                           	callstack 22
 11417                           
 11418                           ;incstack = 0
 11419   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11420   00000A                     
 11421                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11422   00000A  010E               	movlb	14	; () banked
 11423   00000C  AB33               	btfss	51,5,b	;volatile
 11424   00000E  EF0B  F000         	goto	i2u419_41
 11425   000012  EF0D  F000         	goto	i2u419_40
 11426   000016                     i2u419_41:
 11427   000016  EF14  F000         	goto	i2l666
 11428   00001A                     i2u419_40:
 11429   00001A                     
 11430                           ; BSR set to: 14
 11431                           ;interrupts.c: 29:     maxTime = 1;
 11432   00001A  0E00               	movlw	0
 11433   00001C  0100               	movlb	0	; () banked
 11434   00001E  6FEB               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11435   000020  0E01               	movlw	1
 11436   000022  6FEA               	movwf	_maxTime& (0+255),b	;volatile
 11437   000024                     
 11438                           ; BSR set to: 0
 11439                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11440   000024  010E               	movlb	14	; () banked
 11441   000026  9B33               	bcf	51,5,b	;volatile
 11442   000028                     i2l666:
 11443                           
 11444                           ; BSR set to: 14
 11445   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11446   00002A  0011               	retfie		f
 11447   00002C                     __end_of_HighISR:
 11448                           	callstack 0
 11449                           
 11450                           	psect	rparam
 11451   000000                     
 11452                           	psect	temp
 11453   00005F                     btemp:
 11454                           	callstack 0
 11455   00005F                     	ds	1
 11456   000000                     int$flags	set	btemp
 11457   000000                     wtemp8	set	btemp+1
 11458   000000                     ttemp5	set	btemp+1
 11459   000000                     ttemp6	set	btemp+4
 11460   000000                     ttemp7	set	btemp+8
 11461                           
 11462                           	psect	idloc
 11463                           
 11464                           ;Config register IDLOC0 @ 0x200000
 11465                           ;	unspecified, using default values
 11466   200000                     	org	2097152
 11467   200000  0FFF               	dw	4095
 11468                           
 11469                           ;Config register IDLOC1 @ 0x200002
 11470                           ;	unspecified, using default values
 11471   200002                     	org	2097154
 11472   200002  0FFF               	dw	4095
 11473                           
 11474                           ;Config register IDLOC2 @ 0x200004
 11475                           ;	unspecified, using default values
 11476   200004                     	org	2097156
 11477   200004  0FFF               	dw	4095
 11478                           
 11479                           ;Config register IDLOC3 @ 0x200006
 11480                           ;	unspecified, using default values
 11481   200006                     	org	2097158
 11482   200006  0FFF               	dw	4095
 11483                           
 11484                           ;Config register IDLOC4 @ 0x200008
 11485                           ;	unspecified, using default values
 11486   200008                     	org	2097160
 11487   200008  0FFF               	dw	4095
 11488                           
 11489                           ;Config register IDLOC5 @ 0x20000A
 11490                           ;	unspecified, using default values
 11491   20000A                     	org	2097162
 11492   20000A  0FFF               	dw	4095
 11493                           
 11494                           ;Config register IDLOC6 @ 0x20000C
 11495                           ;	unspecified, using default values
 11496   20000C                     	org	2097164
 11497   20000C  0FFF               	dw	4095
 11498                           
 11499                           ;Config register IDLOC7 @ 0x20000E
 11500                           ;	unspecified, using default values
 11501   20000E                     	org	2097166
 11502   20000E  0FFF               	dw	4095
 11503                           
 11504                           	psect	config
 11505                           
 11506                           ;Config register CONFIG1L @ 0x300000
 11507                           ;	External Oscillator mode Selection bits
 11508                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11509                           ;	Power-up default value for COSC bits
 11510                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11511   300000                     	org	3145728
 11512   300000  AA                 	db	170
 11513                           
 11514                           ;Config register CONFIG1H @ 0x300001
 11515                           ;	unspecified, using default values
 11516                           ;	Clock Out Enable bit
 11517                           ;	CLKOUTEN = 0x1, unprogrammed default
 11518                           ;	Clock Switch Enable bit
 11519                           ;	CSWEN = 0x1, unprogrammed default
 11520                           ;	Fail-Safe Clock Monitor Enable bit
 11521                           ;	FCMEN = 0x1, unprogrammed default
 11522   300001                     	org	3145729
 11523   300001  FF                 	db	255
 11524                           
 11525                           ;Config register CONFIG2L @ 0x300002
 11526                           ;	unspecified, using default values
 11527                           ;	Master Clear Enable bit
 11528                           ;	MCLRE = 0x1, unprogrammed default
 11529                           ;	Power-up Timer Enable bit
 11530                           ;	PWRTE = 0x1, unprogrammed default
 11531                           ;	Low-power BOR enable bit
 11532                           ;	LPBOREN = 0x1, unprogrammed default
 11533                           ;	Brown-out Reset Enable bits
 11534                           ;	BOREN = 0x3, unprogrammed default
 11535   300002                     	org	3145730
 11536   300002  FF                 	db	255
 11537                           
 11538                           ;Config register CONFIG2H @ 0x300003
 11539                           ;	unspecified, using default values
 11540                           ;	Brown Out Reset Voltage selection bits
 11541                           ;	BORV = 0x3, unprogrammed default
 11542                           ;	ZCD Disable bit
 11543                           ;	ZCD = 0x1, unprogrammed default
 11544                           ;	PPSLOCK bit One-Way Set Enable bit
 11545                           ;	PPS1WAY = 0x1, unprogrammed default
 11546                           ;	Stack Full/Underflow Reset Enable bit
 11547                           ;	STVREN = 0x1, unprogrammed default
 11548                           ;	Debugger Enable bit
 11549                           ;	DEBUG = 0x1, unprogrammed default
 11550                           ;	Extended Instruction Set Enable bit
 11551                           ;	XINST = 0x1, unprogrammed default
 11552   300003                     	org	3145731
 11553   300003  FF                 	db	255
 11554                           
 11555                           ;Config register CONFIG3L @ 0x300004
 11556                           ;	WDT Period Select bits
 11557                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11558                           ;	WDT operating mode
 11559                           ;	WDTE = OFF, WDT Disabled
 11560   300004                     	org	3145732
 11561   300004  9F                 	db	159
 11562                           
 11563                           ;Config register CONFIG3H @ 0x300005
 11564                           ;	unspecified, using default values
 11565                           ;	WDT Window Select bits
 11566                           ;	WDTCWS = 0x7, unprogrammed default
 11567                           ;	WDT input clock selector
 11568                           ;	WDTCCS = 0x7, unprogrammed default
 11569   300005                     	org	3145733
 11570   300005  FF                 	db	255
 11571                           
 11572                           ;Config register CONFIG4L @ 0x300006
 11573                           ;	unspecified, using default values
 11574                           ;	Write Protection Block 0
 11575                           ;	WRT0 = 0x1, unprogrammed default
 11576                           ;	Write Protection Block 1
 11577                           ;	WRT1 = 0x1, unprogrammed default
 11578                           ;	Write Protection Block 2
 11579                           ;	WRT2 = 0x1, unprogrammed default
 11580                           ;	Write Protection Block 3
 11581                           ;	WRT3 = 0x1, unprogrammed default
 11582                           ;	Write Protection Block 3
 11583                           ;	WRT4 = 0x1, unprogrammed default
 11584                           ;	Write Protection Block 3
 11585                           ;	WRT5 = 0x1, unprogrammed default
 11586                           ;	Write Protection Block 3
 11587                           ;	WRT6 = 0x1, unprogrammed default
 11588                           ;	Write Protection Block 3
 11589                           ;	WRT7 = 0x1, unprogrammed default
 11590   300006                     	org	3145734
 11591   300006  FF                 	db	255
 11592                           
 11593                           ;Config register CONFIG4H @ 0x300007
 11594                           ;	unspecified, using default values
 11595                           ;	Configuration Register Write Protection bit
 11596                           ;	WRTC = 0x1, unprogrammed default
 11597                           ;	Boot Block Write Protection bit
 11598                           ;	WRTB = 0x1, unprogrammed default
 11599                           ;	Data EEPROM Write Protection bit
 11600                           ;	WRTD = 0x1, unprogrammed default
 11601                           ;	Scanner Enable bit
 11602                           ;	SCANE = 0x1, unprogrammed default
 11603                           ;	Low Voltage Programming Enable bit
 11604                           ;	LVP = 0x1, unprogrammed default
 11605   300007                     	org	3145735
 11606   300007  FF                 	db	255
 11607                           
 11608                           ;Config register CONFIG5L @ 0x300008
 11609                           ;	unspecified, using default values
 11610                           ;	UserNVM Program Memory Code Protection bit
 11611                           ;	CP = 0x1, unprogrammed default
 11612                           ;	DataNVM Memory Code Protection bit
 11613                           ;	CPD = 0x1, unprogrammed default
 11614   300008                     	org	3145736
 11615   300008  FF                 	db	255
 11616                           
 11617                           ;Config register CONFIG5H @ 0x300009
 11618                           ;	unspecified, using default values
 11619   300009                     	org	3145737
 11620   300009  FF                 	db	255
 11621                           
 11622                           ;Config register CONFIG6L @ 0x30000A
 11623                           ;	unspecified, using default values
 11624                           ;	Table Read Protection Block 0
 11625                           ;	EBTR0 = 0x1, unprogrammed default
 11626                           ;	Table Read Protection Block 1
 11627                           ;	EBTR1 = 0x1, unprogrammed default
 11628                           ;	Table Read Protection Block 2
 11629                           ;	EBTR2 = 0x1, unprogrammed default
 11630                           ;	Table Read Protection Block 3
 11631                           ;	EBTR3 = 0x1, unprogrammed default
 11632                           ;	Table Read Protection Block 4
 11633                           ;	EBTR4 = 0x1, unprogrammed default
 11634                           ;	Table Read Protection Block 5
 11635                           ;	EBTR5 = 0x1, unprogrammed default
 11636                           ;	Table Read Protection Block 6
 11637                           ;	EBTR6 = 0x1, unprogrammed default
 11638                           ;	Table Read Protection Block 7
 11639                           ;	EBTR7 = 0x1, unprogrammed default
 11640   30000A                     	org	3145738
 11641   30000A  FF                 	db	255
 11642                           
 11643                           ;Config register CONFIG6H @ 0x30000B
 11644                           ;	unspecified, using default values
 11645                           ;	Boot Block Table Read Protection bit
 11646                           ;	EBTRB = 0x1, unprogrammed default
 11647   30000B                     	org	3145739
 11648   30000B  FF                 	db	255
 11649                           tosu	equ	0xFFF
 11650                           tosh	equ	0xFFE
 11651                           tosl	equ	0xFFD
 11652                           stkptr	equ	0xFFC
 11653                           pclatu	equ	0xFFB
 11654                           pclath	equ	0xFFA
 11655                           pcl	equ	0xFF9
 11656                           tblptru	equ	0xFF8
 11657                           tblptrh	equ	0xFF7
 11658                           tblptrl	equ	0xFF6
 11659                           tablat	equ	0xFF5
 11660                           prodh	equ	0xFF4
 11661                           prodl	equ	0xFF3
 11662                           indf0	equ	0xFEF
 11663                           postinc0	equ	0xFEE
 11664                           postdec0	equ	0xFED
 11665                           preinc0	equ	0xFEC
 11666                           plusw0	equ	0xFEB
 11667                           fsr0h	equ	0xFEA
 11668                           fsr0l	equ	0xFE9
 11669                           wreg	equ	0xFE8
 11670                           indf1	equ	0xFE7
 11671                           postinc1	equ	0xFE6
 11672                           postdec1	equ	0xFE5
 11673                           preinc1	equ	0xFE4
 11674                           plusw1	equ	0xFE3
 11675                           fsr1h	equ	0xFE2
 11676                           fsr1l	equ	0xFE1
 11677                           bsr	equ	0xFE0
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           preinc2	equ	0xFDC
 11682                           plusw2	equ	0xFDB
 11683                           fsr2h	equ	0xFDA
 11684                           fsr2l	equ	0xFD9
 11685                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    130     160
    BANK1           256      0     149
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2826$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), 
		 -> STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2773$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2773$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    White@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK0[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S308DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S308DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_memoryUpdateTime
    _memoryUpdateTime->___fltol
    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fldiv
    ___flsub->___fladd
    ___fladd->_getTimerValue
    ___fldiv->___flsub
    _Colour2Action->_White
    _White->___fltol
    _getTimerValue->___flmul
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flmul->___xxtofl
    ___fltol->___fladd
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_RGB2Hue
    _RGB2Hue->___fldiv
    _Colour2Action->_White

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  497156
                                             27 BANK0    103   103      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                           _LED_init
                            _RGB2Hue
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                    10     6      4    8597
                                             84 COMRAM    10     6      4
                            ___fladd
                            ___fltol
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2258
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   17549
                                             13 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3325
                                             74 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2724
                                             58 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             82 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  446511
                                              6 BANK0      4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               16     6     10  240045
                                             84 COMRAM    10     0     10
                                              0 BANK0      6     6      0
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                            ___fltol
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        8     4      4    4488
                                             50 COMRAM     8     4      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1474
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2990
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1151
                                             74 COMRAM    10     6      4
                            ___fladd (ARG)
                      _getTimerValue (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9084
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19192
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10324
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9692
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8432
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4225
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8027
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3419
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedAhead
         _fullSpeedReverse
         _reverseHalfSquare
         _stop
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___xxtofl (ARG)
           _getTimerValue (ARG)
             ___flmul
             ___xxtofl
         _getTimerValue (ARG)
       _fullSpeedAhead
       _getTimerValue
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
       ___xxtofl (ARG)
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     ___fladd
     ___fltol
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      95       7       58.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllhh       52      0       0      42        0.0%
BITBIGSFRllhllh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRlllllh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllh      17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRlllllh      5      0       0      53        0.0%
BITBIGSFRhhlll       5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRlllllh      3      0       0      52        0.0%
BITBIGSFRllhlh       2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      51        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     193      62        0.0%
DATA                 0      0     193       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 12:19:23 2023

                    _color_read_Red 44A8                        ___fldiv@aexp 006C  
                      ___fldiv@bexp 006B                        ___fldiv@sign 0064  
                   _color_read_Blue 4598                                  l31 479A  
                                l40 4546                                  l34 492E  
                                l43 45E6                                  l52 4844  
                                l37 44F6                                  l46 4596  
                   ??_getTimerValue 0037                 ___wmul@multiplicand 0003  
                    ?_rotate180left 0020                    _color_read_Clear 4548  
                  _color_read_Green 44F8                         Green_L90@mL 0021  
                       Green_L90@mR 0023                                 l111 10B0  
                               l201 4970                                 l105 34DC  
                               l204 475A                                 l119 157C  
                               l137 1A7E                                 l156 2E20  
                               l332 490E                                 l341 4932  
                               l501 44A6                                 l183 489E  
                               l344 4946                                 l504 40E0  
                               l192 498E                                 l353 4810  
                               l601 3EB6                                 l514 42D8  
                               l186 48A0                                 l347 47D8  
                               l195 497A                                 l283 2AC0  
                               l620 4998                                 l524 37CE  
                               l509 425C                                 l189 48C6  
                               l462 3140                                 l534 3C52  
                               l198 4984                                 l471 3BAC  
                               l519 4454                                 l623 43A8  
                               l455 3F46                                 l472 3BAE  
                               l544 2774                                 l368 4964  
                               l529 38B6                                 l297 2C6A  
                               l482 3D8C                                 l539 3CF6  
                               l555 297C                                 l492 41E0  
                               l477 3E22                                 l565 2A52  
                               l495 405A                                 l487 4160  
                               l498 3FD0                                 l669 48EC  
                               l934 36A0                                 l598 4874  
                               l928 3B08                                 l939 36E6  
                               l966 35E2              memoryUpdateMovement@cf 0001  
                               wreg 000FE8               ?_memoryUpdateMovement 0001  
                      ___flmul@aexp 002B                        ___flmul@bexp 002C  
                      ___flmul@sign 0026                        ___flmul@temp 0031  
                      ___flmul@prod 002D                     __end_of_RGB2Hue 157E  
                      ___fltol@exp1 0054                                l1300 232A  
                              l1214 1D88                                l1206 1F3E  
                              l1223 1E58                                l3000 4336  
                              l1160 4344                                l1224 1E46  
                              l1410 46D2                                l3002 4338  
                              l3010 3046                                l1331 2F10  
                              l1251 2704                                l1404 329A  
                              l3004 433E                                l3020 3100  
                              l3012 305A                                l1324 2E78  
                              l1253 2564                                l1422 3A5E  
                              l3014 305E                                l3006 2FD6  
                              l3030 3B4A                                l3022 3B0A  
                              l3110 3D72                                l3102 3D38  
                              l1262 25AA                                l1167 434C  
                              l1327 2FD4                                l1239 4718  
                              l3016 30A0                                l3008 2FF2  
                              l3040 3B94                                l3032 3B54  
                              l3024 3B10                                l3112 3D76  
                              l3104 3D4C                                l4000 293E  
                              l1264 2622                                l1256 2528  
                              l3200 48A0                                l1433 499A  
                              l1265 2610                                l3018 30BC  
                              l3130 41C6                                l3122 418A  
                              l3114 4162                                l3034 3B60  
                              l3026 3B28                                l3042 3D8E  
                              l3106 3D58                                l1290 21FA  
                              l1338 2F6C                                l4010 298C  
                              l4002 2964                                l3202 48B0  
                              l1443 3994                                l1347 4684  
                              l1283 2004                                l3132 41CA  
                              l3124 419E                                l3116 4182  
                              l3036 3B6C                                l3028 3B32  
                              l3060 3DFA                                l3044 3DAE  
                              l3140 4000                                l3108 3D64  
                              l3220 4146                                l3212 410A  
                              l3204 40E2                                l1292 2272  
                              l3300 2088                                l4012 29A4  
                              l4004 297C                                l1293 2260  
                              l1197 1C6E                                l3070 39BA  
                              l1382 331C                                l3150 32AE  
                              l4030 4638                                l3126 41AA  
                              l3038 3B7C                                l3062 3E08  
                              l3054 3DCE                                l3046 3DBA  
                              l3142 402C                                l3134 3FD2  
                              l3230 3F76                                l3222 414A  
                              l3214 411E                                l3206 4102  
                              l3310 20CA                                l3302 2094  
                              l4014 29C4                                l4006 297E  
                              l4022 2A0E                                l4110 24A2  
                              l4102 247E                                l1198 1C5C  
                              l1439 4636                                l1287 2368  
                              l1199 1C22                                l3072 39C4  
                              l3080 45E8                                l1384 3324  
                              l3160 32EC                                l3152 32B6  
                              l4032 4648                                l3128 41B6  
                              l3240 405C                                l3064 3E0C  
                              l3056 3DE2                                l3048 3DC6  
                              l3144 4040                                l3136 3FD4  
                              l3232 3FA2                                l3224 3F48  
                              l3216 412A                                l3320 212C  
                              l3312 20D6                                l3304 20A0  
                              l3400 2EFA                                l4024 2A22  
                              l4016 29EE                                l4008 2988  
                              l4120 24F4                                l4112 24BC  
                              l4104 248E                                l4200 3A9E  
                              l1393 33D6                                l4050 47F8  
                              l4042 47DA                                l3074 39E2  
                              l3066 3996                                l3082 45F4  
                              l3170 336E                                l3162 32FA  
                              l3154 32C8                                l4034 4650  
                              l3242 4070                                l3058 3DEE  
                              l3146 4058                                l3138 3FE8  
                              l3090 3CF8                                l3234 3FB6  
                              l3226 3F4A                                l3218 4136  
                              l3330 21C2                                l3322 2138  
                              l3314 20E6                                l3306 20AE  
                              l3250 1F40                                l3410 2F7A  
                              l3402 2F06                                l4026 2A36  
                              l4018 2A02                                l4130 2550  
                              l4122 2504                                l4114 24CC  
                              l4106 248E                                l4202 3ACC  
                              l4044 47DE                                l3076 3A18  
                              l3068 39A8                                l3084 45F8  
                              l3172 337A                                l3164 3338  
                              l3156 32D0                                l3148 329C  
                              l3180 38B8                                l4036 4658  
                              l3244 4088                                l3092 3D18  
                              l3236 3FCE                                l3228 3F5E  
                              l3500 42B0                                l3340 2218  
                              l3332 21E0                                l3324 2154  
                              l3316 2100                                l3308 20BA  
                              l3260 1F7C                                l3252 1F4C  
                              l3420 2FC2                                l3412 2F7C  
                              l3404 2F42                                l4028 2A50  
                              l4300 2CA6                                l4140 2590  
                              l4132 2552                                l4124 2518  
                              l4116 24DC                                l4060 2398  
                              l4052 236A                                l4204 3ADC  
                              l4220 4784                                l4212 475C  
                              l4046 47EC                                l3086 462A  
                              l3174 33B0                                l3166 334C  
                              l3158 32E4                                l3190 3918  
                              l3182 38E2                                l3430 3174  
                              l4038 4674                                l3246 40B4  
                              l3238 4456                                l3502 4402  
                              l3094 3D24                                l3510 36FA  
                              l3350 2282                                l3342 221C  
                              l3334 21EA                                l3326 217E  
                              l3318 2110                                l3270 1FAE  
                              l3262 1F8C                                l3254 1F5A  
                              l3422 2FC4                                l3414 2F80  
                              l3406 2F4E                                l4310 2D34  
                              l4302 2CC4                                l4150 25CC  
                              l4142 259A                                l4134 2562  
                              l4126 2526                                l4118 24EC  
                              l4070 23D2                                l4062 23A8  
                              l4054 2378                                l4206 3B00  
                              l4230 4796                                l4222 478E  
                              l4214 4760                                l4240 483E  
                              l4048 47F0                                l3176 33B4  
                              l3168 3350                                l3192 3934  
                              l3440 3204                                l3432 3182  
                              l3248 40C8                                l3504 4414  
                              l3096 3D30                                l3520 37A2  
                              l3512 3722                                l3360 22E4  
                              l3352 228E                                l3344 222A  
                              l3336 21F8                                l3328 21B4  
                              l3280 1FEE                                l3272 1FBC  
                              l3264 1F92                                l3256 1F5C  
                              l3416 2FA4                                l3408 2F5C  
                              l4320 2DBC                                l4312 2D4C  
                              l4304 2CDC                                l4160 263E  
                              l4152 25DA                                l4144 25A8  
                              l4136 2574                                l4128 2532  
                              l4080 23FE                                l4072 23D8  
                              l4064 23B8                                l4056 2386  
                              l4208 3B06                                l3600 1B36  
                              l4232 4798                                l4224 4790  
                              l4216 476A                                l4400 2A7A  
                              l4234 4814                                l3178 33B8  
                              l3194 3946                                l3186 38EE  
                              l3442 3210                                l3450 3260  
                              l3434 3186                                l3426 3142  
                              l3506 4440                                l3530 3822  
                              l3522 37BA                                l3514 373A  
                              l3370 234C                                l3362 22F8  
                              l3354 229C                                l3346 2258  
                              l3338 220A                                l3290 2038  
                              l3282 1FF4                                l3274 1FBE  
                              l3266 1FA2                                l3258 1F6C  
                              l3418 2FB4                                l4322 2DDC  
                              l4314 2D6C                                l4306 2CFC  
                              l4170 26AA                                l4162 264C  
                              l4154 2608                                l4138 258A  
                              l4146 25BA                                l4090 2438  
                              l4082 240E                                l4074 23DE  
                              l4066 23BA                                l4058 2388  
                              l3610 1B72                                l3602 1B46  
                              l4226 4792                                l4218 477A  
                              l4250 34C0                                l4242 33D8  
                              l4330 48EE                                l4410 2A9A  
                              l4402 2A7E                                l4236 4824  
                              l3196 3970                                l3188 38FC  
                              l3444 3218                                l3436 31AA  
                              l3428 3166                                l3540 3BB0  
                              l3532 3836                                l3524 37D0  
                              l3516 374E                                l3508 36E8  
                              l3372 234E                                l3364 2312  
                              l3356 22C6                                l3292 2044  
                              l3284 2014                                l3276 1FCE  
                              l3268 1FA8                                l3380 2E24  
                              l4324 2DF4                                l4316 2D84  
                              l4308 2D14                                l4180 26F8  
                              l4172 26C4                                l4164 2676  
                              l4148 25C8                                l4092 244E  
                              l4084 241E                                l4076 23EC  
                              l4068 23C2                                l3700 1D78  
                              l3620 1B90                                l3612 1B80  
                              l3604 1B48                                l4260 0F0E  
                              l4252 0E52                                l3460 4986  
                              l4228 4794                                l4244 3470  
                              l4340 490A                                l4332 48F2  
                              l4420 2ABA                                l4412 2A9E  
                              l4404 2A86                                l4238 482E  
                              l3446 3228                                l3438 31E0  
                              l3454 3272                                l3550 3CBA  
                              l3542 3BC2                                l3526 37E2  
                              l3534 384E                                l3518 3766  
                              l3366 232E                                l3374 2354  
                              l3358 22CA                                l3294 204E  
                              l3286 2024                                l3278 1FDE  
                              l3382 2E34                                l4326 2DF4  
                              l4318 2DA4                                l4182 26FA  
                              l4174 26E0                                l4158 2632  
                              l4166 267A                                l4094 245E  
                              l4086 2420                                l4078 23EE  
                              l3710 1DCC                                l3702 1D9E  
                              l3630 1BA4                                l3622 1B94  
                              l3614 1B84                                l3606 1B50  
                              l4190 46D4                                l4270 1058  
                              l4262 0F54                                l4254 0E9A  
                              l3462 498A                                l3470 4980  
                              l4246 3488                                l4350 3EEE  
                              l4342 490C                                l4334 48FC  
                              l4430 2AF2                                l4422 2ABC  
                              l4414 2AA2                                l4406 2A8E  
                              l3544 3C16                                l3536 388A  
                              l3528 380A                                l3552 4990  
                              l3800 3534                                l3376 2358  
                              l3368 233E                                l3296 2064  
                              l3392 2EB2                                l3384 2E42  
                              l3560 4354                                l4344 4958  
                              l4176 26E4                                l4168 2694  
                              l4096 2466                                l4088 2428  
                              l3720 1DF6                                l3712 1DDA  
                              l3704 1DAE                                l3640 1BB8  
                              l3632 1BA8                                l3624 1B98  
                              l3616 1B88                                l3608 1B60  
                              l4192 46E4                                l4280 1232  
                              l4272 1086                                l4264 0F9C  
                              l4256 0EE2                                l3464 4968  
                              l3480 4728                                l3472 4972  
                              l4248 34A4                                l4360 3F2C  
                              l4352 3EF2                                l4336 48FE  
                              l4440 2B66                                l4432 2AFC  
                              l4424 2ACE                                l4416 2AAA  
                              l4408 2A96                                l3554 4932  
                              l4370 479C                                l3546 3C54  
                              l3538 38A2                                l3490 41E2  
                              l3802 3544                                l3298 2070  
                              l3394 2EBA                                l3386 2E88  
                              l3562 4362                                l4178 26F2  
                              l4098 246A                                l3730 1E28  
                              l3722 1E06                                l3714 1DDC  
                              l3650 1C0A                                l3642 1BBC  
                              l3634 1BAC                                l3626 1B9C  
                              l3618 1B8C                                l3570 1A9A  
                              l4290 14AC                                l4282 127A  
                              l4274 10F8                                l4266 0FC4  
                              l4258 0F04                                l3466 496C  
                              l3482 4730                                l3474 4976  
                              l4362 3F2E                                l4354 3F16  
                              l4346 3EB8                                l4338 4908  
                              l4442 2B7A                                l4434 2B14  
                              l4450 2BB4                                l4426 2AE8  
                              l4418 2AB2                                l3900 16BA  
                              l3556 4942                                l4372 47B0  
                              l3548 3C66                                l3492 41F4  
                              l3812 356E                                l3804 3548  
                              l3396 2EC6                                l3388 2E9E  
                              l4196 3A60                                l3740 1E82  
                              l3732 1E3E                                l3716 1DEA  
                              l3708 1DC2                                l3724 1E08  
                              l3660 1C4E                                l3652 1C1A  
                              l3636 1BB0                                l3628 1BA0  
                              l3644 1BC0                                l3580 1ACE  
                              l3572 1A9C                                l4284 12C6  
                              l4292 1512                                l4276 1140  
                              l4268 100C                                l3468 497C  
                              l3484 4756                                l3476 471C  
                              l4364 3F38                                l4356 3F20  
                              l4348 3EC8                                l4380 3E9C  
                              l4460 2BEC                                l4452 2BC6  
                              l4444 2B80                                l4436 2B20  
                              l4428 2AEC                                l3910 1794  
                              l3902 16F8                                l4374 47CC  
                              l3494 4234                                l3830 35D2  
                              l3822 3596                                l3814 3578  
                              l3806 3556                                l3398 2EF8  
                              l3558 434E                                l4198 3A8E  
                              l3750 1EFE                                l3742 1EBC  
                              l3718 1DF2                                l3726 1E16  
                              l3662 1C50                                l3654 1C30  
                              l3646 1BC4                                l3638 1BB4  
                              l3590 1B00                                l3574 1AAC  
                              l3582 1AD6                                l3566 1A80  
                              l4294 152E                                l4286 1384  
                              l4278 1164                                l3486 4758  
                              l3478 4720                                l4366 3F3A  
                              l4358 3F22                                l4382 4846  
                              l4470 2C38                                l4462 2BF8  
                              l4454 2BD2                                l4446 2B86  
                              l4438 2B34                                l4390 2A60  
                              l3920 186E                                l3912 17D2  
                              l3904 1736                                l3840 46CA  
                              l3496 425E                                l3824 35A2  
                              l3816 3582                                l4296 2C6E  
                              l3760 1F1E                                l3752 1F02  
                              l3736 1E68                                l3744 1EBE  
                              l3728 1E1A                                l3680 1CD8  
                              l3672 1CA0                                l3664 1C5A  
                              l3656 1C3C                                l3648 1BEE  
                              l3592 1B06                                l3584 1AE6  
                              l3576 1ABC                                l3568 1A8C  
                              l4288 13EE                                l4368 3F44  
                              l4376 3E24                                l4472 2C4C  
                              l4464 2C14                                l4456 2BD8  
                              l4448 2BA0                                l4392 2A64  
                              l4384 2A54                                l3770 3612  
                              l3930 1912                                l3922 1876  
                              l3914 17DA                                l3906 173E  
                              l3834 4686                                l3498 4270  
                              l3826 35B2                                l4298 2C8E  
                              l3762 1F2C                                l3754 1F10  
                              l3746 1ECE                                l3738 1E74  
                              l3682 1CDC                                l3674 1CB0  
                              l3666 1C7C                                l3690 1CFC  
                              l3658 1C40                                l3594 1B14  
                              l3586 1AEC                                l3578 1ACC  
                              l3850 4888                                l4378 3E5C  
                              l4474 2C50                                l4466 2C22  
                              l4458 2BDE                                l4394 2A64  
                              l4386 2A58                                l3780 3680  
                              l3772 3622                                l3940 19C6  
                              l3932 192A                                l3924 188E  
                              l3916 17F2                                l3908 1756  
                              l3836 4692                                l2980 48E4  
                              l3828 35C2                                l3764 1F2E  
                              l3756 1F16                                l3748 1EDE  
                              l3692 1D22                                l3684 1CEA  
                              l3676 1CBE                                l3668 1C8C  
                              l3596 1B16                                l3588 1AFE  
                              l3852 488A                                l3844 4876  
                              l3860 44EE                                l4476 2C56  
                              l4396 2A70                                l4388 2A5C  
                              l3782 368E                                l3774 3650  
                              l3942 1A04                                l3934 1968  
                              l3926 18CC                                l3918 1830  
                              l3950 1A76                                l3838 46AE  
                              l2990 42FC                                l3790 34DE  
                              l3758 1F18                                l3694 1D56  
                              l3686 1CEC                                l3678 1CCC  
                              l3598 1B26                                l3854 488C  
                              l3846 4880                                l3870 4598  
                              l4398 2A76                                l3784 36DE  
                              l3776 3660                                l3768 35E4  
                              l3944 1A42                                l3936 19A6  
                              l3928 190A                                l2992 4304  
                              l2984 42DA                                l3792 34F4  
                              l3960 274C                                l3696 1D58  
                              l3688 1CF6                                l3848 4886  
                              l3856 4912                                l3872 45DE  
                              l3864 44F8                                l3786 36E4  
                              l3778 366E                                l3946 1A4A  
                              l3938 19AE                                l3890 160A  
                              l3882 157E                                l2994 4312  
                              l2986 42E2                                l2978 48C8  
                              l3970 2776                                l3962 2752  
                              l3954 2706                                l3698 1D68  
                              l3866 453E                                l3858 44A8  
                              l3948 1A62                                l3892 161E  
                              l3884 1586                                l2996 4318  
                              l2988 42F4                                l3796 3508  
                              l3980 2808                                l3972 278E  
                              l3964 275A                                l3956 270C  
                              l3876 4548                                l3894 165C  
                              l3886 15C4                                l2998 432E  
                              l3798 3532                                l3990 28AA  
                              l3982 282E                                l3974 27B4  
                              l3966 2762                                l3958 2734  
                              l3878 458E                                l3896 169A  
                              l3888 1602                                l3992 28C2  
                              l3984 2846                                l3976 27CC  
                              l3898 16A2                                l3994 28E8  
                              l3986 286C                                l3978 27F0  
                              l3996 2900                                l3988 2884  
                              l3998 2926                                STR_1 0E10  
                              STR_2 0E4C                                STR_3 0E3D  
                              STR_4 0E1C                                STR_5 0E36  
                              STR_6 0E43                                STR_7 0E2F  
                              STR_8 0E11                                STR_9 0E26  
                              u2110 42F4                                u2111 42F0  
                              u2120 4312                                u2200 3E22  
                              u3000 1C4E                                u2121 430E  
                              u2201 3E1E                                u3001 1C4A  
                              u2210 39A8                                u2130 432E  
                              u3010 1C6E                                u2211 39A4  
                              u2131 432A                                u3011 1C6A  
                              u2220 39BA                                u2300 32C8  
                              u2140 2FF2                                u3100 1DAE  
                              u3020 1C7C                                u2221 39B6  
                              u2301 32C4                                u2141 2FEE  
                              u3101 1DAA                                u3021 1C78  
                              u2230 39E2                                u2310 32FA  
                              u2150 30BC                                u3110 1DDA  
                              u3030 1C8C                                u2231 39DE  
                              u2311 32F6                                u2151 30B8  
                              u3111 1DD6                                u3031 1C88  
                              u2240 3A18                                u2320 3318  
                              u2400 3970                                u2160 3B28  
                              u3200 1EBC                                u3120 1DEA  
                              u3040 1CBE                                u4000 1058  
                      _BAUD4CONbits 000EE9                                u2241 3A14  
                              u2321 3314                                u2401 396C  
                              u2161 3B24                                u3201 1EB8  
                              u3121 1DE6                                u3041 1CBA  
                              u4001 1054                                u2250 461A  
                              u2330 336E                                u2170 3B4A  
                              u3210 1ECE                                u3130 1E06  
                              u3050 1CCC                                u4010 10F8  
                              u2410 48B0                                u2331 336A  
                              u2171 3B46                                u3211 1ECA  
                              u3131 1E02                                u3051 1CC8  
                              u4011 10F4                                u2411 48AC  
                              u3300 36DE                                u2260 462A  
                              u2340 339C                                u2180 3B94  
                              u2500 2014                                u4100 2D6C  
                              u3220 1EDE                                u3140 1E16  
                              u3060 1CEA                                u4020 1140  
                              u2420 48C6                                u3301 36DA  
                              u2261 4626                                u2181 3B90  
                              u2501 2010                                u4101 2D68  
                              u3221 1EDA                                u3141 1E12  
                              u3061 1CE6                                u4021 113C  
                              u2421 48C2                                u2350 33D6  
                              u2190 3BAC                                u2270 3D8C  
                              u2430 4160                                u3310 34F4  
                              u2510 2024                                u4110 2DA4  
                              u3230 1EFE                                u3150 1E28  
                              u3070 1D22                                u4030 127A  
                              u2351 33D2                                u2191 3BA8  
                              u2271 3D88                                u2431 415C  
                              u3311 34F0                                u2511 2020  
                              u4111 2DA0                                u3231 1EFA  
                              u3151 1E24                                u3071 1D1E  
                              u4031 1276                                u3400 1602  
                              u2360 38E2                                u2280 41E0  
                              u3320 3528                                u2600 22E4  
                              u2520 219E                                u2440 1F5A  
                              u4120 2DDC                                u3240 1F10  
                              u3160 1E3E                                u3080 1D68  
                              u4040 12C6                                u3401 15FE  
                              u2257 4610                                u2361 38DE  
                              u2281 41DC                                u2601 22E0  
                              u2441 1F56                                u4121 2DD8  
                              u3241 1F0C                                u3161 1E3A  
                              u3081 1D64                                u4041 12C2  
                              u3410 165C                                u2370 3918  
                              u3330 3556                                u2610 2312  
                              u2530 21F8                                u2450 1F6C  
                              u3250 1F2C                                u3170 1E54  
                              u3090 1D9E                                u4050 152E  
                              u4130 2ACE                                _T2PR 000FBC  
                              u3411 1658                                u2347 3392  
                              u2291 32A6                                u2371 3914  
                              u3331 3552                                u2611 230E  
                              u2531 21F4                                u2451 1F68  
                              u3251 1F28                                u3171 1E50  
                              u3091 1D9A                                u4051 152A  
                              u4131 2ACA                                u3260 3612  
                              u3500 190A                                u3420 169A  
                              u2380 3934                                u3340 356A  
                              u2620 234C                                u2540 2218  
                              u2460 1F7C                                u2700 2F7A  
                              u4060 2C8E                                u3180 1E68  
                              u4140 2B66                                u3261 360E  
                              u3501 1906                                u3421 1696  
                              u2381 3930                                u3341 3566  
                              u3325 351E                                u2621 2348  
                              u2541 2214                                u2525 2194  
                              u2461 1F78                                u2701 2F76  
                              u4061 2C8A                                u3181 1E64  
                              u4141 2B62                                u3270 3650  
                              u3510 1968                                u3430 16F8  
                              u2390 3946                                u3350 3592  
                              u2550 222A                                u2470 1FBC  
                              u2710 2FB4                                u2630 2E34  
                              u4070 2CC4                                u3190 1E82  
                              u4150 2BC6                                u3271 364C  
                              u3511 1964                                u3431 16F4  
                              u2391 3942                                u3351 358E  
                              u2551 2226                                u2471 1FB8  
                              u2711 2FB0                                u2631 2E30  
                              u4071 2CC0                                u3191 1E7E  
                              u4151 2BC2                                u4207 2ADA  
                              u3280 366E                                u3520 19A6  
                              u3440 1736                                u2800 4270  
                              u3360 35B2                                u2560 2258  
                              u2480 1FCE                                u2720 2FC2  
                              u2640 2E42                                u3600 28AA  
                              u4080 2CFC                                u4160 2C38  
                              u3281 366A                                u3521 19A2  
                              u3441 1732                                u2801 426C  
                              u3361 35AE                                u2561 2254  
                              u2481 1FCA                                u2721 2FBE  
                              u2641 2E3E                                u3601 28A6  
                              u4081 2CF8                                u4161 2C34  
                              u4217 2B92                                u3290 368E  
                              u3530 1A04                                u3450 1794  
                              u2730 3166                                u2810 4414  
                              u3370 35C2                                u2570 226E  
                              u2490 1FDE                                u2650 2E9E  
                              u3610 28E8                                u4090 2D34  
                              u4170 2C4C                                u3291 368A  
                              u3531 1A00                                u3451 1790  
                              u2731 3162                                u2811 4410  
                              u4307 413C                                u3371 35BE  
                              u2571 226A                                u2491 1FDA  
                              u2651 2E9A                                u3611 28E4  
                              u4091 2D30                                u4227 4770  
                              u4171 2C48                                u3540 1A42  
                              u3460 17D2                                u2740 31AA  
                              u3380 46CA                                u2820 36FA  
                              u2580 2282                                u2660 2EF4  
                              u3620 2926                                u3700 23EC  
                              u2900 1AFE                                u4180 2C6A  
                              u3541 1A3E                                u3461 17CE  
                              u2741 31A6                                u3381 46C6  
                              u4317 3F68                                u2821 36F6  
                              u2581 227E                                u2661 2EF0  
                              u3621 2922                                u4237 2740  
                              u3701 23E8                                u2901 1AFA  
                              u4181 2C66                                u3470 1830  
                              u3390 15C4                                u2750 31E0  
                              u2830 37E2                                u2590 229C  
                              u2670 2F3E                                u3630 2964  
                              u3550 2770                                u3710 23FE  
                              u2910 1B14                                u3471 182C  
                              u3391 15C0                                u2751 31DC  
                              u4407 40A6                                u4327 3F94  
                              u2831 37DE                                u2591 2298  
                              u2671 2F3A                                u3631 2960  
                              u4247 2782                                u3551 276C  
                              u3711 23FA                                u2911 1B10  
                              u3480 186E                                u2760 3204  
                              u2840 3BC2                                u2680 2F5C  
                              u3640 29EE                                u3560 27B4  
                              u3800 25A8                                u3720 240E  
                              u2920 1B26                                u3481 186A  
                              u2761 3200                                u4417 40D2  
                              u4337 3FC0                                u2841 3BBE  
                              u2681 2F58                                u4257 2A42  
                              u3641 29EA                                u3561 27B0  
                              u3801 25A4                                u3721 240A  
                              u2921 1B22                                u3490 18CC  
                              u2850 3C66                                u2690 2F6C  
                              u3650 2A22                                u3570 27F0  
                              u3810 25C8                                u3730 244E  
                              u2930 1B36                                u2770 4744  
                              u3491 18C8                                u4427 3B72  
                              u4347 3D66                                u2851 3C62  
                              u4267 372C                                u2691 2F68  
                              u3651 2A1E                                u3571 27EC  
                              u3811 25C4                                u3731 244A  
                              u2931 1B32                                u2771 473C  
                              u2860 4942                                u3660 4810  
                              u3580 282E                                u3820 25DA  
                              u3740 248E                                u3900 3A8E  
                              u2940 1B72                                u2861 493E  
                              u3661 480C                                u4437 41BC  
                              u4357 3FF2                                u4277 37AC  
                              u3581 282A                                u3821 25D6  
                              u3741 248A                                u3901 3A8A  
                              u2941 1B6E                                u2790 41F4  
                              u3590 286C                                u3830 2608  
                              u3750 2504                                u3670 2386  
                              u3910 3ACC                                u2950 1B80  
                              u2870 1A9A                                u4447 47F2  
                              u4367 401E                                u4287 3814  
                              u2791 41F0                                u3591 2868  
                              u3831 2604                                u3751 2500  
                              u3671 2382                                u3911 3AC8  
                              u2951 1B7C                                u2871 1A96  
                              u3840 261E                                u3760 2526  
                              u3680 2398                                u3920 3B00  
                              u2960 1BEE                                u2880 1AAC  
                              u4377 404A                                u4297 3894  
                              u3841 261A                                u3761 2522  
                              u3681 2394                                u3921 3AFC  
                              u2961 1BEA                                u2881 1AA8  
                              u3930 4824                                u3850 2632  
                              u3770 2550                                u3690 23A8  
                              u2970 1C06                                u2890 1ABC  
                              u3931 4820                                u4387 3DFC  
                              u3851 262E                                u3771 254C  
                              u3691 23A4                                u2971 1C00  
                              u2891 1AB8                                u3940 483E  
                              u3860 264C                                u3780 2574  
                              u2980 1C08                                u2788 4746  
                              u3941 483A                                u4397 407A  
                              u3861 2648                                u3781 2570  
                              u3870 2694                                u3790 258A  
                              u2990 1C30                                u3950 0E9A  
                              u3871 2690                                u3791 2586  
                              u2991 1C2C                                u3951 0E96  
                              u3880 26C4                                u3960 0EE2  
                              u3881 26C0                                u3961 0EDE  
                              u3890 26F2                                u3970 0F54  
                              u3891 26EE                                u3971 0F50  
                              u3980 0F9C                                u3981 0F98  
                              u3990 100C                                u3991 1008  
               reverseHalfSquare@mL 001B                 reverseHalfSquare@mR 001D  
                              _dbuf 0100                                _main 2A54  
                              _prec 00E4                                fsr1h 000FE2  
                              fsr2h 000FDA                                indf1 000FE7  
                              indf2 000FDF                                fsr1l 000FE1  
                              fsr2l 000FD9                                _stoa 329C  
                              btemp 005F                                _stop 3B0A  
                        _ClickLEDOn 4812            memoryUpdateTime@timerVal 005D  
                              prodh 000FF4                                prodl 000FF3  
                              start 002C                     ___fldiv@new_exp 0065  
           __end_of_Yellow_rev1_R90 37D0       memoryUpdateTime@movementCount 0055  
            __end_of_color_read_Red 44F8                     __end_of_HighISR 002C  
                      ___param_bank 000000                     __end_of_Red_R90 425E  
                        _Hue2Colour 157E                     __end_of_Right45 3FD2  
                  __end_of_LED_init 4966                       ___fltol@sign1 0053  
                   __end_of___fladd 1F40                               ?_main 0001  
                   __end_of___fldiv 2706                               STR_10 0E01  
                             STR_11 0E48                               STR_13 0E48  
                   __end_of___flmul 236A                     __end_of___flsub 471A  
                   __end_of___fltol 35E4                               ?_stoa 000A  
                    _LightBlue_L135 3C54                               ?_stop 0014  
                   __end_of___lwdiv 434E                               i2l666 0028  
                      vfpfcnvrt@fmt 0022                               _TMR0H 000FD4  
                             _TMR0L 000FD3             __end_of_sendCharSerial4 4948  
        __end_of_I2C_2_Master_Start 4990                               _White 2706  
        __end_of_I2C_2_Master_Write 4972                               _flags 00EC  
                             _fputc 3996                   fullSpeedReverse@i 0019  
                             _width 00E2                               _putch 499A  
                             tablat 000FF5                               plusw1 000FE3  
                             plusw2 000FDB                               stoa@i 0018  
                             stoa@l 001C                               stoa@p 001E  
                             stoa@s 000C                               stoa@w 0016  
                             ttemp5 0060                               ttemp6 0063  
                             ttemp7 0067                               status 000FD8  
                             wtemp8 0060                     __end_of_sprintf 4686  
                   __end_of_strncmp 3996                    _memoryUpdateTime 3E24  
              __end_of_Color2String 47DA             __end_of_color_read_Blue 45E8  
             _I2C_2_Master_RepStart 4972                     ?_color_read_Red 0005  
                   __initialization 43AA                        __end_of_main 2C6E  
                      __end_of_stoa 33D8                        __end_of_stop 3BB0  
                   ??_rotate180left 0024              __end_of_LightBlue_L135 3CF8  
                            ??_main 007B                              ??_stoa 000E  
                            ??_stop 0018                       __activetblptr 000002  
            ??_memoryUpdateMovement 0007                           ??_RGB2Hue 006F  
                     ??_Orange_R135 0025                              ?_White 0055  
                      ?_setMotorPWM 000E                              ?_fputc 0001  
                            _CCPR1H 000FAA                              _CCPR2H 000FA6  
                            _CCPR3H 000F25                              _CCPR4H 000F21  
                   _colour_read_all 33D8                              ?_putch 0001  
                            _RC0PPS 000E62                              _RC4REG 000EE3  
                            _RE2PPS 000E74                              _RC7PPS 000E69  
                            _RD5PPS 000E6F                              _RE4PPS 000E76  
                            _RD6PPS 000E70                              i2l4482 000A  
                            _RG6PPS 000E88                              i2l4484 001A  
                            i2l4486 0024                           ??_HighISR 0001  
          __end_of_color_click_init 479C                              _RX4PPS 000E15  
                            _TX4REG 000EE4                         ?_ClickLEDOn 0001  
                  __end_of___xxtofl 2FD6                           ??_Red_R90 0025  
                            _Left45 3FD2                           ??_Right45 001E  
                  _fullSpeedReverse 4162                    ?_Yellow_rev1_R90 0021  
                      _CCPTMRS0bits 000FAD                        vfprintf@cfmt 0030  
                            White@i 0064                              ___flge 35E4  
                            ___fleq 3A60                           ??___fladd 0043  
                       ?_Hue2Colour 000D                              ___wmul 48C8  
                         ??___fldiv 005B                       Orange_R135@mL 0021  
                         ??___flmul 0022                       Orange_R135@mR 0023  
                         ??___flsub 0053                           ??___fltol 004F  
                         ??___lwdiv 000B                          _TimerReset 4990  
                            _colorf 0170                     ?_LightBlue_L135 0021  
                            clear_0 43E2                              clear_1 43EE  
                fullSpeedReverse@mL 0014                  fullSpeedReverse@mR 0016  
                            _motorL 00F6                              _motorR 00ED  
                            isa$std 000001                              _strlen 45E8  
                            fputc@c 0001                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                    ?_sendCharSerial4 0001  
 memoryUpdateMovement@movementCount 0003                              stoa@cp 001A  
                            stoa@fp 000A                              putch@c 0001  
                  __end_of_vfprintf 46D4                              stop@mL 0014  
                            stop@mR 0016                   ??_initDCmotorsPWM 0003  
                         ??_sprintf 0038                           ??_strncmp 0007  
                  __end_of_turnLeft 3E24                          ___flge@ff1 0001  
                        ___flge@ff2 0005                        ___xxtofl@arg 0016  
                      ___xxtofl@exp 0015                        ___xxtofl@val 000C  
                        ___fleq@ff1 0001                          ___fleq@ff2 0005  
               __end_of_Orange_R135 3C54                          __accesstop 0060  
           __end_of__initialization 43F4            __end_of_color_read_Clear 4598  
                   fullSpeedAhead@i 0019                   __end_of_Blue_T180 4456  
          __end_of_color_read_Green 4548              ?_I2C_2_Master_RepStart 0001  
                     ___rparam_used 000001                           ?_LED_init 0001  
                        ___fltol@f1 004B                    ?_color_read_Blue 0005  
                    __pcstackCOMRAM 0001                       __end_of_White 2A54  
                      __pidataBANK0 499C                        __pidataBANK1 4948  
                     __end_of_fputc 3A60                   __end_of_Green_L90 42DA  
                     __end_of_putch 499C                           RGB2Hue@cf 006D  
                       _ForwardFlag 00FF             __end_of_colour_read_all 34DE  
                           ??_White 0060                             ??_fputc 0005  
                           ??_putch 0001                          __pbssBANK0 00E2  
                        __pbssBANK1 0100                          ??_LED_init 0001  
                           ?_Left45 001A                   _color_writetoaddr 4910  
                      _T2CLKCONbits 000FBF               __end_of_Colour2Action 2E22  
                           ?___flge 0001                             ?___fleq 0001  
                ?_color_writetoaddr 0003                             ?___wmul 0001  
                       ?_TimerReset 0001                 ??_color_writetoaddr 0004  
                           ?_strlen 0001               __end_of_getTimerValue 43AA  
          __end_of_memoryUpdateTime 3EB8                        _Color2String 479C  
                           _RGB2Hue 0E52                           ?___xxtofl 000C  
                           _SP4BRGH 000EE6                             _SP4BRGL 000EE5  
                       _Orange_R135 3BB0                             _SSP2ADD 000ED6  
                           _SSP2BUF 000ED5              color_writetoaddr@value 0003  
                  ??_color_read_Red 0007                             _HighISR 0008  
         __end_of_color_writetoaddr 4930                             _Red_R90 41E2  
                _I2C_2_Master_Start 4986                          _initUSART4 48EE  
                _I2C_2_Master_Write 4966                             _Right45 3F48  
                           __Hparam 0000                             __Lparam 0000  
                 color_read_Red@tmp 000A             sendStringSerial4@string 0002  
                           White@mL 0055                             White@mR 0057  
                           ___fladd 1A80                             ___fldiv 236A  
                           ___flmul 1F40                             ___flsub 46D4  
                           ___fltol 34DE                 ?_I2C_2_Master_Start 0001  
                           ___lwdiv 42DA                 ?_I2C_2_Master_Write 0001  
                         ?_vfprintf 002A                        __psmallconst 0E00  
                           __pcinit 43AA                             __ramtop 0E00  
                         ?_turnLeft 0014                             __ptext0 2A54  
                           __ptext1 3E24                             __ptext2 4846  
                           __ptext3 48EE                             __ptext4 3EB8  
                           __ptext5 33D8                             __ptext6 44A8  
                           __ptext7 44F8                             __ptext8 4548  
                           __ptext9 4598                             _maxTime 00EA  
                         _T2CONbits 000FBD                    ?_colour_read_all 001A  
                        ??___xxtofl 0010                      Color2String@cf 0047  
          __end_of_fullSpeedReverse 41E2                           _T2HLTbits 000FBE  
                           _sprintf 4638                ??_I2C_2_Master_Start 0002  
              ??_I2C_2_Master_Write 0002                             _strncmp 38B8  
              end_of_initialization 43F4      memoryUpdateMovement@colourcode 0007  
                           fputc@fp 0003                       _Pink_rev1_L90 37D0  
                     __Lmediumconst 0000                        ??_ClickLEDOn 0001  
                 ?_color_click_init 0001                      __45drightdelay 0191  
                ??_color_click_init 0005                    ??_LightBlue_L135 0025  
                 __end_of_vfpfcnvrt 329C                   _reverseHalfSquare 405C  
                           postdec1 000FE5                             postdec2 000FDD  
                      ??_Hue2Colour 000F                             postinc0 000FEE  
                           postinc1 000FE6                             postinc2 000FDE  
memoryUpdateMovement@movementMemory 0005                          ??_vfprintf 0030  
                ?_reverseHalfSquare 001B                             strlen@a 0003  
                           strlen@s 0001               __end_of_rotate180left 44A8  
                   _initDCmotorsPWM 3EB8                          ??_turnLeft 0018  
                  White@timerMemory 005D                           _PORTFbits 000F8E  
                setMotorPWM@negDuty 0013                   __end_of_turnRight 3D8E  
                       ___fladd@grs 004A                 ??_reverseHalfSquare 001F  
                __end_of_ClickLEDOn 4846                       ___xxtofl@sign 0014  
                         _TRISAbits 000F81                  setMotorPWM@posDuty 0012  
                         _TRISCbits 000F83                           _TRISDbits 000F84  
                         _TRISEbits 000F85                           _TRISFbits 000F86  
                         _TRISGbits 000F87                           _TRISHbits 000F88  
                       ___fldiv@grs 0067                         ___fldiv@rem 0060  
                  fullSpeedAhead@mL 0014                    fullSpeedAhead@mR 0016  
          color_writetoaddr@address 0004                           Red_R90@mL 0021  
                         Red_R90@mR 0023             ??_I2C_2_Master_RepStart 0002  
                    _movementMemory 0148                  __end_of_Hue2Colour 1A80  
                    ?_Pink_rev1_L90 0021                         ___flmul@grs 0027  
                       _CCP1CONbits 000FAB                   ?_color_read_Clear 0005  
                       _CCP2CONbits 000FA7                   ?_color_read_Green 0005  
                       _CCP3CONbits 000F26                         ?_initUSART4 0001  
                       _CCP4CONbits 000F22           sendCharSerial4@charToSend 0001  
                   Colour2Action@cf 0066           __end_of_reverseHalfSquare 40E2  
                ??_color_read_Clear 0007                  ??_color_read_Green 0007  
                         _Blue_T180 4402                      __end_of_Left45 405C  
                      _RGB2Hue$3169 0073                      __end_of___flge 36E8  
                    __end_of___fleq 3B0A                      _fullSpeedAhead 40E2  
                       vfpfcnvrt@ap 0024                         vfpfcnvrt@fp 0020  
                    __end_of___wmul 48EE                           _Green_L90 425E  
                         Right45@mL 001A                           Right45@mR 001C  
                    __end_of_strlen 4638                          RGB2Hue@max 0077  
                        RGB2Hue@min 0079                 color_read_Clear@tmp 000A  
               start_initialization 43AA                         __halfsquare 018D  
                          ??_Left45 001E                 color_read_Green@tmp 000A  
                        ?_Blue_T180 0024             __end_of_initDCmotorsPWM 3F48  
                       vfprintf@fmt 002C              __end_of_fullSpeedAhead 4162  
                          ??___flge 0009                            ??___fleq 0009  
                          ??___wmul 0005                        ??_TimerReset 0001  
                       __pdataBANK0 00FF                         __pdataBANK1 0186  
                          ??_strlen 0003                           ___fladd@a 003F  
                         ___fladd@b 003B                     ClickLEDOn@power 0001  
                        ?_Green_L90 0021                           ___fldiv@a 0057  
                         ___fldiv@b 0053                   ?_memoryUpdateTime 0055  
                          ?_RGB2Hue 006D                           ___flmul@a 001E  
                         ___flmul@b 001A                           ___flsub@a 004F  
                         ___flsub@b 004B                       __pcstackBANK0 0060  
                      ?_Orange_R135 0021                  ??_memoryUpdateTime 0059  
                   ??_Pink_rev1_L90 0025                            ?_HighISR 0001  
                __end_of_TimerReset 499A                            ?_Red_R90 0021  
            Color2String@colourname 0049                            ?_Right45 001A  
                  ___lwdiv@dividend 0007                     ?_fullSpeedAhead 0014  
                         __pintcode 0008                            ?___fladd 003B  
                          ?___fldiv 0053                            ?___flmul 001A  
                          ?___flsub 004B                            ?___fltol 004B  
                          ?___lwdiv 0007                I2C_2_Master_Read@ack 0003  
              I2C_2_Master_Read@tmp 0004                     Pink_rev1_L90@mL 0021  
                   Pink_rev1_L90@mR 0023                         __smallconst 0E00  
                 _I2C_2_Master_Idle 48A0                   _I2C_2_Master_Init 4876  
                 _I2C_2_Master_Read 471A                       __45dleftdelay 0193  
                 _I2C_2_Master_Stop 497C                   ?_fullSpeedReverse 0014  
                 ??_Yellow_rev1_R90 0025                  ?_I2C_2_Master_Idle 0001  
                   rotate180left@mL 0020                     rotate180left@mR 0022  
                ?_I2C_2_Master_Init 0001                  ?_I2C_2_Master_Read 0001  
                     ??_setMotorPWM 0010                  ?_I2C_2_Master_Stop 0001  
                  ___lwdiv@quotient 000B                 White@movementMemory 005B  
          initDCmotorsPWM@PWMperiod 0001                            ?_sprintf 0032  
                ??_fullSpeedReverse 0018                            ?_strncmp 0001  
              Hue2Colour@colourname 000F                   colour_read_all@cf 001A  
                      Hue2Colour@cf 000D                   _sendStringSerial4 47DA  
               ??_I2C_2_Master_Idle 0001                 ??_I2C_2_Master_Init 0001  
               ??_I2C_2_Master_Read 0002                      ___wmul@product 0005  
                          _LATAbits 000F79                 ??_I2C_2_Master_Stop 0002  
                          _LATCbits 000F7B                            _LATDbits 000F7C  
                          _LATEbits 000F7D                            _LATFbits 000F7E  
                          _LATGbits 000F7F                            _LATHbits 000F80  
                          _PIE0bits 000E29                            _LED_init 4958  
                ?_sendStringSerial4 0002                            _PIE4bits 000E2D  
                       turnRight@mL 0014                         turnRight@mR 0016  
                          _PIR0bits 000E33                         ??_Blue_T180 0028  
                          i2u419_40 001A                            i2u419_41 0016  
                          _PIR4bits 000E37                    ?_initDCmotorsPWM 0001  
                          Left45@mL 001A                            Left45@mR 001C  
                 ??_sendCharSerial4 0001                            _SSP2CON2 000EDA  
               ??_sendStringSerial4 0004                            _SSP2STAT 000ED8  
                         _vfpfcnvrt 3142           __end_of_I2C_2_Master_Idle 48C8  
         __end_of_I2C_2_Master_Init 48A0           __end_of_I2C_2_Master_Read 475C  
                 ___wmul@multiplier 0001           __end_of_I2C_2_Master_Stop 4986  
                     _movementCount 00E8                         ??_Green_L90 0025  
                      setMotorPWM@m 000E         I2C_2_Master_Write@data_byte 0002  
                 ??_color_read_Blue 0007                           _turnRight 3CF8  
                     _retracingDone 00E6                            __1square 018F  
                         copy_data0 43BE           __end_of_sendStringSerial4 4812  
     __end_of_I2C_2_Master_RepStart 497C                  color_read_Blue@tmp 000A  
               __end_of_setMotorPWM 3142                        ??_initUSART4 0001  
                          __Hrparam 0000        __end_of_memoryUpdateMovement 4876  
                        vfprintf@ap 002E                            __Lrparam 0000  
                        vfprintf@fp 002A                       _Colour2Action 2C6E  
                        ?_vfpfcnvrt 0020                          _ANSELDbits 000EA7  
                        _ANSELFbits 000EB4                       _getTimerValue 434E  
                        sprintf@fmt 0034                         Blue_T180@mL 0024  
                       Blue_T180@mR 0026                            ___xxtofl 2E22  
                        _T0CON0bits 000FD5                          _T0CON1bits 000FD6  
                   ___lwdiv@divisor 0009                  __end_of_initUSART4 4910  
                   ___lwdiv@counter 000D                          ?_turnRight 0014  
                          __ptext10 4972                            __ptext11 471A  
                          __ptext20 46D4                            __ptext12 475C  
                          __ptext21 1A80                            __ptext13 4910  
                          __ptext30 34DE                            __ptext22 3A60  
                          __ptext14 4966                            __ptext31 36E8  
                          __ptext23 236A                            __ptext15 497C  
                          __ptext40 3CF8                            __ptext32 4990  
                          __ptext24 4958                            __ptext16 4986  
                          __ptext41 4402                            __ptext33 41E2  
                          __ptext25 2C6E                            __ptext17 48A0  
                          __ptext50 42DA                            __ptext42 4456  
                          __ptext34 37D0                            __ptext26 2706  
                          __ptext18 4876                            __ptext51 479C  
                          __ptext43 3FD2                            __ptext35 40E2  
                          __ptext27 434E                            __ptext19 0E52  
                          __ptext60 47DA                            __ptext52 4638  
                          __ptext44 3D8E                            __ptext36 3BB0  
                          __ptext28 2E22                            __ptext61 4930  
                          __ptext53 4686                            __ptext45 405C  
                          __ptext37 3C54                            __ptext29 1F40  
                          __ptext62 157E                            __ptext54 3142  
                          __ptext46 3B0A                            __ptext38 425E  
                          __ptext63 35E4                            __ptext55 38B8  
                          __ptext47 4162                            __ptext39 3F48  
                          __ptext64 4812                            __ptext56 329C  
                          __ptext48 2FD6                            __ptext57 45E8  
                          __ptext49 48C8                            __ptext58 3996  
                          __ptext59 499A                        _SSP2CON1bits 000ED9  
                      _SSP2CON2bits 000EDA                  White@movementCount 0059  
                        turnLeft@mL 0014                          turnLeft@mR 0016  
                   Color2String@buf 0045                    colour_read_all@B 0024  
                  colour_read_all@C 0028                    colour_read_all@G 0020  
                  colour_read_all@R 001C                      White@tempTimer 0062  
                        turnRight@i 0018                    LightBlue_L135@mL 0021  
                  LightBlue_L135@mR 0023                           stoa@F1144 0186  
                    ?_Colour2Action 0066                            isa$xinst 000000  
                        _RC4STAbits 000EE7                            int$flags 005F  
                          _vfprintf 4686                            main@data 007D  
                 Yellow_rev1_R90@mL 0021                   Yellow_rev1_R90@mR 0023  
                          main@wall 00E1                            _turnLeft 3D8E  
                    ?_getTimerValue 0033                       ?_Color2String 0045  
                    _vfpfcnvrt$2880 0028                          _INTCONbits 000FF2  
                       _setMotorPWM 2FD6               _memoryUpdateTime$3171 0059  
                          intlevel2 0000                           sprintf@ap 0038  
                  ??_fullSpeedAhead 0018                           turnLeft@i 0018  
                         strncmp@_l 0001                           strncmp@_r 0003  
                 ??_colour_read_all 001C             getTimerValue@timerCount 0039  
                   _Yellow_rev1_R90 36E8                         ??_vfpfcnvrt 0026  
                          stoa@nuls 000F                    _color_click_init 475C  
                     _rotate180left 4456                      ??_Color2String 0049  
                          sprintf@f 003A                            sprintf@s 0032  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       _timerMemory 0120                            strncmp@l 0008  
                          strncmp@n 0005                            strncmp@r 000A  
              _memoryUpdateMovement 4846                         ??_turnRight 0018  
                     ___fladd@signs 0047                          _TX4STAbits 000EE8  
             __end_of_Pink_rev1_L90 38B8                     _sendCharSerial4 4930  
                      ___fladd@aexp 0048                        ___fladd@bexp 0049  
       memoryUpdateTime@timerMemory 0057                     ??_Colour2Action 0068  
