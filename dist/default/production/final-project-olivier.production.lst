

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 17:08:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 06/04/2022 GMT
    60                           ; 
    61                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     _TX4REG	set	3812
    94   000000                     _RC4STAbits	set	3815
    95   000000                     _SP4BRGH	set	3814
    96   000000                     _SSP2CON2bits	set	3802
    97   000000                     _RX4PPS	set	3605
    98   000000                     _SSP2CLKPPS	set	3612
    99   000000                     _SSP2DATPPS	set	3613
   100   000000                     _ANSELDbits	set	3751
   101   000000                     _SSP2ADD	set	3798
   102   000000                     _SSP2CON1bits	set	3801
   103   000000                     _RC4REG	set	3811
   104   000000                     _SP4BRGL	set	3813
   105   000000                     _TX4STAbits	set	3816
   106   000000                     _BAUD4CONbits	set	3817
   107   000000                     _LATAbits	set	3961
   108   000000                     _LATGbits	set	3967
   109   000000                     _SSP2CON2	set	3802
   110   000000                     _TRISDbits	set	3972
   111   000000                     _SSP2STAT	set	3800
   112   000000                     _TRISFbits	set	3974
   113   000000                     _TRISGbits	set	3975
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIR4bits	set	3639
   116   000000                     _RC0PPS	set	3682
   117   000000                     _RD5PPS	set	3695
   118   000000                     _RD6PPS	set	3696
   119   000000                     _TRISAbits	set	3969
   120   000000                     _LATFbits	set	3966
   121   000000                     _TRISCbits	set	3971
   122                           
   123                           	psect	smallconst
   124   000E00                     __psmallconst:
   125                           	callstack 0
   126   000E00  00                 	db	0
   127   000E01                     STR_1:
   128                           
   129                           ; BSR set to: 14
   130   000E01  52                 	db	82	;'R'
   131   000E02  65                 	db	101	;'e'
   132   000E03  64                 	db	100	;'d'
   133   000E04  20                 	db	32
   134   000E05  25                 	db	37
   135   000E06  66                 	db	102	;'f'
   136   000E07  20                 	db	32
   137   000E08  47                 	db	71	;'G'
   138   000E09  72                 	db	114	;'r'
   139   000E0A  65                 	db	101	;'e'
   140   000E0B  65                 	db	101	;'e'
   141   000E0C  6E                 	db	110	;'n'
   142   000E0D  2C                 	db	44
   143   000E0E  25                 	db	37
   144   000E0F  66                 	db	102	;'f'
   145   000E10  20                 	db	32
   146   000E11  42                 	db	66	;'B'
   147   000E12  6C                 	db	108	;'l'
   148   000E13  75                 	db	117	;'u'
   149   000E14  65                 	db	101	;'e'
   150   000E15  2C                 	db	44
   151   000E16  25                 	db	37
   152   000E17  66                 	db	102	;'f'
   153   000E18  20                 	db	32
   154   000E19  48                 	db	72	;'H'
   155   000E1A  75                 	db	117	;'u'
   156   000E1B  65                 	db	101	;'e'
   157   000E1C  20                 	db	32
   158   000E1D  25                 	db	37
   159   000E1E  66                 	db	102	;'f'
   160   000E1F  20                 	db	32
   161   000E20  0D                 	db	13
   162   000E21  00                 	db	0
   163   000E22                     STR_2:
   164                           
   165                           ; BSR set to: 14
   166   000E22  69                 	db	105	;'i'
   167   000E23  6E                 	db	110	;'n'
   168   000E24  66                 	db	102	;'f'
   169   000E25  00                 	db	0
   170   000E26                     STR_5:
   171                           
   172                           ; BSR set to: 14
   173   000E26  6E                 	db	110	;'n'
   174   000E27  61                 	db	97	;'a'
   175   000E28  6E                 	db	110	;'n'
   176   000E29  00                 	db	0
   177   000E2A  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   003D8A                     __pcinit:
   183                           	callstack 0
   184   003D8A                     start_initialization:
   185                           	callstack 0
   186   003D8A                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK1 (100 bytes)
   190   003D8A  EE01  F000         	lfsr	0,__pbssBANK1
   191   003D8E  0E64               	movlw	100
   192   003D90                     clear_0:
   193   003D90  6AEE               	clrf	postinc0,c
   194   003D92  06E8               	decf	wreg,f,c
   195   003D94  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to BANK0 (13 bytes)
   198   003D96  EE00  F0E8         	lfsr	0,__pbssBANK0
   199   003D9A  0E0D               	movlw	13
   200   003D9C                     clear_1:
   201   003D9C  6AEE               	clrf	postinc0,c
   202   003D9E  06E8               	decf	wreg,f,c
   203   003DA0  E1FD               	bnz	clear_1
   204   003DA2                     end_of_initialization:
   205                           	callstack 0
   206   003DA2                     __end_of__initialization:
   207                           	callstack 0
   208   003DA2  0100               	movlb	0
   209   003DA4  EF18  F01C         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssBANK0
   212   0000E8                     __pbssBANK0:
   213                           	callstack 0
   214   0000E8                     floorf@F526:
   215                           	callstack 0
   216   0000E8                     	ds	4
   217   0000EC                     ___fpclassifyf@F465:
   218                           	callstack 0
   219   0000EC                     	ds	4
   220   0000F0                     _width:
   221                           	callstack 0
   222   0000F0                     	ds	2
   223   0000F2                     _prec:
   224                           	callstack 0
   225   0000F2                     	ds	2
   226   0000F4                     _flags:
   227                           	callstack 0
   228   0000F4                     	ds	1
   229                           
   230                           	psect	bssBANK1
   231   000100                     __pbssBANK1:
   232                           	callstack 0
   233   000100                     _dbuf:
   234                           	callstack 0
   235   000100                     	ds	80
   236   000150                     _colorf:
   237                           	callstack 0
   238   000150                     	ds	20
   239                           
   240                           	psect	cstackBANK1
   241   000164                     __pcstackBANK1:
   242                           	callstack 0
   243   000164                     main@data:
   244                           	callstack 0
   245                           
   246                           ; 60 bytes @ 0x0
   247   000164                     	ds	60
   248                           
   249                           	psect	cstackBANK0
   250   000060                     __pcstackBANK0:
   251                           	callstack 0
   252   000060                     ___flmul@sign:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x0
   256   000060                     	ds	1
   257   000061                     ___flmul@grs:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x1
   261   000061                     	ds	4
   262   000065                     ___flmul@aexp:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x5
   266   000065                     	ds	1
   267   000066                     ___flmul@bexp:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x6
   271   000066                     	ds	1
   272   000067                     ___flmul@prod:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0x7
   276   000067                     	ds	4
   277   00006B                     ___flmul@temp:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xB
   281   00006B                     	ds	2
   282   00006D                     ??___flge:
   283                           
   284                           ; 1 bytes @ 0xD
   285   00006D                     	ds	4
   286   000071                     RGB2Hue@cf:
   287                           	callstack 0
   288   000071                     efgtoa@fp:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x11
   292   000071                     	ds	2
   293   000073                     ??_RGB2Hue:
   294   000073                     efgtoa@f:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x13
   298   000073                     	ds	4
   299   000077                     efgtoa@c:
   300                           	callstack 0
   301   000077                     _RGB2Hue$1636:
   302                           	callstack 0
   303                           
   304                           ; 4 bytes @ 0x17
   305   000077                     	ds	1
   306   000078                     ??_efgtoa:
   307                           
   308                           ; 1 bytes @ 0x18
   309   000078                     	ds	2
   310   00007A                     efgtoa@ne:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x1A
   314   00007A                     	ds	1
   315   00007B                     RGB2Hue@max:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x1B
   319   00007B                     	ds	1
   320   00007C                     efgtoa@p:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x1C
   324   00007C                     	ds	1
   325   00007D                     RGB2Hue@min:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x1D
   329   00007D                     	ds	1
   330   00007E                     efgtoa@t:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1E
   334   00007E                     	ds	2
   335   000080                     _efgtoa$1329:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x20
   339   000080                     	ds	2
   340   000082                     efgtoa@pp:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x22
   344   000082                     	ds	1
   345   000083                     efgtoa@mode:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x23
   349   000083                     	ds	1
   350   000084                     efgtoa@nmode:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x24
   354   000084                     	ds	1
   355   000085                     efgtoa@d:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x25
   359   000085                     	ds	2
   360   000087                     efgtoa@m:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x27
   364   000087                     	ds	2
   365   000089                     efgtoa@e:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x29
   369   000089                     	ds	2
   370   00008B                     efgtoa@w:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x2B
   374   00008B                     	ds	2
   375   00008D                     efgtoa@ou:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x2D
   379   00008D                     	ds	4
   380   000091                     efgtoa@i:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x31
   384   000091                     	ds	2
   385   000093                     efgtoa@h:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x33
   389   000093                     	ds	4
   390   000097                     efgtoa@l:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x37
   394   000097                     	ds	4
   395   00009B                     efgtoa@sign:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x3B
   399   00009B                     	ds	1
   400   00009C                     efgtoa@n:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x3C
   404   00009C                     	ds	2
   405   00009E                     efgtoa@g:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x3E
   409   00009E                     	ds	4
   410   0000A2                     efgtoa@u:
   411                           	callstack 0
   412                           
   413                           ; 4 bytes @ 0x42
   414   0000A2                     	ds	4
   415   0000A6                     vfpfcnvrt@fp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x46
   419   0000A6                     	ds	2
   420   0000A8                     vfpfcnvrt@fmt:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x48
   424   0000A8                     	ds	2
   425   0000AA                     vfpfcnvrt@ap:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x4A
   429   0000AA                     	ds	2
   430   0000AC                     ??_vfpfcnvrt:
   431                           
   432                           ; 1 bytes @ 0x4C
   433   0000AC                     	ds	2
   434   0000AE                     vfpfcnvrt@convarg:
   435                           	callstack 0
   436                           
   437                           ; 8 bytes @ 0x4E
   438   0000AE                     	ds	8
   439   0000B6                     vfpfcnvrt@c:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x56
   443   0000B6                     	ds	1
   444   0000B7                     vfpfcnvrt@cp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x57
   448   0000B7                     	ds	2
   449   0000B9                     ?_vfprintf:
   450                           	callstack 0
   451   0000B9                     vfprintf@fp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x59
   455   0000B9                     	ds	2
   456   0000BB                     vfprintf@fmt:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x5B
   460   0000BB                     	ds	2
   461   0000BD                     vfprintf@ap:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x5D
   465   0000BD                     	ds	2
   466   0000BF                     vfprintf@cfmt:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x5F
   470   0000BF                     	ds	2
   471   0000C1                     ?_sprintf:
   472                           	callstack 0
   473   0000C1                     sprintf@s:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x61
   477   0000C1                     	ds	2
   478   0000C3                     sprintf@fmt:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x63
   482   0000C3                     	ds	18
   483   0000D5                     sprintf@ap:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x75
   487   0000D5                     	ds	2
   488   0000D7                     sprintf@f:
   489                           	callstack 0
   490                           
   491                           ; 11 bytes @ 0x77
   492   0000D7                     	ds	11
   493   0000E2                     Color2String@buf:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x82
   497   0000E2                     	ds	2
   498   0000E4                     Color2String@cf:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x84
   502   0000E4                     	ds	2
   503   0000E6                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x86
   506   0000E6                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     ??_I2C_2_Master_Idle:
   512   000001                     ?___fpclassifyf:
   513                           	callstack 0
   514   000001                     ?_labs:
   515                           	callstack 0
   516   000001                     ?___flneg:
   517                           	callstack 0
   518   000001                     ?___fltol:
   519                           	callstack 0
   520   000001                     sendCharSerial4@charToSend:
   521                           	callstack 0
   522   000001                     memcpy@d1:
   523                           	callstack 0
   524   000001                     fputc@c:
   525                           	callstack 0
   526   000001                     strcpy@dest:
   527                           	callstack 0
   528   000001                     ___fleq@ff1:
   529                           	callstack 0
   530   000001                     ___flneg@f1:
   531                           	callstack 0
   532   000001                     ___fltol@f1:
   533                           	callstack 0
   534   000001                     ___fpclassifyf@x:
   535                           	callstack 0
   536   000001                     labs@a:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x0
   540   000001                     	ds	1
   541   000002                     ??_I2C_2_Master_Read:
   542   000002                     I2C_2_Master_Write@data_byte:
   543                           	callstack 0
   544   000002                     sendStringSerial4@string:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x1
   548   000002                     	ds	1
   549   000003                     color_writetoaddr@value:
   550                           	callstack 0
   551   000003                     I2C_2_Master_Read@ack:
   552                           	callstack 0
   553   000003                     memcpy@s1:
   554                           	callstack 0
   555   000003                     fputc@fp:
   556                           	callstack 0
   557   000003                     strcpy@src:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2
   561   000003                     	ds	1
   562   000004                     color_writetoaddr@address:
   563                           	callstack 0
   564   000004                     I2C_2_Master_Read@tmp:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x3
   568   000004                     	ds	1
   569   000005                     ??_fputc:
   570   000005                     ??___fpclassifyf:
   571   000005                     ??_labs:
   572   000005                     ??_color_click_init:
   573   000005                     ??___fltol:
   574   000005                     ?_color_read_Red:
   575                           	callstack 0
   576   000005                     ?_color_read_Green:
   577                           	callstack 0
   578   000005                     ?_color_read_Blue:
   579                           	callstack 0
   580   000005                     ?_color_read_Clear:
   581                           	callstack 0
   582   000005                     memcpy@n:
   583                           	callstack 0
   584   000005                     strcpy@s:
   585                           	callstack 0
   586   000005                     ___fleq@ff2:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x4
   590   000005                     	ds	2
   591   000007                     ??_color_read_Red:
   592   000007                     ??_color_read_Green:
   593   000007                     ??_color_read_Blue:
   594   000007                     ??_color_read_Clear:
   595   000007                     memcpy@d:
   596                           	callstack 0
   597   000007                     strcpy@d:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601   000007                     	ds	2
   602   000009                     ??___fleq:
   603   000009                     ___fltol@sign1:
   604                           	callstack 0
   605   000009                     ___fpclassifyf@e:
   606                           	callstack 0
   607   000009                     memcpy@s:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x8
   611   000009                     	ds	1
   612   00000A                     ___fltol@exp1:
   613                           	callstack 0
   614   00000A                     color_read_Red@tmp:
   615                           	callstack 0
   616   00000A                     color_read_Green@tmp:
   617                           	callstack 0
   618   00000A                     color_read_Blue@tmp:
   619                           	callstack 0
   620   00000A                     color_read_Clear@tmp:
   621                           	callstack 0
   622   00000A                     fputs@s:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x9
   626   00000A                     	ds	1
   627   00000B                     memcpy@tmp:
   628                           	callstack 0
   629   00000B                     ___fpclassifyf@u:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0xA
   633   00000B                     	ds	1
   634   00000C                     ?___xxtofl:
   635                           	callstack 0
   636   00000C                     fputs@fp:
   637                           	callstack 0
   638   00000C                     ___xxtofl@val:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xB
   642   00000C                     	ds	2
   643   00000E                     fputs@c:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xD
   647   00000E                     	ds	1
   648   00000F                     fputs@i:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0xE
   652   00000F                     	ds	1
   653   000010                     ??___xxtofl:
   654                           
   655                           ; 1 bytes @ 0xF
   656   000010                     	ds	1
   657   000011                     pad@fp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x10
   661   000011                     	ds	2
   662   000013                     pad@buf:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x12
   666   000013                     	ds	1
   667   000014                     ___xxtofl@sign:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x13
   671   000014                     	ds	1
   672   000015                     ___xxtofl@exp:
   673                           	callstack 0
   674   000015                     pad@p:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x14
   678   000015                     	ds	1
   679   000016                     ___xxtofl@arg:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x15
   683   000016                     	ds	1
   684   000017                     ??_pad:
   685                           
   686                           ; 1 bytes @ 0x16
   687   000017                     	ds	1
   688   000018                     pad@i:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x17
   692   000018                     	ds	2
   693   00001A                     ?___fladd:
   694                           	callstack 0
   695   00001A                     colour_read_all@cf:
   696                           	callstack 0
   697   00001A                     pad@w:
   698                           	callstack 0
   699   00001A                     ___fladd@b:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x19
   703   00001A                     	ds	2
   704   00001C                     colour_read_all@R:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x1B
   708   00001C                     	ds	2
   709   00001E                     ___fladd@a:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x1D
   713   00001E                     	ds	2
   714   000020                     colour_read_all@G:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x1F
   718   000020                     	ds	2
   719   000022                     ??___fladd:
   720                           
   721                           ; 1 bytes @ 0x21
   722   000022                     	ds	2
   723   000024                     colour_read_all@B:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x23
   727   000024                     	ds	2
   728   000026                     ___fladd@signs:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x25
   732   000026                     	ds	1
   733   000027                     ___fladd@aexp:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x26
   737   000027                     	ds	1
   738   000028                     ___fladd@bexp:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x27
   742   000028                     	ds	1
   743   000029                     ___fladd@grs:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x28
   747   000029                     	ds	1
   748   00002A                     ?___flsub:
   749                           	callstack 0
   750   00002A                     ___flsub@b:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x29
   754   00002A                     	ds	4
   755   00002E                     ___flsub@a:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x2D
   759   00002E                     	ds	4
   760   000032                     ?___fldiv:
   761                           	callstack 0
   762   000032                     ___fldiv@b:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x31
   766   000032                     	ds	4
   767   000036                     ___fldiv@a:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x35
   771   000036                     	ds	4
   772   00003A                     ??___fldiv:
   773                           
   774                           ; 1 bytes @ 0x39
   775   00003A                     	ds	4
   776   00003E                     ___fldiv@rem:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x3D
   780   00003E                     	ds	4
   781   000042                     ___fldiv@sign:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x41
   785   000042                     	ds	1
   786   000043                     ___fldiv@new_exp:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x42
   790   000043                     	ds	2
   791   000045                     ___fldiv@grs:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x44
   795   000045                     	ds	4
   796   000049                     ___fldiv@bexp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x48
   800   000049                     	ds	1
   801   00004A                     ___fldiv@aexp:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x49
   805   00004A                     	ds	1
   806   00004B                     ?___flmul:
   807                           	callstack 0
   808   00004B                     ?_floorf:
   809                           	callstack 0
   810   00004B                     ___flmul@b:
   811                           	callstack 0
   812   00004B                     floorf@x:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x4A
   816   00004B                     	ds	4
   817   00004F                     ??_floorf:
   818   00004F                     ___flmul@a:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x4E
   822   00004F                     	ds	4
   823   000053                     ??___flmul:
   824                           
   825                           ; 1 bytes @ 0x52
   826   000053                     	ds	2
   827   000055                     floorf@m:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x54
   831   000055                     	ds	2
   832   000057                     ___flge@ff1:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x56
   836   000057                     	ds	2
   837   000059                     floorf@e:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x58
   841   000059                     	ds	2
   842   00005B                     ___flge@ff2:
   843                           	callstack 0
   844   00005B                     floorf@u:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x5A
   848   00005B                     	ds	4
   849   00005F                     
   850                           ; 1 bytes @ 0x5E
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 15 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  data           60    0[BANK1 ] unsigned char [60]
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   871 ;;      Locals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
   872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   873 ;;      Totals:         0       2      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;Total ram usage:       62 bytes
   875 ;; Hardware stack levels required when called: 9
   876 ;; This function calls:
   877 ;;		_Color2String
   878 ;;		_I2C_2_Master_Init
   879 ;;		_RGB2Hue
   880 ;;		_color_click_init
   881 ;;		_colour_read_all
   882 ;;		_initUSART4
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text0
   889   003830                     __ptext0:
   890                           	callstack 0
   891   003830                     _main:
   892                           	callstack 22
   893   003830                     
   894                           ;main.c: 16:     char data[60];;main.c: 17:     initUSART4();
   895   003830  ECA4  F01E         	call	_initUSART4	;wreg free
   896   003834                     
   897                           ;main.c: 18:     color_click_init();
   898   003834  EC24  F01E         	call	_color_click_init	;wreg free
   899   003838                     
   900                           ;main.c: 19:     I2C_2_Master_Init();
   901   003838  EC7B  F01E         	call	_I2C_2_Master_Init	;wreg free
   902   00383C                     
   903                           ;main.c: 21:     LATGbits.LATG1=1;
   904   00383C  827F               	bsf	127,1,c	;volatile
   905   00383E                     
   906                           ;main.c: 22:     TRISGbits.TRISG1=0;
   907   00383E  9287               	bcf	135,1,c	;volatile
   908   003840                     
   909                           ;main.c: 23:     LATAbits.LATA4=1;
   910   003840  8879               	bsf	121,4,c	;volatile
   911   003842                     
   912                           ;main.c: 24:     TRISAbits.TRISA4=0;
   913   003842  9881               	bcf	129,4,c	;volatile
   914   003844                     
   915                           ;main.c: 25:     LATFbits.LATF7=1;
   916   003844  8E7E               	bsf	126,7,c	;volatile
   917   003846                     
   918                           ;main.c: 26:     TRISFbits.TRISF7=0;
   919   003846  9E86               	bcf	134,7,c	;volatile
   920   003848                     l3600:
   921                           
   922                           ;main.c: 29:         colour_read_all(&colorf);
   923   003848  0E50               	movlw	low _colorf
   924   00384A  6E1A               	movwf	colour_read_all@cf^0,c
   925   00384C  0E01               	movlw	high _colorf
   926   00384E  6E1B               	movwf	(colour_read_all@cf+1)^0,c
   927   003850  EC6C  F01A         	call	_colour_read_all	;wreg free
   928   003854                     
   929                           ;main.c: 30:         RGB2Hue(&colorf);
   930   003854  0E50               	movlw	low _colorf
   931   003856  0100               	movlb	0	; () banked
   932   003858  6F71               	movwf	RGB2Hue@cf& (0+255),b
   933   00385A  0E01               	movlw	high _colorf
   934   00385C  6F72               	movwf	(RGB2Hue@cf+1)& (0+255),b
   935   00385E  EC13  F00C         	call	_RGB2Hue	;wreg free
   936   003862                     
   937                           ;main.c: 32:         Color2String(data,&colorf);
   938   003862  0E64               	movlw	low main@data
   939   003864  0100               	movlb	0	; () banked
   940   003866  6FE2               	movwf	Color2String@buf& (0+255),b
   941   003868  0E01               	movlw	high main@data
   942   00386A  6FE3               	movwf	(Color2String@buf+1)& (0+255),b
   943   00386C  0E50               	movlw	low _colorf
   944   00386E  6FE4               	movwf	Color2String@cf& (0+255),b
   945   003870  0E01               	movlw	high _colorf
   946   003872  6FE5               	movwf	(Color2String@cf+1)& (0+255),b
   947   003874  EC93  F01B         	call	_Color2String	;wreg free
   948   003878                     
   949                           ;main.c: 33:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   950   003878  0E52               	movlw	82
   951   00387A  0100               	movlb	0	; () banked
   952   00387C  6FE7               	movwf	(??_main+1)& (0+255),b
   953   00387E  0E2B               	movlw	43
   954   003880  6FE6               	movwf	??_main& (0+255),b
   955   003882  0E00               	movlw	0
   956   003884                     u3747:
   957   003884  2EE8               	decfsz	wreg,f,c
   958   003886  D7FE               	bra	u3747
   959   003888  2FE6               	decfsz	??_main& (0+255),f,b
   960   00388A  D7FC               	bra	u3747
   961   00388C  2FE7               	decfsz	(??_main+1)& (0+255),f,b
   962   00388E  D7FA               	bra	u3747
   963   003890  F000               	nop	
   964   003892  EF24  F01C         	goto	l3600
   965   003896  EF00  F000         	goto	start
   966   00389A                     __end_of_main:
   967                           	callstack 0
   968                           
   969 ;; *************** function _initUSART4 *****************
   970 ;; Defined at:
   971 ;;		line 6 in file "serial.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text1
   999   003D48                     __ptext1:
  1000                           	callstack 0
  1001   003D48                     _initUSART4:
  1002                           	callstack 30
  1003   003D48                     
  1004                           ;serial.c: 7:     TRISCbits.TRISC4=1;
  1005   003D48  8883               	bsf	131,4,c	;volatile
  1006                           
  1007                           ;serial.c: 8:     TRISCbits.TRISC1=1;
  1008   003D4A  8283               	bsf	131,1,c	;volatile
  1009   003D4C                     
  1010                           ;serial.c: 9:     RC0PPS = 0x12;
  1011   003D4C  0E12               	movlw	18
  1012   003D4E  010E               	movlb	14	; () banked
  1013   003D50  6F62               	movwf	98,b	;volatile
  1014                           
  1015                           ;serial.c: 10:     RX4PPS = 0x11;
  1016   003D52  0E11               	movlw	17
  1017   003D54  6F15               	movwf	21,b	;volatile
  1018   003D56                     
  1019                           ; BSR set to: 14
  1020                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1021   003D56  97E9               	bcf	233,3,b	;volatile
  1022   003D58                     
  1023                           ; BSR set to: 14
  1024                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1025   003D58  95E8               	bcf	232,2,b	;volatile
  1026                           
  1027                           ;serial.c: 14:     SP4BRGL = 51;
  1028   003D5A  0E33               	movlw	51
  1029   003D5C  6FE5               	movwf	229,b	;volatile
  1030                           
  1031                           ;serial.c: 15:     SP4BRGH = 0;
  1032   003D5E  0E00               	movlw	0
  1033   003D60  6FE6               	movwf	230,b	;volatile
  1034   003D62                     
  1035                           ; BSR set to: 14
  1036                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1037   003D62  89E7               	bsf	231,4,b	;volatile
  1038   003D64                     
  1039                           ; BSR set to: 14
  1040                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1041   003D64  8BE8               	bsf	232,5,b	;volatile
  1042   003D66                     
  1043                           ; BSR set to: 14
  1044                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1045   003D66  8FE7               	bsf	231,7,b	;volatile
  1046   003D68                     
  1047                           ; BSR set to: 14
  1048   003D68  0012               	return		;funcret
  1049   003D6A                     __end_of_initUSART4:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _colour_read_all *****************
  1053 ;; Defined at:
  1054 ;;		line 5 in file "colorfunctions.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1057 ;;		 -> colorf(20), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  B               4   35[COMRAM] float 
  1060 ;;  G               4   31[COMRAM] float 
  1061 ;;  R               4   27[COMRAM] float 
  1062 ;;  C               4    0        float 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;Total ram usage:       14 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 3
  1079 ;; This function calls:
  1080 ;;		___xxtofl
  1081 ;;		_color_read_Blue
  1082 ;;		_color_read_Clear
  1083 ;;		_color_read_Green
  1084 ;;		_color_read_Red
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text2
  1091   0034D8                     __ptext2:
  1092                           	callstack 0
  1093   0034D8                     _colour_read_all:
  1094                           	callstack 27
  1095   0034D8                     
  1096                           ;colorfunctions.c: 7:     float R = color_read_Red();
  1097   0034D8  ECD4  F01C         	call	_color_read_Red	;wreg free
  1098   0034DC  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1099   0034E0  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1100   0034E4  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1101   0034E6  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1102   0034E8  0E00               	movlw	0
  1103   0034EA  EC0D  F018         	call	___xxtofl
  1104   0034EE  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1105   0034F2  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1106   0034F6  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1107   0034FA  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1108                           
  1109                           ;colorfunctions.c: 8:     float G= color_read_Green();
  1110   0034FE  ECFC  F01C         	call	_color_read_Green	;wreg free
  1111   003502  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1112   003506  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1113   00350A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1114   00350C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1115   00350E  0E00               	movlw	0
  1116   003510  EC0D  F018         	call	___xxtofl
  1117   003514  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1118   003518  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1119   00351C  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1120   003520  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1121                           
  1122                           ;colorfunctions.c: 9:     float B= color_read_Blue();
  1123   003524  EC4C  F01D         	call	_color_read_Blue	;wreg free
  1124   003528  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1125   00352C  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1126   003530  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1127   003532  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1128   003534  0E00               	movlw	0
  1129   003536  EC0D  F018         	call	___xxtofl
  1130   00353A  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1131   00353E  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1132   003542  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1133   003546  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1134   00354A  EC24  F01D         	call	_color_read_Clear	;wreg free
  1135   00354E  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1136   003552  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1137   003556  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1138   003558  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1139   00355A  0E00               	movlw	0
  1140   00355C  EC0D  F018         	call	___xxtofl
  1141   003560                     
  1142                           ;colorfunctions.c: 14:     (cf->Rf)=R;
  1143   003560  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1144   003564  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1145   003568  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1146   00356C  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  1147   003570  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  1148   003574  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  1149   003578                     
  1150                           ;colorfunctions.c: 15:     (cf->Bf)=B;
  1151   003578  EE20 F008          	lfsr	2,8
  1152   00357C  501A               	movf	colour_read_all@cf^0,w,c
  1153   00357E  26D9               	addwf	fsr2l,f,c
  1154   003580  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1155   003582  22DA               	addwfc	fsr2h,f,c
  1156   003584  C024  FFDE         	movff	colour_read_all@B,postinc2
  1157   003588  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  1158   00358C  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  1159   003590  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  1160   003594                     
  1161                           ;colorfunctions.c: 16:     (cf->Gf)=G;
  1162   003594  EE20 F004          	lfsr	2,4
  1163   003598  501A               	movf	colour_read_all@cf^0,w,c
  1164   00359A  26D9               	addwf	fsr2l,f,c
  1165   00359C  501B               	movf	(colour_read_all@cf+1)^0,w,c
  1166   00359E  22DA               	addwfc	fsr2h,f,c
  1167   0035A0  C020  FFDE         	movff	colour_read_all@G,postinc2
  1168   0035A4  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  1169   0035A8  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  1170   0035AC  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  1171   0035B0  0012               	return		;funcret
  1172   0035B2                     __end_of_colour_read_all:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _color_read_Red *****************
  1176 ;; Defined at:
  1177 ;;		line 32 in file "colorclick.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  tmp             2    9[COMRAM] unsigned int 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    4[COMRAM] unsigned int 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;Total ram usage:        7 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 2
  1198 ;; This function calls:
  1199 ;;		_I2C_2_Master_Read
  1200 ;;		_I2C_2_Master_RepStart
  1201 ;;		_I2C_2_Master_Start
  1202 ;;		_I2C_2_Master_Stop
  1203 ;;		_I2C_2_Master_Write
  1204 ;; This function is called by:
  1205 ;;		_colour_read_all
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text3
  1210   0039A8                     __ptext3:
  1211                           	callstack 0
  1212   0039A8                     _color_read_Red:
  1213                           	callstack 27
  1214   0039A8                     
  1215                           ;colorclick.c: 34:  unsigned int tmp;;colorclick.c: 35:  I2C_2_Master_Start();
  1216   0039A8  ECF0  F01E         	call	_I2C_2_Master_Start	;wreg free
  1217                           
  1218                           ;colorclick.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  1219   0039AC  0E52               	movlw	82
  1220   0039AE  ECE0  F01E         	call	_I2C_2_Master_Write
  1221                           
  1222                           ;colorclick.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  1223   0039B2  0EB6               	movlw	182
  1224   0039B4  ECE0  F01E         	call	_I2C_2_Master_Write
  1225                           
  1226                           ;colorclick.c: 38:  I2C_2_Master_RepStart();
  1227   0039B8  ECE6  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  1228                           
  1229                           ;colorclick.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  1230   0039BC  0E53               	movlw	83
  1231   0039BE  ECE0  F01E         	call	_I2C_2_Master_Write
  1232                           
  1233                           ;colorclick.c: 40:  tmp=I2C_2_Master_Read(1);
  1234   0039C2  0E01               	movlw	1
  1235   0039C4  EC03  F01E         	call	_I2C_2_Master_Read
  1236   0039C8  6E07               	movwf	??_color_read_Red^0,c
  1237   0039CA  5007               	movf	??_color_read_Red^0,w,c
  1238   0039CC  6E0A               	movwf	color_read_Red@tmp^0,c
  1239   0039CE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1240                           
  1241                           ;colorclick.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1242   0039D0  0E00               	movlw	0
  1243   0039D2  EC03  F01E         	call	_I2C_2_Master_Read
  1244   0039D6  6E07               	movwf	??_color_read_Red^0,c
  1245   0039D8  5007               	movf	??_color_read_Red^0,w,c
  1246   0039DA  6E09               	movwf	(??_color_read_Red+2)^0,c
  1247   0039DC  6A08               	clrf	(??_color_read_Red+1)^0,c
  1248   0039DE  500A               	movf	color_read_Red@tmp^0,w,c
  1249   0039E0  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1250   0039E2  6E0A               	movwf	color_read_Red@tmp^0,c
  1251   0039E4  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1252   0039E6  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1253   0039E8  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1254                           
  1255                           ;colorclick.c: 42:  I2C_2_Master_Stop();
  1256   0039EA  ECEB  F01E         	call	_I2C_2_Master_Stop	;wreg free
  1257   0039EE                     
  1258                           ;colorclick.c: 43:  return tmp;
  1259   0039EE  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1260   0039F2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1261   0039F6  0012               	return		;funcret
  1262   0039F8                     __end_of_color_read_Red:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _color_read_Green *****************
  1266 ;; Defined at:
  1267 ;;		line 45 in file "colorclick.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  tmp             2    9[COMRAM] unsigned int 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2    4[COMRAM] unsigned int 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1284 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;Total ram usage:        7 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 2
  1288 ;; This function calls:
  1289 ;;		_I2C_2_Master_Read
  1290 ;;		_I2C_2_Master_RepStart
  1291 ;;		_I2C_2_Master_Start
  1292 ;;		_I2C_2_Master_Stop
  1293 ;;		_I2C_2_Master_Write
  1294 ;; This function is called by:
  1295 ;;		_colour_read_all
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text4
  1300   0039F8                     __ptext4:
  1301                           	callstack 0
  1302   0039F8                     _color_read_Green:
  1303                           	callstack 27
  1304   0039F8                     
  1305                           ;colorclick.c: 47:     unsigned int tmp;;colorclick.c: 48:     I2C_2_Master_Start();
  1306   0039F8  ECF0  F01E         	call	_I2C_2_Master_Start	;wreg free
  1307                           
  1308                           ;colorclick.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  1309   0039FC  0E52               	movlw	82
  1310   0039FE  ECE0  F01E         	call	_I2C_2_Master_Write
  1311                           
  1312                           ;colorclick.c: 50:     I2C_2_Master_Write(0xA0 | 0x18);
  1313   003A02  0EB8               	movlw	184
  1314   003A04  ECE0  F01E         	call	_I2C_2_Master_Write
  1315                           
  1316                           ;colorclick.c: 51:     I2C_2_Master_RepStart();
  1317   003A08  ECE6  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  1318                           
  1319                           ;colorclick.c: 52:     I2C_2_Master_Write(0x52 | 0x01);
  1320   003A0C  0E53               	movlw	83
  1321   003A0E  ECE0  F01E         	call	_I2C_2_Master_Write
  1322                           
  1323                           ;colorclick.c: 53:     tmp=I2C_2_Master_Read(1);
  1324   003A12  0E01               	movlw	1
  1325   003A14  EC03  F01E         	call	_I2C_2_Master_Read
  1326   003A18  6E07               	movwf	??_color_read_Green^0,c
  1327   003A1A  5007               	movf	??_color_read_Green^0,w,c
  1328   003A1C  6E0A               	movwf	color_read_Green@tmp^0,c
  1329   003A1E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1330                           
  1331                           ;colorclick.c: 54:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1332   003A20  0E00               	movlw	0
  1333   003A22  EC03  F01E         	call	_I2C_2_Master_Read
  1334   003A26  6E07               	movwf	??_color_read_Green^0,c
  1335   003A28  5007               	movf	??_color_read_Green^0,w,c
  1336   003A2A  6E09               	movwf	(??_color_read_Green+2)^0,c
  1337   003A2C  6A08               	clrf	(??_color_read_Green+1)^0,c
  1338   003A2E  500A               	movf	color_read_Green@tmp^0,w,c
  1339   003A30  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1340   003A32  6E0A               	movwf	color_read_Green@tmp^0,c
  1341   003A34  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1342   003A36  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1343   003A38  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1344                           
  1345                           ;colorclick.c: 55:     I2C_2_Master_Stop();
  1346   003A3A  ECEB  F01E         	call	_I2C_2_Master_Stop	;wreg free
  1347   003A3E                     
  1348                           ;colorclick.c: 56:     return tmp;
  1349   003A3E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1350   003A42  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1351   003A46  0012               	return		;funcret
  1352   003A48                     __end_of_color_read_Green:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _color_read_Clear *****************
  1356 ;; Defined at:
  1357 ;;		line 74 in file "colorclick.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  tmp             2    9[COMRAM] unsigned int 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  2    4[COMRAM] unsigned int 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;Total ram usage:        7 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 2
  1378 ;; This function calls:
  1379 ;;		_I2C_2_Master_Read
  1380 ;;		_I2C_2_Master_RepStart
  1381 ;;		_I2C_2_Master_Start
  1382 ;;		_I2C_2_Master_Stop
  1383 ;;		_I2C_2_Master_Write
  1384 ;; This function is called by:
  1385 ;;		_colour_read_all
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text5
  1390   003A48                     __ptext5:
  1391                           	callstack 0
  1392   003A48                     _color_read_Clear:
  1393                           	callstack 27
  1394   003A48                     
  1395                           ;colorclick.c: 76:     unsigned int tmp;;colorclick.c: 77:     I2C_2_Master_Start();
  1396   003A48  ECF0  F01E         	call	_I2C_2_Master_Start	;wreg free
  1397                           
  1398                           ;colorclick.c: 78:     I2C_2_Master_Write(0x52 | 0x00);
  1399   003A4C  0E52               	movlw	82
  1400   003A4E  ECE0  F01E         	call	_I2C_2_Master_Write
  1401                           
  1402                           ;colorclick.c: 79:     I2C_2_Master_Write(0xA0 | 0x14);
  1403   003A52  0EB4               	movlw	180
  1404   003A54  ECE0  F01E         	call	_I2C_2_Master_Write
  1405                           
  1406                           ;colorclick.c: 80:     I2C_2_Master_RepStart();
  1407   003A58  ECE6  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  1408                           
  1409                           ;colorclick.c: 81:     I2C_2_Master_Write(0x52 | 0x01);
  1410   003A5C  0E53               	movlw	83
  1411   003A5E  ECE0  F01E         	call	_I2C_2_Master_Write
  1412                           
  1413                           ;colorclick.c: 82:     tmp=I2C_2_Master_Read(1);
  1414   003A62  0E01               	movlw	1
  1415   003A64  EC03  F01E         	call	_I2C_2_Master_Read
  1416   003A68  6E07               	movwf	??_color_read_Clear^0,c
  1417   003A6A  5007               	movf	??_color_read_Clear^0,w,c
  1418   003A6C  6E0A               	movwf	color_read_Clear@tmp^0,c
  1419   003A6E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1420                           
  1421                           ;colorclick.c: 83:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1422   003A70  0E00               	movlw	0
  1423   003A72  EC03  F01E         	call	_I2C_2_Master_Read
  1424   003A76  6E07               	movwf	??_color_read_Clear^0,c
  1425   003A78  5007               	movf	??_color_read_Clear^0,w,c
  1426   003A7A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1427   003A7C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1428   003A7E  500A               	movf	color_read_Clear@tmp^0,w,c
  1429   003A80  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1430   003A82  6E0A               	movwf	color_read_Clear@tmp^0,c
  1431   003A84  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1432   003A86  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1433   003A88  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1434                           
  1435                           ;colorclick.c: 84:     I2C_2_Master_Stop();
  1436   003A8A  ECEB  F01E         	call	_I2C_2_Master_Stop	;wreg free
  1437   003A8E                     
  1438                           ;colorclick.c: 85:     return tmp;
  1439   003A8E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1440   003A92  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1441   003A96  0012               	return		;funcret
  1442   003A98                     __end_of_color_read_Clear:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _color_read_Blue *****************
  1446 ;; Defined at:
  1447 ;;		line 59 in file "colorclick.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  tmp             2    9[COMRAM] unsigned int 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  2    4[COMRAM] unsigned int 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;Total ram usage:        7 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 2
  1468 ;; This function calls:
  1469 ;;		_I2C_2_Master_Read
  1470 ;;		_I2C_2_Master_RepStart
  1471 ;;		_I2C_2_Master_Start
  1472 ;;		_I2C_2_Master_Stop
  1473 ;;		_I2C_2_Master_Write
  1474 ;; This function is called by:
  1475 ;;		_colour_read_all
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text6
  1480   003A98                     __ptext6:
  1481                           	callstack 0
  1482   003A98                     _color_read_Blue:
  1483                           	callstack 27
  1484   003A98                     
  1485                           ;colorclick.c: 61:     unsigned int tmp;;colorclick.c: 62:     I2C_2_Master_Start();
  1486   003A98  ECF0  F01E         	call	_I2C_2_Master_Start	;wreg free
  1487                           
  1488                           ;colorclick.c: 63:     I2C_2_Master_Write(0x52 | 0x00);
  1489   003A9C  0E52               	movlw	82
  1490   003A9E  ECE0  F01E         	call	_I2C_2_Master_Write
  1491                           
  1492                           ;colorclick.c: 64:     I2C_2_Master_Write(0xA0 | 0x1A);
  1493   003AA2  0EBA               	movlw	186
  1494   003AA4  ECE0  F01E         	call	_I2C_2_Master_Write
  1495                           
  1496                           ;colorclick.c: 65:     I2C_2_Master_RepStart();
  1497   003AA8  ECE6  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  1498                           
  1499                           ;colorclick.c: 66:     I2C_2_Master_Write(0x52 | 0x01);
  1500   003AAC  0E53               	movlw	83
  1501   003AAE  ECE0  F01E         	call	_I2C_2_Master_Write
  1502                           
  1503                           ;colorclick.c: 67:     tmp=I2C_2_Master_Read(1);
  1504   003AB2  0E01               	movlw	1
  1505   003AB4  EC03  F01E         	call	_I2C_2_Master_Read
  1506   003AB8  6E07               	movwf	??_color_read_Blue^0,c
  1507   003ABA  5007               	movf	??_color_read_Blue^0,w,c
  1508   003ABC  6E0A               	movwf	color_read_Blue@tmp^0,c
  1509   003ABE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1510                           
  1511                           ;colorclick.c: 68:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1512   003AC0  0E00               	movlw	0
  1513   003AC2  EC03  F01E         	call	_I2C_2_Master_Read
  1514   003AC6  6E07               	movwf	??_color_read_Blue^0,c
  1515   003AC8  5007               	movf	??_color_read_Blue^0,w,c
  1516   003ACA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1517   003ACC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1518   003ACE  500A               	movf	color_read_Blue@tmp^0,w,c
  1519   003AD0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1520   003AD2  6E0A               	movwf	color_read_Blue@tmp^0,c
  1521   003AD4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1522   003AD6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1523   003AD8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1524                           
  1525                           ;colorclick.c: 69:     I2C_2_Master_Stop();
  1526   003ADA  ECEB  F01E         	call	_I2C_2_Master_Stop	;wreg free
  1527   003ADE                     
  1528                           ;colorclick.c: 70:     return tmp;
  1529   003ADE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1530   003AE2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1531   003AE6  0012               	return		;funcret
  1532   003AE8                     __end_of_color_read_Blue:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _I2C_2_Master_RepStart *****************
  1536 ;; Defined at:
  1537 ;;		line 33 in file "i2c.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; Hardware stack levels required when called: 1
  1558 ;; This function calls:
  1559 ;;		_I2C_2_Master_Idle
  1560 ;; This function is called by:
  1561 ;;		_color_read_Red
  1562 ;;		_color_read_Green
  1563 ;;		_color_read_Blue
  1564 ;;		_color_read_Clear
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text7
  1569   003DCC                     __ptext7:
  1570                           	callstack 0
  1571   003DCC                     _I2C_2_Master_RepStart:
  1572                           	callstack 27
  1573   003DCC                     
  1574                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1575   003DCC  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1576   003DD0                     
  1577                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1578   003DD0  010E               	movlb	14	; () banked
  1579   003DD2  83DA               	bsf	218,1,b	;volatile
  1580   003DD4                     
  1581                           ; BSR set to: 14
  1582   003DD4  0012               	return		;funcret
  1583   003DD6                     __end_of_I2C_2_Master_RepStart:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _I2C_2_Master_Read *****************
  1587 ;; Defined at:
  1588 ;;		line 51 in file "i2c.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  ack             1    wreg     unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  ack             1    2[COMRAM] unsigned char 
  1593 ;;  tmp             1    3[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:        3 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		_I2C_2_Master_Idle
  1612 ;; This function is called by:
  1613 ;;		_color_read_Red
  1614 ;;		_color_read_Green
  1615 ;;		_color_read_Blue
  1616 ;;		_color_read_Clear
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text8
  1621   003C06                     __ptext8:
  1622                           	callstack 0
  1623   003C06                     _I2C_2_Master_Read:
  1624                           	callstack 27
  1625                           
  1626                           ; BSR set to: 14
  1627                           ;incstack = 0
  1628                           ;I2C_2_Master_Read@ack stored from wreg
  1629   003C06  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1630   003C08                     
  1631                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1632   003C08  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1633   003C0C                     
  1634                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1635   003C0C  010E               	movlb	14	; () banked
  1636   003C0E  87DA               	bsf	218,3,b	;volatile
  1637                           
  1638                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1639   003C10  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1640   003C14                     
  1641                           ;i2c.c: 57:   tmp = SSP2BUF;
  1642   003C14  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1643                           
  1644                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1645   003C18  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1646   003C1C                     
  1647                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1648   003C1C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1649   003C1E  B4D8               	btfsc	status,2,c
  1650   003C20  EF14  F01E         	goto	u3481
  1651   003C24  EF18  F01E         	goto	u3480
  1652   003C28                     u3481:
  1653   003C28  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1654   003C2A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1655   003C2C  EF19  F01E         	goto	u3498
  1656   003C30                     u3480:
  1657   003C30  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1658   003C32                     u3498:
  1659   003C32  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1660   003C34  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1661   003C36  010E               	movlb	14	; () banked
  1662   003C38  51DA               	movf	218,w,b	;volatile
  1663   003C3A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1664   003C3C  0BDF               	andlw	-33
  1665   003C3E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1666   003C40  6FDA               	movwf	218,b	;volatile
  1667   003C42                     
  1668                           ; BSR set to: 14
  1669                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1670   003C42  89DA               	bsf	218,4,b	;volatile
  1671   003C44                     
  1672                           ; BSR set to: 14
  1673                           ;i2c.c: 61:   return tmp;
  1674   003C44  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1675   003C46                     
  1676                           ; BSR set to: 14
  1677   003C46  0012               	return		;funcret
  1678   003C48                     __end_of_I2C_2_Master_Read:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _color_click_init *****************
  1682 ;; Defined at:
  1683 ;;		line 6 in file "colorclick.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;Total ram usage:        1 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 3
  1704 ;; This function calls:
  1705 ;;		_I2C_2_Master_Init
  1706 ;;		_color_writetoaddr
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text9
  1713   003C48                     __ptext9:
  1714                           	callstack 0
  1715   003C48                     _color_click_init:
  1716                           	callstack 27
  1717   003C48                     
  1718                           ;colorclick.c: 9:     I2C_2_Master_Init();
  1719   003C48  EC7B  F01E         	call	_I2C_2_Master_Init	;wreg free
  1720   003C4C                     
  1721                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  1722   003C4C  0E01               	movlw	1
  1723   003C4E  6E03               	movwf	color_writetoaddr@value^0,c
  1724   003C50  0E00               	movlw	0
  1725   003C52  ECB5  F01E         	call	_color_writetoaddr
  1726   003C56                     
  1727                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1728   003C56  0E3F               	movlw	63
  1729   003C58  6E05               	movwf	??_color_click_init^0,c
  1730   003C5A  0E55               	movlw	85
  1731   003C5C                     u3757:
  1732   003C5C  2EE8               	decfsz	wreg,f,c
  1733   003C5E  D7FE               	bra	u3757
  1734   003C60  2E05               	decfsz	??_color_click_init^0,f,c
  1735   003C62  D7FC               	bra	u3757
  1736   003C64  F000               	nop	
  1737   003C66                     
  1738                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  1739   003C66  0E03               	movlw	3
  1740   003C68  6E03               	movwf	color_writetoaddr@value^0,c
  1741   003C6A  0E00               	movlw	0
  1742   003C6C  ECB5  F01E         	call	_color_writetoaddr
  1743   003C70                     
  1744                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  1745   003C70  0ED6               	movlw	214
  1746   003C72  6E03               	movwf	color_writetoaddr@value^0,c
  1747   003C74  0E01               	movlw	1
  1748   003C76  ECB5  F01E         	call	_color_writetoaddr
  1749   003C7A                     
  1750                           ;colorclick.c: 21:     color_writetoaddr(0x00, 0x13);
  1751   003C7A  0E13               	movlw	19
  1752   003C7C  6E03               	movwf	color_writetoaddr@value^0,c
  1753   003C7E  0E00               	movlw	0
  1754   003C80  ECB5  F01E         	call	_color_writetoaddr
  1755   003C84  0012               	return		;funcret
  1756   003C86                     __end_of_color_click_init:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _color_writetoaddr *****************
  1760 ;; Defined at:
  1761 ;;		line 24 in file "colorclick.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  address         1    wreg     unsigned char 
  1764 ;;  value           1    2[COMRAM] unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  address         1    3[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		_I2C_2_Master_Start
  1785 ;;		_I2C_2_Master_Stop
  1786 ;;		_I2C_2_Master_Write
  1787 ;; This function is called by:
  1788 ;;		_color_click_init
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text10
  1793   003D6A                     __ptext10:
  1794                           	callstack 0
  1795   003D6A                     _color_writetoaddr:
  1796                           	callstack 27
  1797                           
  1798                           ;incstack = 0
  1799                           ;color_writetoaddr@address stored from wreg
  1800   003D6A  6E04               	movwf	color_writetoaddr@address^0,c
  1801   003D6C                     
  1802                           ;colorclick.c: 25:     I2C_2_Master_Start();
  1803   003D6C  ECF0  F01E         	call	_I2C_2_Master_Start	;wreg free
  1804                           
  1805                           ;colorclick.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  1806   003D70  0E52               	movlw	82
  1807   003D72  ECE0  F01E         	call	_I2C_2_Master_Write
  1808                           
  1809                           ;colorclick.c: 27:     I2C_2_Master_Write(0x80 | address);
  1810   003D76  5004               	movf	color_writetoaddr@address^0,w,c
  1811   003D78  0980               	iorlw	128
  1812   003D7A  ECE0  F01E         	call	_I2C_2_Master_Write
  1813                           
  1814                           ;colorclick.c: 28:     I2C_2_Master_Write(value);
  1815   003D7E  5003               	movf	color_writetoaddr@value^0,w,c
  1816   003D80  ECE0  F01E         	call	_I2C_2_Master_Write
  1817                           
  1818                           ;colorclick.c: 29:     I2C_2_Master_Stop();
  1819   003D84  ECEB  F01E         	call	_I2C_2_Master_Stop	;wreg free
  1820   003D88  0012               	return		;funcret
  1821   003D8A                     __end_of_color_writetoaddr:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _I2C_2_Master_Write *****************
  1825 ;; Defined at:
  1826 ;;		line 45 in file "i2c.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  data_byte       1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  data_byte       1    1[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;Total ram usage:        1 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 1
  1847 ;; This function calls:
  1848 ;;		_I2C_2_Master_Idle
  1849 ;; This function is called by:
  1850 ;;		_color_writetoaddr
  1851 ;;		_color_read_Red
  1852 ;;		_color_read_Green
  1853 ;;		_color_read_Blue
  1854 ;;		_color_read_Clear
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text11
  1859   003DC0                     __ptext11:
  1860                           	callstack 0
  1861   003DC0                     _I2C_2_Master_Write:
  1862                           	callstack 27
  1863                           
  1864                           ;incstack = 0
  1865                           ;I2C_2_Master_Write@data_byte stored from wreg
  1866   003DC0  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1867   003DC2                     
  1868                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1869   003DC2  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1870   003DC6                     
  1871                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1872   003DC6  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1873   003DCA  0012               	return		;funcret
  1874   003DCC                     __end_of_I2C_2_Master_Write:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _I2C_2_Master_Stop *****************
  1878 ;; Defined at:
  1879 ;;		line 39 in file "i2c.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		_I2C_2_Master_Idle
  1902 ;; This function is called by:
  1903 ;;		_color_writetoaddr
  1904 ;;		_color_read_Red
  1905 ;;		_color_read_Green
  1906 ;;		_color_read_Blue
  1907 ;;		_color_read_Clear
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text12
  1912   003DD6                     __ptext12:
  1913                           	callstack 0
  1914   003DD6                     _I2C_2_Master_Stop:
  1915                           	callstack 27
  1916   003DD6                     
  1917                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1918   003DD6  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1919   003DDA                     
  1920                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1921   003DDA  010E               	movlb	14	; () banked
  1922   003DDC  85DA               	bsf	218,2,b	;volatile
  1923   003DDE                     
  1924                           ; BSR set to: 14
  1925   003DDE  0012               	return		;funcret
  1926   003DE0                     __end_of_I2C_2_Master_Stop:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _I2C_2_Master_Start *****************
  1930 ;; Defined at:
  1931 ;;		line 27 in file "i2c.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		_I2C_2_Master_Idle
  1954 ;; This function is called by:
  1955 ;;		_color_writetoaddr
  1956 ;;		_color_read_Red
  1957 ;;		_color_read_Green
  1958 ;;		_color_read_Blue
  1959 ;;		_color_read_Clear
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text13
  1964   003DE0                     __ptext13:
  1965                           	callstack 0
  1966   003DE0                     _I2C_2_Master_Start:
  1967                           	callstack 27
  1968   003DE0                     
  1969                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1970   003DE0  EC90  F01E         	call	_I2C_2_Master_Idle	;wreg free
  1971   003DE4                     
  1972                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1973   003DE4  010E               	movlb	14	; () banked
  1974   003DE6  81DA               	bsf	218,0,b	;volatile
  1975   003DE8                     
  1976                           ; BSR set to: 14
  1977   003DE8  0012               	return		;funcret
  1978   003DEA                     __end_of_I2C_2_Master_Start:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _I2C_2_Master_Idle *****************
  1982 ;; Defined at:
  1983 ;;		line 22 in file "i2c.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:        1 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_I2C_2_Master_Start
  2007 ;;		_I2C_2_Master_RepStart
  2008 ;;		_I2C_2_Master_Stop
  2009 ;;		_I2C_2_Master_Write
  2010 ;;		_I2C_2_Master_Read
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text14
  2015   003D20                     __ptext14:
  2016                           	callstack 0
  2017   003D20                     _I2C_2_Master_Idle:
  2018                           	callstack 27
  2019   003D20                     l91:
  2020   003D20  010E               	movlb	14	; () banked
  2021   003D22  B5D8               	btfsc	216,2,b	;volatile
  2022   003D24  EF96  F01E         	goto	u3441
  2023   003D28  EF98  F01E         	goto	u3440
  2024   003D2C                     u3441:
  2025   003D2C  EF90  F01E         	goto	l91
  2026   003D30                     u3440:
  2027   003D30                     
  2028                           ; BSR set to: 14
  2029   003D30  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2030   003D34  0E1F               	movlw	31
  2031   003D36  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2032   003D38  A4D8               	btfss	status,2,c
  2033   003D3A  EFA1  F01E         	goto	u3451
  2034   003D3E  EFA3  F01E         	goto	u3450
  2035   003D42                     u3451:
  2036   003D42  EF90  F01E         	goto	l91
  2037   003D46                     u3450:
  2038   003D46                     
  2039                           ; BSR set to: 14
  2040   003D46  0012               	return		;funcret
  2041   003D48                     __end_of_I2C_2_Master_Idle:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _I2C_2_Master_Init *****************
  2045 ;; Defined at:
  2046 ;;		line 4 in file "i2c.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_color_click_init
  2070 ;;		_main
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text15
  2075   003CF6                     __ptext15:
  2076                           	callstack 0
  2077   003CF6                     _I2C_2_Master_Init:
  2078                           	callstack 29
  2079   003CF6                     
  2080                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2081   003CF6  010E               	movlb	14	; () banked
  2082   003CF8  51D9               	movf	217,w,b	;volatile
  2083   003CFA  0BF0               	andlw	-16
  2084   003CFC  0908               	iorlw	8
  2085   003CFE  6FD9               	movwf	217,b	;volatile
  2086   003D00                     
  2087                           ; BSR set to: 14
  2088                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2089   003D00  8BD9               	bsf	217,5,b	;volatile
  2090                           
  2091                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2092   003D02  0E9F               	movlw	159
  2093   003D04  6FD6               	movwf	214,b	;volatile
  2094   003D06                     
  2095                           ; BSR set to: 14
  2096                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2097   003D06  8A84               	bsf	132,5,c	;volatile
  2098   003D08                     
  2099                           ; BSR set to: 14
  2100                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2101   003D08  8C84               	bsf	132,6,c	;volatile
  2102   003D0A                     
  2103                           ; BSR set to: 14
  2104                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2105   003D0A  9BA7               	bcf	167,5,b	;volatile
  2106   003D0C                     
  2107                           ; BSR set to: 14
  2108                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2109   003D0C  9DA7               	bcf	167,6,b	;volatile
  2110                           
  2111                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2112   003D0E  0E1D               	movlw	29
  2113   003D10  6F1D               	movwf	29,b	;volatile
  2114                           
  2115                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2116   003D12  0E1E               	movlw	30
  2117   003D14  6F1C               	movwf	28,b	;volatile
  2118                           
  2119                           ;i2c.c: 18:   RD5PPS=0x1C;
  2120   003D16  0E1C               	movlw	28
  2121   003D18  6F6F               	movwf	111,b	;volatile
  2122                           
  2123                           ;i2c.c: 19:   RD6PPS=0x1B;
  2124   003D1A  0E1B               	movlw	27
  2125   003D1C  6F70               	movwf	112,b	;volatile
  2126   003D1E                     
  2127                           ; BSR set to: 14
  2128   003D1E  0012               	return		;funcret
  2129   003D20                     __end_of_I2C_2_Master_Init:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _RGB2Hue *****************
  2133 ;; Defined at:
  2134 ;;		line 19 in file "colorfunctions.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  cf              2   17[BANK0 ] PTR struct RGBC_rel
  2137 ;;		 -> colorf(20), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  min             2   29[BANK0 ] int 
  2140 ;;  max             2   27[BANK0 ] int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;Total ram usage:       14 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 2
  2157 ;; This function calls:
  2158 ;;		___fladd
  2159 ;;		___fldiv
  2160 ;;		___fleq
  2161 ;;		___flge
  2162 ;;		___flmul
  2163 ;;		___flsub
  2164 ;;		___fltol
  2165 ;;		___xxtofl
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           	psect	text16
  2172   001826                     __ptext16:
  2173                           	callstack 0
  2174   001826                     _RGB2Hue:
  2175                           	callstack 28
  2176   001826                     
  2177                           ;colorfunctions.c: 20:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2178   001826  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2179   00182A  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2180   00182E  CFDE F001          	movff	postinc2,___fleq@ff1
  2181   001832  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2182   001836  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2183   00183A  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2184   00183E  0100               	movlb	0	; () banked
  2185   001840  EE20 F004          	lfsr	2,4
  2186   001844  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2187   001846  26D9               	addwf	fsr2l,f,c
  2188   001848  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2189   00184A  22DA               	addwfc	fsr2h,f,c
  2190   00184C  CFDE F005          	movff	postinc2,___fleq@ff2
  2191   001850  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2192   001854  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2193   001858  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2194   00185C  EC3E  F01B         	call	___fleq	;wreg free
  2195   001860  A0D8               	btfss	status,0,c
  2196   001862  EF35  F00C         	goto	u3631
  2197   001866  EF37  F00C         	goto	u3630
  2198   00186A                     u3631:
  2199   00186A  EF6C  F00C         	goto	l3526
  2200   00186E                     u3630:
  2201   00186E  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2202   001872  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2203   001876  CFDE F001          	movff	postinc2,___fleq@ff1
  2204   00187A  CFDE F002          	movff	postinc2,___fleq@ff1+1
  2205   00187E  CFDE F003          	movff	postinc2,___fleq@ff1+2
  2206   001882  CFDE F004          	movff	postinc2,___fleq@ff1+3
  2207   001886  0100               	movlb	0	; () banked
  2208   001888  EE20 F008          	lfsr	2,8
  2209   00188C  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2210   00188E  26D9               	addwf	fsr2l,f,c
  2211   001890  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2212   001892  22DA               	addwfc	fsr2h,f,c
  2213   001894  CFDE F005          	movff	postinc2,___fleq@ff2
  2214   001898  CFDE F006          	movff	postinc2,___fleq@ff2+1
  2215   00189C  CFDE F007          	movff	postinc2,___fleq@ff2+2
  2216   0018A0  CFDE F008          	movff	postinc2,___fleq@ff2+3
  2217   0018A4  EC3E  F01B         	call	___fleq	;wreg free
  2218   0018A8  A0D8               	btfss	status,0,c
  2219   0018AA  EF59  F00C         	goto	u3641
  2220   0018AE  EF5B  F00C         	goto	u3640
  2221   0018B2                     u3641:
  2222   0018B2  EF6C  F00C         	goto	l3526
  2223   0018B6                     u3640:
  2224   0018B6                     
  2225                           ;colorfunctions.c: 21:         cf->h=0;
  2226   0018B6  0100               	movlb	0	; () banked
  2227   0018B8  EE20 F010          	lfsr	2,16
  2228   0018BC  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2229   0018BE  26D9               	addwf	fsr2l,f,c
  2230   0018C0  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2231   0018C2  22DA               	addwfc	fsr2h,f,c
  2232   0018C4  0E00               	movlw	0
  2233   0018C6  6EDE               	movwf	postinc2,c
  2234   0018C8  0E00               	movlw	0
  2235   0018CA  6EDE               	movwf	postinc2,c
  2236   0018CC  0E00               	movlw	0
  2237   0018CE  6EDE               	movwf	postinc2,c
  2238   0018D0  0E00               	movlw	0
  2239   0018D2  6EDD               	movwf	postdec2,c
  2240                           
  2241                           ;colorfunctions.c: 22:     } else{
  2242   0018D4  EFA8  F00F         	goto	l61
  2243   0018D8                     l3526:
  2244                           
  2245                           ;colorfunctions.c: 24:         signed int min=0;
  2246   0018D8  0E00               	movlw	0
  2247   0018DA  0100               	movlb	0	; () banked
  2248   0018DC  6F7E               	movwf	(RGB2Hue@min+1)& (0+255),b
  2249   0018DE  0E00               	movlw	0
  2250   0018E0  6F7D               	movwf	RGB2Hue@min& (0+255),b
  2251   0018E2                     
  2252                           ; BSR set to: 0
  2253                           ;colorfunctions.c: 26:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2254   0018E2  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2255   0018E6  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2256   0018EA  CFDE F057          	movff	postinc2,___flge@ff1
  2257   0018EE  CFDE F058          	movff	postinc2,___flge@ff1+1
  2258   0018F2  CFDE F059          	movff	postinc2,___flge@ff1+2
  2259   0018F6  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2260   0018FA  EE20 F004          	lfsr	2,4
  2261   0018FE  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2262   001900  26D9               	addwf	fsr2l,f,c
  2263   001902  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2264   001904  22DA               	addwfc	fsr2h,f,c
  2265   001906  CFDE F05B          	movff	postinc2,___flge@ff2
  2266   00190A  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2267   00190E  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2268   001912  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2269   001916  EC6A  F019         	call	___flge	;wreg free
  2270   00191A  B0D8               	btfsc	status,0,c
  2271   00191C  EF92  F00C         	goto	u3651
  2272   001920  EF94  F00C         	goto	u3650
  2273   001924                     u3651:
  2274   001924  EFCC  F00C         	goto	l3534
  2275   001928                     u3650:
  2276   001928  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2277   00192C  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2278   001930  CFDE F057          	movff	postinc2,___flge@ff1
  2279   001934  CFDE F058          	movff	postinc2,___flge@ff1+1
  2280   001938  CFDE F059          	movff	postinc2,___flge@ff1+2
  2281   00193C  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2282   001940  0100               	movlb	0	; () banked
  2283   001942  EE20 F008          	lfsr	2,8
  2284   001946  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2285   001948  26D9               	addwf	fsr2l,f,c
  2286   00194A  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2287   00194C  22DA               	addwfc	fsr2h,f,c
  2288   00194E  CFDE F05B          	movff	postinc2,___flge@ff2
  2289   001952  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2290   001956  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2291   00195A  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2292   00195E  EC6A  F019         	call	___flge	;wreg free
  2293   001962  B0D8               	btfsc	status,0,c
  2294   001964  EFB6  F00C         	goto	u3661
  2295   001968  EFB8  F00C         	goto	u3660
  2296   00196C                     u3661:
  2297   00196C  EFCC  F00C         	goto	l3534
  2298   001970                     u3660:
  2299   001970                     
  2300                           ;colorfunctions.c: 27:             min=cf->Rf;
  2301   001970  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2302   001974  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2303   001978  CFDE F001          	movff	postinc2,___fltol@f1
  2304   00197C  CFDE F002          	movff	postinc2,___fltol@f1+1
  2305   001980  CFDE F003          	movff	postinc2,___fltol@f1+2
  2306   001984  CFDE F004          	movff	postinc2,___fltol@f1+3
  2307   001988  ECE7  F018         	call	___fltol	;wreg free
  2308   00198C  C001  F07D         	movff	?___fltol,RGB2Hue@min
  2309   001990  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  2310                           
  2311                           ;colorfunctions.c: 28:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  2312   001994  EF42  F00D         	goto	l53
  2313   001998                     l3534:
  2314   001998  0100               	movlb	0	; () banked
  2315   00199A  EE20 F004          	lfsr	2,4
  2316   00199E  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2317   0019A0  26D9               	addwf	fsr2l,f,c
  2318   0019A2  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2319   0019A4  22DA               	addwfc	fsr2h,f,c
  2320   0019A6  CFDE F057          	movff	postinc2,___flge@ff1
  2321   0019AA  CFDE F058          	movff	postinc2,___flge@ff1+1
  2322   0019AE  CFDE F059          	movff	postinc2,___flge@ff1+2
  2323   0019B2  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2324   0019B6  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2325   0019BA  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2326   0019BE  CFDE F05B          	movff	postinc2,___flge@ff2
  2327   0019C2  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2328   0019C6  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2329   0019CA  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2330   0019CE  EC6A  F019         	call	___flge	;wreg free
  2331   0019D2  B0D8               	btfsc	status,0,c
  2332   0019D4  EFEE  F00C         	goto	u3671
  2333   0019D8  EFF0  F00C         	goto	u3670
  2334   0019DC                     u3671:
  2335   0019DC  EF2D  F00D         	goto	l3540
  2336   0019E0                     u3670:
  2337   0019E0  0100               	movlb	0	; () banked
  2338   0019E2  EE20 F004          	lfsr	2,4
  2339   0019E6  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2340   0019E8  26D9               	addwf	fsr2l,f,c
  2341   0019EA  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2342   0019EC  22DA               	addwfc	fsr2h,f,c
  2343   0019EE  CFDE F057          	movff	postinc2,___flge@ff1
  2344   0019F2  CFDE F058          	movff	postinc2,___flge@ff1+1
  2345   0019F6  CFDE F059          	movff	postinc2,___flge@ff1+2
  2346   0019FA  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2347   0019FE  EE20 F008          	lfsr	2,8
  2348   001A02  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2349   001A04  26D9               	addwf	fsr2l,f,c
  2350   001A06  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2351   001A08  22DA               	addwfc	fsr2h,f,c
  2352   001A0A  CFDE F05B          	movff	postinc2,___flge@ff2
  2353   001A0E  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2354   001A12  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2355   001A16  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2356   001A1A  EC6A  F019         	call	___flge	;wreg free
  2357   001A1E  B0D8               	btfsc	status,0,c
  2358   001A20  EF14  F00D         	goto	u3681
  2359   001A24  EF16  F00D         	goto	u3680
  2360   001A28                     u3681:
  2361   001A28  EF2D  F00D         	goto	l3540
  2362   001A2C                     u3680:
  2363   001A2C                     
  2364                           ;colorfunctions.c: 29:             min=cf->Gf;
  2365   001A2C  0100               	movlb	0	; () banked
  2366   001A2E  EE20 F004          	lfsr	2,4
  2367   001A32  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2368   001A34  26D9               	addwf	fsr2l,f,c
  2369   001A36  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2370   001A38  22DA               	addwfc	fsr2h,f,c
  2371   001A3A  CFDE F001          	movff	postinc2,___fltol@f1
  2372   001A3E  CFDE F002          	movff	postinc2,___fltol@f1+1
  2373   001A42  CFDE F003          	movff	postinc2,___fltol@f1+2
  2374   001A46  CFDE F004          	movff	postinc2,___fltol@f1+3
  2375   001A4A  ECE7  F018         	call	___fltol	;wreg free
  2376   001A4E  C001  F07D         	movff	?___fltol,RGB2Hue@min
  2377   001A52  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  2378                           
  2379                           ;colorfunctions.c: 30:         } else{
  2380   001A56  EF42  F00D         	goto	l53
  2381   001A5A                     l3540:
  2382                           
  2383                           ;colorfunctions.c: 31:             min=cf->Bf;
  2384   001A5A  0100               	movlb	0	; () banked
  2385   001A5C  EE20 F008          	lfsr	2,8
  2386   001A60  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2387   001A62  26D9               	addwf	fsr2l,f,c
  2388   001A64  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2389   001A66  22DA               	addwfc	fsr2h,f,c
  2390   001A68  CFDE F001          	movff	postinc2,___fltol@f1
  2391   001A6C  CFDE F002          	movff	postinc2,___fltol@f1+1
  2392   001A70  CFDE F003          	movff	postinc2,___fltol@f1+2
  2393   001A74  CFDE F004          	movff	postinc2,___fltol@f1+3
  2394   001A78  ECE7  F018         	call	___fltol	;wreg free
  2395   001A7C  C001  F07D         	movff	?___fltol,RGB2Hue@min
  2396   001A80  C002  F07E         	movff	?___fltol+1,RGB2Hue@min+1
  2397   001A84                     l53:
  2398                           
  2399                           ;colorfunctions.c: 34:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  2400   001A84  0100               	movlb	0	; () banked
  2401   001A86  EE20 F004          	lfsr	2,4
  2402   001A8A  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2403   001A8C  26D9               	addwf	fsr2l,f,c
  2404   001A8E  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2405   001A90  22DA               	addwfc	fsr2h,f,c
  2406   001A92  CFDE F057          	movff	postinc2,___flge@ff1
  2407   001A96  CFDE F058          	movff	postinc2,___flge@ff1+1
  2408   001A9A  CFDE F059          	movff	postinc2,___flge@ff1+2
  2409   001A9E  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2410   001AA2  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2411   001AA6  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2412   001AAA  CFDE F05B          	movff	postinc2,___flge@ff2
  2413   001AAE  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2414   001AB2  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2415   001AB6  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2416   001ABA  EC6A  F019         	call	___flge	;wreg free
  2417   001ABE  B0D8               	btfsc	status,0,c
  2418   001AC0  EF64  F00D         	goto	u3691
  2419   001AC4  EF66  F00D         	goto	u3690
  2420   001AC8                     u3691:
  2421   001AC8  EF03  F00E         	goto	l3548
  2422   001ACC                     u3690:
  2423   001ACC  0100               	movlb	0	; () banked
  2424   001ACE  EE20 F008          	lfsr	2,8
  2425   001AD2  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2426   001AD4  26D9               	addwf	fsr2l,f,c
  2427   001AD6  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2428   001AD8  22DA               	addwfc	fsr2h,f,c
  2429   001ADA  CFDE F057          	movff	postinc2,___flge@ff1
  2430   001ADE  CFDE F058          	movff	postinc2,___flge@ff1+1
  2431   001AE2  CFDE F059          	movff	postinc2,___flge@ff1+2
  2432   001AE6  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2433   001AEA  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2434   001AEE  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2435   001AF2  CFDE F05B          	movff	postinc2,___flge@ff2
  2436   001AF6  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2437   001AFA  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2438   001AFE  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2439   001B02  EC6A  F019         	call	___flge	;wreg free
  2440   001B06  B0D8               	btfsc	status,0,c
  2441   001B08  EF88  F00D         	goto	u3701
  2442   001B0C  EF8A  F00D         	goto	u3700
  2443   001B10                     u3701:
  2444   001B10  EF03  F00E         	goto	l3548
  2445   001B14                     u3700:
  2446   001B14                     
  2447                           ;colorfunctions.c: 35:             max=(cf->Rf);
  2448   001B14  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2449   001B18  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2450   001B1C  CFDE F001          	movff	postinc2,___fltol@f1
  2451   001B20  CFDE F002          	movff	postinc2,___fltol@f1+1
  2452   001B24  CFDE F003          	movff	postinc2,___fltol@f1+2
  2453   001B28  CFDE F004          	movff	postinc2,___fltol@f1+3
  2454   001B2C  ECE7  F018         	call	___fltol	;wreg free
  2455   001B30  C001  F07B         	movff	?___fltol,RGB2Hue@max
  2456   001B34  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  2457   001B38                     
  2458                           ;colorfunctions.c: 38:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  2459   001B38  0100               	movlb	0	; () banked
  2460   001B3A  517D               	movf	RGB2Hue@min& (0+255),w,b
  2461   001B3C  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  2462   001B3E  6F73               	movwf	??_RGB2Hue& (0+255),b
  2463   001B40  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  2464   001B42  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  2465   001B44  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  2466   001B46  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  2467   001B4A  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  2468   001B4E  0E00               	movlw	0
  2469   001B50  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  2470   001B52  0EFF               	movlw	-1
  2471   001B54  6E0E               	movwf	(___xxtofl@val+2)^0,c
  2472   001B56  6E0F               	movwf	(___xxtofl@val+3)^0,c
  2473   001B58  0E01               	movlw	1
  2474   001B5A  EC0D  F018         	call	___xxtofl
  2475   001B5E  C00C  F036         	movff	?___xxtofl,___fldiv@a
  2476   001B62  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  2477   001B66  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  2478   001B6A  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  2479   001B6E  0100               	movlb	0	; () banked
  2480   001B70  EE20 F008          	lfsr	2,8
  2481   001B74  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2482   001B76  26D9               	addwf	fsr2l,f,c
  2483   001B78  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2484   001B7A  22DA               	addwfc	fsr2h,f,c
  2485   001B7C  CFDE F02E          	movff	postinc2,___flsub@a
  2486   001B80  CFDE F02F          	movff	postinc2,___flsub@a+1
  2487   001B84  CFDE F030          	movff	postinc2,___flsub@a+2
  2488   001B88  CFDE F031          	movff	postinc2,___flsub@a+3
  2489   001B8C  EE20 F004          	lfsr	2,4
  2490   001B90  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2491   001B92  26D9               	addwf	fsr2l,f,c
  2492   001B94  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2493   001B96  22DA               	addwfc	fsr2h,f,c
  2494   001B98  CFDE F02A          	movff	postinc2,___flsub@b
  2495   001B9C  CFDE F02B          	movff	postinc2,___flsub@b+1
  2496   001BA0  CFDE F02C          	movff	postinc2,___flsub@b+2
  2497   001BA4  CFDE F02D          	movff	postinc2,___flsub@b+3
  2498   001BA8  EC9C  F01D         	call	___flsub	;wreg free
  2499   001BAC  C02A  F032         	movff	?___flsub,___fldiv@b
  2500   001BB0  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  2501   001BB4  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  2502   001BB8  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  2503   001BBC  EC1F  F014         	call	___fldiv	;wreg free
  2504   001BC0  C032  F04B         	movff	?___fldiv,___flmul@b
  2505   001BC4  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  2506   001BC8  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  2507   001BCC  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  2508   001BD0  0E00               	movlw	0
  2509   001BD2  6E4F               	movwf	___flmul@a^0,c
  2510   001BD4  0E00               	movlw	0
  2511   001BD6  6E50               	movwf	(___flmul@a+1)^0,c
  2512   001BD8  0E70               	movlw	112
  2513   001BDA  6E51               	movwf	(___flmul@a+2)^0,c
  2514   001BDC  0E42               	movlw	66
  2515   001BDE  6E52               	movwf	(___flmul@a+3)^0,c
  2516   001BE0  EC09  F012         	call	___flmul	;wreg free
  2517   001BE4  0100               	movlb	0	; () banked
  2518   001BE6  EE20 F010          	lfsr	2,16
  2519   001BEA  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2520   001BEC  26D9               	addwf	fsr2l,f,c
  2521   001BEE  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2522   001BF0  22DA               	addwfc	fsr2h,f,c
  2523   001BF2  C04B  FFDE         	movff	?___flmul,postinc2
  2524   001BF6  C04C  FFDE         	movff	?___flmul+1,postinc2
  2525   001BFA  C04D  FFDE         	movff	?___flmul+2,postinc2
  2526   001BFE  C04E  FFDE         	movff	?___flmul+3,postinc2
  2527                           
  2528                           ;colorfunctions.c: 39:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  2529   001C02  EF73  F00F         	goto	l3560
  2530   001C06                     l3548:
  2531   001C06  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2532   001C0A  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2533   001C0E  CFDE F057          	movff	postinc2,___flge@ff1
  2534   001C12  CFDE F058          	movff	postinc2,___flge@ff1+1
  2535   001C16  CFDE F059          	movff	postinc2,___flge@ff1+2
  2536   001C1A  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2537   001C1E  0100               	movlb	0	; () banked
  2538   001C20  EE20 F004          	lfsr	2,4
  2539   001C24  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2540   001C26  26D9               	addwf	fsr2l,f,c
  2541   001C28  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2542   001C2A  22DA               	addwfc	fsr2h,f,c
  2543   001C2C  CFDE F05B          	movff	postinc2,___flge@ff2
  2544   001C30  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2545   001C34  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2546   001C38  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2547   001C3C  EC6A  F019         	call	___flge	;wreg free
  2548   001C40  B0D8               	btfsc	status,0,c
  2549   001C42  EF25  F00E         	goto	u3711
  2550   001C46  EF27  F00E         	goto	u3710
  2551   001C4A                     u3711:
  2552   001C4A  EFE1  F00E         	goto	l3556
  2553   001C4E                     u3710:
  2554   001C4E  0100               	movlb	0	; () banked
  2555   001C50  EE20 F008          	lfsr	2,8
  2556   001C54  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2557   001C56  26D9               	addwf	fsr2l,f,c
  2558   001C58  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2559   001C5A  22DA               	addwfc	fsr2h,f,c
  2560   001C5C  CFDE F057          	movff	postinc2,___flge@ff1
  2561   001C60  CFDE F058          	movff	postinc2,___flge@ff1+1
  2562   001C64  CFDE F059          	movff	postinc2,___flge@ff1+2
  2563   001C68  CFDE F05A          	movff	postinc2,___flge@ff1+3
  2564   001C6C  EE20 F004          	lfsr	2,4
  2565   001C70  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2566   001C72  26D9               	addwf	fsr2l,f,c
  2567   001C74  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2568   001C76  22DA               	addwfc	fsr2h,f,c
  2569   001C78  CFDE F05B          	movff	postinc2,___flge@ff2
  2570   001C7C  CFDE F05C          	movff	postinc2,___flge@ff2+1
  2571   001C80  CFDE F05D          	movff	postinc2,___flge@ff2+2
  2572   001C84  CFDE F05E          	movff	postinc2,___flge@ff2+3
  2573   001C88  EC6A  F019         	call	___flge	;wreg free
  2574   001C8C  B0D8               	btfsc	status,0,c
  2575   001C8E  EF4B  F00E         	goto	u3721
  2576   001C92  EF4D  F00E         	goto	u3720
  2577   001C96                     u3721:
  2578   001C96  EFE1  F00E         	goto	l3556
  2579   001C9A                     u3720:
  2580   001C9A                     
  2581                           ;colorfunctions.c: 40:             max=cf->Gf;
  2582   001C9A  0100               	movlb	0	; () banked
  2583   001C9C  EE20 F004          	lfsr	2,4
  2584   001CA0  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2585   001CA2  26D9               	addwf	fsr2l,f,c
  2586   001CA4  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2587   001CA6  22DA               	addwfc	fsr2h,f,c
  2588   001CA8  CFDE F001          	movff	postinc2,___fltol@f1
  2589   001CAC  CFDE F002          	movff	postinc2,___fltol@f1+1
  2590   001CB0  CFDE F003          	movff	postinc2,___fltol@f1+2
  2591   001CB4  CFDE F004          	movff	postinc2,___fltol@f1+3
  2592   001CB8  ECE7  F018         	call	___fltol	;wreg free
  2593   001CBC  C001  F07B         	movff	?___fltol,RGB2Hue@max
  2594   001CC0  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  2595                           
  2596                           ;colorfunctions.c: 41:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  2597   001CC4  0100               	movlb	0	; () banked
  2598   001CC6  517D               	movf	RGB2Hue@min& (0+255),w,b
  2599   001CC8  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  2600   001CCA  6F73               	movwf	??_RGB2Hue& (0+255),b
  2601   001CCC  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  2602   001CCE  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  2603   001CD0  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  2604   001CD2  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  2605   001CD6  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  2606   001CDA  0E00               	movlw	0
  2607   001CDC  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  2608   001CDE  0EFF               	movlw	-1
  2609   001CE0  6E0E               	movwf	(___xxtofl@val+2)^0,c
  2610   001CE2  6E0F               	movwf	(___xxtofl@val+3)^0,c
  2611   001CE4  0E01               	movlw	1
  2612   001CE6  EC0D  F018         	call	___xxtofl
  2613   001CEA  C00C  F036         	movff	?___xxtofl,___fldiv@a
  2614   001CEE  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  2615   001CF2  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  2616   001CF6  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  2617   001CFA  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2618   001CFE  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2619   001D02  CFDE F02E          	movff	postinc2,___flsub@a
  2620   001D06  CFDE F02F          	movff	postinc2,___flsub@a+1
  2621   001D0A  CFDE F030          	movff	postinc2,___flsub@a+2
  2622   001D0E  CFDE F031          	movff	postinc2,___flsub@a+3
  2623   001D12  0100               	movlb	0	; () banked
  2624   001D14  EE20 F008          	lfsr	2,8
  2625   001D18  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2626   001D1A  26D9               	addwf	fsr2l,f,c
  2627   001D1C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2628   001D1E  22DA               	addwfc	fsr2h,f,c
  2629   001D20  CFDE F02A          	movff	postinc2,___flsub@b
  2630   001D24  CFDE F02B          	movff	postinc2,___flsub@b+1
  2631   001D28  CFDE F02C          	movff	postinc2,___flsub@b+2
  2632   001D2C  CFDE F02D          	movff	postinc2,___flsub@b+3
  2633   001D30  EC9C  F01D         	call	___flsub	;wreg free
  2634   001D34  C02A  F032         	movff	?___flsub,___fldiv@b
  2635   001D38  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  2636   001D3C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  2637   001D40  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  2638   001D44  EC1F  F014         	call	___fldiv	;wreg free
  2639   001D48  C032  F077         	movff	?___fldiv,_RGB2Hue$1636
  2640   001D4C  C033  F078         	movff	?___fldiv+1,_RGB2Hue$1636+1
  2641   001D50  C034  F079         	movff	?___fldiv+2,_RGB2Hue$1636+2
  2642   001D54  C035  F07A         	movff	?___fldiv+3,_RGB2Hue$1636+3
  2643   001D58                     
  2644                           ;colorfunctions.c: 41:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  2645   001D58  0E00               	movlw	0
  2646   001D5A  6E1E               	movwf	___fladd@a^0,c
  2647   001D5C  0E00               	movlw	0
  2648   001D5E  6E1F               	movwf	(___fladd@a+1)^0,c
  2649   001D60  0E00               	movlw	0
  2650   001D62  6E20               	movwf	(___fladd@a+2)^0,c
  2651   001D64  0E40               	movlw	64
  2652   001D66  6E21               	movwf	(___fladd@a+3)^0,c
  2653   001D68  C077  F01A         	movff	_RGB2Hue$1636,___fladd@b
  2654   001D6C  C078  F01B         	movff	_RGB2Hue$1636+1,___fladd@b+1
  2655   001D70  C079  F01C         	movff	_RGB2Hue$1636+2,___fladd@b+2
  2656   001D74  C07A  F01D         	movff	_RGB2Hue$1636+3,___fladd@b+3
  2657   001D78  ECA9  F00F         	call	___fladd	;wreg free
  2658   001D7C  C01A  F04B         	movff	?___fladd,___flmul@b
  2659   001D80  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  2660   001D84  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  2661   001D88  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  2662   001D8C  0E00               	movlw	0
  2663   001D8E  6E4F               	movwf	___flmul@a^0,c
  2664   001D90  0E00               	movlw	0
  2665   001D92  6E50               	movwf	(___flmul@a+1)^0,c
  2666   001D94  0E70               	movlw	112
  2667   001D96  6E51               	movwf	(___flmul@a+2)^0,c
  2668   001D98  0E42               	movlw	66
  2669   001D9A  6E52               	movwf	(___flmul@a+3)^0,c
  2670   001D9C  EC09  F012         	call	___flmul	;wreg free
  2671   001DA0  0100               	movlb	0	; () banked
  2672   001DA2  EE20 F010          	lfsr	2,16
  2673   001DA6  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2674   001DA8  26D9               	addwf	fsr2l,f,c
  2675   001DAA  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2676   001DAC  22DA               	addwfc	fsr2h,f,c
  2677   001DAE  C04B  FFDE         	movff	?___flmul,postinc2
  2678   001DB2  C04C  FFDE         	movff	?___flmul+1,postinc2
  2679   001DB6  C04D  FFDE         	movff	?___flmul+2,postinc2
  2680   001DBA  C04E  FFDE         	movff	?___flmul+3,postinc2
  2681                           
  2682                           ;colorfunctions.c: 42:         }else{
  2683   001DBE  EF73  F00F         	goto	l3560
  2684   001DC2                     l3556:
  2685                           
  2686                           ;colorfunctions.c: 43:             max=cf->Bf;
  2687   001DC2  0100               	movlb	0	; () banked
  2688   001DC4  EE20 F008          	lfsr	2,8
  2689   001DC8  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2690   001DCA  26D9               	addwf	fsr2l,f,c
  2691   001DCC  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2692   001DCE  22DA               	addwfc	fsr2h,f,c
  2693   001DD0  CFDE F001          	movff	postinc2,___fltol@f1
  2694   001DD4  CFDE F002          	movff	postinc2,___fltol@f1+1
  2695   001DD8  CFDE F003          	movff	postinc2,___fltol@f1+2
  2696   001DDC  CFDE F004          	movff	postinc2,___fltol@f1+3
  2697   001DE0  ECE7  F018         	call	___fltol	;wreg free
  2698   001DE4  C001  F07B         	movff	?___fltol,RGB2Hue@max
  2699   001DE8  C002  F07C         	movff	?___fltol+1,RGB2Hue@max+1
  2700                           
  2701                           ;colorfunctions.c: 44:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  2702   001DEC  0100               	movlb	0	; () banked
  2703   001DEE  517D               	movf	RGB2Hue@min& (0+255),w,b
  2704   001DF0  5D7B               	subwf	RGB2Hue@max& (0+255),w,b
  2705   001DF2  6F73               	movwf	??_RGB2Hue& (0+255),b
  2706   001DF4  517E               	movf	(RGB2Hue@min+1)& (0+255),w,b
  2707   001DF6  597C               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  2708   001DF8  6F74               	movwf	(??_RGB2Hue+1)& (0+255),b
  2709   001DFA  C073  F00C         	movff	??_RGB2Hue,___xxtofl@val
  2710   001DFE  C074  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  2711   001E02  0E00               	movlw	0
  2712   001E04  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  2713   001E06  0EFF               	movlw	-1
  2714   001E08  6E0E               	movwf	(___xxtofl@val+2)^0,c
  2715   001E0A  6E0F               	movwf	(___xxtofl@val+3)^0,c
  2716   001E0C  0E01               	movlw	1
  2717   001E0E  EC0D  F018         	call	___xxtofl
  2718   001E12  C00C  F036         	movff	?___xxtofl,___fldiv@a
  2719   001E16  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  2720   001E1A  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  2721   001E1E  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  2722   001E22  0100               	movlb	0	; () banked
  2723   001E24  EE20 F004          	lfsr	2,4
  2724   001E28  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2725   001E2A  26D9               	addwf	fsr2l,f,c
  2726   001E2C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2727   001E2E  22DA               	addwfc	fsr2h,f,c
  2728   001E30  CFDE F02E          	movff	postinc2,___flsub@a
  2729   001E34  CFDE F02F          	movff	postinc2,___flsub@a+1
  2730   001E38  CFDE F030          	movff	postinc2,___flsub@a+2
  2731   001E3C  CFDE F031          	movff	postinc2,___flsub@a+3
  2732   001E40  C071  FFD9         	movff	RGB2Hue@cf,fsr2l
  2733   001E44  C072  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2734   001E48  CFDE F02A          	movff	postinc2,___flsub@b
  2735   001E4C  CFDE F02B          	movff	postinc2,___flsub@b+1
  2736   001E50  CFDE F02C          	movff	postinc2,___flsub@b+2
  2737   001E54  CFDE F02D          	movff	postinc2,___flsub@b+3
  2738   001E58  EC9C  F01D         	call	___flsub	;wreg free
  2739   001E5C  C02A  F032         	movff	?___flsub,___fldiv@b
  2740   001E60  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  2741   001E64  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  2742   001E68  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  2743   001E6C  EC1F  F014         	call	___fldiv	;wreg free
  2744   001E70  C032  F077         	movff	?___fldiv,_RGB2Hue$1636
  2745   001E74  C033  F078         	movff	?___fldiv+1,_RGB2Hue$1636+1
  2746   001E78  C034  F079         	movff	?___fldiv+2,_RGB2Hue$1636+2
  2747   001E7C  C035  F07A         	movff	?___fldiv+3,_RGB2Hue$1636+3
  2748   001E80                     
  2749                           ;colorfunctions.c: 44:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  2750   001E80  0E00               	movlw	0
  2751   001E82  6E1E               	movwf	___fladd@a^0,c
  2752   001E84  0E00               	movlw	0
  2753   001E86  6E1F               	movwf	(___fladd@a+1)^0,c
  2754   001E88  0E80               	movlw	128
  2755   001E8A  6E20               	movwf	(___fladd@a+2)^0,c
  2756   001E8C  0E40               	movlw	64
  2757   001E8E  6E21               	movwf	(___fladd@a+3)^0,c
  2758   001E90  C077  F01A         	movff	_RGB2Hue$1636,___fladd@b
  2759   001E94  C078  F01B         	movff	_RGB2Hue$1636+1,___fladd@b+1
  2760   001E98  C079  F01C         	movff	_RGB2Hue$1636+2,___fladd@b+2
  2761   001E9C  C07A  F01D         	movff	_RGB2Hue$1636+3,___fladd@b+3
  2762   001EA0  ECA9  F00F         	call	___fladd	;wreg free
  2763   001EA4  C01A  F04B         	movff	?___fladd,___flmul@b
  2764   001EA8  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  2765   001EAC  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  2766   001EB0  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  2767   001EB4  0E00               	movlw	0
  2768   001EB6  6E4F               	movwf	___flmul@a^0,c
  2769   001EB8  0E00               	movlw	0
  2770   001EBA  6E50               	movwf	(___flmul@a+1)^0,c
  2771   001EBC  0E70               	movlw	112
  2772   001EBE  6E51               	movwf	(___flmul@a+2)^0,c
  2773   001EC0  0E42               	movlw	66
  2774   001EC2  6E52               	movwf	(___flmul@a+3)^0,c
  2775   001EC4  EC09  F012         	call	___flmul	;wreg free
  2776   001EC8  0100               	movlb	0	; () banked
  2777   001ECA  EE20 F010          	lfsr	2,16
  2778   001ECE  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2779   001ED0  26D9               	addwf	fsr2l,f,c
  2780   001ED2  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2781   001ED4  22DA               	addwfc	fsr2h,f,c
  2782   001ED6  C04B  FFDE         	movff	?___flmul,postinc2
  2783   001EDA  C04C  FFDE         	movff	?___flmul+1,postinc2
  2784   001EDE  C04D  FFDE         	movff	?___flmul+2,postinc2
  2785   001EE2  C04E  FFDE         	movff	?___flmul+3,postinc2
  2786   001EE6                     l3560:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;colorfunctions.c: 46:         if (cf->h < 0){
  2790   001EE6  EE20 F010          	lfsr	2,16
  2791   001EEA  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2792   001EEC  26D9               	addwf	fsr2l,f,c
  2793   001EEE  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2794   001EF0  22DA               	addwfc	fsr2h,f,c
  2795   001EF2  0E03               	movlw	3
  2796   001EF4  BEDB               	btfsc	plusw2,7,c
  2797   001EF6  EF81  F00F         	goto	u3730
  2798   001EFA  EF7F  F00F         	goto	u3731
  2799   001EFE                     u3731:
  2800   001EFE  EFA8  F00F         	goto	l61
  2801   001F02                     u3730:
  2802   001F02                     
  2803                           ; BSR set to: 0
  2804                           ;colorfunctions.c: 47:             cf->h= cf->h +360;
  2805   001F02  EE20 F010          	lfsr	2,16
  2806   001F06  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2807   001F08  26D9               	addwf	fsr2l,f,c
  2808   001F0A  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2809   001F0C  22DA               	addwfc	fsr2h,f,c
  2810   001F0E  CFDE F01A          	movff	postinc2,___fladd@b
  2811   001F12  CFDE F01B          	movff	postinc2,___fladd@b+1
  2812   001F16  CFDE F01C          	movff	postinc2,___fladd@b+2
  2813   001F1A  CFDE F01D          	movff	postinc2,___fladd@b+3
  2814   001F1E  0E00               	movlw	0
  2815   001F20  6E1E               	movwf	___fladd@a^0,c
  2816   001F22  0E00               	movlw	0
  2817   001F24  6E1F               	movwf	(___fladd@a+1)^0,c
  2818   001F26  0EB4               	movlw	180
  2819   001F28  6E20               	movwf	(___fladd@a+2)^0,c
  2820   001F2A  0E43               	movlw	67
  2821   001F2C  6E21               	movwf	(___fladd@a+3)^0,c
  2822   001F2E  ECA9  F00F         	call	___fladd	;wreg free
  2823   001F32  0100               	movlb	0	; () banked
  2824   001F34  EE20 F010          	lfsr	2,16
  2825   001F38  5171               	movf	RGB2Hue@cf& (0+255),w,b
  2826   001F3A  26D9               	addwf	fsr2l,f,c
  2827   001F3C  5172               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  2828   001F3E  22DA               	addwfc	fsr2h,f,c
  2829   001F40  C01A  FFDE         	movff	?___fladd,postinc2
  2830   001F44  C01B  FFDE         	movff	?___fladd+1,postinc2
  2831   001F48  C01C  FFDE         	movff	?___fladd+2,postinc2
  2832   001F4C  C01D  FFDE         	movff	?___fladd+3,postinc2
  2833   001F50                     l61:
  2834                           
  2835                           ; BSR set to: 0
  2836   001F50  0012               	return		;funcret
  2837   001F52                     __end_of_RGB2Hue:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function ___xxtofl *****************
  2841 ;; Defined at:
  2842 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  sign            1    wreg     unsigned char 
  2845 ;;  val             4   11[COMRAM] long 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  sign            1   19[COMRAM] unsigned char 
  2848 ;;  arg             4   21[COMRAM] unsigned long 
  2849 ;;  exp             1   20[COMRAM] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  4   11[COMRAM] unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:       14 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_colour_read_all
  2869 ;;		_RGB2Hue
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text17
  2874   00301A                     __ptext17:
  2875                           	callstack 0
  2876   00301A                     ___xxtofl:
  2877                           	callstack 29
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;incstack = 0
  2881                           ;___xxtofl@sign stored from wreg
  2882   00301A  6E14               	movwf	___xxtofl@sign^0,c
  2883   00301C  5014               	movf	___xxtofl@sign^0,w,c
  2884   00301E  B4D8               	btfsc	status,2,c
  2885   003020  EF14  F018         	goto	u3531
  2886   003024  EF16  F018         	goto	u3530
  2887   003028                     u3531:
  2888   003028  EF38  F018         	goto	l857
  2889   00302C                     u3530:
  2890   00302C  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  2891   00302E  EF1D  F018         	goto	u3540
  2892   003032  EF1B  F018         	goto	u3541
  2893   003036                     u3541:
  2894   003036  EF38  F018         	goto	l857
  2895   00303A                     u3540:
  2896   00303A  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  2897   00303E  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  2898   003042  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  2899   003046  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  2900   00304A  1E10               	comf	??___xxtofl^0,f,c
  2901   00304C  1E11               	comf	(??___xxtofl+1)^0,f,c
  2902   00304E  1E12               	comf	(??___xxtofl+2)^0,f,c
  2903   003050  1E13               	comf	(??___xxtofl+3)^0,f,c
  2904   003052  2A10               	incf	??___xxtofl^0,f,c
  2905   003054  0E00               	movlw	0
  2906   003056  2211               	addwfc	(??___xxtofl+1)^0,f,c
  2907   003058  2212               	addwfc	(??___xxtofl+2)^0,f,c
  2908   00305A  2213               	addwfc	(??___xxtofl+3)^0,f,c
  2909   00305C  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  2910   003060  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  2911   003064  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  2912   003068  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  2913   00306C  EF40  F018         	goto	l3460
  2914   003070                     l857:
  2915   003070  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  2916   003074  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2917   003078  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2918   00307C  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2919   003080                     l3460:
  2920   003080  500C               	movf	___xxtofl@val^0,w,c
  2921   003082  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  2922   003084  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  2923   003086  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  2924   003088  A4D8               	btfss	status,2,c
  2925   00308A  EF49  F018         	goto	u3551
  2926   00308E  EF4B  F018         	goto	u3550
  2927   003092                     u3551:
  2928   003092  EF55  F018         	goto	l3466
  2929   003096                     u3550:
  2930   003096  0E00               	movlw	0
  2931   003098  6E0C               	movwf	?___xxtofl^0,c
  2932   00309A  0E00               	movlw	0
  2933   00309C  6E0D               	movwf	(?___xxtofl+1)^0,c
  2934   00309E  0E00               	movlw	0
  2935   0030A0  6E0E               	movwf	(?___xxtofl+2)^0,c
  2936   0030A2  0E00               	movlw	0
  2937   0030A4  6E0F               	movwf	(?___xxtofl+3)^0,c
  2938   0030A6  EFE6  F018         	goto	l860
  2939   0030AA                     l3466:
  2940   0030AA  0E96               	movlw	150
  2941   0030AC  6E15               	movwf	___xxtofl@exp^0,c
  2942   0030AE  EF5F  F018         	goto	l3470
  2943   0030B2                     l3468:
  2944   0030B2  2A15               	incf	___xxtofl@exp^0,f,c
  2945   0030B4  90D8               	bcf	status,0,c
  2946   0030B6  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  2947   0030B8  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  2948   0030BA  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  2949   0030BC  3216               	rrcf	___xxtofl@arg^0,f,c
  2950   0030BE                     l3470:
  2951   0030BE  0E00               	movlw	0
  2952   0030C0  1416               	andwf	___xxtofl@arg^0,w,c
  2953   0030C2  6E10               	movwf	??___xxtofl^0,c
  2954   0030C4  0E00               	movlw	0
  2955   0030C6  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  2956   0030C8  6E11               	movwf	(??___xxtofl+1)^0,c
  2957   0030CA  0E00               	movlw	0
  2958   0030CC  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  2959   0030CE  6E12               	movwf	(??___xxtofl+2)^0,c
  2960   0030D0  0EFE               	movlw	254
  2961   0030D2  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  2962   0030D4  6E13               	movwf	(??___xxtofl+3)^0,c
  2963   0030D6  5010               	movf	??___xxtofl^0,w,c
  2964   0030D8  1011               	iorwf	(??___xxtofl+1)^0,w,c
  2965   0030DA  1012               	iorwf	(??___xxtofl+2)^0,w,c
  2966   0030DC  1013               	iorwf	(??___xxtofl+3)^0,w,c
  2967   0030DE  A4D8               	btfss	status,2,c
  2968   0030E0  EF74  F018         	goto	u3561
  2969   0030E4  EF76  F018         	goto	u3560
  2970   0030E8                     u3561:
  2971   0030E8  EF59  F018         	goto	l3468
  2972   0030EC                     u3560:
  2973   0030EC  EF84  F018         	goto	l864
  2974   0030F0                     l3472:
  2975   0030F0  2A15               	incf	___xxtofl@exp^0,f,c
  2976   0030F2  0E01               	movlw	1
  2977   0030F4  2616               	addwf	___xxtofl@arg^0,f,c
  2978   0030F6  0E00               	movlw	0
  2979   0030F8  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  2980   0030FA  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  2981   0030FC  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  2982   0030FE  90D8               	bcf	status,0,c
  2983   003100  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  2984   003102  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  2985   003104  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  2986   003106  3216               	rrcf	___xxtofl@arg^0,f,c
  2987   003108                     l864:
  2988   003108  0E00               	movlw	0
  2989   00310A  1416               	andwf	___xxtofl@arg^0,w,c
  2990   00310C  6E10               	movwf	??___xxtofl^0,c
  2991   00310E  0E00               	movlw	0
  2992   003110  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  2993   003112  6E11               	movwf	(??___xxtofl+1)^0,c
  2994   003114  0E00               	movlw	0
  2995   003116  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  2996   003118  6E12               	movwf	(??___xxtofl+2)^0,c
  2997   00311A  0EFF               	movlw	255
  2998   00311C  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  2999   00311E  6E13               	movwf	(??___xxtofl+3)^0,c
  3000   003120  5010               	movf	??___xxtofl^0,w,c
  3001   003122  1011               	iorwf	(??___xxtofl+1)^0,w,c
  3002   003124  1012               	iorwf	(??___xxtofl+2)^0,w,c
  3003   003126  1013               	iorwf	(??___xxtofl+3)^0,w,c
  3004   003128  A4D8               	btfss	status,2,c
  3005   00312A  EF99  F018         	goto	u3571
  3006   00312E  EF9B  F018         	goto	u3570
  3007   003132                     u3571:
  3008   003132  EF78  F018         	goto	l3472
  3009   003136                     u3570:
  3010   003136  EFA3  F018         	goto	l3480
  3011   00313A                     l3478:
  3012   00313A  0615               	decf	___xxtofl@exp^0,f,c
  3013   00313C  90D8               	bcf	status,0,c
  3014   00313E  3616               	rlcf	___xxtofl@arg^0,f,c
  3015   003140  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  3016   003142  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  3017   003144  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  3018   003146                     l3480:
  3019   003146  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  3020   003148  EFA8  F018         	goto	u3581
  3021   00314C  EFAA  F018         	goto	u3580
  3022   003150                     u3581:
  3023   003150  EFB2  F018         	goto	l871
  3024   003154                     u3580:
  3025   003154  0E02               	movlw	2
  3026   003156  6015               	cpfslt	___xxtofl@exp^0,c
  3027   003158  EFB0  F018         	goto	u3591
  3028   00315C  EFB2  F018         	goto	u3590
  3029   003160                     u3591:
  3030   003160  EF9D  F018         	goto	l3478
  3031   003164                     u3590:
  3032   003164                     l871:
  3033   003164  B015               	btfsc	___xxtofl@exp^0,0,c
  3034   003166  EFB7  F018         	goto	u3601
  3035   00316A  EFB9  F018         	goto	u3600
  3036   00316E                     u3601:
  3037   00316E  EFBA  F018         	goto	l3486
  3038   003172                     u3600:
  3039   003172  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  3040   003174                     l3486:
  3041   003174  90D8               	bcf	status,0,c
  3042   003176  3215               	rrcf	___xxtofl@exp^0,f,c
  3043   003178  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  3044   00317C  6A11               	clrf	(??___xxtofl+1)^0,c
  3045   00317E  6A12               	clrf	(??___xxtofl+2)^0,c
  3046   003180  6A13               	clrf	(??___xxtofl+3)^0,c
  3047   003182  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  3048   003186  6A12               	clrf	(??___xxtofl+2)^0,c
  3049   003188  6A11               	clrf	(??___xxtofl+1)^0,c
  3050   00318A  6A10               	clrf	??___xxtofl^0,c
  3051   00318C  5010               	movf	??___xxtofl^0,w,c
  3052   00318E  1216               	iorwf	___xxtofl@arg^0,f,c
  3053   003190  5011               	movf	(??___xxtofl+1)^0,w,c
  3054   003192  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  3055   003194  5012               	movf	(??___xxtofl+2)^0,w,c
  3056   003196  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  3057   003198  5013               	movf	(??___xxtofl+3)^0,w,c
  3058   00319A  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  3059   00319C  5014               	movf	___xxtofl@sign^0,w,c
  3060   00319E  B4D8               	btfsc	status,2,c
  3061   0031A0  EFD4  F018         	goto	u3611
  3062   0031A4  EFD6  F018         	goto	u3610
  3063   0031A8                     u3611:
  3064   0031A8  EFDE  F018         	goto	l3496
  3065   0031AC                     u3610:
  3066   0031AC  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  3067   0031AE  EFDD  F018         	goto	u3620
  3068   0031B2  EFDB  F018         	goto	u3621
  3069   0031B6                     u3621:
  3070   0031B6  EFDE  F018         	goto	l3496
  3071   0031BA                     u3620:
  3072   0031BA  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  3073   0031BC                     l3496:
  3074   0031BC  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  3075   0031C0  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  3076   0031C4  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  3077   0031C8  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  3078   0031CC                     l860:
  3079   0031CC  0012               	return		;funcret
  3080   0031CE                     __end_of___xxtofl:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _Color2String *****************
  3084 ;; Defined at:
  3085 ;;		line 38 in file "serial.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  buf             2  130[BANK0 ] PTR unsigned char 
  3088 ;;		 -> main@data(60), 
  3089 ;;  cf              2  132[BANK0 ] PTR struct RGBC_rel
  3090 ;;		 -> colorf(20), 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;Total ram usage:        4 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 8
  3109 ;; This function calls:
  3110 ;;		_sendStringSerial4
  3111 ;;		_sprintf
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text18
  3118   003726                     __ptext18:
  3119                           	callstack 0
  3120   003726                     _Color2String:
  3121                           	callstack 22
  3122   003726                     
  3123                           ;serial.c: 41:     sprintf(buf,"Red %f Green,%f Blue,%f Hue %f \r",cf->Rf,
  3124   003726  C0E2  F0C1         	movff	Color2String@buf,sprintf@s
  3125   00372A  C0E3  F0C2         	movff	Color2String@buf+1,sprintf@s+1
  3126   00372E  0E01               	movlw	low STR_1
  3127   003730  0100               	movlb	0	; () banked
  3128   003732  6FC3               	movwf	sprintf@fmt& (0+255),b
  3129   003734  0E0E               	movlw	high STR_1
  3130   003736  6FC4               	movwf	(sprintf@fmt+1)& (0+255),b
  3131   003738  C0E4  FFD9         	movff	Color2String@cf,fsr2l
  3132   00373C  C0E5  FFDA         	movff	Color2String@cf+1,fsr2h
  3133   003740  CFDE F0C5          	movff	postinc2,?_sprintf+4
  3134   003744  CFDE F0C6          	movff	postinc2,?_sprintf+5
  3135   003748  CFDE F0C7          	movff	postinc2,?_sprintf+6
  3136   00374C  CFDE F0C8          	movff	postinc2,?_sprintf+7
  3137   003750  EE20 F004          	lfsr	2,4
  3138   003754  51E4               	movf	Color2String@cf& (0+255),w,b
  3139   003756  26D9               	addwf	fsr2l,f,c
  3140   003758  51E5               	movf	(Color2String@cf+1)& (0+255),w,b
  3141   00375A  22DA               	addwfc	fsr2h,f,c
  3142   00375C  CFDE F0C9          	movff	postinc2,?_sprintf+8
  3143   003760  CFDE F0CA          	movff	postinc2,?_sprintf+9
  3144   003764  CFDE F0CB          	movff	postinc2,?_sprintf+10
  3145   003768  CFDE F0CC          	movff	postinc2,?_sprintf+11
  3146   00376C  EE20 F008          	lfsr	2,8
  3147   003770  51E4               	movf	Color2String@cf& (0+255),w,b
  3148   003772  26D9               	addwf	fsr2l,f,c
  3149   003774  51E5               	movf	(Color2String@cf+1)& (0+255),w,b
  3150   003776  22DA               	addwfc	fsr2h,f,c
  3151   003778  CFDE F0CD          	movff	postinc2,?_sprintf+12
  3152   00377C  CFDE F0CE          	movff	postinc2,?_sprintf+13
  3153   003780  CFDE F0CF          	movff	postinc2,?_sprintf+14
  3154   003784  CFDE F0D0          	movff	postinc2,?_sprintf+15
  3155   003788  EE20 F010          	lfsr	2,16
  3156   00378C  51E4               	movf	Color2String@cf& (0+255),w,b
  3157   00378E  26D9               	addwf	fsr2l,f,c
  3158   003790  51E5               	movf	(Color2String@cf+1)& (0+255),w,b
  3159   003792  22DA               	addwfc	fsr2h,f,c
  3160   003794  CFDE F0D1          	movff	postinc2,?_sprintf+16
  3161   003798  CFDE F0D2          	movff	postinc2,?_sprintf+17
  3162   00379C  CFDE F0D3          	movff	postinc2,?_sprintf+18
  3163   0037A0  CFDE F0D4          	movff	postinc2,?_sprintf+19
  3164   0037A4  ECAB  F01C         	call	_sprintf	;wreg free
  3165   0037A8                     
  3166                           ;serial.c: 43:     sendStringSerial4(buf);
  3167   0037A8  C0E2  F002         	movff	Color2String@buf,sendStringSerial4@string
  3168   0037AC  C0E3  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  3169   0037B0  EC5F  F01E         	call	_sendStringSerial4	;wreg free
  3170   0037B4  0012               	return		;funcret
  3171   0037B6                     __end_of_Color2String:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _sprintf *****************
  3175 ;; Defined at:
  3176 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  s               2   97[BANK0 ] PTR unsigned char 
  3179 ;;		 -> main@data(60), 
  3180 ;;  fmt             2   99[BANK0 ] PTR const unsigned char 
  3181 ;;		 -> STR_1(33), 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  f              11  119[BANK0 ] struct _IO_FILE
  3184 ;;  ap              2  117[BANK0 ] PTR void [1]
  3185 ;;		 -> ?_sprintf(2), 
  3186 ;;  ret             2    0        int 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   97[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3196 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;Total ram usage:       33 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 7
  3203 ;; This function calls:
  3204 ;;		_vfprintf
  3205 ;; This function is called by:
  3206 ;;		_Color2String
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text19
  3211   003956                     __ptext19:
  3212                           	callstack 0
  3213   003956                     _sprintf:
  3214                           	callstack 22
  3215   003956  0EC5               	movlw	low (?_sprintf+4)
  3216   003958  0100               	movlb	0	; () banked
  3217   00395A  6FD5               	movwf	sprintf@ap& (0+255),b
  3218   00395C  0E00               	movlw	high (?_sprintf+4)
  3219   00395E  6FD6               	movwf	(sprintf@ap+1)& (0+255),b
  3220   003960  C0C1  F0D7         	movff	sprintf@s,sprintf@f
  3221   003964  C0C2  F0D8         	movff	sprintf@s+1,sprintf@f+1
  3222   003968                     
  3223                           ; BSR set to: 0
  3224   003968  0E00               	movlw	0
  3225   00396A  6FDB               	movwf	(sprintf@f+4)& (0+255),b
  3226   00396C  0E00               	movlw	0
  3227   00396E  6FDA               	movwf	(sprintf@f+3)& (0+255),b
  3228   003970                     
  3229                           ; BSR set to: 0
  3230   003970  0E00               	movlw	0
  3231   003972  6FE1               	movwf	(sprintf@f+10)& (0+255),b
  3232   003974  0E00               	movlw	0
  3233   003976  6FE0               	movwf	(sprintf@f+9)& (0+255),b
  3234   003978                     
  3235                           ; BSR set to: 0
  3236   003978  0ED7               	movlw	low sprintf@f
  3237   00397A  6FB9               	movwf	vfprintf@fp& (0+255),b
  3238   00397C  0E00               	movlw	high sprintf@f
  3239   00397E  6FBA               	movwf	(vfprintf@fp+1)& (0+255),b
  3240   003980  C0C3  F0BB         	movff	sprintf@fmt,vfprintf@fmt
  3241   003984  C0C4  F0BC         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3242   003988  0ED5               	movlw	low sprintf@ap
  3243   00398A  6FBD               	movwf	vfprintf@ap& (0+255),b
  3244   00398C  0E00               	movlw	high sprintf@ap
  3245   00398E  6FBE               	movwf	(vfprintf@ap+1)& (0+255),b
  3246   003990  EC80  F01C         	call	_vfprintf	;wreg free
  3247   003994  0100               	movlb	0	; () banked
  3248   003996  51DA               	movf	(sprintf@f+3)& (0+255),w,b
  3249   003998  25C1               	addwf	sprintf@s& (0+255),w,b
  3250   00399A  6ED9               	movwf	fsr2l,c
  3251   00399C  51DB               	movf	(sprintf@f+4)& (0+255),w,b
  3252   00399E  21C2               	addwfc	(sprintf@s+1)& (0+255),w,b
  3253   0039A0  6EDA               	movwf	fsr2h,c
  3254   0039A2  0E00               	movlw	0
  3255   0039A4  6EDF               	movwf	indf2,c
  3256   0039A6                     
  3257                           ; BSR set to: 0
  3258   0039A6  0012               	return		;funcret
  3259   0039A8                     __end_of_sprintf:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _vfprintf *****************
  3263 ;; Defined at:
  3264 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  3267 ;;		 -> sprintf@f(11), 
  3268 ;;  fmt             2   91[BANK0 ] PTR const unsigned char 
  3269 ;;		 -> STR_1(33), 
  3270 ;;  ap              2   93[BANK0 ] PTR PTR void 
  3271 ;;		 -> sprintf@ap(2), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  cfmt            2   95[BANK0 ] PTR unsigned char 
  3274 ;;		 -> STR_1(33), 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  2   89[BANK0 ] int 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3284 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;Total ram usage:        8 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 6
  3291 ;; This function calls:
  3292 ;;		_vfpfcnvrt
  3293 ;; This function is called by:
  3294 ;;		_sprintf
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text20
  3299   003900                     __ptext20:
  3300                           	callstack 0
  3301   003900                     _vfprintf:
  3302                           	callstack 22
  3303   003900                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3305   003900  C0BB  F0BF         	movff	vfprintf@fmt,vfprintf@cfmt
  3306   003904  C0BC  F0C0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3309   003908  EF95  F01C         	goto	l3388
  3310   00390C                     l3386:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3313   00390C  C0B9  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  3314   003910  C0BA  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3315   003914  0EBF               	movlw	low vfprintf@cfmt
  3316   003916  0100               	movlb	0	; () banked
  3317   003918  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  3318   00391A  0E00               	movlw	high vfprintf@cfmt
  3319   00391C  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3320   00391E  C0BD  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  3321   003922  C0BE  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3322   003926  ECEC  F015         	call	_vfpfcnvrt	;wreg free
  3323   00392A                     l3388:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3326   00392A  C0BF  FFF6         	movff	vfprintf@cfmt,tblptrl
  3327   00392E  C0C0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3328   003932                     	if	0	;tblptru may be non-zero
  3329   003932                     	endif
  3330   003932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3331   003932  0E00               	movlw	low (__mediumconst shr (0+16))
  3332   003934  6EF8               	movwf	tblptru,c
  3333   003936                     	endif
  3334   003936  0008               	tblrd		*
  3335   003938  50F5               	movf	tablat,w,c
  3336   00393A  0900               	iorlw	0
  3337   00393C  A4D8               	btfss	status,2,c
  3338   00393E  EFA3  F01C         	goto	u3511
  3339   003942  EFA5  F01C         	goto	u3510
  3340   003946                     u3511:
  3341   003946  EF86  F01C         	goto	l3386
  3342   00394A                     u3510:
  3343   00394A                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3345   00394A  0E00               	movlw	0
  3346   00394C  0100               	movlb	0	; () banked
  3347   00394E  6FBA               	movwf	(?_vfprintf+1)& (0+255),b
  3348   003950  0E00               	movlw	0
  3349   003952  6FB9               	movwf	?_vfprintf& (0+255),b
  3350   003954                     
  3351                           ; BSR set to: 0
  3352   003954  0012               	return		;funcret
  3353   003956                     __end_of_vfprintf:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _vfpfcnvrt *****************
  3357 ;; Defined at:
  3358 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  3361 ;;		 -> sprintf@f(11), 
  3362 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  3363 ;;		 -> vfprintf@cfmt(2), 
  3364 ;;  ap              2   74[BANK0 ] PTR PTR void 
  3365 ;;		 -> sprintf@ap(2), 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  convarg         8   78[BANK0 ] struct .
  3368 ;;  cp              2   87[BANK0 ] PTR unsigned char 
  3369 ;;		 -> STR_1(33), 
  3370 ;;  i               2    0        int 
  3371 ;;  done            2    0        int 
  3372 ;;  c               1   86[BANK0 ] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3382 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;Total ram usage:       19 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 5
  3389 ;; This function calls:
  3390 ;;		_efgtoa
  3391 ;;		_fputc
  3392 ;; This function is called by:
  3393 ;;		_vfprintf
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text21
  3398   002BD8                     __ptext21:
  3399                           	callstack 0
  3400   002BD8                     _vfpfcnvrt:
  3401                           	callstack 22
  3402   002BD8                     
  3403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3404   002BD8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3405   002BDC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406   002BE0  CFDE FFF6          	movff	postinc2,tblptrl
  3407   002BE4  CFDD FFF7          	movff	postdec2,tblptrh
  3408   002BE8                     	if	0	;tblptru may be non-zero
  3409   002BE8                     	endif
  3410   002BE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3411   002BE8  0E00               	movlw	low (__mediumconst shr (0+16))
  3412   002BEA  6EF8               	movwf	tblptru,c
  3413   002BEC                     	endif
  3414   002BEC  0008               	tblrd		*
  3415   002BEE  50F5               	movf	tablat,w,c
  3416   002BF0  0A25               	xorlw	37
  3417   002BF2  A4D8               	btfss	status,2,c
  3418   002BF4  EFFE  F015         	goto	u3461
  3419   002BF8  EF00  F016         	goto	u3460
  3420   002BFC                     u3461:
  3421   002BFC  EFED  F016         	goto	l3326
  3422   002C00                     u3460:
  3423   002C00                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3425   002C00  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426   002C04  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427   002C08  2ADE               	incf	postinc2,f,c
  3428   002C0A  0E00               	movlw	0
  3429   002C0C  22DD               	addwfc	postdec2,f,c
  3430   002C0E                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3432   002C0E  0E00               	movlw	0
  3433   002C10  0100               	movlb	0	; () banked
  3434   002C12  6FF1               	movwf	(_width+1)& (0+255),b
  3435   002C14  0E00               	movlw	0
  3436   002C16  6FF0               	movwf	_width& (0+255),b
  3437   002C18  C0F0  F0F4         	movff	_width,_flags
  3438   002C1C                     
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3441   002C1C  69F2               	setf	_prec& (0+255),b
  3442   002C1E  69F3               	setf	(_prec+1)& (0+255),b
  3443   002C20                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3446   002C20  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3447   002C24  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3448   002C28  CFDE F0B7          	movff	postinc2,vfpfcnvrt@cp
  3449   002C2C  CFDD F0B8          	movff	postdec2,vfpfcnvrt@cp+1
  3450   002C30                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3453   002C30  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3454   002C34  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3455   002C38                     	if	0	;tblptru may be non-zero
  3456   002C38                     	endif
  3457   002C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3458   002C38  0E00               	movlw	low (__mediumconst shr (0+16))
  3459   002C3A  6EF8               	movwf	tblptru,c
  3460   002C3C                     	endif
  3461   002C3C  0008               	tblrd		*
  3462   002C3E  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3465   002C42  EF2F  F016         	goto	l3300
  3466   002C46                     l3292:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3470   002C46  4BB7               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3471   002C48  2BB8               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3474   002C4A  EF48  F016         	goto	l3302
  3475   002C4E                     l3294:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3479   002C4E  0E6C               	movlw	108
  3480   002C50  6FB6               	movwf	vfpfcnvrt@c& (0+255),b
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3483   002C52  EF48  F016         	goto	l3302
  3484   002C56                     l3296:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3488   002C56  0E00               	movlw	0
  3489   002C58  6FB6               	movwf	vfpfcnvrt@c& (0+255),b
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3492   002C5A  EF48  F016         	goto	l3302
  3493   002C5E                     l3300:
  3494                           
  3495                           ; BSR set to: 0
  3496   002C5E  51B6               	movf	vfpfcnvrt@c& (0+255),w,b
  3497   002C60  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3498   002C62  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3499                           
  3500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3501                           ; Switch size 1, requested type "simple"
  3502                           ; Number of cases is 1, Range of values is 0 to 0
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte            4     3 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507   002C64  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3508   002C66  0A00               	xorlw	0	; case 0
  3509   002C68  B4D8               	btfsc	status,2,c
  3510   002C6A  EF39  F016         	goto	l3698
  3511   002C6E  EF2B  F016         	goto	l3296
  3512   002C72                     l3698:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ; Switch size 1, requested type "simple"
  3516                           ; Number of cases is 3, Range of values is 76 to 108
  3517                           ; switch strategies available:
  3518                           ; Name         Instructions Cycles
  3519                           ; simple_byte           10     6 (average)
  3520                           ;	Chosen strategy is simple_byte
  3521   002C72  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3522   002C74  0A4C               	xorlw	76	; case 76
  3523   002C76  B4D8               	btfsc	status,2,c
  3524   002C78  EF23  F016         	goto	l3292
  3525   002C7C  0A2A               	xorlw	42	; case 102
  3526   002C7E  B4D8               	btfsc	status,2,c
  3527   002C80  EF27  F016         	goto	l3294
  3528   002C84  0A0A               	xorlw	10	; case 108
  3529   002C86  B4D8               	btfsc	status,2,c
  3530   002C88  EF23  F016         	goto	l3292
  3531   002C8C  EF2B  F016         	goto	l3296
  3532   002C90                     l3302:
  3533                           
  3534                           ; BSR set to: 0
  3535   002C90  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3536   002C94  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3537   002C98                     	if	0	;tblptru may be non-zero
  3538   002C98                     	endif
  3539   002C98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3540   002C98  0E00               	movlw	low (__mediumconst shr (0+16))
  3541   002C9A  6EF8               	movwf	tblptru,c
  3542   002C9C                     	endif
  3543   002C9C  0008               	tblrd		*
  3544   002C9E  50F5               	movf	tablat,w,c
  3545   002CA0  0A66               	xorlw	102
  3546   002CA2  A4D8               	btfss	status,2,c
  3547   002CA4  EF56  F016         	goto	u3471
  3548   002CA8  EF58  F016         	goto	u3470
  3549   002CAC                     u3471:
  3550   002CAC  EFE4  F016         	goto	l3322
  3551   002CB0                     u3470:
  3552   002CB0  EF8E  F016         	goto	l3310
  3553   002CB4                     l3304:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3557   002CB4  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3558   002CB8  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3559   002CBC  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3560   002CC0  0E04               	movlw	4
  3561   002CC2  26DE               	addwf	postinc2,f,c
  3562   002CC4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3563   002CC8  0E00               	movlw	0
  3564   002CCA  22DD               	addwfc	postdec2,f,c
  3565   002CCC  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3566   002CD0  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3567   002CD4  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg
  3568   002CD8  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+1
  3569   002CDC  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+2
  3570   002CE0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+3
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3573   002CE4  EFA3  F016         	goto	l3312
  3574   002CE8                     l3306:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3578   002CE8  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3579   002CEC  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3580   002CF0  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  3581   002CF4  0E04               	movlw	4
  3582   002CF6  26DE               	addwf	postinc2,f,c
  3583   002CF8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  3584   002CFC  0E00               	movlw	0
  3585   002CFE  22DD               	addwfc	postdec2,f,c
  3586   002D00  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3587   002D04  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3588   002D08  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg
  3589   002D0C  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+1
  3590   002D10  CFDE F0B0          	movff	postinc2,vfpfcnvrt@convarg+2
  3591   002D14  CFDE F0B1          	movff	postinc2,vfpfcnvrt@convarg+3
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3594   002D18  EFA3  F016         	goto	l3312
  3595   002D1C                     l3310:
  3596                           
  3597                           ; BSR set to: 0
  3598   002D1C  51B6               	movf	vfpfcnvrt@c& (0+255),w,b
  3599   002D1E  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3600   002D20  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3601                           
  3602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3603                           ; Switch size 1, requested type "simple"
  3604                           ; Number of cases is 1, Range of values is 0 to 0
  3605                           ; switch strategies available:
  3606                           ; Name         Instructions Cycles
  3607                           ; simple_byte            4     3 (average)
  3608                           ;	Chosen strategy is simple_byte
  3609   002D22  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3610   002D24  0A00               	xorlw	0	; case 0
  3611   002D26  B4D8               	btfsc	status,2,c
  3612   002D28  EF98  F016         	goto	l3700
  3613   002D2C  EFA3  F016         	goto	l3312
  3614   002D30                     l3700:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ; Switch size 1, requested type "simple"
  3618                           ; Number of cases is 2, Range of values is 76 to 108
  3619                           ; switch strategies available:
  3620                           ; Name         Instructions Cycles
  3621                           ; simple_byte            7     4 (average)
  3622                           ;	Chosen strategy is simple_byte
  3623   002D30  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3624   002D32  0A4C               	xorlw	76	; case 76
  3625   002D34  B4D8               	btfsc	status,2,c
  3626   002D36  EF74  F016         	goto	l3306
  3627   002D3A  0A20               	xorlw	32	; case 108
  3628   002D3C  B4D8               	btfsc	status,2,c
  3629   002D3E  EF5A  F016         	goto	l3304
  3630   002D42  EFA3  F016         	goto	l3312
  3631   002D46                     l3312:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3635   002D46  0E01               	movlw	1
  3636   002D48  25B7               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3637   002D4A  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3638   002D4C  0E00               	movlw	0
  3639   002D4E  21B8               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3640   002D50  6FAD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3641   002D52  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3642   002D56  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3643   002D5A  C0AC  FFDE         	movff	??_vfpfcnvrt,postinc2
  3644   002D5E  C0AD  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3647   002D62  EFCC  F016         	goto	l3320
  3648   002D66                     l3314:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3652   002D66  C0A6  F071         	movff	vfpfcnvrt@fp,efgtoa@fp
  3653   002D6A  C0A7  F072         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3654   002D6E  C0AE  F073         	movff	vfpfcnvrt@convarg,efgtoa@f
  3655   002D72  C0AF  F074         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3656   002D76  C0B0  F075         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3657   002D7A  C0B1  F076         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3658   002D7E  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3659   002D82  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3660   002D86                     	if	0	;tblptru may be non-zero
  3661   002D86                     	endif
  3662   002D86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3663   002D86  0E00               	movlw	low (__mediumconst shr (0+16))
  3664   002D88  6EF8               	movwf	tblptru,c
  3665   002D8A                     	endif
  3666   002D8A  0008               	tblrd		*
  3667   002D8C  CFF5 F077          	movff	tablat,efgtoa@c
  3668   002D90  EC16  F007         	call	_efgtoa	;wreg free
  3669   002D94  EF03  F017         	goto	l985
  3670   002D98                     l3320:
  3671                           
  3672                           ; BSR set to: 0
  3673   002D98  C0B7  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3674   002D9C  C0B8  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3675   002DA0                     	if	0	;tblptru may be non-zero
  3676   002DA0                     	endif
  3677   002DA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3678   002DA0  0E00               	movlw	low (__mediumconst shr (0+16))
  3679   002DA2  6EF8               	movwf	tblptru,c
  3680   002DA4                     	endif
  3681   002DA4  0008               	tblrd		*
  3682   002DA6  50F5               	movf	tablat,w,c
  3683   002DA8  6FAC               	movwf	??_vfpfcnvrt& (0+255),b
  3684   002DAA  6BAD               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3685                           
  3686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3687                           ; Switch size 1, requested type "simple"
  3688                           ; Number of cases is 1, Range of values is 0 to 0
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte            4     3 (average)
  3692                           ;	Chosen strategy is simple_byte
  3693   002DAC  51AD               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3694   002DAE  0A00               	xorlw	0	; case 0
  3695   002DB0  B4D8               	btfsc	status,2,c
  3696   002DB2  EFDD  F016         	goto	l3702
  3697   002DB6  EFE4  F016         	goto	l3322
  3698   002DBA                     l3702:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ; Switch size 1, requested type "simple"
  3702                           ; Number of cases is 1, Range of values is 102 to 102
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; simple_byte            4     3 (average)
  3706                           ;	Chosen strategy is simple_byte
  3707   002DBA  51AC               	movf	??_vfpfcnvrt& (0+255),w,b
  3708   002DBC  0A66               	xorlw	102	; case 102
  3709   002DBE  B4D8               	btfsc	status,2,c
  3710   002DC0  EFB3  F016         	goto	l3314
  3711   002DC4  EFE4  F016         	goto	l3322
  3712   002DC8                     l3322:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3715   002DC8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3716   002DCC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3717   002DD0  2ADE               	incf	postinc2,f,c
  3718   002DD2  0E00               	movlw	0
  3719   002DD4  22DD               	addwfc	postdec2,f,c
  3720   002DD6  EF03  F017         	goto	l985
  3721   002DDA                     l3326:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3724   002DDA  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3725   002DDE  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3726   002DE2  CFDE FFF6          	movff	postinc2,tblptrl
  3727   002DE6  CFDD FFF7          	movff	postdec2,tblptrh
  3728   002DEA                     	if	0	;tblptru may be non-zero
  3729   002DEA                     	endif
  3730   002DEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3731   002DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3732   002DEC  6EF8               	movwf	tblptru,c
  3733   002DEE                     	endif
  3734   002DEE  0008               	tblrd		*
  3735   002DF0  50F5               	movf	tablat,w,c
  3736   002DF2  6E01               	movwf	fputc@c^0,c
  3737   002DF4  6A02               	clrf	(fputc@c+1)^0,c
  3738   002DF6  C0A6  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3739   002DFA  C0A7  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3740   002DFE  ECD9  F01A         	call	_fputc	;wreg free
  3741   002E02  EFE4  F016         	goto	l3322
  3742   002E06                     l985:
  3743   002E06  0012               	return		;funcret
  3744   002E08                     __end_of_vfpfcnvrt:
  3745                           	callstack 0
  3746                           
  3747 ;; *************** function _efgtoa *****************
  3748 ;; Defined at:
  3749 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  3752 ;;		 -> sprintf@f(11), 
  3753 ;;  f               4   19[BANK0 ] PTR struct _IO_FILE
  3754 ;;  c               1   23[BANK0 ] unsigned char 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  u               4   66[BANK0 ] struct flui
  3757 ;;  g               4   62[BANK0 ] struct flui
  3758 ;;  l               4   55[BANK0 ] struct flui
  3759 ;;  h               4   51[BANK0 ] struct flui
  3760 ;;  ou              4   45[BANK0 ] struct flui
  3761 ;;  n               2   60[BANK0 ] int 
  3762 ;;  i               2   49[BANK0 ] int 
  3763 ;;  w               2   43[BANK0 ] int 
  3764 ;;  e               2   41[BANK0 ] int 
  3765 ;;  m               2   39[BANK0 ] int 
  3766 ;;  d               2   37[BANK0 ] int 
  3767 ;;  t               2   30[BANK0 ] int 
  3768 ;;  p               2   28[BANK0 ] int 
  3769 ;;  ne              2   26[BANK0 ] int 
  3770 ;;  sign            1   59[BANK0 ] unsigned char 
  3771 ;;  nmode           1   36[BANK0 ] unsigned char 
  3772 ;;  mode            1   35[BANK0 ] unsigned char 
  3773 ;;  pp              1   34[BANK0 ] unsigned char 
  3774 ;;  esign           1    0        unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3784 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;Total ram usage:       53 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 4
  3791 ;; This function calls:
  3792 ;;		___fladd
  3793 ;;		___fldiv
  3794 ;;		___fleq
  3795 ;;		___flge
  3796 ;;		___flmul
  3797 ;;		___flneg
  3798 ;;		___flsub
  3799 ;;		___fltol
  3800 ;;		___fpclassifyf
  3801 ;;		_floorf
  3802 ;;		_labs
  3803 ;;		_memcpy
  3804 ;;		_pad
  3805 ;;		_strcpy
  3806 ;; This function is called by:
  3807 ;;		_vfpfcnvrt
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text22
  3812   000E2C                     __ptext22:
  3813                           	callstack 0
  3814   000E2C                     _efgtoa:
  3815                           	callstack 22
  3816   000E2C                     
  3817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3818   000E2C  0E00               	movlw	0
  3819   000E2E  0100               	movlb	0	; () banked
  3820   000E30  6F9B               	movwf	efgtoa@sign& (0+255),b
  3821   000E32                     
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3824   000E32  C073  F09E         	movff	efgtoa@f,efgtoa@g
  3825   000E36  C074  F09F         	movff	efgtoa@f+1,efgtoa@g+1
  3826   000E3A  C075  F0A0         	movff	efgtoa@f+2,efgtoa@g+2
  3827   000E3E  C076  F0A1         	movff	efgtoa@f+3,efgtoa@g+3
  3828   000E42                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3831   000E42  BFA1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3832   000E44  EF28  F007         	goto	u3120
  3833   000E48  EF26  F007         	goto	u3121
  3834   000E4C                     u3121:
  3835   000E4C  EF3C  F007         	goto	l3064
  3836   000E50                     u3120:
  3837   000E50                     
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3840   000E50  0E01               	movlw	1
  3841   000E52  6F9B               	movwf	efgtoa@sign& (0+255),b
  3842   000E54                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3845   000E54  C09E  F001         	movff	efgtoa@g,___flneg@f1
  3846   000E58  C09F  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3847   000E5C  C0A0  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3848   000E60  C0A1  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3849   000E64  EC43  F01E         	call	___flneg	;wreg free
  3850   000E68  C001  F09E         	movff	?___flneg,efgtoa@g
  3851   000E6C  C002  F09F         	movff	?___flneg+1,efgtoa@g+1
  3852   000E70  C003  F0A0         	movff	?___flneg+2,efgtoa@g+2
  3853   000E74  C004  F0A1         	movff	?___flneg+3,efgtoa@g+3
  3854   000E78                     l3064:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3857   000E78  0E00               	movlw	0
  3858   000E7A  0100               	movlb	0	; () banked
  3859   000E7C  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  3860   000E7E  0E00               	movlw	0
  3861   000E80  6F9C               	movwf	efgtoa@n& (0+255),b
  3862   000E82                     
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3865   000E82  C0F0  F08B         	movff	_width,efgtoa@w
  3866   000E86  C0F1  F08C         	movff	_width+1,efgtoa@w+1
  3867   000E8A                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3870   000E8A  519B               	movf	efgtoa@sign& (0+255),w,b
  3871   000E8C  B4D8               	btfsc	status,2,c
  3872   000E8E  EF4B  F007         	goto	u3131
  3873   000E92  EF4D  F007         	goto	u3130
  3874   000E96                     u3131:
  3875   000E96  EF61  F007         	goto	l3078
  3876   000E9A                     u3130:
  3877   000E9A                     
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3880   000E9A  519B               	movf	efgtoa@sign& (0+255),w,b
  3881   000E9C  A4D8               	btfss	status,2,c
  3882   000E9E  EF53  F007         	goto	u3141
  3883   000EA2  EF55  F007         	goto	u3140
  3884   000EA6                     u3141:
  3885   000EA6  EF5B  F007         	goto	l3074
  3886   000EAA                     u3140:
  3887   000EAA                     
  3888                           ; BSR set to: 0
  3889   000EAA  0E00               	movlw	0
  3890   000EAC  6F81               	movwf	(_efgtoa$1329+1)& (0+255),b
  3891   000EAE  0E2B               	movlw	43
  3892   000EB0  6F80               	movwf	_efgtoa$1329& (0+255),b
  3893   000EB2  EF5F  F007         	goto	l3076
  3894   000EB6                     l3074:
  3895                           
  3896                           ; BSR set to: 0
  3897   000EB6  0E00               	movlw	0
  3898   000EB8  6F81               	movwf	(_efgtoa$1329+1)& (0+255),b
  3899   000EBA  0E2D               	movlw	45
  3900   000EBC  6F80               	movwf	_efgtoa$1329& (0+255),b
  3901   000EBE                     l3076:
  3902                           
  3903                           ; BSR set to: 0
  3904   000EBE  C080  F09B         	movff	_efgtoa$1329,efgtoa@sign
  3905   000EC2                     l3078:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3909   000EC2  C09E  F001         	movff	efgtoa@g,___fpclassifyf@x
  3910   000EC6  C09F  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3911   000ECA  C0A0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3912   000ECE  C0A1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3913   000ED2  ECED  F019         	call	___fpclassifyf	;wreg free
  3914   000ED6  0401               	decf	?___fpclassifyf^0,w,c
  3915   000ED8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3916   000EDA  A4D8               	btfss	status,2,c
  3917   000EDC  EF72  F007         	goto	u3151
  3918   000EE0  EF74  F007         	goto	u3150
  3919   000EE4                     u3151:
  3920   000EE4  EFA7  F007         	goto	l3096
  3921   000EE8                     u3150:
  3922   000EE8                     
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3924   000EE8  0100               	movlb	0	; () banked
  3925   000EEA  519B               	movf	efgtoa@sign& (0+255),w,b
  3926   000EEC  B4D8               	btfsc	status,2,c
  3927   000EEE  EF7B  F007         	goto	u3161
  3928   000EF2  EF7D  F007         	goto	u3160
  3929   000EF6                     u3161:
  3930   000EF6  EF86  F007         	goto	l3088
  3931   000EFA                     u3160:
  3932   000EFA                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3935   000EFA  C09B  F100         	movff	efgtoa@sign,_dbuf
  3936   000EFE                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3939   000EFE  078B               	decf	efgtoa@w& (0+255),f,b
  3940   000F00  A0D8               	btfss	status,0,c
  3941   000F02  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3942   000F04                     
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3945   000F04  0E00               	movlw	0
  3946   000F06  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  3947   000F08  0E01               	movlw	1
  3948   000F0A  6F9C               	movwf	efgtoa@n& (0+255),b
  3949   000F0C                     l3088:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3953   000F0C  0E00               	movlw	low _dbuf
  3954   000F0E  259C               	addwf	efgtoa@n& (0+255),w,b
  3955   000F10  6E01               	movwf	strcpy@dest^0,c
  3956   000F12  0E01               	movlw	high _dbuf
  3957   000F14  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3958   000F16  6E02               	movwf	(strcpy@dest+1)^0,c
  3959   000F18  0E22               	movlw	low STR_2
  3960   000F1A  6E03               	movwf	strcpy@src^0,c
  3961   000F1C  0E0E               	movlw	high STR_2
  3962   000F1E  6E04               	movwf	(strcpy@src+1)^0,c
  3963   000F20  ECBF  F01D         	call	_strcpy	;wreg free
  3964   000F24                     l3090:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3967   000F24  0100               	movlb	0	; () banked
  3968   000F26  0EFD               	movlw	253
  3969   000F28  278B               	addwf	efgtoa@w& (0+255),f,b
  3970   000F2A  0EFF               	movlw	255
  3971   000F2C  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3972   000F2E                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3975   000F2E  C071  F011         	movff	efgtoa@fp,pad@fp
  3976   000F32  C072  F012         	movff	efgtoa@fp+1,pad@fp+1
  3977   000F36  0E00               	movlw	low _dbuf
  3978   000F38  6E13               	movwf	pad@buf^0,c
  3979   000F3A  0E01               	movlw	high _dbuf
  3980   000F3C  6E14               	movwf	(pad@buf+1)^0,c
  3981   000F3E  C08B  F015         	movff	efgtoa@w,pad@p
  3982   000F42  C08C  F016         	movff	efgtoa@w+1,pad@p+1
  3983   000F46  ECDB  F01B         	call	_pad	;wreg free
  3984   000F4A  EF12  F00C         	goto	l925
  3985   000F4E                     l3096:
  3986                           
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3988   000F4E  C09E  F001         	movff	efgtoa@g,___fpclassifyf@x
  3989   000F52  C09F  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3990   000F56  C0A0  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3991   000F5A  C0A1  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3992   000F5E  ECED  F019         	call	___fpclassifyf	;wreg free
  3993   000F62  5001               	movf	?___fpclassifyf^0,w,c
  3994   000F64  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3995   000F66  A4D8               	btfss	status,2,c
  3996   000F68  EFB8  F007         	goto	u3171
  3997   000F6C  EFBA  F007         	goto	u3170
  3998   000F70                     u3171:
  3999   000F70  EFDA  F007         	goto	l3114
  4000   000F74                     u3170:
  4001   000F74                     
  4002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4003   000F74  0100               	movlb	0	; () banked
  4004   000F76  519B               	movf	efgtoa@sign& (0+255),w,b
  4005   000F78  B4D8               	btfsc	status,2,c
  4006   000F7A  EFC1  F007         	goto	u3181
  4007   000F7E  EFC3  F007         	goto	u3180
  4008   000F82                     u3181:
  4009   000F82  EFCC  F007         	goto	l3106
  4010   000F86                     u3180:
  4011   000F86                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4014   000F86  C09B  F100         	movff	efgtoa@sign,_dbuf
  4015   000F8A                     
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4018   000F8A  078B               	decf	efgtoa@w& (0+255),f,b
  4019   000F8C  A0D8               	btfss	status,0,c
  4020   000F8E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4021   000F90                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4024   000F90  0E00               	movlw	0
  4025   000F92  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  4026   000F94  0E01               	movlw	1
  4027   000F96  6F9C               	movwf	efgtoa@n& (0+255),b
  4028   000F98                     l3106:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4032   000F98  0E00               	movlw	low _dbuf
  4033   000F9A  259C               	addwf	efgtoa@n& (0+255),w,b
  4034   000F9C  6E01               	movwf	strcpy@dest^0,c
  4035   000F9E  0E01               	movlw	high _dbuf
  4036   000FA0  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4037   000FA2  6E02               	movwf	(strcpy@dest+1)^0,c
  4038   000FA4  0E26               	movlw	low STR_5
  4039   000FA6  6E03               	movwf	strcpy@src^0,c
  4040   000FA8  0E0E               	movlw	high STR_5
  4041   000FAA  6E04               	movwf	(strcpy@src+1)^0,c
  4042   000FAC  ECBF  F01D         	call	_strcpy	;wreg free
  4043   000FB0  EF92  F007         	goto	l3090
  4044   000FB4                     l3114:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4047   000FB4  0E00               	movlw	0
  4048   000FB6  0100               	movlb	0	; () banked
  4049   000FB8  6FA2               	movwf	efgtoa@u& (0+255),b
  4050   000FBA  0E00               	movlw	0
  4051   000FBC  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  4052   000FBE  0E80               	movlw	128
  4053   000FC0  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  4054   000FC2  0E3F               	movlw	63
  4055   000FC4  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4058   000FC6  0E00               	movlw	0
  4059   000FC8  6F8A               	movwf	(efgtoa@e+1)& (0+255),b
  4060   000FCA  0E00               	movlw	0
  4061   000FCC  6F89               	movwf	efgtoa@e& (0+255),b
  4062   000FCE                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4065   000FCE  C09E  F001         	movff	efgtoa@g,___fleq@ff1
  4066   000FD2  C09F  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4067   000FD6  C0A0  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4068   000FDA  C0A1  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4069   000FDE  0E00               	movlw	0
  4070   000FE0  6E05               	movwf	___fleq@ff2^0,c
  4071   000FE2  0E00               	movlw	0
  4072   000FE4  6E06               	movwf	(___fleq@ff2+1)^0,c
  4073   000FE6  0E00               	movlw	0
  4074   000FE8  6E07               	movwf	(___fleq@ff2+2)^0,c
  4075   000FEA  0E00               	movlw	0
  4076   000FEC  6E08               	movwf	(___fleq@ff2+3)^0,c
  4077   000FEE  EC3E  F01B         	call	___fleq	;wreg free
  4078   000FF2  B0D8               	btfsc	status,0,c
  4079   000FF4  EFFE  F007         	goto	u3191
  4080   000FF8  EF00  F008         	goto	u3190
  4081   000FFC                     u3191:
  4082   000FFC  EFDF  F008         	goto	l928
  4083   001000                     u3190:
  4084   001000  EF0D  F008         	goto	l3122
  4085   001004                     l930:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4088   001004  C08D  F0A2         	movff	efgtoa@ou,efgtoa@u
  4089   001008  C08E  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  4090   00100C  C08F  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  4091   001010  C090  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  4092   001014                     
  4093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4094   001014  0100               	movlb	0	; () banked
  4095   001016  4B89               	infsnz	efgtoa@e& (0+255),f,b
  4096   001018  2B8A               	incf	(efgtoa@e+1)& (0+255),f,b
  4097   00101A                     l3122:
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4100   00101A  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  4101   00101E  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  4102   001022  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  4103   001026  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  4104   00102A  0E00               	movlw	0
  4105   00102C  6E4F               	movwf	___flmul@a^0,c
  4106   00102E  0E00               	movlw	0
  4107   001030  6E50               	movwf	(___flmul@a+1)^0,c
  4108   001032  0E20               	movlw	32
  4109   001034  6E51               	movwf	(___flmul@a+2)^0,c
  4110   001036  0E41               	movlw	65
  4111   001038  6E52               	movwf	(___flmul@a+3)^0,c
  4112   00103A  EC09  F012         	call	___flmul	;wreg free
  4113   00103E  C04B  F08D         	movff	?___flmul,efgtoa@ou
  4114   001042  C04C  F08E         	movff	?___flmul+1,efgtoa@ou+1
  4115   001046  C04D  F08F         	movff	?___flmul+2,efgtoa@ou+2
  4116   00104A  C04E  F090         	movff	?___flmul+3,efgtoa@ou+3
  4117   00104E  0100               	movlb	0	; () banked
  4118   001050  518D               	movf	efgtoa@ou& (0+255),w,b
  4119   001052  5D9E               	subwf	efgtoa@g& (0+255),w,b
  4120   001054  6E01               	movwf	labs@a^0,c
  4121   001056  518E               	movf	(efgtoa@ou+1)& (0+255),w,b
  4122   001058  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4123   00105A  6E02               	movwf	(labs@a+1)^0,c
  4124   00105C  518F               	movf	(efgtoa@ou+2)& (0+255),w,b
  4125   00105E  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4126   001060  6E03               	movwf	(labs@a+2)^0,c
  4127   001062  5190               	movf	(efgtoa@ou+3)& (0+255),w,b
  4128   001064  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4129   001066  6E04               	movwf	(labs@a+3)^0,c
  4130   001068  EC4D  F01C         	call	_labs	;wreg free
  4131   00106C  BE04               	btfsc	(?_labs+3)^0,7,c
  4132   00106E  EF44  F008         	goto	u3201
  4133   001072  5004               	movf	(?_labs+3)^0,w,c
  4134   001074  1003               	iorwf	(?_labs+2)^0,w,c
  4135   001076  1002               	iorwf	(?_labs+1)^0,w,c
  4136   001078  E109               	bnz	u3200
  4137   00107A  0E02               	movlw	2
  4138   00107C  5C01               	subwf	?_labs^0,w,c
  4139   00107E  A0D8               	btfss	status,0,c
  4140   001080  EF44  F008         	goto	u3201
  4141   001084  EF46  F008         	goto	u3200
  4142   001088                     u3201:
  4143   001088  EF02  F008         	goto	l930
  4144   00108C                     u3200:
  4145   00108C  C08D  F057         	movff	efgtoa@ou,___flge@ff1
  4146   001090  C08E  F058         	movff	efgtoa@ou+1,___flge@ff1+1
  4147   001094  C08F  F059         	movff	efgtoa@ou+2,___flge@ff1+2
  4148   001098  C090  F05A         	movff	efgtoa@ou+3,___flge@ff1+3
  4149   00109C  C09E  F05B         	movff	efgtoa@g,___flge@ff2
  4150   0010A0  C09F  F05C         	movff	efgtoa@g+1,___flge@ff2+1
  4151   0010A4  C0A0  F05D         	movff	efgtoa@g+2,___flge@ff2+2
  4152   0010A8  C0A1  F05E         	movff	efgtoa@g+3,___flge@ff2+3
  4153   0010AC  EC6A  F019         	call	___flge	;wreg free
  4154   0010B0  A0D8               	btfss	status,0,c
  4155   0010B2  EF5D  F008         	goto	u3211
  4156   0010B6  EF5F  F008         	goto	u3210
  4157   0010BA                     u3211:
  4158   0010BA  EF02  F008         	goto	l930
  4159   0010BE                     u3210:
  4160   0010BE                     
  4161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4162   0010BE  0100               	movlb	0	; () banked
  4163   0010C0  51A2               	movf	efgtoa@u& (0+255),w,b
  4164   0010C2  5D9E               	subwf	efgtoa@g& (0+255),w,b
  4165   0010C4  6E01               	movwf	labs@a^0,c
  4166   0010C6  51A3               	movf	(efgtoa@u+1)& (0+255),w,b
  4167   0010C8  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4168   0010CA  6E02               	movwf	(labs@a+1)^0,c
  4169   0010CC  51A4               	movf	(efgtoa@u+2)& (0+255),w,b
  4170   0010CE  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4171   0010D0  6E03               	movwf	(labs@a+2)^0,c
  4172   0010D2  51A5               	movf	(efgtoa@u+3)& (0+255),w,b
  4173   0010D4  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4174   0010D6  6E04               	movwf	(labs@a+3)^0,c
  4175   0010D8  EC4D  F01C         	call	_labs	;wreg free
  4176   0010DC  BE04               	btfsc	(?_labs+3)^0,7,c
  4177   0010DE  EF7E  F008         	goto	u3220
  4178   0010E2  5004               	movf	(?_labs+3)^0,w,c
  4179   0010E4  1003               	iorwf	(?_labs+2)^0,w,c
  4180   0010E6  1002               	iorwf	(?_labs+1)^0,w,c
  4181   0010E8  E107               	bnz	u3221
  4182   0010EA  0E02               	movlw	2
  4183   0010EC  5C01               	subwf	?_labs^0,w,c
  4184   0010EE  B0D8               	btfsc	status,0,c
  4185   0010F0  EF7C  F008         	goto	u3221
  4186   0010F4  EF7E  F008         	goto	u3220
  4187   0010F8                     u3221:
  4188   0010F8  EFC6  F008         	goto	l3140
  4189   0010FC                     u3220:
  4190   0010FC                     l3130:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4193   0010FC  C0A2  F09E         	movff	efgtoa@u,efgtoa@g
  4194   001100  C0A3  F09F         	movff	efgtoa@u+1,efgtoa@g+1
  4195   001104  C0A4  F0A0         	movff	efgtoa@u+2,efgtoa@g+2
  4196   001108  C0A5  F0A1         	movff	efgtoa@u+3,efgtoa@g+3
  4197                           
  4198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4199   00110C  EFDF  F008         	goto	l928
  4200   001110                     l3132:
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4203   001110  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  4204   001114  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4205   001118  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4206   00111C  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4207   001120  0E00               	movlw	0
  4208   001122  6E36               	movwf	___fldiv@a^0,c
  4209   001124  0E00               	movlw	0
  4210   001126  6E37               	movwf	(___fldiv@a+1)^0,c
  4211   001128  0E20               	movlw	32
  4212   00112A  6E38               	movwf	(___fldiv@a+2)^0,c
  4213   00112C  0E41               	movlw	65
  4214   00112E  6E39               	movwf	(___fldiv@a+3)^0,c
  4215   001130  EC1F  F014         	call	___fldiv	;wreg free
  4216   001134  C032  F0A2         	movff	?___fldiv,efgtoa@u
  4217   001138  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  4218   00113C  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  4219   001140  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  4220   001144                     
  4221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4222   001144  0100               	movlb	0	; () banked
  4223   001146  0789               	decf	efgtoa@e& (0+255),f,b
  4224   001148  A0D8               	btfss	status,0,c
  4225   00114A  078A               	decf	(efgtoa@e+1)& (0+255),f,b
  4226   00114C                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4229   00114C  51A2               	movf	efgtoa@u& (0+255),w,b
  4230   00114E  5D9E               	subwf	efgtoa@g& (0+255),w,b
  4231   001150  6E01               	movwf	labs@a^0,c
  4232   001152  51A3               	movf	(efgtoa@u+1)& (0+255),w,b
  4233   001154  599F               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4234   001156  6E02               	movwf	(labs@a+1)^0,c
  4235   001158  51A4               	movf	(efgtoa@u+2)& (0+255),w,b
  4236   00115A  59A0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4237   00115C  6E03               	movwf	(labs@a+2)^0,c
  4238   00115E  51A5               	movf	(efgtoa@u+3)& (0+255),w,b
  4239   001160  59A1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4240   001162  6E04               	movwf	(labs@a+3)^0,c
  4241   001164  EC4D  F01C         	call	_labs	;wreg free
  4242   001168  BE04               	btfsc	(?_labs+3)^0,7,c
  4243   00116A  EFC4  F008         	goto	u3230
  4244   00116E  5004               	movf	(?_labs+3)^0,w,c
  4245   001170  1003               	iorwf	(?_labs+2)^0,w,c
  4246   001172  1002               	iorwf	(?_labs+1)^0,w,c
  4247   001174  E107               	bnz	u3231
  4248   001176  0E02               	movlw	2
  4249   001178  5C01               	subwf	?_labs^0,w,c
  4250   00117A  B0D8               	btfsc	status,0,c
  4251   00117C  EFC2  F008         	goto	u3231
  4252   001180  EFC4  F008         	goto	u3230
  4253   001184                     u3231:
  4254   001184  EFC6  F008         	goto	l3140
  4255   001188                     u3230:
  4256   001188  EF7E  F008         	goto	l3130
  4257   00118C                     l3140:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4260   00118C  C09E  F057         	movff	efgtoa@g,___flge@ff1
  4261   001190  C09F  F058         	movff	efgtoa@g+1,___flge@ff1+1
  4262   001194  C0A0  F059         	movff	efgtoa@g+2,___flge@ff1+2
  4263   001198  C0A1  F05A         	movff	efgtoa@g+3,___flge@ff1+3
  4264   00119C  C0A2  F05B         	movff	efgtoa@u,___flge@ff2
  4265   0011A0  C0A3  F05C         	movff	efgtoa@u+1,___flge@ff2+1
  4266   0011A4  C0A4  F05D         	movff	efgtoa@u+2,___flge@ff2+2
  4267   0011A8  C0A5  F05E         	movff	efgtoa@u+3,___flge@ff2+3
  4268   0011AC  EC6A  F019         	call	___flge	;wreg free
  4269   0011B0  A0D8               	btfss	status,0,c
  4270   0011B2  EFDD  F008         	goto	u3241
  4271   0011B6  EFDF  F008         	goto	u3240
  4272   0011BA                     u3241:
  4273   0011BA  EF88  F008         	goto	l3132
  4274   0011BE                     u3240:
  4275   0011BE                     l928:
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4278   0011BE  C077  F083         	movff	efgtoa@c,efgtoa@mode
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4281   0011C2  C083  F084         	movff	efgtoa@mode,efgtoa@nmode
  4282   0011C6                     
  4283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4284   0011C6  0100               	movlb	0	; () banked
  4285   0011C8  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  4286   0011CA  EFE9  F008         	goto	u3251
  4287   0011CE  EFEB  F008         	goto	u3250
  4288   0011D2                     u3251:
  4289   0011D2  EFF1  F008         	goto	l3146
  4290   0011D6                     u3250:
  4291   0011D6                     
  4292                           ; BSR set to: 0
  4293   0011D6  C0F2  F07C         	movff	_prec,efgtoa@p
  4294   0011DA  C0F3  F07D         	movff	_prec+1,efgtoa@p+1
  4295   0011DE  EFF5  F008         	goto	l3148
  4296   0011E2                     l3146:
  4297                           
  4298                           ; BSR set to: 0
  4299   0011E2  0E00               	movlw	0
  4300   0011E4  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4301   0011E6  0E06               	movlw	6
  4302   0011E8  6F7C               	movwf	efgtoa@p& (0+255),b
  4303   0011EA                     l3148:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4307   0011EA  C07C  F087         	movff	efgtoa@p,efgtoa@m
  4308   0011EE  C07D  F088         	movff	efgtoa@p+1,efgtoa@m+1
  4309   0011F2                     
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4312   0011F2  4B87               	infsnz	efgtoa@m& (0+255),f,b
  4313   0011F4  2B88               	incf	(efgtoa@m+1)& (0+255),f,b
  4314   0011F6                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4317   0011F6  0E66               	movlw	102
  4318   0011F8  1984               	xorwf	efgtoa@nmode& (0+255),w,b
  4319   0011FA  A4D8               	btfss	status,2,c
  4320   0011FC  EF02  F009         	goto	u3261
  4321   001200  EF04  F009         	goto	u3260
  4322   001204                     u3261:
  4323   001204  EF24  F009         	goto	l3162
  4324   001208                     u3260:
  4325   001208                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4328   001208  BF8A               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4329   00120A  EF0B  F009         	goto	u3270
  4330   00120E  EF09  F009         	goto	u3271
  4331   001212                     u3271:
  4332   001212  EF17  F009         	goto	l3158
  4333   001216                     u3270:
  4334   001216                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4337   001216  0E00               	movlw	0
  4338   001218  6FA2               	movwf	efgtoa@u& (0+255),b
  4339   00121A  0E00               	movlw	0
  4340   00121C  6FA3               	movwf	(efgtoa@u+1)& (0+255),b
  4341   00121E  0E80               	movlw	128
  4342   001220  6FA4               	movwf	(efgtoa@u+2)& (0+255),b
  4343   001222  0E3F               	movlw	63
  4344   001224  6FA5               	movwf	(efgtoa@u+3)& (0+255),b
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4347   001226  0E00               	movlw	0
  4348   001228  6F8A               	movwf	(efgtoa@e+1)& (0+255),b
  4349   00122A  0E00               	movlw	0
  4350   00122C  6F89               	movwf	efgtoa@e& (0+255),b
  4351   00122E                     l3158:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4355   00122E  0E67               	movlw	103
  4356   001230  1983               	xorwf	efgtoa@mode& (0+255),w,b
  4357   001232  B4D8               	btfsc	status,2,c
  4358   001234  EF1E  F009         	goto	u3281
  4359   001238  EF20  F009         	goto	u3280
  4360   00123C                     u3281:
  4361   00123C  EF24  F009         	goto	l3162
  4362   001240                     u3280:
  4363   001240                     
  4364                           ; BSR set to: 0
  4365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4366   001240  5189               	movf	efgtoa@e& (0+255),w,b
  4367   001242  2787               	addwf	efgtoa@m& (0+255),f,b
  4368   001244  518A               	movf	(efgtoa@e+1)& (0+255),w,b
  4369   001246  2388               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4370   001248                     l3162:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4374   001248  0E00               	movlw	0
  4375   00124A  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  4376   00124C  0E00               	movlw	0
  4377   00124E  6F91               	movwf	efgtoa@i& (0+255),b
  4378   001250                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4381   001250  C09E  F093         	movff	efgtoa@g,efgtoa@h
  4382   001254  C09F  F094         	movff	efgtoa@g+1,efgtoa@h+1
  4383   001258  C0A0  F095         	movff	efgtoa@g+2,efgtoa@h+2
  4384   00125C  C0A1  F096         	movff	efgtoa@g+3,efgtoa@h+3
  4385   001260                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4388   001260  C0A2  F08D         	movff	efgtoa@u,efgtoa@ou
  4389   001264  C0A3  F08E         	movff	efgtoa@u+1,efgtoa@ou+1
  4390   001268  C0A4  F08F         	movff	efgtoa@u+2,efgtoa@ou+2
  4391   00126C  C0A5  F090         	movff	efgtoa@u+3,efgtoa@ou+3
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4394   001270  EFB5  F009         	goto	l3176
  4395   001274                     l3168:
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4399   001274  C093  F032         	movff	efgtoa@h,___fldiv@b
  4400   001278  C094  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4401   00127C  C095  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4402   001280  C096  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4403   001284  C0A2  F036         	movff	efgtoa@u,___fldiv@a
  4404   001288  C0A3  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4405   00128C  C0A4  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4406   001290  C0A5  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4407   001294  EC1F  F014         	call	___fldiv	;wreg free
  4408   001298  C032  F04B         	movff	?___fldiv,floorf@x
  4409   00129C  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4410   0012A0  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4411   0012A4  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4412   0012A8  EC04  F017         	call	_floorf	;wreg free
  4413   0012AC  C04B  F097         	movff	?_floorf,efgtoa@l
  4414   0012B0  C04C  F098         	movff	?_floorf+1,efgtoa@l+1
  4415   0012B4  C04D  F099         	movff	?_floorf+2,efgtoa@l+2
  4416   0012B8  C04E  F09A         	movff	?_floorf+3,efgtoa@l+3
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4419   0012BC  C097  F001         	movff	efgtoa@l,___fltol@f1
  4420   0012C0  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4421   0012C4  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4422   0012C8  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4423   0012CC  ECE7  F018         	call	___fltol	;wreg free
  4424   0012D0  C001  F085         	movff	?___fltol,efgtoa@d
  4425   0012D4  C002  F086         	movff	?___fltol+1,efgtoa@d+1
  4426   0012D8                     
  4427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4428   0012D8  C093  F02A         	movff	efgtoa@h,___flsub@b
  4429   0012DC  C094  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4430   0012E0  C095  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4431   0012E4  C096  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4432   0012E8  C097  F04F         	movff	efgtoa@l,___flmul@a
  4433   0012EC  C098  F050         	movff	efgtoa@l+1,___flmul@a+1
  4434   0012F0  C099  F051         	movff	efgtoa@l+2,___flmul@a+2
  4435   0012F4  C09A  F052         	movff	efgtoa@l+3,___flmul@a+3
  4436   0012F8  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  4437   0012FC  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  4438   001300  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  4439   001304  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  4440   001308  EC09  F012         	call	___flmul	;wreg free
  4441   00130C  C04B  F02E         	movff	?___flmul,___flsub@a
  4442   001310  C04C  F02F         	movff	?___flmul+1,___flsub@a+1
  4443   001314  C04D  F030         	movff	?___flmul+2,___flsub@a+2
  4444   001318  C04E  F031         	movff	?___flmul+3,___flsub@a+3
  4445   00131C  EC9C  F01D         	call	___flsub	;wreg free
  4446   001320  C02A  F093         	movff	?___flsub,efgtoa@h
  4447   001324  C02B  F094         	movff	?___flsub+1,efgtoa@h+1
  4448   001328  C02C  F095         	movff	?___flsub+2,efgtoa@h+2
  4449   00132C  C02D  F096         	movff	?___flsub+3,efgtoa@h+3
  4450   001330                     
  4451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4452   001330  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  4453   001334  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4454   001338  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4455   00133C  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4456   001340  0E00               	movlw	0
  4457   001342  6E36               	movwf	___fldiv@a^0,c
  4458   001344  0E00               	movlw	0
  4459   001346  6E37               	movwf	(___fldiv@a+1)^0,c
  4460   001348  0E20               	movlw	32
  4461   00134A  6E38               	movwf	(___fldiv@a+2)^0,c
  4462   00134C  0E41               	movlw	65
  4463   00134E  6E39               	movwf	(___fldiv@a+3)^0,c
  4464   001350  EC1F  F014         	call	___fldiv	;wreg free
  4465   001354  C032  F0A2         	movff	?___fldiv,efgtoa@u
  4466   001358  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  4467   00135C  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  4468   001360  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  4469   001364                     
  4470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4471   001364  0100               	movlb	0	; () banked
  4472   001366  4B91               	infsnz	efgtoa@i& (0+255),f,b
  4473   001368  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  4474   00136A                     l3176:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4478   00136A  5187               	movf	efgtoa@m& (0+255),w,b
  4479   00136C  5D91               	subwf	efgtoa@i& (0+255),w,b
  4480   00136E  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  4481   001370  0A80               	xorlw	128
  4482   001372  6F78               	movwf	??_efgtoa& (0+255),b
  4483   001374  5188               	movf	(efgtoa@m+1)& (0+255),w,b
  4484   001376  0A80               	xorlw	128
  4485   001378  5978               	subwfb	??_efgtoa& (0+255),w,b
  4486   00137A  A0D8               	btfss	status,0,c
  4487   00137C  EFC2  F009         	goto	u3291
  4488   001380  EFC4  F009         	goto	u3290
  4489   001384                     u3291:
  4490   001384  EF3A  F009         	goto	l3168
  4491   001388                     u3290:
  4492   001388                     
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4495   001388  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  4496   00138C  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  4497   001390  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  4498   001394  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  4499   001398  0E00               	movlw	0
  4500   00139A  6E4F               	movwf	___flmul@a^0,c
  4501   00139C  0E00               	movlw	0
  4502   00139E  6E50               	movwf	(___flmul@a+1)^0,c
  4503   0013A0  0EA0               	movlw	160
  4504   0013A2  6E51               	movwf	(___flmul@a+2)^0,c
  4505   0013A4  0E40               	movlw	64
  4506   0013A6  6E52               	movwf	(___flmul@a+3)^0,c
  4507   0013A8  EC09  F012         	call	___flmul	;wreg free
  4508   0013AC  C04B  F097         	movff	?___flmul,efgtoa@l
  4509   0013B0  C04C  F098         	movff	?___flmul+1,efgtoa@l+1
  4510   0013B4  C04D  F099         	movff	?___flmul+2,efgtoa@l+2
  4511   0013B8  C04E  F09A         	movff	?___flmul+3,efgtoa@l+3
  4512   0013BC                     
  4513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4514   0013BC  C093  F057         	movff	efgtoa@h,___flge@ff1
  4515   0013C0  C094  F058         	movff	efgtoa@h+1,___flge@ff1+1
  4516   0013C4  C095  F059         	movff	efgtoa@h+2,___flge@ff1+2
  4517   0013C8  C096  F05A         	movff	efgtoa@h+3,___flge@ff1+3
  4518   0013CC  C097  F05B         	movff	efgtoa@l,___flge@ff2
  4519   0013D0  C098  F05C         	movff	efgtoa@l+1,___flge@ff2+1
  4520   0013D4  C099  F05D         	movff	efgtoa@l+2,___flge@ff2+2
  4521   0013D8  C09A  F05E         	movff	efgtoa@l+3,___flge@ff2+3
  4522   0013DC  EC6A  F019         	call	___flge	;wreg free
  4523   0013E0  B0D8               	btfsc	status,0,c
  4524   0013E2  EFF5  F009         	goto	u3301
  4525   0013E6  EFF7  F009         	goto	u3300
  4526   0013EA                     u3301:
  4527   0013EA  EF02  F00A         	goto	l3184
  4528   0013EE                     u3300:
  4529   0013EE                     
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4531   0013EE  0E00               	movlw	0
  4532   0013F0  0100               	movlb	0	; () banked
  4533   0013F2  6F97               	movwf	efgtoa@l& (0+255),b
  4534   0013F4  0E00               	movlw	0
  4535   0013F6  6F98               	movwf	(efgtoa@l+1)& (0+255),b
  4536   0013F8  0E00               	movlw	0
  4537   0013FA  6F99               	movwf	(efgtoa@l+2)& (0+255),b
  4538   0013FC  0E00               	movlw	0
  4539   0013FE  6F9A               	movwf	(efgtoa@l+3)& (0+255),b
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4542   001400  EF2B  F00A         	goto	l3190
  4543   001404                     l3184:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4546   001404  C093  F001         	movff	efgtoa@h,___fleq@ff1
  4547   001408  C094  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4548   00140C  C095  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4549   001410  C096  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4550   001414  C097  F005         	movff	efgtoa@l,___fleq@ff2
  4551   001418  C098  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4552   00141C  C099  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4553   001420  C09A  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4554   001424  EC3E  F01B         	call	___fleq	;wreg free
  4555   001428  A0D8               	btfss	status,0,c
  4556   00142A  EF19  F00A         	goto	u3311
  4557   00142E  EF1B  F00A         	goto	u3310
  4558   001432                     u3311:
  4559   001432  EF2B  F00A         	goto	l3190
  4560   001436                     u3310:
  4561   001436  0100               	movlb	0	; () banked
  4562   001438  B185               	btfsc	efgtoa@d& (0+255),0,b
  4563   00143A  EF21  F00A         	goto	u3321
  4564   00143E  EF23  F00A         	goto	u3320
  4565   001442                     u3321:
  4566   001442  EF2B  F00A         	goto	l3190
  4567   001446                     u3320:
  4568   001446                     
  4569                           ; BSR set to: 0
  4570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4571   001446  0E00               	movlw	0
  4572   001448  6F97               	movwf	efgtoa@l& (0+255),b
  4573   00144A  0E00               	movlw	0
  4574   00144C  6F98               	movwf	(efgtoa@l+1)& (0+255),b
  4575   00144E  0E00               	movlw	0
  4576   001450  6F99               	movwf	(efgtoa@l+2)& (0+255),b
  4577   001452  0E00               	movlw	0
  4578   001454  6F9A               	movwf	(efgtoa@l+3)& (0+255),b
  4579   001456                     l3190:
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4582   001456  C09E  F01A         	movff	efgtoa@g,___fladd@b
  4583   00145A  C09F  F01B         	movff	efgtoa@g+1,___fladd@b+1
  4584   00145E  C0A0  F01C         	movff	efgtoa@g+2,___fladd@b+2
  4585   001462  C0A1  F01D         	movff	efgtoa@g+3,___fladd@b+3
  4586   001466  C097  F01E         	movff	efgtoa@l,___fladd@a
  4587   00146A  C098  F01F         	movff	efgtoa@l+1,___fladd@a+1
  4588   00146E  C099  F020         	movff	efgtoa@l+2,___fladd@a+2
  4589   001472  C09A  F021         	movff	efgtoa@l+3,___fladd@a+3
  4590   001476  ECA9  F00F         	call	___fladd	;wreg free
  4591   00147A  C01A  F093         	movff	?___fladd,efgtoa@h
  4592   00147E  C01B  F094         	movff	?___fladd+1,efgtoa@h+1
  4593   001482  C01C  F095         	movff	?___fladd+2,efgtoa@h+2
  4594   001486  C01D  F096         	movff	?___fladd+3,efgtoa@h+3
  4595   00148A                     
  4596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4597   00148A  C093  F057         	movff	efgtoa@h,___flge@ff1
  4598   00148E  C094  F058         	movff	efgtoa@h+1,___flge@ff1+1
  4599   001492  C095  F059         	movff	efgtoa@h+2,___flge@ff1+2
  4600   001496  C096  F05A         	movff	efgtoa@h+3,___flge@ff1+3
  4601   00149A  0E00               	movlw	0
  4602   00149C  6E4F               	movwf	___flmul@a^0,c
  4603   00149E  0E00               	movlw	0
  4604   0014A0  6E50               	movwf	(___flmul@a+1)^0,c
  4605   0014A2  0E20               	movlw	32
  4606   0014A4  6E51               	movwf	(___flmul@a+2)^0,c
  4607   0014A6  0E41               	movlw	65
  4608   0014A8  6E52               	movwf	(___flmul@a+3)^0,c
  4609   0014AA  C08D  F04B         	movff	efgtoa@ou,___flmul@b
  4610   0014AE  C08E  F04C         	movff	efgtoa@ou+1,___flmul@b+1
  4611   0014B2  C08F  F04D         	movff	efgtoa@ou+2,___flmul@b+2
  4612   0014B6  C090  F04E         	movff	efgtoa@ou+3,___flmul@b+3
  4613   0014BA  EC09  F012         	call	___flmul	;wreg free
  4614   0014BE  C04B  F05B         	movff	?___flmul,___flge@ff2
  4615   0014C2  C04C  F05C         	movff	?___flmul+1,___flge@ff2+1
  4616   0014C6  C04D  F05D         	movff	?___flmul+2,___flge@ff2+2
  4617   0014CA  C04E  F05E         	movff	?___flmul+3,___flge@ff2+3
  4618   0014CE  EC6A  F019         	call	___flge	;wreg free
  4619   0014D2  A0D8               	btfss	status,0,c
  4620   0014D4  EF6E  F00A         	goto	u3331
  4621   0014D8  EF70  F00A         	goto	u3330
  4622   0014DC                     u3331:
  4623   0014DC  EF99  F00A         	goto	l3202
  4624   0014E0                     u3330:
  4625   0014E0                     
  4626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4627   0014E0  0100               	movlb	0	; () banked
  4628   0014E2  4B89               	infsnz	efgtoa@e& (0+255),f,b
  4629   0014E4  2B8A               	incf	(efgtoa@e+1)& (0+255),f,b
  4630   0014E6                     
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4633   0014E6  C08D  F04B         	movff	efgtoa@ou,___flmul@b
  4634   0014EA  C08E  F04C         	movff	efgtoa@ou+1,___flmul@b+1
  4635   0014EE  C08F  F04D         	movff	efgtoa@ou+2,___flmul@b+2
  4636   0014F2  C090  F04E         	movff	efgtoa@ou+3,___flmul@b+3
  4637   0014F6  0E00               	movlw	0
  4638   0014F8  6E4F               	movwf	___flmul@a^0,c
  4639   0014FA  0E00               	movlw	0
  4640   0014FC  6E50               	movwf	(___flmul@a+1)^0,c
  4641   0014FE  0E20               	movlw	32
  4642   001500  6E51               	movwf	(___flmul@a+2)^0,c
  4643   001502  0E41               	movlw	65
  4644   001504  6E52               	movwf	(___flmul@a+3)^0,c
  4645   001506  EC09  F012         	call	___flmul	;wreg free
  4646   00150A  C04B  F08D         	movff	?___flmul,efgtoa@ou
  4647   00150E  C04C  F08E         	movff	?___flmul+1,efgtoa@ou+1
  4648   001512  C04D  F08F         	movff	?___flmul+2,efgtoa@ou+2
  4649   001516  C04E  F090         	movff	?___flmul+3,efgtoa@ou+3
  4650   00151A                     
  4651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4652   00151A  0E66               	movlw	102
  4653   00151C  0100               	movlb	0	; () banked
  4654   00151E  1984               	xorwf	efgtoa@nmode& (0+255),w,b
  4655   001520  A4D8               	btfss	status,2,c
  4656   001522  EF95  F00A         	goto	u3341
  4657   001526  EF97  F00A         	goto	u3340
  4658   00152A                     u3341:
  4659   00152A  EF99  F00A         	goto	l3202
  4660   00152E                     u3340:
  4661   00152E                     
  4662                           ; BSR set to: 0
  4663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4664   00152E  4B87               	infsnz	efgtoa@m& (0+255),f,b
  4665   001530  2B88               	incf	(efgtoa@m+1)& (0+255),f,b
  4666   001532                     l3202:
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4669   001532  C08D  F0A2         	movff	efgtoa@ou,efgtoa@u
  4670   001536  C08E  F0A3         	movff	efgtoa@ou+1,efgtoa@u+1
  4671   00153A  C08F  F0A4         	movff	efgtoa@ou+2,efgtoa@u+2
  4672   00153E  C090  F0A5         	movff	efgtoa@ou+3,efgtoa@u+3
  4673   001542                     
  4674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4675   001542  C089  F07A         	movff	efgtoa@e,efgtoa@ne
  4676   001546  C08A  F07B         	movff	efgtoa@e+1,efgtoa@ne+1
  4677   00154A                     
  4678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4679   00154A  0E00               	movlw	0
  4680   00154C  0100               	movlb	0	; () banked
  4681   00154E  6F82               	movwf	efgtoa@pp& (0+255),b
  4682   001550                     
  4683                           ; BSR set to: 0
  4684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4685   001550  0E00               	movlw	0
  4686   001552  6F7F               	movwf	(efgtoa@t+1)& (0+255),b
  4687   001554  0E00               	movlw	0
  4688   001556  6F7E               	movwf	efgtoa@t& (0+255),b
  4689   001558                     
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4692   001558  0E00               	movlw	0
  4693   00155A  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  4694   00155C  0E00               	movlw	0
  4695   00155E  6F91               	movwf	efgtoa@i& (0+255),b
  4696                           
  4697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4698   001560  EF97  F00B         	goto	l3252
  4699   001564                     l3212:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4703   001564  C093  F032         	movff	efgtoa@h,___fldiv@b
  4704   001568  C094  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4705   00156C  C095  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4706   001570  C096  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4707   001574  C0A2  F036         	movff	efgtoa@u,___fldiv@a
  4708   001578  C0A3  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4709   00157C  C0A4  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4710   001580  C0A5  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4711   001584  EC1F  F014         	call	___fldiv	;wreg free
  4712   001588  C032  F04B         	movff	?___fldiv,floorf@x
  4713   00158C  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4714   001590  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4715   001594  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4716   001598  EC04  F017         	call	_floorf	;wreg free
  4717   00159C  C04B  F097         	movff	?_floorf,efgtoa@l
  4718   0015A0  C04C  F098         	movff	?_floorf+1,efgtoa@l+1
  4719   0015A4  C04D  F099         	movff	?_floorf+2,efgtoa@l+2
  4720   0015A8  C04E  F09A         	movff	?_floorf+3,efgtoa@l+3
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4723   0015AC  C097  F001         	movff	efgtoa@l,___fltol@f1
  4724   0015B0  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4725   0015B4  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4726   0015B8  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4727   0015BC  ECE7  F018         	call	___fltol	;wreg free
  4728   0015C0  BE02               	btfsc	(?___fltol+1)^0,7,c
  4729   0015C2  EFEE  F00A         	goto	u3350
  4730   0015C6  5002               	movf	(?___fltol+1)^0,w,c
  4731   0015C8  E107               	bnz	u3351
  4732   0015CA  0E0A               	movlw	10
  4733   0015CC  5C01               	subwf	?___fltol^0,w,c
  4734   0015CE  B0D8               	btfsc	status,0,c
  4735   0015D0  EFEC  F00A         	goto	u3351
  4736   0015D4  EFEE  F00A         	goto	u3350
  4737   0015D8                     u3351:
  4738   0015D8  EFFE  F00A         	goto	l3216
  4739   0015DC                     u3350:
  4740   0015DC  C097  F001         	movff	efgtoa@l,___fltol@f1
  4741   0015E0  C098  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4742   0015E4  C099  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4743   0015E8  C09A  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4744   0015EC  ECE7  F018         	call	___fltol	;wreg free
  4745   0015F0  C001  F085         	movff	?___fltol,efgtoa@d
  4746   0015F4  C002  F086         	movff	?___fltol+1,efgtoa@d+1
  4747   0015F8  EF03  F00B         	goto	l958
  4748   0015FC                     l3216:
  4749   0015FC  0E00               	movlw	0
  4750   0015FE  0100               	movlb	0	; () banked
  4751   001600  6F86               	movwf	(efgtoa@d+1)& (0+255),b
  4752   001602  0E09               	movlw	9
  4753   001604  6F85               	movwf	efgtoa@d& (0+255),b
  4754   001606                     l958:
  4755                           
  4756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4757   001606  0100               	movlb	0	; () banked
  4758   001608  5182               	movf	efgtoa@pp& (0+255),w,b
  4759   00160A  A4D8               	btfss	status,2,c
  4760   00160C  EF0A  F00B         	goto	u3361
  4761   001610  EF0C  F00B         	goto	u3360
  4762   001614                     u3361:
  4763   001614  EF34  F00B         	goto	l3236
  4764   001618                     u3360:
  4765   001618                     
  4766                           ; BSR set to: 0
  4767   001618  BF7B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4768   00161A  EF13  F00B         	goto	u3370
  4769   00161E  EF11  F00B         	goto	u3371
  4770   001622                     u3371:
  4771   001622  EF34  F00B         	goto	l3236
  4772   001626                     u3370:
  4773   001626                     
  4774                           ; BSR set to: 0
  4775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4776   001626  0E00               	movlw	low _dbuf
  4777   001628  259C               	addwf	efgtoa@n& (0+255),w,b
  4778   00162A  6ED9               	movwf	fsr2l,c
  4779   00162C  0E01               	movlw	high _dbuf
  4780   00162E  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4781   001630  6EDA               	movwf	fsr2h,c
  4782   001632  0E2E               	movlw	46
  4783   001634  6EDF               	movwf	indf2,c
  4784   001636                     
  4785                           ; BSR set to: 0
  4786   001636  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  4787   001638  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  4788   00163A                     
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4791   00163A  078B               	decf	efgtoa@w& (0+255),f,b
  4792   00163C  A0D8               	btfss	status,0,c
  4793   00163E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4794   001640                     
  4795                           ; BSR set to: 0
  4796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4797   001640  0E01               	movlw	1
  4798   001642  6F82               	movwf	efgtoa@pp& (0+255),b
  4799   001644  EF34  F00B         	goto	l3236
  4800   001648                     l3228:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4804   001648  0E00               	movlw	low _dbuf
  4805   00164A  259C               	addwf	efgtoa@n& (0+255),w,b
  4806   00164C  6ED9               	movwf	fsr2l,c
  4807   00164E  0E01               	movlw	high _dbuf
  4808   001650  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4809   001652  6EDA               	movwf	fsr2h,c
  4810   001654  0E30               	movlw	48
  4811   001656  6EDF               	movwf	indf2,c
  4812   001658                     
  4813                           ; BSR set to: 0
  4814   001658  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  4815   00165A  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  4816   00165C                     
  4817                           ; BSR set to: 0
  4818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4819   00165C  078B               	decf	efgtoa@w& (0+255),f,b
  4820   00165E  A0D8               	btfss	status,0,c
  4821   001660  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4822   001662                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4825   001662  077E               	decf	efgtoa@t& (0+255),f,b
  4826   001664  A0D8               	btfss	status,0,c
  4827   001666  077F               	decf	(efgtoa@t+1)& (0+255),f,b
  4828   001668                     l3236:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4832   001668  517E               	movf	efgtoa@t& (0+255),w,b
  4833   00166A  117F               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4834   00166C  A4D8               	btfss	status,2,c
  4835   00166E  EF3B  F00B         	goto	u3381
  4836   001672  EF3D  F00B         	goto	u3380
  4837   001676                     u3381:
  4838   001676  EF24  F00B         	goto	l3228
  4839   00167A                     u3380:
  4840   00167A                     
  4841                           ; BSR set to: 0
  4842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4843   00167A  0E00               	movlw	low _dbuf
  4844   00167C  259C               	addwf	efgtoa@n& (0+255),w,b
  4845   00167E  6ED9               	movwf	fsr2l,c
  4846   001680  0E01               	movlw	high _dbuf
  4847   001682  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4848   001684  6EDA               	movwf	fsr2h,c
  4849   001686  5185               	movf	efgtoa@d& (0+255),w,b
  4850   001688  0F30               	addlw	48
  4851   00168A  6EDF               	movwf	indf2,c
  4852   00168C                     
  4853                           ; BSR set to: 0
  4854   00168C  4B9C               	infsnz	efgtoa@n& (0+255),f,b
  4855   00168E  2B9D               	incf	(efgtoa@n+1)& (0+255),f,b
  4856   001690                     
  4857                           ; BSR set to: 0
  4858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4859   001690  078B               	decf	efgtoa@w& (0+255),f,b
  4860   001692  A0D8               	btfss	status,0,c
  4861   001694  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4862   001696                     
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4865   001696  C093  F02A         	movff	efgtoa@h,___flsub@b
  4866   00169A  C094  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4867   00169E  C095  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4868   0016A2  C096  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4869   0016A6  C097  F04F         	movff	efgtoa@l,___flmul@a
  4870   0016AA  C098  F050         	movff	efgtoa@l+1,___flmul@a+1
  4871   0016AE  C099  F051         	movff	efgtoa@l+2,___flmul@a+2
  4872   0016B2  C09A  F052         	movff	efgtoa@l+3,___flmul@a+3
  4873   0016B6  C0A2  F04B         	movff	efgtoa@u,___flmul@b
  4874   0016BA  C0A3  F04C         	movff	efgtoa@u+1,___flmul@b+1
  4875   0016BE  C0A4  F04D         	movff	efgtoa@u+2,___flmul@b+2
  4876   0016C2  C0A5  F04E         	movff	efgtoa@u+3,___flmul@b+3
  4877   0016C6  EC09  F012         	call	___flmul	;wreg free
  4878   0016CA  C04B  F02E         	movff	?___flmul,___flsub@a
  4879   0016CE  C04C  F02F         	movff	?___flmul+1,___flsub@a+1
  4880   0016D2  C04D  F030         	movff	?___flmul+2,___flsub@a+2
  4881   0016D6  C04E  F031         	movff	?___flmul+3,___flsub@a+3
  4882   0016DA  EC9C  F01D         	call	___flsub	;wreg free
  4883   0016DE  C02A  F093         	movff	?___flsub,efgtoa@h
  4884   0016E2  C02B  F094         	movff	?___flsub+1,efgtoa@h+1
  4885   0016E6  C02C  F095         	movff	?___flsub+2,efgtoa@h+2
  4886   0016EA  C02D  F096         	movff	?___flsub+3,efgtoa@h+3
  4887   0016EE                     
  4888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4889   0016EE  C0A2  F032         	movff	efgtoa@u,___fldiv@b
  4890   0016F2  C0A3  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4891   0016F6  C0A4  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4892   0016FA  C0A5  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4893   0016FE  0E00               	movlw	0
  4894   001700  6E36               	movwf	___fldiv@a^0,c
  4895   001702  0E00               	movlw	0
  4896   001704  6E37               	movwf	(___fldiv@a+1)^0,c
  4897   001706  0E20               	movlw	32
  4898   001708  6E38               	movwf	(___fldiv@a+2)^0,c
  4899   00170A  0E41               	movlw	65
  4900   00170C  6E39               	movwf	(___fldiv@a+3)^0,c
  4901   00170E  EC1F  F014         	call	___fldiv	;wreg free
  4902   001712  C032  F0A2         	movff	?___fldiv,efgtoa@u
  4903   001716  C033  F0A3         	movff	?___fldiv+1,efgtoa@u+1
  4904   00171A  C034  F0A4         	movff	?___fldiv+2,efgtoa@u+2
  4905   00171E  C035  F0A5         	movff	?___fldiv+3,efgtoa@u+3
  4906   001722                     
  4907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4908   001722  0100               	movlb	0	; () banked
  4909   001724  077A               	decf	efgtoa@ne& (0+255),f,b
  4910   001726  A0D8               	btfss	status,0,c
  4911   001728  077B               	decf	(efgtoa@ne+1)& (0+255),f,b
  4912   00172A                     
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4915   00172A  4B91               	infsnz	efgtoa@i& (0+255),f,b
  4916   00172C  2B92               	incf	(efgtoa@i+1)& (0+255),f,b
  4917   00172E                     l3252:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4921   00172E  5187               	movf	efgtoa@m& (0+255),w,b
  4922   001730  5D91               	subwf	efgtoa@i& (0+255),w,b
  4923   001732  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  4924   001734  0A80               	xorlw	128
  4925   001736  6F78               	movwf	??_efgtoa& (0+255),b
  4926   001738  5188               	movf	(efgtoa@m+1)& (0+255),w,b
  4927   00173A  0A80               	xorlw	128
  4928   00173C  5978               	subwfb	??_efgtoa& (0+255),w,b
  4929   00173E  B0D8               	btfsc	status,0,c
  4930   001740  EFA4  F00B         	goto	u3391
  4931   001744  EFA6  F00B         	goto	u3390
  4932   001748                     u3391:
  4933   001748  EFB4  F00B         	goto	l3256
  4934   00174C                     u3390:
  4935   00174C                     
  4936                           ; BSR set to: 0
  4937   00174C  BF9D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4938   00174E  EFB2  F00B         	goto	u3401
  4939   001752  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  4940   001754  E109               	bnz	u3400
  4941   001756  0E4B               	movlw	75
  4942   001758  5D9C               	subwf	efgtoa@n& (0+255),w,b
  4943   00175A  A0D8               	btfss	status,0,c
  4944   00175C  EFB2  F00B         	goto	u3401
  4945   001760  EFB4  F00B         	goto	u3400
  4946   001764                     u3401:
  4947   001764  EFB2  F00A         	goto	l3212
  4948   001768                     u3400:
  4949   001768                     l3256:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4953   001768  0E00               	movlw	0
  4954   00176A  6F92               	movwf	(efgtoa@i+1)& (0+255),b
  4955   00176C  0E4F               	movlw	79
  4956   00176E  6F91               	movwf	efgtoa@i& (0+255),b
  4957   001770                     
  4958                           ; BSR set to: 0
  4959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4960   001770  0E00               	movlw	low _dbuf
  4961   001772  2591               	addwf	efgtoa@i& (0+255),w,b
  4962   001774  6ED9               	movwf	fsr2l,c
  4963   001776  0E01               	movlw	high _dbuf
  4964   001778  2192               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4965   00177A  6EDA               	movwf	fsr2h,c
  4966   00177C  0E00               	movlw	0
  4967   00177E  6EDF               	movwf	indf2,c
  4968   001780                     
  4969                           ; BSR set to: 0
  4970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4971   001780  0E00               	movlw	low _dbuf
  4972   001782  6F78               	movwf	??_efgtoa& (0+255),b
  4973   001784  0E01               	movlw	high _dbuf
  4974   001786  6F79               	movwf	(??_efgtoa+1)& (0+255),b
  4975   001788  519C               	movf	efgtoa@n& (0+255),w,b
  4976   00178A  5F78               	subwf	??_efgtoa& (0+255),f,b
  4977   00178C  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  4978   00178E  5B79               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4979   001790  5191               	movf	efgtoa@i& (0+255),w,b
  4980   001792  2578               	addwf	??_efgtoa& (0+255),w,b
  4981   001794  6E01               	movwf	memcpy@d1^0,c
  4982   001796  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  4983   001798  2179               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4984   00179A  6E02               	movwf	(memcpy@d1+1)^0,c
  4985   00179C  0E00               	movlw	low _dbuf
  4986   00179E  6E03               	movwf	memcpy@s1^0,c
  4987   0017A0  0E01               	movlw	high _dbuf
  4988   0017A2  6E04               	movwf	(memcpy@s1+1)^0,c
  4989   0017A4  C09C  F005         	movff	efgtoa@n,memcpy@n
  4990   0017A8  C09D  F006         	movff	efgtoa@n+1,memcpy@n+1
  4991   0017AC  EC74  F01D         	call	_memcpy	;wreg free
  4992   0017B0                     
  4993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4994   0017B0  0100               	movlb	0	; () banked
  4995   0017B2  519C               	movf	efgtoa@n& (0+255),w,b
  4996   0017B4  5D91               	subwf	efgtoa@i& (0+255),w,b
  4997   0017B6  6F9C               	movwf	efgtoa@n& (0+255),b
  4998   0017B8  519D               	movf	(efgtoa@n+1)& (0+255),w,b
  4999   0017BA  5992               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5000   0017BC  6F9D               	movwf	(efgtoa@n+1)& (0+255),b
  5001   0017BE                     
  5002                           ; BSR set to: 0
  5003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  5004   0017BE  519B               	movf	efgtoa@sign& (0+255),w,b
  5005   0017C0  A4D8               	btfss	status,2,c
  5006   0017C2  EFE5  F00B         	goto	u3411
  5007   0017C6  EFE8  F00B         	goto	u3410
  5008   0017CA                     u3411:
  5009   0017CA  0E01               	movlw	1
  5010   0017CC  EFE9  F00B         	goto	u3420
  5011   0017D0                     u3410:
  5012   0017D0  0E00               	movlw	0
  5013   0017D2                     u3420:
  5014   0017D2  6F91               	movwf	efgtoa@i& (0+255),b
  5015   0017D4  6B92               	clrf	(efgtoa@i+1)& (0+255),b
  5016   0017D6                     
  5017                           ; BSR set to: 0
  5018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5019   0017D6  519B               	movf	efgtoa@sign& (0+255),w,b
  5020   0017D8  B4D8               	btfsc	status,2,c
  5021   0017DA  EFF1  F00B         	goto	u3431
  5022   0017DE  EFF3  F00B         	goto	u3430
  5023   0017E2                     u3431:
  5024   0017E2  EFFE  F00B         	goto	l3270
  5025   0017E6                     u3430:
  5026   0017E6                     
  5027                           ; BSR set to: 0
  5028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5029   0017E6  079C               	decf	efgtoa@n& (0+255),f,b
  5030   0017E8  A0D8               	btfss	status,0,c
  5031   0017EA  079D               	decf	(efgtoa@n+1)& (0+255),f,b
  5032   0017EC  0E00               	movlw	low _dbuf
  5033   0017EE  259C               	addwf	efgtoa@n& (0+255),w,b
  5034   0017F0  6ED9               	movwf	fsr2l,c
  5035   0017F2  0E01               	movlw	high _dbuf
  5036   0017F4  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5037   0017F6  6EDA               	movwf	fsr2h,c
  5038   0017F8  C09B  FFDF         	movff	efgtoa@sign,indf2
  5039   0017FC                     l3270:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5043   0017FC  5191               	movf	efgtoa@i& (0+255),w,b
  5044   0017FE  5F8B               	subwf	efgtoa@w& (0+255),f,b
  5045   001800  5192               	movf	(efgtoa@i+1)& (0+255),w,b
  5046   001802  5B8C               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5047   001804                     
  5048                           ; BSR set to: 0
  5049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5050   001804  C071  F011         	movff	efgtoa@fp,pad@fp
  5051   001808  C072  F012         	movff	efgtoa@fp+1,pad@fp+1
  5052   00180C  0E00               	movlw	low _dbuf
  5053   00180E  259C               	addwf	efgtoa@n& (0+255),w,b
  5054   001810  6E13               	movwf	pad@buf^0,c
  5055   001812  0E01               	movlw	high _dbuf
  5056   001814  219D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5057   001816  6E14               	movwf	(pad@buf+1)^0,c
  5058   001818  C08B  F015         	movff	efgtoa@w,pad@p
  5059   00181C  C08C  F016         	movff	efgtoa@w+1,pad@p+1
  5060   001820  ECDB  F01B         	call	_pad	;wreg free
  5061   001824                     l925:
  5062   001824  0012               	return		;funcret
  5063   001826                     __end_of_efgtoa:
  5064                           	callstack 0
  5065                           
  5066 ;; *************** function _strcpy *****************
  5067 ;; Defined at:
  5068 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5071 ;;		 -> dbuf(80), 
  5072 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5073 ;;		 -> STR_5(4), STR_2(4), 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  d               2    6[COMRAM] PTR unsigned char 
  5076 ;;		 -> dbuf(80), 
  5077 ;;  s               2    4[COMRAM] PTR const unsigned char 
  5078 ;;		 -> STR_5(4), STR_2(4), 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2    0[COMRAM] PTR unsigned char 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;Total ram usage:        8 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_efgtoa
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text23
  5102   003B7E                     __ptext23:
  5103                           	callstack 0
  5104   003B7E                     _strcpy:
  5105                           	callstack 25
  5106   003B7E  C003  F005         	movff	strcpy@src,strcpy@s
  5107   003B82  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  5108   003B86  C001  F007         	movff	strcpy@dest,strcpy@d
  5109   003B8A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  5110   003B8E                     l3008:
  5111   003B8E  C005  FFF6         	movff	strcpy@s,tblptrl
  5112   003B92  C006  FFF7         	movff	strcpy@s+1,tblptrh
  5113   003B96  4A05               	infsnz	strcpy@s^0,f,c
  5114   003B98  2A06               	incf	(strcpy@s+1)^0,f,c
  5115   003B9A                     	if	0	;tblptru may be non-zero
  5116   003B9A                     	endif
  5117   003B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5118   003B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  5119   003B9C  6EF8               	movwf	tblptru,c
  5120   003B9E                     	endif
  5121   003B9E  C007  FFD9         	movff	strcpy@d,fsr2l
  5122   003BA2  C008  FFDA         	movff	strcpy@d+1,fsr2h
  5123   003BA6  4A07               	infsnz	strcpy@d^0,f,c
  5124   003BA8  2A08               	incf	(strcpy@d+1)^0,f,c
  5125   003BAA  0008               	tblrd		*
  5126   003BAC  CFF5 FFDF          	movff	tablat,indf2
  5127   003BB0  50DF               	movf	indf2,w,c
  5128   003BB2  A4D8               	btfss	status,2,c
  5129   003BB4  EFDE  F01D         	goto	u2991
  5130   003BB8  EFE0  F01D         	goto	u2990
  5131   003BBC                     u2991:
  5132   003BBC  EFC7  F01D         	goto	l3008
  5133   003BC0                     u2990:
  5134   003BC0  0012               	return		;funcret
  5135   003BC2                     __end_of_strcpy:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _pad *****************
  5139 ;; Defined at:
  5140 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5143 ;;		 -> sprintf@f(11), 
  5144 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5145 ;;		 -> dbuf(80), 
  5146 ;;  p               2   20[COMRAM] int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  w               2   25[COMRAM] int 
  5149 ;;  i               2   23[COMRAM] int 
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5159 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;Total ram usage:       11 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; Hardware stack levels required when called: 3
  5166 ;; This function calls:
  5167 ;;		_fputc
  5168 ;;		_fputs
  5169 ;; This function is called by:
  5170 ;;		_efgtoa
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text24
  5175   0037B6                     __ptext24:
  5176                           	callstack 0
  5177   0037B6                     _pad:
  5178                           	callstack 22
  5179   0037B6                     
  5180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5181   0037B6  BE16               	btfsc	(pad@p+1)^0,7,c
  5182   0037B8  EFE0  F01B         	goto	u2901
  5183   0037BC  EFE2  F01B         	goto	u2900
  5184   0037C0                     u2901:
  5185   0037C0  EFE8  F01B         	goto	l2974
  5186   0037C4                     u2900:
  5187   0037C4  C015  F01A         	movff	pad@p,pad@w
  5188   0037C8  C016  F01B         	movff	pad@p+1,pad@w+1
  5189   0037CC  EFEC  F01B         	goto	l910
  5190   0037D0                     l2974:
  5191   0037D0  0E00               	movlw	0
  5192   0037D2  6E1B               	movwf	(pad@w+1)^0,c
  5193   0037D4  0E00               	movlw	0
  5194   0037D6  6E1A               	movwf	pad@w^0,c
  5195   0037D8                     l910:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5198   0037D8  0E00               	movlw	0
  5199   0037DA  6E19               	movwf	(pad@i+1)^0,c
  5200   0037DC  0E00               	movlw	0
  5201   0037DE  6E18               	movwf	pad@i^0,c
  5202                           
  5203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5204   0037E0  EFFE  F01B         	goto	l2980
  5205   0037E4                     l2976:
  5206                           
  5207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5208   0037E4  0E00               	movlw	0
  5209   0037E6  6E02               	movwf	(fputc@c+1)^0,c
  5210   0037E8  0E20               	movlw	32
  5211   0037EA  6E01               	movwf	fputc@c^0,c
  5212   0037EC  C011  F003         	movff	pad@fp,fputc@fp
  5213   0037F0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5214   0037F4  ECD9  F01A         	call	_fputc	;wreg free
  5215   0037F8                     
  5216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5217   0037F8  4A18               	infsnz	pad@i^0,f,c
  5218   0037FA  2A19               	incf	(pad@i+1)^0,f,c
  5219   0037FC                     l2980:
  5220                           
  5221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5222   0037FC  501A               	movf	pad@w^0,w,c
  5223   0037FE  5C18               	subwf	pad@i^0,w,c
  5224   003800  5019               	movf	(pad@i+1)^0,w,c
  5225   003802  0A80               	xorlw	128
  5226   003804  6E17               	movwf	??_pad^0,c
  5227   003806  501B               	movf	(pad@w+1)^0,w,c
  5228   003808  0A80               	xorlw	128
  5229   00380A  5817               	subwfb	??_pad^0,w,c
  5230   00380C  A0D8               	btfss	status,0,c
  5231   00380E  EF0B  F01C         	goto	u2911
  5232   003812  EF0D  F01C         	goto	u2910
  5233   003816                     u2911:
  5234   003816  EFF2  F01B         	goto	l2976
  5235   00381A                     u2910:
  5236   00381A                     
  5237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5238   00381A  C013  F00A         	movff	pad@buf,fputs@s
  5239   00381E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5240   003822  C011  F00C         	movff	pad@fp,fputs@fp
  5241   003826  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5242   00382A  ECE1  F01D         	call	_fputs	;wreg free
  5243   00382E  0012               	return		;funcret
  5244   003830                     __end_of_pad:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _fputs *****************
  5248 ;; Defined at:
  5249 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5252 ;;		 -> dbuf(80), 
  5253 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5254 ;;		 -> sprintf@f(11), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;  i               2   14[COMRAM] int 
  5257 ;;  c               1   13[COMRAM] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  2    9[COMRAM] int 
  5260 ;; Registers used:
  5261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;Total ram usage:        7 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 2
  5274 ;; This function calls:
  5275 ;;		_fputc
  5276 ;; This function is called by:
  5277 ;;		_pad
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text25
  5282   003BC2                     __ptext25:
  5283                           	callstack 0
  5284   003BC2                     _fputs:
  5285                           	callstack 22
  5286   003BC2  0E00               	movlw	0
  5287   003BC4  6E10               	movwf	(fputs@i+1)^0,c
  5288   003BC6  0E00               	movlw	0
  5289   003BC8  6E0F               	movwf	fputs@i^0,c
  5290   003BCA  EFF2  F01D         	goto	l2604
  5291   003BCE                     l2600:
  5292   003BCE  C00E  F001         	movff	fputs@c,fputc@c
  5293   003BD2  6A02               	clrf	(fputc@c+1)^0,c
  5294   003BD4  C00C  F003         	movff	fputs@fp,fputc@fp
  5295   003BD8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5296   003BDC  ECD9  F01A         	call	_fputc	;wreg free
  5297   003BE0  4A0F               	infsnz	fputs@i^0,f,c
  5298   003BE2  2A10               	incf	(fputs@i+1)^0,f,c
  5299   003BE4                     l2604:
  5300   003BE4  500F               	movf	fputs@i^0,w,c
  5301   003BE6  240A               	addwf	fputs@s^0,w,c
  5302   003BE8  6ED9               	movwf	fsr2l,c
  5303   003BEA  5010               	movf	(fputs@i+1)^0,w,c
  5304   003BEC  200B               	addwfc	(fputs@s+1)^0,w,c
  5305   003BEE  6EDA               	movwf	fsr2h,c
  5306   003BF0  50DF               	movf	indf2,w,c
  5307   003BF2  6E0E               	movwf	fputs@c^0,c
  5308   003BF4  500E               	movf	fputs@c^0,w,c
  5309   003BF6  A4D8               	btfss	status,2,c
  5310   003BF8  EF00  F01E         	goto	u2311
  5311   003BFC  EF02  F01E         	goto	u2310
  5312   003C00                     u2311:
  5313   003C00  EFE7  F01D         	goto	l2600
  5314   003C04                     u2310:
  5315   003C04  0012               	return		;funcret
  5316   003C06                     __end_of_fputs:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _fputc *****************
  5320 ;; Defined at:
  5321 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  c               2    0[COMRAM] int 
  5324 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5325 ;;		 -> sprintf@f(11), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    0[COMRAM] int 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;Total ram usage:        9 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 1
  5344 ;; This function calls:
  5345 ;;		_putch
  5346 ;; This function is called by:
  5347 ;;		_pad
  5348 ;;		_vfpfcnvrt
  5349 ;;		_fputs
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text26
  5354   0035B2                     __ptext26:
  5355                           	callstack 0
  5356   0035B2                     _fputc:
  5357                           	callstack 25
  5358   0035B2  5003               	movf	fputc@fp^0,w,c
  5359   0035B4  1004               	iorwf	(fputc@fp+1)^0,w,c
  5360   0035B6  B4D8               	btfsc	status,2,c
  5361   0035B8  EFE0  F01A         	goto	u1881
  5362   0035BC  EFE2  F01A         	goto	u1880
  5363   0035C0                     u1881:
  5364   0035C0  EFEB  F01A         	goto	l2386
  5365   0035C4                     u1880:
  5366   0035C4  5003               	movf	fputc@fp^0,w,c
  5367   0035C6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5368   0035C8  A4D8               	btfss	status,2,c
  5369   0035CA  EFE9  F01A         	goto	u1891
  5370   0035CE  EFEB  F01A         	goto	u1890
  5371   0035D2                     u1891:
  5372   0035D2  EFF0  F01A         	goto	l2388
  5373   0035D6                     u1890:
  5374   0035D6                     l2386:
  5375   0035D6  5001               	movf	fputc@c^0,w,c
  5376   0035D8  ECF5  F01E         	call	_putch
  5377   0035DC  EF3D  F01B         	goto	l1041
  5378   0035E0                     l2388:
  5379   0035E0  EE20 F009          	lfsr	2,9
  5380   0035E4  5003               	movf	fputc@fp^0,w,c
  5381   0035E6  26D9               	addwf	fsr2l,f,c
  5382   0035E8  5004               	movf	(fputc@fp+1)^0,w,c
  5383   0035EA  22DA               	addwfc	fsr2h,f,c
  5384   0035EC  50DE               	movf	postinc2,w,c
  5385   0035EE  10DE               	iorwf	postinc2,w,c
  5386   0035F0  B4D8               	btfsc	status,2,c
  5387   0035F2  EFFD  F01A         	goto	u1901
  5388   0035F6  EFFF  F01A         	goto	u1900
  5389   0035FA                     u1901:
  5390   0035FA  EF1A  F01B         	goto	l2392
  5391   0035FE                     u1900:
  5392   0035FE  EE20 F009          	lfsr	2,9
  5393   003602  5003               	movf	fputc@fp^0,w,c
  5394   003604  26D9               	addwf	fsr2l,f,c
  5395   003606  5004               	movf	(fputc@fp+1)^0,w,c
  5396   003608  22DA               	addwfc	fsr2h,f,c
  5397   00360A  EE10 F003          	lfsr	1,3
  5398   00360E  5003               	movf	fputc@fp^0,w,c
  5399   003610  26E1               	addwf	fsr1l,f,c
  5400   003612  5004               	movf	(fputc@fp+1)^0,w,c
  5401   003614  22E2               	addwfc	fsr1h,f,c
  5402   003616  50DE               	movf	postinc2,w,c
  5403   003618  5CE6               	subwf	postinc1,w,c
  5404   00361A  50E6               	movf	postinc1,w,c
  5405   00361C  0A80               	xorlw	128
  5406   00361E  6E09               	movwf	(??_fputc+4)^0,c
  5407   003620  50DE               	movf	postinc2,w,c
  5408   003622  0A80               	xorlw	128
  5409   003624  5809               	subwfb	(??_fputc+4)^0,w,c
  5410   003626  B0D8               	btfsc	status,0,c
  5411   003628  EF18  F01B         	goto	u1911
  5412   00362C  EF1A  F01B         	goto	u1910
  5413   003630                     u1911:
  5414   003630  EF3D  F01B         	goto	l1041
  5415   003634                     u1910:
  5416   003634                     l2392:
  5417   003634  EE20 F003          	lfsr	2,3
  5418   003638  5003               	movf	fputc@fp^0,w,c
  5419   00363A  26D9               	addwf	fsr2l,f,c
  5420   00363C  5004               	movf	(fputc@fp+1)^0,w,c
  5421   00363E  22DA               	addwfc	fsr2h,f,c
  5422   003640  CFDE F005          	movff	postinc2,??_fputc
  5423   003644  CFDD F006          	movff	postdec2,??_fputc+1
  5424   003648  C003  FFD9         	movff	fputc@fp,fsr2l
  5425   00364C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5426   003650  CFDE F007          	movff	postinc2,??_fputc+2
  5427   003654  CFDD F008          	movff	postdec2,??_fputc+3
  5428   003658  5005               	movf	??_fputc^0,w,c
  5429   00365A  2407               	addwf	(??_fputc+2)^0,w,c
  5430   00365C  6ED9               	movwf	fsr2l,c
  5431   00365E  5006               	movf	(??_fputc+1)^0,w,c
  5432   003660  2008               	addwfc	(??_fputc+3)^0,w,c
  5433   003662  6EDA               	movwf	fsr2h,c
  5434   003664  C001  FFDF         	movff	fputc@c,indf2
  5435   003668  EE20 F003          	lfsr	2,3
  5436   00366C  5003               	movf	fputc@fp^0,w,c
  5437   00366E  26D9               	addwf	fsr2l,f,c
  5438   003670  5004               	movf	(fputc@fp+1)^0,w,c
  5439   003672  22DA               	addwfc	fsr2h,f,c
  5440   003674  2ADE               	incf	postinc2,f,c
  5441   003676  0E00               	movlw	0
  5442   003678  22DD               	addwfc	postdec2,f,c
  5443   00367A                     l1041:
  5444   00367A  0012               	return		;funcret
  5445   00367C                     __end_of_fputc:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function _putch *****************
  5449 ;; Defined at:
  5450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  c               1    wreg     unsigned char 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  c               1    0[COMRAM] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_fputc
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text27
  5478   003DEA                     __ptext27:
  5479                           	callstack 0
  5480   003DEA                     _putch:
  5481                           	callstack 25
  5482   003DEA  0012               	return		;funcret
  5483   003DEC                     __end_of_putch:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _memcpy *****************
  5487 ;; Defined at:
  5488 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  d1              2    0[COMRAM] PTR void 
  5491 ;;		 -> dbuf(80), 
  5492 ;;  s1              2    2[COMRAM] PTR const void 
  5493 ;;		 -> dbuf(80), 
  5494 ;;  n               2    4[COMRAM] unsigned int 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5497 ;;		 -> dbuf(80), 
  5498 ;;  d               2    6[COMRAM] PTR unsigned char 
  5499 ;;		 -> dbuf(80), 
  5500 ;;  tmp             1   10[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  2    0[COMRAM] PTR void 
  5503 ;; Registers used:
  5504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5510 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;Total ram usage:       11 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_efgtoa
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text28
  5524   003AE8                     __ptext28:
  5525                           	callstack 0
  5526   003AE8                     _memcpy:
  5527                           	callstack 25
  5528   003AE8  C003  F009         	movff	memcpy@s1,memcpy@s
  5529   003AEC  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  5530   003AF0  C001  F007         	movff	memcpy@d1,memcpy@d
  5531   003AF4  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  5532   003AF8  EF8E  F01D         	goto	l3052
  5533   003AFC                     l3044:
  5534   003AFC  C009  FFD9         	movff	memcpy@s,fsr2l
  5535   003B00  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  5536   003B04  50DF               	movf	indf2,w,c
  5537   003B06  6E0B               	movwf	memcpy@tmp^0,c
  5538   003B08  4A09               	infsnz	memcpy@s^0,f,c
  5539   003B0A  2A0A               	incf	(memcpy@s+1)^0,f,c
  5540   003B0C  C007  FFD9         	movff	memcpy@d,fsr2l
  5541   003B10  C008  FFDA         	movff	memcpy@d+1,fsr2h
  5542   003B14  C00B  FFDF         	movff	memcpy@tmp,indf2
  5543   003B18  4A07               	infsnz	memcpy@d^0,f,c
  5544   003B1A  2A08               	incf	(memcpy@d+1)^0,f,c
  5545   003B1C                     l3052:
  5546   003B1C  0605               	decf	memcpy@n^0,f,c
  5547   003B1E  A0D8               	btfss	status,0,c
  5548   003B20  0606               	decf	(memcpy@n+1)^0,f,c
  5549   003B22  2805               	incf	memcpy@n^0,w,c
  5550   003B24  E106               	bnz	u3111
  5551   003B26  2806               	incf	(memcpy@n+1)^0,w,c
  5552   003B28  A4D8               	btfss	status,2,c
  5553   003B2A  EF99  F01D         	goto	u3111
  5554   003B2E  EF9B  F01D         	goto	u3110
  5555   003B32                     u3111:
  5556   003B32  EF7E  F01D         	goto	l3044
  5557   003B36                     u3110:
  5558   003B36  0012               	return		;funcret
  5559   003B38                     __end_of_memcpy:
  5560                           	callstack 0
  5561                           
  5562 ;; *************** function _labs *****************
  5563 ;; Defined at:
  5564 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  a               4    0[COMRAM] long 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  4    0[COMRAM] long 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5578 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;Total ram usage:        8 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_efgtoa
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text29
  5592   00389A                     __ptext29:
  5593                           	callstack 0
  5594   00389A                     _labs:
  5595                           	callstack 25
  5596   00389A  BE04               	btfsc	(labs@a+3)^0,7,c
  5597   00389C  EF5C  F01C         	goto	u3000
  5598   0038A0  5004               	movf	(labs@a+3)^0,w,c
  5599   0038A2  1003               	iorwf	(labs@a+2)^0,w,c
  5600   0038A4  1002               	iorwf	(labs@a+1)^0,w,c
  5601   0038A6  E106               	bnz	u3001
  5602   0038A8  0401               	decf	labs@a^0,w,c
  5603   0038AA  B0D8               	btfsc	status,0,c
  5604   0038AC  EF5A  F01C         	goto	u3001
  5605   0038B0  EF5C  F01C         	goto	u3000
  5606   0038B4                     u3001:
  5607   0038B4  EF77  F01C         	goto	l1020
  5608   0038B8                     u3000:
  5609   0038B8  C001  F005         	movff	labs@a,??_labs
  5610   0038BC  C002  F006         	movff	labs@a+1,??_labs+1
  5611   0038C0  C003  F007         	movff	labs@a+2,??_labs+2
  5612   0038C4  C004  F008         	movff	labs@a+3,??_labs+3
  5613   0038C8  1E05               	comf	??_labs^0,f,c
  5614   0038CA  1E06               	comf	(??_labs+1)^0,f,c
  5615   0038CC  1E07               	comf	(??_labs+2)^0,f,c
  5616   0038CE  1E08               	comf	(??_labs+3)^0,f,c
  5617   0038D0  2A05               	incf	??_labs^0,f,c
  5618   0038D2  0E00               	movlw	0
  5619   0038D4  2206               	addwfc	(??_labs+1)^0,f,c
  5620   0038D6  2207               	addwfc	(??_labs+2)^0,f,c
  5621   0038D8  2208               	addwfc	(??_labs+3)^0,f,c
  5622   0038DA  C005  F001         	movff	??_labs,?_labs
  5623   0038DE  C006  F002         	movff	??_labs+1,?_labs+1
  5624   0038E2  C007  F003         	movff	??_labs+2,?_labs+2
  5625   0038E6  C008  F004         	movff	??_labs+3,?_labs+3
  5626   0038EA  EF7F  F01C         	goto	l1023
  5627   0038EE                     l1020:
  5628   0038EE  C001  F001         	movff	labs@a,?_labs
  5629   0038F2  C002  F002         	movff	labs@a+1,?_labs+1
  5630   0038F6  C003  F003         	movff	labs@a+2,?_labs+2
  5631   0038FA  C004  F004         	movff	labs@a+3,?_labs+3
  5632   0038FE                     l1023:
  5633   0038FE  0012               	return		;funcret
  5634   003900                     __end_of_labs:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function _floorf *****************
  5638 ;; Defined at:
  5639 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  x               4   74[COMRAM] float 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  u               4   90[COMRAM] struct .
  5644 ;;  m               4   84[COMRAM] unsigned long 
  5645 ;;  e               2   88[COMRAM] int 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  4   74[COMRAM] float 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;Total ram usage:       20 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_efgtoa
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text30
  5669   002E08                     __ptext30:
  5670                           	callstack 0
  5671   002E08                     _floorf:
  5672                           	callstack 25
  5673   002E08  C0E8  F05B         	movff	floorf@F526,floorf@u
  5674   002E0C  C0E9  F05C         	movff	floorf@F526+1,floorf@u+1
  5675   002E10  C0EA  F05D         	movff	floorf@F526+2,floorf@u+2
  5676   002E14  C0EB  F05E         	movff	floorf@F526+3,floorf@u+3
  5677   002E18  C04B  F05B         	movff	floorf@x,floorf@u
  5678   002E1C  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5679   002E20  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5680   002E24  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5681   002E28  0E81               	movlw	129
  5682   002E2A  6E4F               	movwf	??_floorf^0,c
  5683   002E2C  0EFF               	movlw	255
  5684   002E2E  6E50               	movwf	(??_floorf+1)^0,c
  5685   002E30  C05B  F051         	movff	floorf@u,??_floorf+2
  5686   002E34  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5687   002E38  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5688   002E3C  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5689   002E40  0E18               	movlw	24
  5690   002E42  EF28  F017         	goto	u3010
  5691   002E46                     u3015:
  5692   002E46  90D8               	bcf	status,0,c
  5693   002E48  3254               	rrcf	(??_floorf+5)^0,f,c
  5694   002E4A  3253               	rrcf	(??_floorf+4)^0,f,c
  5695   002E4C  3252               	rrcf	(??_floorf+3)^0,f,c
  5696   002E4E  3251               	rrcf	(??_floorf+2)^0,f,c
  5697   002E50                     u3010:
  5698   002E50  2EE8               	decfsz	wreg,f,c
  5699   002E52  EF23  F017         	goto	u3015
  5700   002E56  5051               	movf	(??_floorf+2)^0,w,c
  5701   002E58  244F               	addwf	??_floorf^0,w,c
  5702   002E5A  6E59               	movwf	floorf@e^0,c
  5703   002E5C  0E00               	movlw	0
  5704   002E5E  2050               	addwfc	(??_floorf+1)^0,w,c
  5705   002E60  6E5A               	movwf	(floorf@e+1)^0,c
  5706   002E62  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5707   002E64  EF3D  F017         	goto	u3021
  5708   002E68  505A               	movf	(floorf@e+1)^0,w,c
  5709   002E6A  E109               	bnz	u3020
  5710   002E6C  0E17               	movlw	23
  5711   002E6E  5C59               	subwf	floorf@e^0,w,c
  5712   002E70  A0D8               	btfss	status,0,c
  5713   002E72  EF3D  F017         	goto	u3021
  5714   002E76  EF3F  F017         	goto	u3020
  5715   002E7A                     u3021:
  5716   002E7A  EF49  F017         	goto	l3020
  5717   002E7E                     u3020:
  5718   002E7E                     l3018:
  5719   002E7E  C04B  F04B         	movff	floorf@x,?_floorf
  5720   002E82  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5721   002E86  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5722   002E8A  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5723   002E8E  EF0C  F018         	goto	l1009
  5724   002E92                     l3020:
  5725   002E92  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5726   002E94  EF4E  F017         	goto	u3031
  5727   002E98  EF50  F017         	goto	u3030
  5728   002E9C                     u3031:
  5729   002E9C  EFC0  F017         	goto	l3030
  5730   002EA0                     u3030:
  5731   002EA0  C059  F04F         	movff	floorf@e,??_floorf
  5732   002EA4  0EFF               	movlw	255
  5733   002EA6  6E50               	movwf	(??_floorf+1)^0,c
  5734   002EA8  0EFF               	movlw	255
  5735   002EAA  6E51               	movwf	(??_floorf+2)^0,c
  5736   002EAC  0E7F               	movlw	127
  5737   002EAE  6E52               	movwf	(??_floorf+3)^0,c
  5738   002EB0  0E00               	movlw	0
  5739   002EB2  6E53               	movwf	(??_floorf+4)^0,c
  5740   002EB4                     u3045:
  5741   002EB4  664F               	tstfsz	??_floorf^0,c
  5742   002EB6  EF5F  F017         	goto	u3046
  5743   002EBA  EF67  F017         	goto	u3047
  5744   002EBE                     u3046:
  5745   002EBE  3453               	rlcf	(??_floorf+4)^0,w,c
  5746   002EC0  3253               	rrcf	(??_floorf+4)^0,f,c
  5747   002EC2  3252               	rrcf	(??_floorf+3)^0,f,c
  5748   002EC4  3251               	rrcf	(??_floorf+2)^0,f,c
  5749   002EC6  3250               	rrcf	(??_floorf+1)^0,f,c
  5750   002EC8  2E4F               	decfsz	??_floorf^0,f,c
  5751   002ECA  EF5A  F017         	goto	u3045
  5752   002ECE                     u3047:
  5753   002ECE  C050  F055         	movff	??_floorf+1,floorf@m
  5754   002ED2  C051  F056         	movff	??_floorf+2,floorf@m+1
  5755   002ED6  C052  F057         	movff	??_floorf+3,floorf@m+2
  5756   002EDA  C053  F058         	movff	??_floorf+4,floorf@m+3
  5757   002EDE  5055               	movf	floorf@m^0,w,c
  5758   002EE0  145B               	andwf	floorf@u^0,w,c
  5759   002EE2  6E4F               	movwf	??_floorf^0,c
  5760   002EE4  5056               	movf	(floorf@m+1)^0,w,c
  5761   002EE6  145C               	andwf	(floorf@u+1)^0,w,c
  5762   002EE8  6E50               	movwf	(??_floorf+1)^0,c
  5763   002EEA  5057               	movf	(floorf@m+2)^0,w,c
  5764   002EEC  145D               	andwf	(floorf@u+2)^0,w,c
  5765   002EEE  6E51               	movwf	(??_floorf+2)^0,c
  5766   002EF0  5058               	movf	(floorf@m+3)^0,w,c
  5767   002EF2  145E               	andwf	(floorf@u+3)^0,w,c
  5768   002EF4  6E52               	movwf	(??_floorf+3)^0,c
  5769   002EF6  504F               	movf	??_floorf^0,w,c
  5770   002EF8  1050               	iorwf	(??_floorf+1)^0,w,c
  5771   002EFA  1051               	iorwf	(??_floorf+2)^0,w,c
  5772   002EFC  1052               	iorwf	(??_floorf+3)^0,w,c
  5773   002EFE  A4D8               	btfss	status,2,c
  5774   002F00  EF84  F017         	goto	u3051
  5775   002F04  EF86  F017         	goto	u3050
  5776   002F08                     u3051:
  5777   002F08  EF88  F017         	goto	l3026
  5778   002F0C                     u3050:
  5779   002F0C  EF3F  F017         	goto	l3018
  5780   002F10                     l3026:
  5781   002F10  C05B  F04F         	movff	floorf@u,??_floorf
  5782   002F14  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5783   002F18  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5784   002F1C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5785   002F20  0E20               	movlw	32
  5786   002F22  EF98  F017         	goto	u3060
  5787   002F26                     u3065:
  5788   002F26  90D8               	bcf	status,0,c
  5789   002F28  3252               	rrcf	(??_floorf+3)^0,f,c
  5790   002F2A  3251               	rrcf	(??_floorf+2)^0,f,c
  5791   002F2C  3250               	rrcf	(??_floorf+1)^0,f,c
  5792   002F2E  324F               	rrcf	??_floorf^0,f,c
  5793   002F30                     u3060:
  5794   002F30  2EE8               	decfsz	wreg,f,c
  5795   002F32  EF93  F017         	goto	u3065
  5796   002F36  504F               	movf	??_floorf^0,w,c
  5797   002F38  1050               	iorwf	(??_floorf+1)^0,w,c
  5798   002F3A  1051               	iorwf	(??_floorf+2)^0,w,c
  5799   002F3C  1052               	iorwf	(??_floorf+3)^0,w,c
  5800   002F3E  B4D8               	btfsc	status,2,c
  5801   002F40  EFA4  F017         	goto	u3071
  5802   002F44  EFA6  F017         	goto	u3070
  5803   002F48                     u3071:
  5804   002F48  EFAE  F017         	goto	l1012
  5805   002F4C                     u3070:
  5806   002F4C  5055               	movf	floorf@m^0,w,c
  5807   002F4E  265B               	addwf	floorf@u^0,f,c
  5808   002F50  5056               	movf	(floorf@m+1)^0,w,c
  5809   002F52  225C               	addwfc	(floorf@u+1)^0,f,c
  5810   002F54  5057               	movf	(floorf@m+2)^0,w,c
  5811   002F56  225D               	addwfc	(floorf@u+2)^0,f,c
  5812   002F58  5058               	movf	(floorf@m+3)^0,w,c
  5813   002F5A  225E               	addwfc	(floorf@u+3)^0,f,c
  5814   002F5C                     l1012:
  5815   002F5C  1C55               	comf	floorf@m^0,w,c
  5816   002F5E  6E4F               	movwf	??_floorf^0,c
  5817   002F60  1C56               	comf	(floorf@m+1)^0,w,c
  5818   002F62  6E50               	movwf	(??_floorf+1)^0,c
  5819   002F64  1C57               	comf	(floorf@m+2)^0,w,c
  5820   002F66  6E51               	movwf	(??_floorf+2)^0,c
  5821   002F68  1C58               	comf	(floorf@m+3)^0,w,c
  5822   002F6A  6E52               	movwf	(??_floorf+3)^0,c
  5823   002F6C  504F               	movf	??_floorf^0,w,c
  5824   002F6E  165B               	andwf	floorf@u^0,f,c
  5825   002F70  5050               	movf	(??_floorf+1)^0,w,c
  5826   002F72  165C               	andwf	(floorf@u+1)^0,f,c
  5827   002F74  5051               	movf	(??_floorf+2)^0,w,c
  5828   002F76  165D               	andwf	(floorf@u+2)^0,f,c
  5829   002F78  5052               	movf	(??_floorf+3)^0,w,c
  5830   002F7A  165E               	andwf	(floorf@u+3)^0,f,c
  5831   002F7C  EF04  F018         	goto	l3038
  5832   002F80                     l3030:
  5833   002F80  C05B  F04F         	movff	floorf@u,??_floorf
  5834   002F84  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5835   002F88  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5836   002F8C  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5837   002F90  0E20               	movlw	32
  5838   002F92  EFD0  F017         	goto	u3080
  5839   002F96                     u3085:
  5840   002F96  90D8               	bcf	status,0,c
  5841   002F98  3252               	rrcf	(??_floorf+3)^0,f,c
  5842   002F9A  3251               	rrcf	(??_floorf+2)^0,f,c
  5843   002F9C  3250               	rrcf	(??_floorf+1)^0,f,c
  5844   002F9E  324F               	rrcf	??_floorf^0,f,c
  5845   002FA0                     u3080:
  5846   002FA0  2EE8               	decfsz	wreg,f,c
  5847   002FA2  EFCB  F017         	goto	u3085
  5848   002FA6  504F               	movf	??_floorf^0,w,c
  5849   002FA8  1050               	iorwf	(??_floorf+1)^0,w,c
  5850   002FAA  1051               	iorwf	(??_floorf+2)^0,w,c
  5851   002FAC  1052               	iorwf	(??_floorf+3)^0,w,c
  5852   002FAE  A4D8               	btfss	status,2,c
  5853   002FB0  EFDC  F017         	goto	u3091
  5854   002FB4  EFDE  F017         	goto	u3090
  5855   002FB8                     u3091:
  5856   002FB8  EFE8  F017         	goto	l3034
  5857   002FBC                     u3090:
  5858   002FBC  0E00               	movlw	0
  5859   002FBE  6E5B               	movwf	floorf@u^0,c
  5860   002FC0  0E00               	movlw	0
  5861   002FC2  6E5C               	movwf	(floorf@u+1)^0,c
  5862   002FC4  0E00               	movlw	0
  5863   002FC6  6E5D               	movwf	(floorf@u+2)^0,c
  5864   002FC8  0E00               	movlw	0
  5865   002FCA  6E5E               	movwf	(floorf@u+3)^0,c
  5866   002FCC  EF04  F018         	goto	l3038
  5867   002FD0                     l3034:
  5868   002FD0  90D8               	bcf	status,0,c
  5869   002FD2  345B               	rlcf	floorf@u^0,w,c
  5870   002FD4  6E4F               	movwf	??_floorf^0,c
  5871   002FD6  345C               	rlcf	(floorf@u+1)^0,w,c
  5872   002FD8  6E50               	movwf	(??_floorf+1)^0,c
  5873   002FDA  345D               	rlcf	(floorf@u+2)^0,w,c
  5874   002FDC  6E51               	movwf	(??_floorf+2)^0,c
  5875   002FDE  345E               	rlcf	(floorf@u+3)^0,w,c
  5876   002FE0  6E52               	movwf	(??_floorf+3)^0,c
  5877   002FE2  504F               	movf	??_floorf^0,w,c
  5878   002FE4  1050               	iorwf	(??_floorf+1)^0,w,c
  5879   002FE6  1051               	iorwf	(??_floorf+2)^0,w,c
  5880   002FE8  1052               	iorwf	(??_floorf+3)^0,w,c
  5881   002FEA  B4D8               	btfsc	status,2,c
  5882   002FEC  EFFA  F017         	goto	u3101
  5883   002FF0  EFFC  F017         	goto	u3100
  5884   002FF4                     u3101:
  5885   002FF4  EF04  F018         	goto	l3038
  5886   002FF8                     u3100:
  5887   002FF8  0E00               	movlw	0
  5888   002FFA  6E5B               	movwf	floorf@u^0,c
  5889   002FFC  0E00               	movlw	0
  5890   002FFE  6E5C               	movwf	(floorf@u+1)^0,c
  5891   003000  0E80               	movlw	128
  5892   003002  6E5D               	movwf	(floorf@u+2)^0,c
  5893   003004  0EBF               	movlw	191
  5894   003006  6E5E               	movwf	(floorf@u+3)^0,c
  5895   003008                     l3038:
  5896   003008  C05B  F04B         	movff	floorf@u,?_floorf
  5897   00300C  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5898   003010  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5899   003014  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5900   003018                     l1009:
  5901   003018  0012               	return		;funcret
  5902   00301A                     __end_of_floorf:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function ___fpclassifyf *****************
  5906 ;; Defined at:
  5907 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  x               4    0[COMRAM] float 
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  u               4   10[COMRAM] struct .
  5912 ;;  e               2    8[COMRAM] int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  2    0[COMRAM] int 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;Total ram usage:       14 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_efgtoa
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text31
  5936   0033DA                     __ptext31:
  5937                           	callstack 0
  5938   0033DA                     ___fpclassifyf:
  5939                           	callstack 25
  5940   0033DA  C0EC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5941   0033DE  C0ED  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5942   0033E2  C0EE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5943   0033E6  C0EF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5944   0033EA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5945   0033EE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5946   0033F2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5947   0033F6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5948   0033FA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5949   0033FE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5950   003402  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5951   003406  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5952   00340A  0E18               	movlw	24
  5953   00340C  EF0D  F01A         	goto	u2920
  5954   003410                     u2925:
  5955   003410  90D8               	bcf	status,0,c
  5956   003412  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5957   003414  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5958   003416  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5959   003418  3205               	rrcf	??___fpclassifyf^0,f,c
  5960   00341A                     u2920:
  5961   00341A  2EE8               	decfsz	wreg,f,c
  5962   00341C  EF08  F01A         	goto	u2925
  5963   003420  5005               	movf	??___fpclassifyf^0,w,c
  5964   003422  6E09               	movwf	___fpclassifyf@e^0,c
  5965   003424  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5966   003426  5009               	movf	___fpclassifyf@e^0,w,c
  5967   003428  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5968   00342A  A4D8               	btfss	status,2,c
  5969   00342C  EF1A  F01A         	goto	u2931
  5970   003430  EF1C  F01A         	goto	u2930
  5971   003434                     u2931:
  5972   003434  EF3C  F01A         	goto	l2996
  5973   003438                     u2930:
  5974   003438  90D8               	bcf	status,0,c
  5975   00343A  340B               	rlcf	___fpclassifyf@u^0,w,c
  5976   00343C  6E05               	movwf	??___fpclassifyf^0,c
  5977   00343E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5978   003440  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5979   003442  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5980   003444  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5981   003446  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5982   003448  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5983   00344A  5005               	movf	??___fpclassifyf^0,w,c
  5984   00344C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5985   00344E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5986   003450  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5987   003452  A4D8               	btfss	status,2,c
  5988   003454  EF2E  F01A         	goto	u2941
  5989   003458  EF30  F01A         	goto	u2940
  5990   00345C                     u2941:
  5991   00345C  EF36  F01A         	goto	l2992
  5992   003460                     u2940:
  5993   003460  0E00               	movlw	0
  5994   003462  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5995   003464  0E02               	movlw	2
  5996   003466  6E01               	movwf	?___fpclassifyf^0,c
  5997   003468  EF6B  F01A         	goto	l1002
  5998   00346C                     l2992:
  5999   00346C  0E00               	movlw	0
  6000   00346E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6001   003470  0E03               	movlw	3
  6002   003472  6E01               	movwf	?___fpclassifyf^0,c
  6003   003474  EF6B  F01A         	goto	l1002
  6004   003478                     l2996:
  6005   003478  2809               	incf	___fpclassifyf@e^0,w,c
  6006   00347A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6007   00347C  A4D8               	btfss	status,2,c
  6008   00347E  EF43  F01A         	goto	u2951
  6009   003482  EF45  F01A         	goto	u2950
  6010   003486                     u2951:
  6011   003486  EF67  F01A         	goto	l3002
  6012   00348A                     u2950:
  6013   00348A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6014   00348E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6015   003492  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6016   003496  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6017   00349A  0E09               	movlw	9
  6018   00349C                     u2965:
  6019   00349C  90D8               	bcf	status,0,c
  6020   00349E  3605               	rlcf	??___fpclassifyf^0,f,c
  6021   0034A0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6022   0034A2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6023   0034A4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6024   0034A6  2EE8               	decfsz	wreg,f,c
  6025   0034A8  EF4E  F01A         	goto	u2965
  6026   0034AC  5005               	movf	??___fpclassifyf^0,w,c
  6027   0034AE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6028   0034B0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6029   0034B2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6030   0034B4  B4D8               	btfsc	status,2,c
  6031   0034B6  EF5F  F01A         	goto	u2971
  6032   0034BA  EF62  F01A         	goto	u2970
  6033   0034BE                     u2971:
  6034   0034BE  0E01               	movlw	1
  6035   0034C0  EF63  F01A         	goto	u2980
  6036   0034C4                     u2970:
  6037   0034C4  0E00               	movlw	0
  6038   0034C6                     u2980:
  6039   0034C6  6E01               	movwf	?___fpclassifyf^0,c
  6040   0034C8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6041   0034CA  EF6B  F01A         	goto	l1002
  6042   0034CE                     l3002:
  6043   0034CE  0E00               	movlw	0
  6044   0034D0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6045   0034D2  0E04               	movlw	4
  6046   0034D4  6E01               	movwf	?___fpclassifyf^0,c
  6047   0034D6                     l1002:
  6048   0034D6  0012               	return		;funcret
  6049   0034D8                     __end_of___fpclassifyf:
  6050                           	callstack 0
  6051                           
  6052 ;; *************** function ___fltol *****************
  6053 ;; Defined at:
  6054 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  f1              4    0[COMRAM] int 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  exp1            1    9[COMRAM] unsigned char 
  6059 ;;  sign1           1    8[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  4    0[COMRAM] long 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;Total ram usage:       10 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_RGB2Hue
  6079 ;;		_efgtoa
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text32
  6084   0031CE                     __ptext32:
  6085                           	callstack 0
  6086   0031CE                     ___fltol:
  6087                           	callstack 29
  6088   0031CE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6089   0031D0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6090   0031D2  6E0A               	movwf	___fltol@exp1^0,c
  6091   0031D4  500A               	movf	___fltol@exp1^0,w,c
  6092   0031D6  A4D8               	btfss	status,2,c
  6093   0031D8  EFF0  F018         	goto	u2831
  6094   0031DC  EFF2  F018         	goto	u2830
  6095   0031E0                     u2831:
  6096   0031E0  EFFC  F018         	goto	l2932
  6097   0031E4                     u2830:
  6098   0031E4                     l2928:
  6099   0031E4  0E00               	movlw	0
  6100   0031E6  6E01               	movwf	?___fltol^0,c
  6101   0031E8  0E00               	movlw	0
  6102   0031EA  6E02               	movwf	(?___fltol+1)^0,c
  6103   0031EC  0E00               	movlw	0
  6104   0031EE  6E03               	movwf	(?___fltol+2)^0,c
  6105   0031F0  0E00               	movlw	0
  6106   0031F2  6E04               	movwf	(?___fltol+3)^0,c
  6107   0031F4  EF69  F019         	goto	l499
  6108   0031F8                     l2932:
  6109   0031F8  C001  F005         	movff	___fltol@f1,??___fltol
  6110   0031FC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6111   003200  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6112   003204  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6113   003208  0E20               	movlw	32
  6114   00320A  EF0C  F019         	goto	u2840
  6115   00320E                     u2845:
  6116   00320E  90D8               	bcf	status,0,c
  6117   003210  3208               	rrcf	(??___fltol+3)^0,f,c
  6118   003212  3207               	rrcf	(??___fltol+2)^0,f,c
  6119   003214  3206               	rrcf	(??___fltol+1)^0,f,c
  6120   003216  3205               	rrcf	??___fltol^0,f,c
  6121   003218                     u2840:
  6122   003218  2EE8               	decfsz	wreg,f,c
  6123   00321A  EF07  F019         	goto	u2845
  6124   00321E  5005               	movf	??___fltol^0,w,c
  6125   003220  6E09               	movwf	___fltol@sign1^0,c
  6126   003222  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6127   003224  0EFF               	movlw	255
  6128   003226  1601               	andwf	___fltol@f1^0,f,c
  6129   003228  0EFF               	movlw	255
  6130   00322A  1602               	andwf	(___fltol@f1+1)^0,f,c
  6131   00322C  0EFF               	movlw	255
  6132   00322E  1603               	andwf	(___fltol@f1+2)^0,f,c
  6133   003230  0E00               	movlw	0
  6134   003232  1604               	andwf	(___fltol@f1+3)^0,f,c
  6135   003234  0E96               	movlw	150
  6136   003236  5E0A               	subwf	___fltol@exp1^0,f,c
  6137   003238  BE0A               	btfsc	___fltol@exp1^0,7,c
  6138   00323A  EF23  F019         	goto	u2850
  6139   00323E  EF21  F019         	goto	u2851
  6140   003242                     u2851:
  6141   003242  EF39  F019         	goto	l2952
  6142   003246                     u2850:
  6143   003246  500A               	movf	___fltol@exp1^0,w,c
  6144   003248  0A80               	xorlw	128
  6145   00324A  0F97               	addlw	151
  6146   00324C  B0D8               	btfsc	status,0,c
  6147   00324E  EF2B  F019         	goto	u2861
  6148   003252  EF2D  F019         	goto	u2860
  6149   003256                     u2861:
  6150   003256  EF2F  F019         	goto	l2948
  6151   00325A                     u2860:
  6152   00325A  EFF2  F018         	goto	l2928
  6153   00325E                     l2948:
  6154   00325E  90D8               	bcf	status,0,c
  6155   003260  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6156   003262  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6157   003264  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6158   003266  3201               	rrcf	___fltol@f1^0,f,c
  6159   003268  3E0A               	incfsz	___fltol@exp1^0,f,c
  6160   00326A  EF2F  F019         	goto	l2948
  6161   00326E  EF51  F019         	goto	l2962
  6162   003272                     l2952:
  6163   003272  0E1F               	movlw	31
  6164   003274  640A               	cpfsgt	___fltol@exp1^0,c
  6165   003276  EF3F  F019         	goto	u2871
  6166   00327A  EF41  F019         	goto	u2870
  6167   00327E                     u2871:
  6168   00327E  EF49  F019         	goto	l2960
  6169   003282                     u2870:
  6170   003282  EFF2  F018         	goto	l2928
  6171   003286                     l2958:
  6172   003286  90D8               	bcf	status,0,c
  6173   003288  3601               	rlcf	___fltol@f1^0,f,c
  6174   00328A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6175   00328C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6176   00328E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6177   003290  060A               	decf	___fltol@exp1^0,f,c
  6178   003292                     l2960:
  6179   003292  500A               	movf	___fltol@exp1^0,w,c
  6180   003294  A4D8               	btfss	status,2,c
  6181   003296  EF4F  F019         	goto	u2881
  6182   00329A  EF51  F019         	goto	u2880
  6183   00329E                     u2881:
  6184   00329E  EF43  F019         	goto	l2958
  6185   0032A2                     u2880:
  6186   0032A2                     l2962:
  6187   0032A2  5009               	movf	___fltol@sign1^0,w,c
  6188   0032A4  B4D8               	btfsc	status,2,c
  6189   0032A6  EF57  F019         	goto	u2891
  6190   0032AA  EF59  F019         	goto	u2890
  6191   0032AE                     u2891:
  6192   0032AE  EF61  F019         	goto	l2966
  6193   0032B2                     u2890:
  6194   0032B2  1E04               	comf	(___fltol@f1+3)^0,f,c
  6195   0032B4  1E03               	comf	(___fltol@f1+2)^0,f,c
  6196   0032B6  1E02               	comf	(___fltol@f1+1)^0,f,c
  6197   0032B8  6C01               	negf	___fltol@f1^0,c
  6198   0032BA  0E00               	movlw	0
  6199   0032BC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6200   0032BE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6201   0032C0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6202   0032C2                     l2966:
  6203   0032C2  C001  F001         	movff	___fltol@f1,?___fltol
  6204   0032C6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6205   0032CA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6206   0032CE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6207   0032D2                     l499:
  6208   0032D2  0012               	return		;funcret
  6209   0032D4                     __end_of___fltol:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function ___flsub *****************
  6213 ;; Defined at:
  6214 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  b               4   41[COMRAM] long 
  6217 ;;  a               4   45[COMRAM] long 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  4   41[COMRAM] long 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0, cstack
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;Total ram usage:        8 bytes
  6234 ;; Hardware stack levels used: 1
  6235 ;; Hardware stack levels required when called: 1
  6236 ;; This function calls:
  6237 ;;		___fladd
  6238 ;; This function is called by:
  6239 ;;		_RGB2Hue
  6240 ;;		_efgtoa
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text33
  6245   003B38                     __ptext33:
  6246                           	callstack 0
  6247   003B38                     ___flsub:
  6248                           	callstack 28
  6249   003B38  0E00               	movlw	0
  6250   003B3A  1A2E               	xorwf	___flsub@a^0,f,c
  6251   003B3C  0E00               	movlw	0
  6252   003B3E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  6253   003B40  0E00               	movlw	0
  6254   003B42  1A30               	xorwf	(___flsub@a+2)^0,f,c
  6255   003B44  0E80               	movlw	128
  6256   003B46  1A31               	xorwf	(___flsub@a+3)^0,f,c
  6257   003B48  C02A  F01A         	movff	___flsub@b,___fladd@b
  6258   003B4C  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  6259   003B50  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  6260   003B54  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  6261   003B58  C02E  F01E         	movff	___flsub@a,___fladd@a
  6262   003B5C  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  6263   003B60  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  6264   003B64  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  6265   003B68  ECA9  F00F         	call	___fladd	;wreg free
  6266   003B6C  C01A  F02A         	movff	?___fladd,?___flsub
  6267   003B70  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  6268   003B74  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  6269   003B78  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  6270   003B7C  0012               	return		;funcret
  6271   003B7E                     __end_of___flsub:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function ___fladd *****************
  6275 ;; Defined at:
  6276 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  b               4   25[COMRAM] long 
  6279 ;;  a               4   29[COMRAM] long 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  grs             1   40[COMRAM] unsigned char 
  6282 ;;  bexp            1   39[COMRAM] unsigned char 
  6283 ;;  aexp            1   38[COMRAM] unsigned char 
  6284 ;;  signs           1   37[COMRAM] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  4   25[COMRAM] unsigned char 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6294 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6297 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;Total ram usage:       16 bytes
  6299 ;; Hardware stack levels used: 1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_RGB2Hue
  6304 ;;		___flsub
  6305 ;;		_efgtoa
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text34
  6310   001F52                     __ptext34:
  6311                           	callstack 0
  6312   001F52                     ___fladd:
  6313                           	callstack 28
  6314   001F52  501D               	movf	(___fladd@b+3)^0,w,c
  6315   001F54  0B80               	andlw	128
  6316   001F56  6E26               	movwf	___fladd@signs^0,c
  6317   001F58  501D               	movf	(___fladd@b+3)^0,w,c
  6318   001F5A  241D               	addwf	(___fladd@b+3)^0,w,c
  6319   001F5C  6E28               	movwf	___fladd@bexp^0,c
  6320   001F5E  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6321   001F60  EFB4  F00F         	goto	u1921
  6322   001F64  EFB6  F00F         	goto	u1920
  6323   001F68                     u1921:
  6324   001F68  EFB7  F00F         	goto	l2402
  6325   001F6C                     u1920:
  6326   001F6C  8028               	bsf	___fladd@bexp^0,0,c
  6327   001F6E                     l2402:
  6328   001F6E  5028               	movf	___fladd@bexp^0,w,c
  6329   001F70  B4D8               	btfsc	status,2,c
  6330   001F72  EFBD  F00F         	goto	u1931
  6331   001F76  EFBF  F00F         	goto	u1930
  6332   001F7A                     u1931:
  6333   001F7A  EFD4  F00F         	goto	l2412
  6334   001F7E                     u1930:
  6335   001F7E  2828               	incf	___fladd@bexp^0,w,c
  6336   001F80  A4D8               	btfss	status,2,c
  6337   001F82  EFC5  F00F         	goto	u1941
  6338   001F86  EFC7  F00F         	goto	u1940
  6339   001F8A                     u1941:
  6340   001F8A  EFCF  F00F         	goto	l2408
  6341   001F8E                     u1940:
  6342   001F8E  0E00               	movlw	0
  6343   001F90  6E1A               	movwf	___fladd@b^0,c
  6344   001F92  0E00               	movlw	0
  6345   001F94  6E1B               	movwf	(___fladd@b+1)^0,c
  6346   001F96  0E00               	movlw	0
  6347   001F98  6E1C               	movwf	(___fladd@b+2)^0,c
  6348   001F9A  0E00               	movlw	0
  6349   001F9C  6E1D               	movwf	(___fladd@b+3)^0,c
  6350   001F9E                     l2408:
  6351   001F9E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6352   001FA0  0E00               	movlw	0
  6353   001FA2  6E1D               	movwf	(___fladd@b+3)^0,c
  6354   001FA4  EFDC  F00F         	goto	l2414
  6355   001FA8                     l2412:
  6356   001FA8  0E00               	movlw	0
  6357   001FAA  6E1A               	movwf	___fladd@b^0,c
  6358   001FAC  0E00               	movlw	0
  6359   001FAE  6E1B               	movwf	(___fladd@b+1)^0,c
  6360   001FB0  0E00               	movlw	0
  6361   001FB2  6E1C               	movwf	(___fladd@b+2)^0,c
  6362   001FB4  0E00               	movlw	0
  6363   001FB6  6E1D               	movwf	(___fladd@b+3)^0,c
  6364   001FB8                     l2414:
  6365   001FB8  5021               	movf	(___fladd@a+3)^0,w,c
  6366   001FBA  0B80               	andlw	128
  6367   001FBC  6E27               	movwf	___fladd@aexp^0,c
  6368   001FBE  5026               	movf	___fladd@signs^0,w,c
  6369   001FC0  1827               	xorwf	___fladd@aexp^0,w,c
  6370   001FC2  B4D8               	btfsc	status,2,c
  6371   001FC4  EFE6  F00F         	goto	u1951
  6372   001FC8  EFE8  F00F         	goto	u1950
  6373   001FCC                     u1951:
  6374   001FCC  EFE9  F00F         	goto	l2420
  6375   001FD0                     u1950:
  6376   001FD0  8C26               	bsf	___fladd@signs^0,6,c
  6377   001FD2                     l2420:
  6378   001FD2  5021               	movf	(___fladd@a+3)^0,w,c
  6379   001FD4  2421               	addwf	(___fladd@a+3)^0,w,c
  6380   001FD6  6E27               	movwf	___fladd@aexp^0,c
  6381   001FD8  AE20               	btfss	(___fladd@a+2)^0,7,c
  6382   001FDA  EFF1  F00F         	goto	u1961
  6383   001FDE  EFF3  F00F         	goto	u1960
  6384   001FE2                     u1961:
  6385   001FE2  EFF4  F00F         	goto	l2426
  6386   001FE6                     u1960:
  6387   001FE6  8027               	bsf	___fladd@aexp^0,0,c
  6388   001FE8                     l2426:
  6389   001FE8  5027               	movf	___fladd@aexp^0,w,c
  6390   001FEA  B4D8               	btfsc	status,2,c
  6391   001FEC  EFFA  F00F         	goto	u1971
  6392   001FF0  EFFC  F00F         	goto	u1970
  6393   001FF4                     u1971:
  6394   001FF4  EF11  F010         	goto	l2436
  6395   001FF8                     u1970:
  6396   001FF8  2827               	incf	___fladd@aexp^0,w,c
  6397   001FFA  A4D8               	btfss	status,2,c
  6398   001FFC  EF02  F010         	goto	u1981
  6399   002000  EF04  F010         	goto	u1980
  6400   002004                     u1981:
  6401   002004  EF0C  F010         	goto	l2432
  6402   002008                     u1980:
  6403   002008  0E00               	movlw	0
  6404   00200A  6E1E               	movwf	___fladd@a^0,c
  6405   00200C  0E00               	movlw	0
  6406   00200E  6E1F               	movwf	(___fladd@a+1)^0,c
  6407   002010  0E00               	movlw	0
  6408   002012  6E20               	movwf	(___fladd@a+2)^0,c
  6409   002014  0E00               	movlw	0
  6410   002016  6E21               	movwf	(___fladd@a+3)^0,c
  6411   002018                     l2432:
  6412   002018  8E20               	bsf	(___fladd@a+2)^0,7,c
  6413   00201A  0E00               	movlw	0
  6414   00201C  6E21               	movwf	(___fladd@a+3)^0,c
  6415   00201E  EF19  F010         	goto	l2438
  6416   002022                     l2436:
  6417   002022  0E00               	movlw	0
  6418   002024  6E1E               	movwf	___fladd@a^0,c
  6419   002026  0E00               	movlw	0
  6420   002028  6E1F               	movwf	(___fladd@a+1)^0,c
  6421   00202A  0E00               	movlw	0
  6422   00202C  6E20               	movwf	(___fladd@a+2)^0,c
  6423   00202E  0E00               	movlw	0
  6424   002030  6E21               	movwf	(___fladd@a+3)^0,c
  6425   002032                     l2438:
  6426   002032  5028               	movf	___fladd@bexp^0,w,c
  6427   002034  5C27               	subwf	___fladd@aexp^0,w,c
  6428   002036  B0D8               	btfsc	status,0,c
  6429   002038  EF20  F010         	goto	u1991
  6430   00203C  EF22  F010         	goto	u1990
  6431   002040                     u1991:
  6432   002040  EF49  F010         	goto	l2474
  6433   002044                     u1990:
  6434   002044  AC26               	btfss	___fladd@signs^0,6,c
  6435   002046  EF27  F010         	goto	u2001
  6436   00204A  EF29  F010         	goto	u2000
  6437   00204E                     u2001:
  6438   00204E  EF2B  F010         	goto	l2444
  6439   002052                     u2000:
  6440   002052  0E80               	movlw	128
  6441   002054  1A26               	xorwf	___fladd@signs^0,f,c
  6442   002056                     l2444:
  6443   002056  C028  F029         	movff	___fladd@bexp,___fladd@grs
  6444   00205A  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6445   00205E  C029  F027         	movff	___fladd@grs,___fladd@aexp
  6446   002062  C01A  F029         	movff	___fladd@b,___fladd@grs
  6447   002066  C01E  F01A         	movff	___fladd@a,___fladd@b
  6448   00206A  C029  F01E         	movff	___fladd@grs,___fladd@a
  6449   00206E  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  6450   002072  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  6451   002076  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  6452   00207A  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  6453   00207E  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  6454   002082  C029  F020         	movff	___fladd@grs,___fladd@a+2
  6455   002086  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  6456   00208A  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  6457   00208E  C029  F021         	movff	___fladd@grs,___fladd@a+3
  6458   002092                     l2474:
  6459   002092  0E00               	movlw	0
  6460   002094  6E29               	movwf	___fladd@grs^0,c
  6461   002096  5028               	movf	___fladd@bexp^0,w,c
  6462   002098  C027  F022         	movff	___fladd@aexp,??___fladd
  6463   00209C  6A23               	clrf	(??___fladd+1)^0,c
  6464   00209E  5E22               	subwf	??___fladd^0,f,c
  6465   0020A0  0E00               	movlw	0
  6466   0020A2  5A23               	subwfb	(??___fladd+1)^0,f,c
  6467   0020A4  BE23               	btfsc	(??___fladd+1)^0,7,c
  6468   0020A6  EF5E  F010         	goto	u2011
  6469   0020AA  5023               	movf	(??___fladd+1)^0,w,c
  6470   0020AC  E109               	bnz	u2010
  6471   0020AE  0E1A               	movlw	26
  6472   0020B0  5C22               	subwf	??___fladd^0,w,c
  6473   0020B2  A0D8               	btfss	status,0,c
  6474   0020B4  EF5E  F010         	goto	u2011
  6475   0020B8  EF60  F010         	goto	u2010
  6476   0020BC                     u2011:
  6477   0020BC  EF97  F010         	goto	l731
  6478   0020C0                     u2010:
  6479   0020C0  501A               	movf	___fladd@b^0,w,c
  6480   0020C2  101B               	iorwf	(___fladd@b+1)^0,w,c
  6481   0020C4  101C               	iorwf	(___fladd@b+2)^0,w,c
  6482   0020C6  101D               	iorwf	(___fladd@b+3)^0,w,c
  6483   0020C8  A4D8               	btfss	status,2,c
  6484   0020CA  EF69  F010         	goto	u2021
  6485   0020CE  EF6C  F010         	goto	u2020
  6486   0020D2                     u2021:
  6487   0020D2  0E01               	movlw	1
  6488   0020D4  EF6D  F010         	goto	u2030
  6489   0020D8                     u2020:
  6490   0020D8  0E00               	movlw	0
  6491   0020DA                     u2030:
  6492   0020DA  6E29               	movwf	___fladd@grs^0,c
  6493   0020DC  0E00               	movlw	0
  6494   0020DE  6E1A               	movwf	___fladd@b^0,c
  6495   0020E0  0E00               	movlw	0
  6496   0020E2  6E1B               	movwf	(___fladd@b+1)^0,c
  6497   0020E4  0E00               	movlw	0
  6498   0020E6  6E1C               	movwf	(___fladd@b+2)^0,c
  6499   0020E8  0E00               	movlw	0
  6500   0020EA  6E1D               	movwf	(___fladd@b+3)^0,c
  6501   0020EC  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6502   0020F0  EFA0  F010         	goto	l730
  6503   0020F4                     l732:
  6504   0020F4  A029               	btfss	___fladd@grs^0,0,c
  6505   0020F6  EF7F  F010         	goto	u2041
  6506   0020FA  EF81  F010         	goto	u2040
  6507   0020FE                     u2041:
  6508   0020FE  EF87  F010         	goto	l2486
  6509   002102                     u2040:
  6510   002102  90D8               	bcf	status,0,c
  6511   002104  3029               	rrcf	___fladd@grs^0,w,c
  6512   002106  0901               	iorlw	1
  6513   002108  6E29               	movwf	___fladd@grs^0,c
  6514   00210A  EF89  F010         	goto	l2488
  6515   00210E                     l2486:
  6516   00210E  90D8               	bcf	status,0,c
  6517   002110  3229               	rrcf	___fladd@grs^0,f,c
  6518   002112                     l2488:
  6519   002112  A01A               	btfss	___fladd@b^0,0,c
  6520   002114  EF8E  F010         	goto	u2051
  6521   002118  EF90  F010         	goto	u2050
  6522   00211C                     u2051:
  6523   00211C  EF91  F010         	goto	l2492
  6524   002120                     u2050:
  6525   002120  8E29               	bsf	___fladd@grs^0,7,c
  6526   002122                     l2492:
  6527   002122  341D               	rlcf	(___fladd@b+3)^0,w,c
  6528   002124  321D               	rrcf	(___fladd@b+3)^0,f,c
  6529   002126  321C               	rrcf	(___fladd@b+2)^0,f,c
  6530   002128  321B               	rrcf	(___fladd@b+1)^0,f,c
  6531   00212A  321A               	rrcf	___fladd@b^0,f,c
  6532   00212C  2A28               	incf	___fladd@bexp^0,f,c
  6533   00212E                     l731:
  6534   00212E  5027               	movf	___fladd@aexp^0,w,c
  6535   002130  5C28               	subwf	___fladd@bexp^0,w,c
  6536   002132  A0D8               	btfss	status,0,c
  6537   002134  EF9E  F010         	goto	u2061
  6538   002138  EFA0  F010         	goto	u2060
  6539   00213C                     u2061:
  6540   00213C  EF7A  F010         	goto	l732
  6541   002140                     u2060:
  6542   002140                     l730:
  6543   002140  BC26               	btfsc	___fladd@signs^0,6,c
  6544   002142  EFA5  F010         	goto	u2071
  6545   002146  EFA7  F010         	goto	u2070
  6546   00214A                     u2071:
  6547   00214A  EFE7  F010         	goto	l2520
  6548   00214E                     u2070:
  6549   00214E  5028               	movf	___fladd@bexp^0,w,c
  6550   002150  A4D8               	btfss	status,2,c
  6551   002152  EFAD  F010         	goto	u2081
  6552   002156  EFAF  F010         	goto	u2080
  6553   00215A                     u2081:
  6554   00215A  EFB9  F010         	goto	l2502
  6555   00215E                     u2080:
  6556   00215E  0E00               	movlw	0
  6557   002160  6E1A               	movwf	?___fladd^0,c
  6558   002162  0E00               	movlw	0
  6559   002164  6E1B               	movwf	(?___fladd+1)^0,c
  6560   002166  0E00               	movlw	0
  6561   002168  6E1C               	movwf	(?___fladd+2)^0,c
  6562   00216A  0E00               	movlw	0
  6563   00216C  6E1D               	movwf	(?___fladd+3)^0,c
  6564   00216E  EF08  F012         	goto	l739
  6565   002172                     l2502:
  6566   002172  501E               	movf	___fladd@a^0,w,c
  6567   002174  261A               	addwf	___fladd@b^0,f,c
  6568   002176  501F               	movf	(___fladd@a+1)^0,w,c
  6569   002178  221B               	addwfc	(___fladd@b+1)^0,f,c
  6570   00217A  5020               	movf	(___fladd@a+2)^0,w,c
  6571   00217C  221C               	addwfc	(___fladd@b+2)^0,f,c
  6572   00217E  5021               	movf	(___fladd@a+3)^0,w,c
  6573   002180  221D               	addwfc	(___fladd@b+3)^0,f,c
  6574   002182  A01D               	btfss	(___fladd@b+3)^0,0,c
  6575   002184  EFC6  F010         	goto	u2091
  6576   002188  EFC8  F010         	goto	u2090
  6577   00218C                     u2091:
  6578   00218C  EF74  F011         	goto	l2556
  6579   002190                     u2090:
  6580   002190  A029               	btfss	___fladd@grs^0,0,c
  6581   002192  EFCD  F010         	goto	u2101
  6582   002196  EFCF  F010         	goto	u2100
  6583   00219A                     u2101:
  6584   00219A  EFD5  F010         	goto	l2510
  6585   00219E                     u2100:
  6586   00219E  90D8               	bcf	status,0,c
  6587   0021A0  3029               	rrcf	___fladd@grs^0,w,c
  6588   0021A2  0901               	iorlw	1
  6589   0021A4  6E29               	movwf	___fladd@grs^0,c
  6590   0021A6  EFD7  F010         	goto	l2512
  6591   0021AA                     l2510:
  6592   0021AA  90D8               	bcf	status,0,c
  6593   0021AC  3229               	rrcf	___fladd@grs^0,f,c
  6594   0021AE                     l2512:
  6595   0021AE  A01A               	btfss	___fladd@b^0,0,c
  6596   0021B0  EFDC  F010         	goto	u2111
  6597   0021B4  EFDE  F010         	goto	u2110
  6598   0021B8                     u2111:
  6599   0021B8  EFDF  F010         	goto	l2516
  6600   0021BC                     u2110:
  6601   0021BC  8E29               	bsf	___fladd@grs^0,7,c
  6602   0021BE                     l2516:
  6603   0021BE  341D               	rlcf	(___fladd@b+3)^0,w,c
  6604   0021C0  321D               	rrcf	(___fladd@b+3)^0,f,c
  6605   0021C2  321C               	rrcf	(___fladd@b+2)^0,f,c
  6606   0021C4  321B               	rrcf	(___fladd@b+1)^0,f,c
  6607   0021C6  321A               	rrcf	___fladd@b^0,f,c
  6608   0021C8  2A28               	incf	___fladd@bexp^0,f,c
  6609   0021CA  EF74  F011         	goto	l2556
  6610   0021CE                     l2520:
  6611   0021CE  501E               	movf	___fladd@a^0,w,c
  6612   0021D0  5C1A               	subwf	___fladd@b^0,w,c
  6613   0021D2  501F               	movf	(___fladd@a+1)^0,w,c
  6614   0021D4  581B               	subwfb	(___fladd@b+1)^0,w,c
  6615   0021D6  5020               	movf	(___fladd@a+2)^0,w,c
  6616   0021D8  581C               	subwfb	(___fladd@b+2)^0,w,c
  6617   0021DA  501D               	movf	(___fladd@b+3)^0,w,c
  6618   0021DC  0A80               	xorlw	128
  6619   0021DE  6E22               	movwf	??___fladd^0,c
  6620   0021E0  5021               	movf	(___fladd@a+3)^0,w,c
  6621   0021E2  0A80               	xorlw	128
  6622   0021E4  5822               	subwfb	??___fladd^0,w,c
  6623   0021E6  B0D8               	btfsc	status,0,c
  6624   0021E8  EFF8  F010         	goto	u2121
  6625   0021EC  EFFA  F010         	goto	u2120
  6626   0021F0                     u2121:
  6627   0021F0  EF25  F011         	goto	l2530
  6628   0021F4                     u2120:
  6629   0021F4  501A               	movf	___fladd@b^0,w,c
  6630   0021F6  5C1E               	subwf	___fladd@a^0,w,c
  6631   0021F8  6E22               	movwf	??___fladd^0,c
  6632   0021FA  501B               	movf	(___fladd@b+1)^0,w,c
  6633   0021FC  581F               	subwfb	(___fladd@a+1)^0,w,c
  6634   0021FE  6E23               	movwf	(??___fladd+1)^0,c
  6635   002200  501C               	movf	(___fladd@b+2)^0,w,c
  6636   002202  5820               	subwfb	(___fladd@a+2)^0,w,c
  6637   002204  6E24               	movwf	(??___fladd+2)^0,c
  6638   002206  501D               	movf	(___fladd@b+3)^0,w,c
  6639   002208  5821               	subwfb	(___fladd@a+3)^0,w,c
  6640   00220A  6E25               	movwf	(??___fladd+3)^0,c
  6641   00220C  0EFF               	movlw	255
  6642   00220E  2422               	addwf	??___fladd^0,w,c
  6643   002210  6E1A               	movwf	___fladd@b^0,c
  6644   002212  0EFF               	movlw	255
  6645   002214  2023               	addwfc	(??___fladd+1)^0,w,c
  6646   002216  6E1B               	movwf	(___fladd@b+1)^0,c
  6647   002218  0EFF               	movlw	255
  6648   00221A  2024               	addwfc	(??___fladd+2)^0,w,c
  6649   00221C  6E1C               	movwf	(___fladd@b+2)^0,c
  6650   00221E  0EFF               	movlw	255
  6651   002220  2025               	addwfc	(??___fladd+3)^0,w,c
  6652   002222  6E1D               	movwf	(___fladd@b+3)^0,c
  6653   002224  0E80               	movlw	128
  6654   002226  1A26               	xorwf	___fladd@signs^0,f,c
  6655   002228  6C29               	negf	___fladd@grs^0,c
  6656   00222A  5029               	movf	___fladd@grs^0,w,c
  6657   00222C  A4D8               	btfss	status,2,c
  6658   00222E  EF1B  F011         	goto	u2131
  6659   002232  EF1D  F011         	goto	u2130
  6660   002236                     u2131:
  6661   002236  EF2D  F011         	goto	l747
  6662   00223A                     u2130:
  6663   00223A  0E01               	movlw	1
  6664   00223C  261A               	addwf	___fladd@b^0,f,c
  6665   00223E  0E00               	movlw	0
  6666   002240  221B               	addwfc	(___fladd@b+1)^0,f,c
  6667   002242  221C               	addwfc	(___fladd@b+2)^0,f,c
  6668   002244  221D               	addwfc	(___fladd@b+3)^0,f,c
  6669   002246  EF2D  F011         	goto	l747
  6670   00224A                     l2530:
  6671   00224A  501E               	movf	___fladd@a^0,w,c
  6672   00224C  5E1A               	subwf	___fladd@b^0,f,c
  6673   00224E  501F               	movf	(___fladd@a+1)^0,w,c
  6674   002250  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6675   002252  5020               	movf	(___fladd@a+2)^0,w,c
  6676   002254  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6677   002256  5021               	movf	(___fladd@a+3)^0,w,c
  6678   002258  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6679   00225A                     l747:
  6680   00225A  501A               	movf	___fladd@b^0,w,c
  6681   00225C  101B               	iorwf	(___fladd@b+1)^0,w,c
  6682   00225E  101C               	iorwf	(___fladd@b+2)^0,w,c
  6683   002260  101D               	iorwf	(___fladd@b+3)^0,w,c
  6684   002262  A4D8               	btfss	status,2,c
  6685   002264  EF36  F011         	goto	u2141
  6686   002268  EF38  F011         	goto	u2140
  6687   00226C                     u2141:
  6688   00226C  EF6D  F011         	goto	l2554
  6689   002270                     u2140:
  6690   002270  5029               	movf	___fladd@grs^0,w,c
  6691   002272  A4D8               	btfss	status,2,c
  6692   002274  EF3E  F011         	goto	u2151
  6693   002278  EF40  F011         	goto	u2150
  6694   00227C                     u2151:
  6695   00227C  EF6D  F011         	goto	l2554
  6696   002280                     u2150:
  6697   002280  0E00               	movlw	0
  6698   002282  6E1A               	movwf	?___fladd^0,c
  6699   002284  0E00               	movlw	0
  6700   002286  6E1B               	movwf	(?___fladd+1)^0,c
  6701   002288  0E00               	movlw	0
  6702   00228A  6E1C               	movwf	(?___fladd+2)^0,c
  6703   00228C  0E00               	movlw	0
  6704   00228E  6E1D               	movwf	(?___fladd+3)^0,c
  6705   002290  EF08  F012         	goto	l739
  6706   002294                     l2538:
  6707   002294  90D8               	bcf	status,0,c
  6708   002296  361A               	rlcf	___fladd@b^0,f,c
  6709   002298  361B               	rlcf	(___fladd@b+1)^0,f,c
  6710   00229A  361C               	rlcf	(___fladd@b+2)^0,f,c
  6711   00229C  361D               	rlcf	(___fladd@b+3)^0,f,c
  6712   00229E  AE29               	btfss	___fladd@grs^0,7,c
  6713   0022A0  EF54  F011         	goto	u2161
  6714   0022A4  EF56  F011         	goto	u2160
  6715   0022A8                     u2161:
  6716   0022A8  EF57  F011         	goto	l2544
  6717   0022AC                     u2160:
  6718   0022AC  801A               	bsf	___fladd@b^0,0,c
  6719   0022AE                     l2544:
  6720   0022AE  A029               	btfss	___fladd@grs^0,0,c
  6721   0022B0  EF5C  F011         	goto	u2171
  6722   0022B4  EF5E  F011         	goto	u2170
  6723   0022B8                     u2171:
  6724   0022B8  EF62  F011         	goto	l2548
  6725   0022BC                     u2170:
  6726   0022BC  80D8               	bsf	status,0,c
  6727   0022BE  3629               	rlcf	___fladd@grs^0,f,c
  6728   0022C0  EF64  F011         	goto	l2550
  6729   0022C4                     l2548:
  6730   0022C4  90D8               	bcf	status,0,c
  6731   0022C6  3629               	rlcf	___fladd@grs^0,f,c
  6732   0022C8                     l2550:
  6733   0022C8  5028               	movf	___fladd@bexp^0,w,c
  6734   0022CA  B4D8               	btfsc	status,2,c
  6735   0022CC  EF6A  F011         	goto	u2181
  6736   0022D0  EF6C  F011         	goto	u2180
  6737   0022D4                     u2181:
  6738   0022D4  EF6D  F011         	goto	l2554
  6739   0022D8                     u2180:
  6740   0022D8  0628               	decf	___fladd@bexp^0,f,c
  6741   0022DA                     l2554:
  6742   0022DA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6743   0022DC  EF72  F011         	goto	u2191
  6744   0022E0  EF74  F011         	goto	u2190
  6745   0022E4                     u2191:
  6746   0022E4  EF4A  F011         	goto	l2538
  6747   0022E8                     u2190:
  6748   0022E8                     l2556:
  6749   0022E8  0E00               	movlw	0
  6750   0022EA  6E27               	movwf	___fladd@aexp^0,c
  6751   0022EC  AE29               	btfss	___fladd@grs^0,7,c
  6752   0022EE  EF7B  F011         	goto	u2201
  6753   0022F2  EF7D  F011         	goto	u2200
  6754   0022F6                     u2201:
  6755   0022F6  EF95  F011         	goto	l756
  6756   0022FA                     u2200:
  6757   0022FA  C029  F022         	movff	___fladd@grs,??___fladd
  6758   0022FE  0E7F               	movlw	127
  6759   002300  1622               	andwf	??___fladd^0,f,c
  6760   002302  B4D8               	btfsc	status,2,c
  6761   002304  EF86  F011         	goto	u2211
  6762   002308  EF88  F011         	goto	u2210
  6763   00230C                     u2211:
  6764   00230C  EF8C  F011         	goto	l757
  6765   002310                     u2210:
  6766   002310                     l2562:
  6767   002310  0E01               	movlw	1
  6768   002312  6E27               	movwf	___fladd@aexp^0,c
  6769   002314  EF95  F011         	goto	l756
  6770   002318                     l757:
  6771   002318  A01A               	btfss	___fladd@b^0,0,c
  6772   00231A  EF91  F011         	goto	u2221
  6773   00231E  EF93  F011         	goto	u2220
  6774   002322                     u2221:
  6775   002322  EF95  F011         	goto	l756
  6776   002326                     u2220:
  6777   002326  EF88  F011         	goto	l2562
  6778   00232A                     l756:
  6779   00232A  5027               	movf	___fladd@aexp^0,w,c
  6780   00232C  B4D8               	btfsc	status,2,c
  6781   00232E  EF9B  F011         	goto	u2231
  6782   002332  EF9D  F011         	goto	u2230
  6783   002336                     u2231:
  6784   002336  EFC8  F011         	goto	l2574
  6785   00233A                     u2230:
  6786   00233A  0E01               	movlw	1
  6787   00233C  261A               	addwf	___fladd@b^0,f,c
  6788   00233E  0E00               	movlw	0
  6789   002340  221B               	addwfc	(___fladd@b+1)^0,f,c
  6790   002342  221C               	addwfc	(___fladd@b+2)^0,f,c
  6791   002344  221D               	addwfc	(___fladd@b+3)^0,f,c
  6792   002346  A01D               	btfss	(___fladd@b+3)^0,0,c
  6793   002348  EFA8  F011         	goto	u2241
  6794   00234C  EFAA  F011         	goto	u2240
  6795   002350                     u2241:
  6796   002350  EFC8  F011         	goto	l2574
  6797   002354                     u2240:
  6798   002354  C01A  F022         	movff	___fladd@b,??___fladd
  6799   002358  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  6800   00235C  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  6801   002360  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  6802   002364  3425               	rlcf	(??___fladd+3)^0,w,c
  6803   002366  3225               	rrcf	(??___fladd+3)^0,f,c
  6804   002368  3224               	rrcf	(??___fladd+2)^0,f,c
  6805   00236A  3223               	rrcf	(??___fladd+1)^0,f,c
  6806   00236C  3222               	rrcf	??___fladd^0,f,c
  6807   00236E  C022  F01A         	movff	??___fladd,___fladd@b
  6808   002372  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  6809   002376  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  6810   00237A  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  6811   00237E  2828               	incf	___fladd@bexp^0,w,c
  6812   002380  B4D8               	btfsc	status,2,c
  6813   002382  EFC5  F011         	goto	u2251
  6814   002386  EFC7  F011         	goto	u2250
  6815   00238A                     u2251:
  6816   00238A  EFC8  F011         	goto	l2574
  6817   00238E                     u2250:
  6818   00238E  2A28               	incf	___fladd@bexp^0,f,c
  6819   002390                     l2574:
  6820   002390  2828               	incf	___fladd@bexp^0,w,c
  6821   002392  B4D8               	btfsc	status,2,c
  6822   002394  EFCE  F011         	goto	u2261
  6823   002398  EFD0  F011         	goto	u2260
  6824   00239C                     u2261:
  6825   00239C  EFD8  F011         	goto	l2578
  6826   0023A0                     u2260:
  6827   0023A0  5028               	movf	___fladd@bexp^0,w,c
  6828   0023A2  A4D8               	btfss	status,2,c
  6829   0023A4  EFD6  F011         	goto	u2271
  6830   0023A8  EFD8  F011         	goto	u2270
  6831   0023AC                     u2271:
  6832   0023AC  EFEA  F011         	goto	l2582
  6833   0023B0                     u2270:
  6834   0023B0                     l2578:
  6835   0023B0  0E00               	movlw	0
  6836   0023B2  6E1A               	movwf	___fladd@b^0,c
  6837   0023B4  0E00               	movlw	0
  6838   0023B6  6E1B               	movwf	(___fladd@b+1)^0,c
  6839   0023B8  0E00               	movlw	0
  6840   0023BA  6E1C               	movwf	(___fladd@b+2)^0,c
  6841   0023BC  0E00               	movlw	0
  6842   0023BE  6E1D               	movwf	(___fladd@b+3)^0,c
  6843   0023C0  5028               	movf	___fladd@bexp^0,w,c
  6844   0023C2  A4D8               	btfss	status,2,c
  6845   0023C4  EFE6  F011         	goto	u2281
  6846   0023C8  EFE8  F011         	goto	u2280
  6847   0023CC                     u2281:
  6848   0023CC  EFEA  F011         	goto	l2582
  6849   0023D0                     u2280:
  6850   0023D0  0E00               	movlw	0
  6851   0023D2  6E26               	movwf	___fladd@signs^0,c
  6852   0023D4                     l2582:
  6853   0023D4  A028               	btfss	___fladd@bexp^0,0,c
  6854   0023D6  EFEF  F011         	goto	u2291
  6855   0023DA  EFF1  F011         	goto	u2290
  6856   0023DE                     u2291:
  6857   0023DE  EFF4  F011         	goto	l2586
  6858   0023E2                     u2290:
  6859   0023E2  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6860   0023E4  EFF5  F011         	goto	l2588
  6861   0023E8                     l2586:
  6862   0023E8  9E1C               	bcf	(___fladd@b+2)^0,7,c
  6863   0023EA                     l2588:
  6864   0023EA  90D8               	bcf	status,0,c
  6865   0023EC  3028               	rrcf	___fladd@bexp^0,w,c
  6866   0023EE  6E1D               	movwf	(___fladd@b+3)^0,c
  6867   0023F0  AE26               	btfss	___fladd@signs^0,7,c
  6868   0023F2  EFFD  F011         	goto	u2301
  6869   0023F6  EFFF  F011         	goto	u2300
  6870   0023FA                     u2301:
  6871   0023FA  EF00  F012         	goto	l2594
  6872   0023FE                     u2300:
  6873   0023FE  8E1D               	bsf	(___fladd@b+3)^0,7,c
  6874   002400                     l2594:
  6875   002400  C01A  F01A         	movff	___fladd@b,?___fladd
  6876   002404  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  6877   002408  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  6878   00240C  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  6879   002410                     l739:
  6880   002410  0012               	return		;funcret
  6881   002412                     __end_of___fladd:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function ___flneg *****************
  6885 ;; Defined at:
  6886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  f1              4    0[COMRAM] unsigned char 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;		None
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  4    0[COMRAM] unsigned char 
  6893 ;; Registers used:
  6894 ;;		wreg, status,2, status,0
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;Total ram usage:        4 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_efgtoa
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text35
  6914   003C86                     __ptext35:
  6915                           	callstack 0
  6916   003C86                     ___flneg:
  6917                           	callstack 25
  6918   003C86  5001               	movf	___flneg@f1^0,w,c
  6919   003C88  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6920   003C8A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6921   003C8C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6922   003C8E  B4D8               	btfsc	status,2,c
  6923   003C90  EF4C  F01E         	goto	u2821
  6924   003C94  EF4E  F01E         	goto	u2820
  6925   003C98                     u2821:
  6926   003C98  EF56  F01E         	goto	l2922
  6927   003C9C                     u2820:
  6928   003C9C  0E00               	movlw	0
  6929   003C9E  1A01               	xorwf	___flneg@f1^0,f,c
  6930   003CA0  0E00               	movlw	0
  6931   003CA2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6932   003CA4  0E00               	movlw	0
  6933   003CA6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6934   003CA8  0E80               	movlw	128
  6935   003CAA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6936   003CAC                     l2922:
  6937   003CAC  C001  F001         	movff	___flneg@f1,?___flneg
  6938   003CB0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6939   003CB4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6940   003CB8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6941   003CBC  0012               	return		;funcret
  6942   003CBE                     __end_of___flneg:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function ___flmul *****************
  6946 ;; Defined at:
  6947 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  b               4   74[COMRAM] unsigned char 
  6950 ;;  a               4   78[COMRAM] unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  prod            4    7[BANK0 ] struct .
  6953 ;;  grs             4    1[BANK0 ] unsigned long 
  6954 ;;  temp            2   11[BANK0 ] struct .
  6955 ;;  bexp            1    6[BANK0 ] unsigned char 
  6956 ;;  aexp            1    5[BANK0 ] unsigned char 
  6957 ;;  sign            1    0[BANK0 ] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  4   74[COMRAM] unsigned char 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0, prodl, prodh
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6967 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;Total ram usage:       25 bytes
  6972 ;; Hardware stack levels used: 1
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_RGB2Hue
  6977 ;;		_efgtoa
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text36
  6982   002412                     __ptext36:
  6983                           	callstack 0
  6984   002412                     ___flmul:
  6985                           	callstack 29
  6986   002412  504E               	movf	(___flmul@b+3)^0,w,c
  6987   002414  0B80               	andlw	128
  6988   002416  0100               	movlb	0	; () banked
  6989   002418  6F60               	movwf	___flmul@sign& (0+255),b
  6990   00241A  504E               	movf	(___flmul@b+3)^0,w,c
  6991   00241C  244E               	addwf	(___flmul@b+3)^0,w,c
  6992   00241E  6F66               	movwf	___flmul@bexp& (0+255),b
  6993   002420                     
  6994                           ; BSR set to: 0
  6995   002420  AE4D               	btfss	(___flmul@b+2)^0,7,c
  6996   002422  EF15  F012         	goto	u2551
  6997   002426  EF17  F012         	goto	u2550
  6998   00242A                     u2551:
  6999   00242A  EF18  F012         	goto	l2750
  7000   00242E                     u2550:
  7001   00242E                     
  7002                           ; BSR set to: 0
  7003   00242E  8166               	bsf	___flmul@bexp& (0+255),0,b
  7004   002430                     l2750:
  7005                           
  7006                           ; BSR set to: 0
  7007   002430  5166               	movf	___flmul@bexp& (0+255),w,b
  7008   002432  B4D8               	btfsc	status,2,c
  7009   002434  EF1E  F012         	goto	u2561
  7010   002438  EF20  F012         	goto	u2560
  7011   00243C                     u2561:
  7012   00243C  EF33  F012         	goto	l2758
  7013   002440                     u2560:
  7014   002440                     
  7015                           ; BSR set to: 0
  7016   002440  2966               	incf	___flmul@bexp& (0+255),w,b
  7017   002442  A4D8               	btfss	status,2,c
  7018   002444  EF26  F012         	goto	u2571
  7019   002448  EF28  F012         	goto	u2570
  7020   00244C                     u2571:
  7021   00244C  EF30  F012         	goto	l2756
  7022   002450                     u2570:
  7023   002450                     
  7024                           ; BSR set to: 0
  7025   002450  0E00               	movlw	0
  7026   002452  6E4B               	movwf	___flmul@b^0,c
  7027   002454  0E00               	movlw	0
  7028   002456  6E4C               	movwf	(___flmul@b+1)^0,c
  7029   002458  0E00               	movlw	0
  7030   00245A  6E4D               	movwf	(___flmul@b+2)^0,c
  7031   00245C  0E00               	movlw	0
  7032   00245E  6E4E               	movwf	(___flmul@b+3)^0,c
  7033   002460                     l2756:
  7034                           
  7035                           ; BSR set to: 0
  7036   002460  8E4D               	bsf	(___flmul@b+2)^0,7,c
  7037   002462  EF3B  F012         	goto	l2760
  7038   002466                     l2758:
  7039                           
  7040                           ; BSR set to: 0
  7041   002466  0E00               	movlw	0
  7042   002468  6E4B               	movwf	___flmul@b^0,c
  7043   00246A  0E00               	movlw	0
  7044   00246C  6E4C               	movwf	(___flmul@b+1)^0,c
  7045   00246E  0E00               	movlw	0
  7046   002470  6E4D               	movwf	(___flmul@b+2)^0,c
  7047   002472  0E00               	movlw	0
  7048   002474  6E4E               	movwf	(___flmul@b+3)^0,c
  7049   002476                     l2760:
  7050                           
  7051                           ; BSR set to: 0
  7052   002476  5052               	movf	(___flmul@a+3)^0,w,c
  7053   002478  0B80               	andlw	128
  7054   00247A  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7055   00247C                     
  7056                           ; BSR set to: 0
  7057   00247C  5052               	movf	(___flmul@a+3)^0,w,c
  7058   00247E  2452               	addwf	(___flmul@a+3)^0,w,c
  7059   002480  6F65               	movwf	___flmul@aexp& (0+255),b
  7060   002482                     
  7061                           ; BSR set to: 0
  7062   002482  AE51               	btfss	(___flmul@a+2)^0,7,c
  7063   002484  EF46  F012         	goto	u2581
  7064   002488  EF48  F012         	goto	u2580
  7065   00248C                     u2581:
  7066   00248C  EF49  F012         	goto	l2768
  7067   002490                     u2580:
  7068   002490                     
  7069                           ; BSR set to: 0
  7070   002490  8165               	bsf	___flmul@aexp& (0+255),0,b
  7071   002492                     l2768:
  7072                           
  7073                           ; BSR set to: 0
  7074   002492  5165               	movf	___flmul@aexp& (0+255),w,b
  7075   002494  B4D8               	btfsc	status,2,c
  7076   002496  EF4F  F012         	goto	u2591
  7077   00249A  EF51  F012         	goto	u2590
  7078   00249E                     u2591:
  7079   00249E  EF64  F012         	goto	l2776
  7080   0024A2                     u2590:
  7081   0024A2                     
  7082                           ; BSR set to: 0
  7083   0024A2  2965               	incf	___flmul@aexp& (0+255),w,b
  7084   0024A4  A4D8               	btfss	status,2,c
  7085   0024A6  EF57  F012         	goto	u2601
  7086   0024AA  EF59  F012         	goto	u2600
  7087   0024AE                     u2601:
  7088   0024AE  EF61  F012         	goto	l2774
  7089   0024B2                     u2600:
  7090   0024B2                     
  7091                           ; BSR set to: 0
  7092   0024B2  0E00               	movlw	0
  7093   0024B4  6E4F               	movwf	___flmul@a^0,c
  7094   0024B6  0E00               	movlw	0
  7095   0024B8  6E50               	movwf	(___flmul@a+1)^0,c
  7096   0024BA  0E00               	movlw	0
  7097   0024BC  6E51               	movwf	(___flmul@a+2)^0,c
  7098   0024BE  0E00               	movlw	0
  7099   0024C0  6E52               	movwf	(___flmul@a+3)^0,c
  7100   0024C2                     l2774:
  7101                           
  7102                           ; BSR set to: 0
  7103   0024C2  8E51               	bsf	(___flmul@a+2)^0,7,c
  7104   0024C4  EF6C  F012         	goto	l816
  7105   0024C8                     l2776:
  7106                           
  7107                           ; BSR set to: 0
  7108   0024C8  0E00               	movlw	0
  7109   0024CA  6E4F               	movwf	___flmul@a^0,c
  7110   0024CC  0E00               	movlw	0
  7111   0024CE  6E50               	movwf	(___flmul@a+1)^0,c
  7112   0024D0  0E00               	movlw	0
  7113   0024D2  6E51               	movwf	(___flmul@a+2)^0,c
  7114   0024D4  0E00               	movlw	0
  7115   0024D6  6E52               	movwf	(___flmul@a+3)^0,c
  7116   0024D8                     l816:
  7117                           
  7118                           ; BSR set to: 0
  7119   0024D8  5165               	movf	___flmul@aexp& (0+255),w,b
  7120   0024DA  B4D8               	btfsc	status,2,c
  7121   0024DC  EF72  F012         	goto	u2611
  7122   0024E0  EF74  F012         	goto	u2610
  7123   0024E4                     u2611:
  7124   0024E4  EF7C  F012         	goto	l2780
  7125   0024E8                     u2610:
  7126   0024E8                     
  7127                           ; BSR set to: 0
  7128   0024E8  5166               	movf	___flmul@bexp& (0+255),w,b
  7129   0024EA  A4D8               	btfss	status,2,c
  7130   0024EC  EF7A  F012         	goto	u2621
  7131   0024F0  EF7C  F012         	goto	u2620
  7132   0024F4                     u2621:
  7133   0024F4  EF86  F012         	goto	l2784
  7134   0024F8                     u2620:
  7135   0024F8                     l2780:
  7136                           
  7137                           ; BSR set to: 0
  7138   0024F8  0E00               	movlw	0
  7139   0024FA  6E4B               	movwf	?___flmul^0,c
  7140   0024FC  0E00               	movlw	0
  7141   0024FE  6E4C               	movwf	(?___flmul+1)^0,c
  7142   002500  0E00               	movlw	0
  7143   002502  6E4D               	movwf	(?___flmul+2)^0,c
  7144   002504  0E00               	movlw	0
  7145   002506  6E4E               	movwf	(?___flmul+3)^0,c
  7146   002508  EF1E  F014         	goto	l820
  7147   00250C                     l2784:
  7148                           
  7149                           ; BSR set to: 0
  7150   00250C  5051               	movf	(___flmul@a+2)^0,w,c
  7151   00250E  024B               	mulwf	___flmul@b^0,c
  7152   002510  CFF3 F06B          	movff	prodl,___flmul@temp
  7153   002514  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7154   002518                     
  7155                           ; BSR set to: 0
  7156   002518  516B               	movf	___flmul@temp& (0+255),w,b
  7157   00251A  6F61               	movwf	___flmul@grs& (0+255),b
  7158   00251C  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  7159   00251E  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  7160   002520  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  7161   002522                     
  7162                           ; BSR set to: 0
  7163   002522  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7164   002524  6F67               	movwf	___flmul@prod& (0+255),b
  7165   002526  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7166   002528  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7167   00252A  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7168   00252C  5050               	movf	(___flmul@a+1)^0,w,c
  7169   00252E  024C               	mulwf	(___flmul@b+1)^0,c
  7170   002530  CFF3 F06B          	movff	prodl,___flmul@temp
  7171   002534  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7172   002538                     
  7173                           ; BSR set to: 0
  7174   002538  516B               	movf	___flmul@temp& (0+255),w,b
  7175   00253A  2761               	addwf	___flmul@grs& (0+255),f,b
  7176   00253C  0E00               	movlw	0
  7177   00253E  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7178   002540  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7179   002542  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7180   002544                     
  7181                           ; BSR set to: 0
  7182   002544  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7183   002546  2767               	addwf	___flmul@prod& (0+255),f,b
  7184   002548  0E00               	movlw	0
  7185   00254A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7186   00254C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7187   00254E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7188   002550  504F               	movf	___flmul@a^0,w,c
  7189   002552  024D               	mulwf	(___flmul@b+2)^0,c
  7190   002554  CFF3 F06B          	movff	prodl,___flmul@temp
  7191   002558  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7192   00255C                     
  7193                           ; BSR set to: 0
  7194   00255C  516B               	movf	___flmul@temp& (0+255),w,b
  7195   00255E  2761               	addwf	___flmul@grs& (0+255),f,b
  7196   002560  0E00               	movlw	0
  7197   002562  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7198   002564  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7199   002566  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7200   002568                     
  7201                           ; BSR set to: 0
  7202   002568  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7203   00256A  2767               	addwf	___flmul@prod& (0+255),f,b
  7204   00256C  0E00               	movlw	0
  7205   00256E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7206   002570  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7207   002572  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7208   002574                     
  7209                           ; BSR set to: 0
  7210   002574  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7211   002578  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7212   00257C  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7213   002580  6B61               	clrf	___flmul@grs& (0+255),b
  7214   002582                     
  7215                           ; BSR set to: 0
  7216   002582  504F               	movf	___flmul@a^0,w,c
  7217   002584  024C               	mulwf	(___flmul@b+1)^0,c
  7218   002586  CFF3 F06B          	movff	prodl,___flmul@temp
  7219   00258A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7220   00258E                     
  7221                           ; BSR set to: 0
  7222   00258E  516B               	movf	___flmul@temp& (0+255),w,b
  7223   002590  2761               	addwf	___flmul@grs& (0+255),f,b
  7224   002592  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7225   002594  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7226   002596  0E00               	movlw	0
  7227   002598  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7228   00259A  0E00               	movlw	0
  7229   00259C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7230   00259E                     
  7231                           ; BSR set to: 0
  7232   00259E  5050               	movf	(___flmul@a+1)^0,w,c
  7233   0025A0  024B               	mulwf	___flmul@b^0,c
  7234   0025A2  CFF3 F06B          	movff	prodl,___flmul@temp
  7235   0025A6  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7236   0025AA                     
  7237                           ; BSR set to: 0
  7238   0025AA  516B               	movf	___flmul@temp& (0+255),w,b
  7239   0025AC  2761               	addwf	___flmul@grs& (0+255),f,b
  7240   0025AE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7241   0025B0  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7242   0025B2  0E00               	movlw	0
  7243   0025B4  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7244   0025B6  0E00               	movlw	0
  7245   0025B8  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7246   0025BA                     
  7247                           ; BSR set to: 0
  7248   0025BA  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7249   0025BE  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7250   0025C2  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7251   0025C6  6B61               	clrf	___flmul@grs& (0+255),b
  7252   0025C8  504F               	movf	___flmul@a^0,w,c
  7253   0025CA  024B               	mulwf	___flmul@b^0,c
  7254   0025CC  CFF3 F06B          	movff	prodl,___flmul@temp
  7255   0025D0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7256   0025D4                     
  7257                           ; BSR set to: 0
  7258   0025D4  516B               	movf	___flmul@temp& (0+255),w,b
  7259   0025D6  2761               	addwf	___flmul@grs& (0+255),f,b
  7260   0025D8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7261   0025DA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7262   0025DC  0E00               	movlw	0
  7263   0025DE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7264   0025E0  0E00               	movlw	0
  7265   0025E2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7266   0025E4                     
  7267                           ; BSR set to: 0
  7268   0025E4  5051               	movf	(___flmul@a+2)^0,w,c
  7269   0025E6  024C               	mulwf	(___flmul@b+1)^0,c
  7270   0025E8  CFF3 F06B          	movff	prodl,___flmul@temp
  7271   0025EC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7272   0025F0  516B               	movf	___flmul@temp& (0+255),w,b
  7273   0025F2  2767               	addwf	___flmul@prod& (0+255),f,b
  7274   0025F4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7275   0025F6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7276   0025F8  0E00               	movlw	0
  7277   0025FA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7278   0025FC  0E00               	movlw	0
  7279   0025FE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7280   002600                     
  7281                           ; BSR set to: 0
  7282   002600  5050               	movf	(___flmul@a+1)^0,w,c
  7283   002602  024D               	mulwf	(___flmul@b+2)^0,c
  7284   002604  CFF3 F06B          	movff	prodl,___flmul@temp
  7285   002608  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7286   00260C                     
  7287                           ; BSR set to: 0
  7288   00260C  516B               	movf	___flmul@temp& (0+255),w,b
  7289   00260E  2767               	addwf	___flmul@prod& (0+255),f,b
  7290   002610  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7291   002612  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7292   002614  0E00               	movlw	0
  7293   002616  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7294   002618  0E00               	movlw	0
  7295   00261A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7296   00261C  5051               	movf	(___flmul@a+2)^0,w,c
  7297   00261E  024D               	mulwf	(___flmul@b+2)^0,c
  7298   002620  CFF3 F06B          	movff	prodl,___flmul@temp
  7299   002624  CFF4 F06C          	movff	prodh,___flmul@temp+1
  7300   002628                     
  7301                           ; BSR set to: 0
  7302   002628  516B               	movf	___flmul@temp& (0+255),w,b
  7303   00262A  6E53               	movwf	??___flmul^0,c
  7304   00262C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7305   00262E  6E54               	movwf	(??___flmul+1)^0,c
  7306   002630  6A55               	clrf	(??___flmul+2)^0,c
  7307   002632  6A56               	clrf	(??___flmul+3)^0,c
  7308   002634  C055  F056         	movff	??___flmul+2,??___flmul+3
  7309   002638  C054  F055         	movff	??___flmul+1,??___flmul+2
  7310   00263C  C053  F054         	movff	??___flmul,??___flmul+1
  7311   002640  6A53               	clrf	??___flmul^0,c
  7312   002642  5053               	movf	??___flmul^0,w,c
  7313   002644  2767               	addwf	___flmul@prod& (0+255),f,b
  7314   002646  5054               	movf	(??___flmul+1)^0,w,c
  7315   002648  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7316   00264A  5055               	movf	(??___flmul+2)^0,w,c
  7317   00264C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7318   00264E  5056               	movf	(??___flmul+3)^0,w,c
  7319   002650  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7320   002652                     
  7321                           ; BSR set to: 0
  7322   002652  C061  F053         	movff	___flmul@grs,??___flmul
  7323   002656  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  7324   00265A  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  7325   00265E  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  7326   002662  0E19               	movlw	25
  7327   002664  EF39  F013         	goto	u2630
  7328   002668                     u2635:
  7329   002668  90D8               	bcf	status,0,c
  7330   00266A  3256               	rrcf	(??___flmul+3)^0,f,c
  7331   00266C  3255               	rrcf	(??___flmul+2)^0,f,c
  7332   00266E  3254               	rrcf	(??___flmul+1)^0,f,c
  7333   002670  3253               	rrcf	??___flmul^0,f,c
  7334   002672                     u2630:
  7335   002672  2EE8               	decfsz	wreg,f,c
  7336   002674  EF34  F013         	goto	u2635
  7337   002678  5053               	movf	??___flmul^0,w,c
  7338   00267A  2767               	addwf	___flmul@prod& (0+255),f,b
  7339   00267C  5054               	movf	(??___flmul+1)^0,w,c
  7340   00267E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7341   002680  5055               	movf	(??___flmul+2)^0,w,c
  7342   002682  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7343   002684  5056               	movf	(??___flmul+3)^0,w,c
  7344   002686  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7345   002688                     
  7346                           ; BSR set to: 0
  7347   002688  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  7348   00268C  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  7349   002690  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  7350   002694  6B61               	clrf	___flmul@grs& (0+255),b
  7351   002696                     
  7352                           ; BSR set to: 0
  7353   002696  5165               	movf	___flmul@aexp& (0+255),w,b
  7354   002698  C066  F053         	movff	___flmul@bexp,??___flmul
  7355   00269C  6A54               	clrf	(??___flmul+1)^0,c
  7356   00269E  2653               	addwf	??___flmul^0,f,c
  7357   0026A0  0E00               	movlw	0
  7358   0026A2  2254               	addwfc	(??___flmul+1)^0,f,c
  7359   0026A4  0E82               	movlw	130
  7360   0026A6  2453               	addwf	??___flmul^0,w,c
  7361   0026A8  6F6B               	movwf	___flmul@temp& (0+255),b
  7362   0026AA  0EFF               	movlw	255
  7363   0026AC  2054               	addwfc	(??___flmul+1)^0,w,c
  7364   0026AE  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  7365   0026B0  EF6F  F013         	goto	l2832
  7366   0026B4                     l2826:
  7367                           
  7368                           ; BSR set to: 0
  7369   0026B4  90D8               	bcf	status,0,c
  7370   0026B6  3767               	rlcf	___flmul@prod& (0+255),f,b
  7371   0026B8  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7372   0026BA  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7373   0026BC  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7374   0026BE                     
  7375                           ; BSR set to: 0
  7376   0026BE  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7377   0026C0  EF64  F013         	goto	u2641
  7378   0026C4  EF66  F013         	goto	u2640
  7379   0026C8                     u2641:
  7380   0026C8  EF67  F013         	goto	l823
  7381   0026CC                     u2640:
  7382   0026CC                     
  7383                           ; BSR set to: 0
  7384   0026CC  8167               	bsf	___flmul@prod& (0+255),0,b
  7385   0026CE                     l823:
  7386                           
  7387                           ; BSR set to: 0
  7388   0026CE  90D8               	bcf	status,0,c
  7389   0026D0  3761               	rlcf	___flmul@grs& (0+255),f,b
  7390   0026D2  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7391   0026D4  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7392   0026D6  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7393   0026D8  076B               	decf	___flmul@temp& (0+255),f,b
  7394   0026DA  A0D8               	btfss	status,0,c
  7395   0026DC  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  7396   0026DE                     l2832:
  7397                           
  7398                           ; BSR set to: 0
  7399   0026DE  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  7400   0026E0  EF74  F013         	goto	u2651
  7401   0026E4  EF76  F013         	goto	u2650
  7402   0026E8                     u2651:
  7403   0026E8  EF5A  F013         	goto	l2826
  7404   0026EC                     u2650:
  7405   0026EC                     
  7406                           ; BSR set to: 0
  7407   0026EC  0E00               	movlw	0
  7408   0026EE  6F65               	movwf	___flmul@aexp& (0+255),b
  7409   0026F0                     
  7410                           ; BSR set to: 0
  7411   0026F0  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  7412   0026F2  EF7D  F013         	goto	u2661
  7413   0026F6  EF7F  F013         	goto	u2660
  7414   0026FA                     u2661:
  7415   0026FA  EFA3  F013         	goto	l825
  7416   0026FE                     u2660:
  7417   0026FE                     
  7418                           ; BSR set to: 0
  7419   0026FE  0EFF               	movlw	255
  7420   002700  1561               	andwf	___flmul@grs& (0+255),w,b
  7421   002702  6E53               	movwf	??___flmul^0,c
  7422   002704  0EFF               	movlw	255
  7423   002706  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  7424   002708  6E54               	movwf	(??___flmul+1)^0,c
  7425   00270A  0EFF               	movlw	255
  7426   00270C  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  7427   00270E  6E55               	movwf	(??___flmul+2)^0,c
  7428   002710  0E7F               	movlw	127
  7429   002712  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  7430   002714  6E56               	movwf	(??___flmul+3)^0,c
  7431   002716  5053               	movf	??___flmul^0,w,c
  7432   002718  1054               	iorwf	(??___flmul+1)^0,w,c
  7433   00271A  1055               	iorwf	(??___flmul+2)^0,w,c
  7434   00271C  1056               	iorwf	(??___flmul+3)^0,w,c
  7435   00271E  B4D8               	btfsc	status,2,c
  7436   002720  EF94  F013         	goto	u2671
  7437   002724  EF96  F013         	goto	u2670
  7438   002728                     u2671:
  7439   002728  EF9A  F013         	goto	l826
  7440   00272C                     u2670:
  7441   00272C                     l2840:
  7442                           
  7443                           ; BSR set to: 0
  7444   00272C  0E01               	movlw	1
  7445   00272E  6F65               	movwf	___flmul@aexp& (0+255),b
  7446   002730  EFA3  F013         	goto	l825
  7447   002734                     l826:
  7448                           
  7449                           ; BSR set to: 0
  7450   002734  A167               	btfss	___flmul@prod& (0+255),0,b
  7451   002736  EF9F  F013         	goto	u2681
  7452   00273A  EFA1  F013         	goto	u2680
  7453   00273E                     u2681:
  7454   00273E  EFA3  F013         	goto	l825
  7455   002742                     u2680:
  7456   002742  EF96  F013         	goto	l2840
  7457   002746                     l825:
  7458                           
  7459                           ; BSR set to: 0
  7460   002746  5165               	movf	___flmul@aexp& (0+255),w,b
  7461   002748  B4D8               	btfsc	status,2,c
  7462   00274A  EFA9  F013         	goto	u2691
  7463   00274E  EFAB  F013         	goto	u2690
  7464   002752                     u2691:
  7465   002752  EFCF  F013         	goto	l2852
  7466   002756                     u2690:
  7467   002756                     
  7468                           ; BSR set to: 0
  7469   002756  0E01               	movlw	1
  7470   002758  2767               	addwf	___flmul@prod& (0+255),f,b
  7471   00275A  0E00               	movlw	0
  7472   00275C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7473   00275E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7474   002760  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7475   002762                     
  7476                           ; BSR set to: 0
  7477   002762  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  7478   002764  EFB6  F013         	goto	u2701
  7479   002768  EFB8  F013         	goto	u2700
  7480   00276C                     u2701:
  7481   00276C  EFCF  F013         	goto	l2852
  7482   002770                     u2700:
  7483   002770                     
  7484                           ; BSR set to: 0
  7485   002770  C067  F053         	movff	___flmul@prod,??___flmul
  7486   002774  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  7487   002778  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  7488   00277C  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  7489   002780  3456               	rlcf	(??___flmul+3)^0,w,c
  7490   002782  3256               	rrcf	(??___flmul+3)^0,f,c
  7491   002784  3255               	rrcf	(??___flmul+2)^0,f,c
  7492   002786  3254               	rrcf	(??___flmul+1)^0,f,c
  7493   002788  3253               	rrcf	??___flmul^0,f,c
  7494   00278A  C053  F067         	movff	??___flmul,___flmul@prod
  7495   00278E  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  7496   002792  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  7497   002796  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  7498   00279A                     
  7499                           ; BSR set to: 0
  7500   00279A  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  7501   00279C  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  7502   00279E                     l2852:
  7503                           
  7504                           ; BSR set to: 0
  7505   00279E  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7506   0027A0  EFDA  F013         	goto	u2711
  7507   0027A4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7508   0027A6  E108               	bnz	u2710
  7509   0027A8  296B               	incf	___flmul@temp& (0+255),w,b
  7510   0027AA  A0D8               	btfss	status,0,c
  7511   0027AC  EFDA  F013         	goto	u2711
  7512   0027B0  EFDC  F013         	goto	u2710
  7513   0027B4                     u2711:
  7514   0027B4  EFE6  F013         	goto	l2856
  7515   0027B8                     u2710:
  7516   0027B8                     
  7517                           ; BSR set to: 0
  7518   0027B8  0E00               	movlw	0
  7519   0027BA  6F67               	movwf	___flmul@prod& (0+255),b
  7520   0027BC  0E00               	movlw	0
  7521   0027BE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7522   0027C0  0E80               	movlw	128
  7523   0027C2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7524   0027C4  0E7F               	movlw	127
  7525   0027C6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7526   0027C8  EF14  F014         	goto	l2868
  7527   0027CC                     l2856:
  7528                           
  7529                           ; BSR set to: 0
  7530   0027CC  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7531   0027CE  EFF3  F013         	goto	u2720
  7532   0027D2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7533   0027D4  E106               	bnz	u2721
  7534   0027D6  056B               	decf	___flmul@temp& (0+255),w,b
  7535   0027D8  B0D8               	btfsc	status,0,c
  7536   0027DA  EFF1  F013         	goto	u2721
  7537   0027DE  EFF3  F013         	goto	u2720
  7538   0027E2                     u2721:
  7539   0027E2  EFFF  F013         	goto	l833
  7540   0027E6                     u2720:
  7541   0027E6                     
  7542                           ; BSR set to: 0
  7543   0027E6  0E00               	movlw	0
  7544   0027E8  6F67               	movwf	___flmul@prod& (0+255),b
  7545   0027EA  0E00               	movlw	0
  7546   0027EC  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7547   0027EE  0E00               	movlw	0
  7548   0027F0  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7549   0027F2  0E00               	movlw	0
  7550   0027F4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7551   0027F6  0E00               	movlw	0
  7552   0027F8  6F60               	movwf	___flmul@sign& (0+255),b
  7553   0027FA  EF14  F014         	goto	l2868
  7554   0027FE                     l833:
  7555                           
  7556                           ; BSR set to: 0
  7557   0027FE  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  7558   002802                     
  7559                           ; BSR set to: 0
  7560   002802  0EFF               	movlw	255
  7561   002804  1767               	andwf	___flmul@prod& (0+255),f,b
  7562   002806  0EFF               	movlw	255
  7563   002808  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7564   00280A  0E7F               	movlw	127
  7565   00280C  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7566   00280E  0E00               	movlw	0
  7567   002810  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7568   002812                     
  7569                           ; BSR set to: 0
  7570   002812  A166               	btfss	___flmul@bexp& (0+255),0,b
  7571   002814  EF0E  F014         	goto	u2731
  7572   002818  EF10  F014         	goto	u2730
  7573   00281C                     u2731:
  7574   00281C  EF11  F014         	goto	l2866
  7575   002820                     u2730:
  7576   002820                     
  7577                           ; BSR set to: 0
  7578   002820  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  7579   002822                     l2866:
  7580                           
  7581                           ; BSR set to: 0
  7582   002822  90D8               	bcf	status,0,c
  7583   002824  3166               	rrcf	___flmul@bexp& (0+255),w,b
  7584   002826  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7585   002828                     l2868:
  7586                           
  7587                           ; BSR set to: 0
  7588   002828  5160               	movf	___flmul@sign& (0+255),w,b
  7589   00282A  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7590   00282C                     
  7591                           ; BSR set to: 0
  7592   00282C  C067  F04B         	movff	___flmul@prod,?___flmul
  7593   002830  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  7594   002834  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  7595   002838  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  7596   00283C                     l820:
  7597                           
  7598                           ; BSR set to: 0
  7599   00283C  0012               	return		;funcret
  7600   00283E                     __end_of___flmul:
  7601                           	callstack 0
  7602                           
  7603 ;; *************** function ___flge *****************
  7604 ;; Defined at:
  7605 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  ff1             4   86[COMRAM] unsigned char 
  7608 ;;  ff2             4   90[COMRAM] unsigned char 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;		None               void
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7623 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7624 ;;Total ram usage:       12 bytes
  7625 ;; Hardware stack levels used: 1
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_RGB2Hue
  7630 ;;		_efgtoa
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text37
  7635   0032D4                     __ptext37:
  7636                           	callstack 0
  7637   0032D4                     ___flge:
  7638                           	callstack 29
  7639   0032D4  0E00               	movlw	0
  7640   0032D6  1457               	andwf	___flge@ff1^0,w,c
  7641   0032D8  0100               	movlb	0	; () banked
  7642   0032DA  6F6D               	movwf	??___flge& (0+255),b
  7643   0032DC  0E00               	movlw	0
  7644   0032DE  1458               	andwf	(___flge@ff1+1)^0,w,c
  7645   0032E0  6F6E               	movwf	(??___flge+1)& (0+255),b
  7646   0032E2  0E80               	movlw	128
  7647   0032E4  1459               	andwf	(___flge@ff1+2)^0,w,c
  7648   0032E6  6F6F               	movwf	(??___flge+2)& (0+255),b
  7649   0032E8  0E7F               	movlw	127
  7650   0032EA  145A               	andwf	(___flge@ff1+3)^0,w,c
  7651   0032EC  6F70               	movwf	(??___flge+3)& (0+255),b
  7652   0032EE  516D               	movf	??___flge& (0+255),w,b
  7653   0032F0  116E               	iorwf	(??___flge+1)& (0+255),w,b
  7654   0032F2  116F               	iorwf	(??___flge+2)& (0+255),w,b
  7655   0032F4  1170               	iorwf	(??___flge+3)& (0+255),w,b
  7656   0032F6  A4D8               	btfss	status,2,c
  7657   0032F8  EF80  F019         	goto	u2771
  7658   0032FC  EF82  F019         	goto	u2770
  7659   003300                     u2771:
  7660   003300  EF8A  F019         	goto	l2900
  7661   003304                     u2770:
  7662   003304                     
  7663                           ; BSR set to: 0
  7664   003304  0E00               	movlw	0
  7665   003306  6E57               	movwf	___flge@ff1^0,c
  7666   003308  0E00               	movlw	0
  7667   00330A  6E58               	movwf	(___flge@ff1+1)^0,c
  7668   00330C  0E00               	movlw	0
  7669   00330E  6E59               	movwf	(___flge@ff1+2)^0,c
  7670   003310  0E00               	movlw	0
  7671   003312  6E5A               	movwf	(___flge@ff1+3)^0,c
  7672   003314                     l2900:
  7673                           
  7674                           ; BSR set to: 0
  7675   003314  0E00               	movlw	0
  7676   003316  145B               	andwf	___flge@ff2^0,w,c
  7677   003318  6F6D               	movwf	??___flge& (0+255),b
  7678   00331A  0E00               	movlw	0
  7679   00331C  145C               	andwf	(___flge@ff2+1)^0,w,c
  7680   00331E  6F6E               	movwf	(??___flge+1)& (0+255),b
  7681   003320  0E80               	movlw	128
  7682   003322  145D               	andwf	(___flge@ff2+2)^0,w,c
  7683   003324  6F6F               	movwf	(??___flge+2)& (0+255),b
  7684   003326  0E7F               	movlw	127
  7685   003328  145E               	andwf	(___flge@ff2+3)^0,w,c
  7686   00332A  6F70               	movwf	(??___flge+3)& (0+255),b
  7687   00332C  516D               	movf	??___flge& (0+255),w,b
  7688   00332E  116E               	iorwf	(??___flge+1)& (0+255),w,b
  7689   003330  116F               	iorwf	(??___flge+2)& (0+255),w,b
  7690   003332  1170               	iorwf	(??___flge+3)& (0+255),w,b
  7691   003334  A4D8               	btfss	status,2,c
  7692   003336  EF9F  F019         	goto	u2781
  7693   00333A  EFA1  F019         	goto	u2780
  7694   00333E                     u2781:
  7695   00333E  EFA9  F019         	goto	l2904
  7696   003342                     u2780:
  7697   003342                     
  7698                           ; BSR set to: 0
  7699   003342  0E00               	movlw	0
  7700   003344  6E5B               	movwf	___flge@ff2^0,c
  7701   003346  0E00               	movlw	0
  7702   003348  6E5C               	movwf	(___flge@ff2+1)^0,c
  7703   00334A  0E00               	movlw	0
  7704   00334C  6E5D               	movwf	(___flge@ff2+2)^0,c
  7705   00334E  0E00               	movlw	0
  7706   003350  6E5E               	movwf	(___flge@ff2+3)^0,c
  7707   003352                     l2904:
  7708                           
  7709                           ; BSR set to: 0
  7710   003352  AE5A               	btfss	(___flge@ff1+3)^0,7,c
  7711   003354  EFAE  F019         	goto	u2791
  7712   003358  EFB0  F019         	goto	u2790
  7713   00335C                     u2791:
  7714   00335C  EFB9  F019         	goto	l2908
  7715   003360                     u2790:
  7716   003360                     
  7717                           ; BSR set to: 0
  7718   003360  6C57               	negf	___flge@ff1^0,c
  7719   003362  1E58               	comf	(___flge@ff1+1)^0,f,c
  7720   003364  B0D8               	btfsc	status,0,c
  7721   003366  2A58               	incf	(___flge@ff1+1)^0,f,c
  7722   003368  1E59               	comf	(___flge@ff1+2)^0,f,c
  7723   00336A  B0D8               	btfsc	status,0,c
  7724   00336C  2A59               	incf	(___flge@ff1+2)^0,f,c
  7725   00336E  0E80               	movlw	128
  7726   003370  565A               	subfwb	(___flge@ff1+3)^0,f,c
  7727   003372                     l2908:
  7728                           
  7729                           ; BSR set to: 0
  7730   003372  AE5E               	btfss	(___flge@ff2+3)^0,7,c
  7731   003374  EFBE  F019         	goto	u2801
  7732   003378  EFC0  F019         	goto	u2800
  7733   00337C                     u2801:
  7734   00337C  EFC9  F019         	goto	l467
  7735   003380                     u2800:
  7736   003380                     
  7737                           ; BSR set to: 0
  7738   003380  6C5B               	negf	___flge@ff2^0,c
  7739   003382  1E5C               	comf	(___flge@ff2+1)^0,f,c
  7740   003384  B0D8               	btfsc	status,0,c
  7741   003386  2A5C               	incf	(___flge@ff2+1)^0,f,c
  7742   003388  1E5D               	comf	(___flge@ff2+2)^0,f,c
  7743   00338A  B0D8               	btfsc	status,0,c
  7744   00338C  2A5D               	incf	(___flge@ff2+2)^0,f,c
  7745   00338E  0E80               	movlw	128
  7746   003390  565E               	subfwb	(___flge@ff2+3)^0,f,c
  7747   003392                     l467:
  7748                           
  7749                           ; BSR set to: 0
  7750   003392  0E00               	movlw	0
  7751   003394  1A57               	xorwf	___flge@ff1^0,f,c
  7752   003396  0E00               	movlw	0
  7753   003398  1A58               	xorwf	(___flge@ff1+1)^0,f,c
  7754   00339A  0E00               	movlw	0
  7755   00339C  1A59               	xorwf	(___flge@ff1+2)^0,f,c
  7756   00339E  0E80               	movlw	128
  7757   0033A0  1A5A               	xorwf	(___flge@ff1+3)^0,f,c
  7758   0033A2  0E00               	movlw	0
  7759   0033A4  1A5B               	xorwf	___flge@ff2^0,f,c
  7760   0033A6  0E00               	movlw	0
  7761   0033A8  1A5C               	xorwf	(___flge@ff2+1)^0,f,c
  7762   0033AA  0E00               	movlw	0
  7763   0033AC  1A5D               	xorwf	(___flge@ff2+2)^0,f,c
  7764   0033AE  0E80               	movlw	128
  7765   0033B0  1A5E               	xorwf	(___flge@ff2+3)^0,f,c
  7766   0033B2  505B               	movf	___flge@ff2^0,w,c
  7767   0033B4  5C57               	subwf	___flge@ff1^0,w,c
  7768   0033B6  505C               	movf	(___flge@ff2+1)^0,w,c
  7769   0033B8  5858               	subwfb	(___flge@ff1+1)^0,w,c
  7770   0033BA  505D               	movf	(___flge@ff2+2)^0,w,c
  7771   0033BC  5859               	subwfb	(___flge@ff1+2)^0,w,c
  7772   0033BE  505E               	movf	(___flge@ff2+3)^0,w,c
  7773   0033C0  585A               	subwfb	(___flge@ff1+3)^0,w,c
  7774   0033C2  B0D8               	btfsc	status,0,c
  7775   0033C4  EFE6  F019         	goto	u2811
  7776   0033C8  EFE8  F019         	goto	u2810
  7777   0033CC                     u2811:
  7778   0033CC  EFEB  F019         	goto	l2914
  7779   0033D0                     u2810:
  7780   0033D0                     
  7781                           ; BSR set to: 0
  7782   0033D0  90D8               	bcf	status,0,c
  7783   0033D2  EFEC  F019         	goto	l472
  7784   0033D6                     l2914:
  7785                           
  7786                           ; BSR set to: 0
  7787   0033D6  80D8               	bsf	status,0,c
  7788   0033D8                     l472:
  7789                           
  7790                           ; BSR set to: 0
  7791   0033D8  0012               	return		;funcret
  7792   0033DA                     __end_of___flge:
  7793                           	callstack 0
  7794                           
  7795 ;; *************** function ___fleq *****************
  7796 ;; Defined at:
  7797 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  ff1             4    0[COMRAM] unsigned char 
  7800 ;;  ff2             4    4[COMRAM] unsigned char 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;		None               void
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7812 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;Total ram usage:       12 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_RGB2Hue
  7822 ;;		_efgtoa
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text38
  7827   00367C                     __ptext38:
  7828                           	callstack 0
  7829   00367C                     ___fleq:
  7830                           	callstack 29
  7831   00367C  0E00               	movlw	0
  7832   00367E  1401               	andwf	___fleq@ff1^0,w,c
  7833   003680  6E09               	movwf	??___fleq^0,c
  7834   003682  0E00               	movlw	0
  7835   003684  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7836   003686  6E0A               	movwf	(??___fleq+1)^0,c
  7837   003688  0E80               	movlw	128
  7838   00368A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7839   00368C  6E0B               	movwf	(??___fleq+2)^0,c
  7840   00368E  0E7F               	movlw	127
  7841   003690  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7842   003692  6E0C               	movwf	(??___fleq+3)^0,c
  7843   003694  5009               	movf	??___fleq^0,w,c
  7844   003696  100A               	iorwf	(??___fleq+1)^0,w,c
  7845   003698  100B               	iorwf	(??___fleq+2)^0,w,c
  7846   00369A  100C               	iorwf	(??___fleq+3)^0,w,c
  7847   00369C  A4D8               	btfss	status,2,c
  7848   00369E  EF53  F01B         	goto	u2741
  7849   0036A2  EF55  F01B         	goto	u2740
  7850   0036A6                     u2741:
  7851   0036A6  EF5D  F01B         	goto	l2884
  7852   0036AA                     u2740:
  7853   0036AA  0E00               	movlw	0
  7854   0036AC  6E01               	movwf	___fleq@ff1^0,c
  7855   0036AE  0E00               	movlw	0
  7856   0036B0  6E02               	movwf	(___fleq@ff1+1)^0,c
  7857   0036B2  0E00               	movlw	0
  7858   0036B4  6E03               	movwf	(___fleq@ff1+2)^0,c
  7859   0036B6  0E00               	movlw	0
  7860   0036B8  6E04               	movwf	(___fleq@ff1+3)^0,c
  7861   0036BA                     l2884:
  7862   0036BA  0E00               	movlw	0
  7863   0036BC  1405               	andwf	___fleq@ff2^0,w,c
  7864   0036BE  6E09               	movwf	??___fleq^0,c
  7865   0036C0  0E00               	movlw	0
  7866   0036C2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7867   0036C4  6E0A               	movwf	(??___fleq+1)^0,c
  7868   0036C6  0E80               	movlw	128
  7869   0036C8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7870   0036CA  6E0B               	movwf	(??___fleq+2)^0,c
  7871   0036CC  0E7F               	movlw	127
  7872   0036CE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7873   0036D0  6E0C               	movwf	(??___fleq+3)^0,c
  7874   0036D2  5009               	movf	??___fleq^0,w,c
  7875   0036D4  100A               	iorwf	(??___fleq+1)^0,w,c
  7876   0036D6  100B               	iorwf	(??___fleq+2)^0,w,c
  7877   0036D8  100C               	iorwf	(??___fleq+3)^0,w,c
  7878   0036DA  A4D8               	btfss	status,2,c
  7879   0036DC  EF72  F01B         	goto	u2751
  7880   0036E0  EF74  F01B         	goto	u2750
  7881   0036E4                     u2751:
  7882   0036E4  EF7C  F01B         	goto	l2888
  7883   0036E8                     u2750:
  7884   0036E8  0E00               	movlw	0
  7885   0036EA  6E05               	movwf	___fleq@ff2^0,c
  7886   0036EC  0E00               	movlw	0
  7887   0036EE  6E06               	movwf	(___fleq@ff2+1)^0,c
  7888   0036F0  0E00               	movlw	0
  7889   0036F2  6E07               	movwf	(___fleq@ff2+2)^0,c
  7890   0036F4  0E00               	movlw	0
  7891   0036F6  6E08               	movwf	(___fleq@ff2+3)^0,c
  7892   0036F8                     l2888:
  7893   0036F8  5005               	movf	___fleq@ff2^0,w,c
  7894   0036FA  1801               	xorwf	___fleq@ff1^0,w,c
  7895   0036FC  E10F               	bnz	u2760
  7896   0036FE  5006               	movf	(___fleq@ff2+1)^0,w,c
  7897   003700  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7898   003702  E10C               	bnz	u2760
  7899   003704  5007               	movf	(___fleq@ff2+2)^0,w,c
  7900   003706  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7901   003708  E109               	bnz	u2760
  7902   00370A  5008               	movf	(___fleq@ff2+3)^0,w,c
  7903   00370C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7904   00370E  B4D8               	btfsc	status,2,c
  7905   003710  EF8C  F01B         	goto	u2761
  7906   003714  EF8E  F01B         	goto	u2760
  7907   003718                     u2761:
  7908   003718  EF91  F01B         	goto	l2892
  7909   00371C                     u2760:
  7910   00371C  90D8               	bcf	status,0,c
  7911   00371E  EF92  F01B         	goto	l461
  7912   003722                     l2892:
  7913   003722  80D8               	bsf	status,0,c
  7914   003724                     l461:
  7915   003724  0012               	return		;funcret
  7916   003726                     __end_of___fleq:
  7917                           	callstack 0
  7918                           
  7919 ;; *************** function ___fldiv *****************
  7920 ;; Defined at:
  7921 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  b               4   49[COMRAM] unsigned char 
  7924 ;;  a               4   53[COMRAM] unsigned char 
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;  grs             4   68[COMRAM] unsigned long 
  7927 ;;  rem             4   61[COMRAM] unsigned long 
  7928 ;;  new_exp         2   66[COMRAM] short 
  7929 ;;  aexp            1   73[COMRAM] unsigned char 
  7930 ;;  bexp            1   72[COMRAM] unsigned char 
  7931 ;;  sign            1   65[COMRAM] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  4   49[COMRAM] unsigned char 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7941 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7945 ;;Total ram usage:       25 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_RGB2Hue
  7951 ;;		_efgtoa
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text39
  7956   00283E                     __ptext39:
  7957                           	callstack 0
  7958   00283E                     ___fldiv:
  7959                           	callstack 29
  7960   00283E  5035               	movf	(___fldiv@b+3)^0,w,c
  7961   002840  0B80               	andlw	128
  7962   002842  6E42               	movwf	___fldiv@sign^0,c
  7963   002844  5035               	movf	(___fldiv@b+3)^0,w,c
  7964   002846  2435               	addwf	(___fldiv@b+3)^0,w,c
  7965   002848  6E49               	movwf	___fldiv@bexp^0,c
  7966   00284A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  7967   00284C  EF2A  F014         	goto	u2321
  7968   002850  EF2C  F014         	goto	u2320
  7969   002854                     u2321:
  7970   002854  EF2D  F014         	goto	l2612
  7971   002858                     u2320:
  7972   002858  8049               	bsf	___fldiv@bexp^0,0,c
  7973   00285A                     l2612:
  7974   00285A  5049               	movf	___fldiv@bexp^0,w,c
  7975   00285C  B4D8               	btfsc	status,2,c
  7976   00285E  EF33  F014         	goto	u2331
  7977   002862  EF35  F014         	goto	u2330
  7978   002866                     u2331:
  7979   002866  EF4A  F014         	goto	l2622
  7980   00286A                     u2330:
  7981   00286A  2849               	incf	___fldiv@bexp^0,w,c
  7982   00286C  A4D8               	btfss	status,2,c
  7983   00286E  EF3B  F014         	goto	u2341
  7984   002872  EF3D  F014         	goto	u2340
  7985   002876                     u2341:
  7986   002876  EF45  F014         	goto	l2618
  7987   00287A                     u2340:
  7988   00287A  0E00               	movlw	0
  7989   00287C  6E32               	movwf	___fldiv@b^0,c
  7990   00287E  0E00               	movlw	0
  7991   002880  6E33               	movwf	(___fldiv@b+1)^0,c
  7992   002882  0E00               	movlw	0
  7993   002884  6E34               	movwf	(___fldiv@b+2)^0,c
  7994   002886  0E00               	movlw	0
  7995   002888  6E35               	movwf	(___fldiv@b+3)^0,c
  7996   00288A                     l2618:
  7997   00288A  8E34               	bsf	(___fldiv@b+2)^0,7,c
  7998   00288C  0E00               	movlw	0
  7999   00288E  6E35               	movwf	(___fldiv@b+3)^0,c
  8000   002890  EF52  F014         	goto	l2624
  8001   002894                     l2622:
  8002   002894  0E00               	movlw	0
  8003   002896  6E32               	movwf	___fldiv@b^0,c
  8004   002898  0E00               	movlw	0
  8005   00289A  6E33               	movwf	(___fldiv@b+1)^0,c
  8006   00289C  0E00               	movlw	0
  8007   00289E  6E34               	movwf	(___fldiv@b+2)^0,c
  8008   0028A0  0E00               	movlw	0
  8009   0028A2  6E35               	movwf	(___fldiv@b+3)^0,c
  8010   0028A4                     l2624:
  8011   0028A4  5039               	movf	(___fldiv@a+3)^0,w,c
  8012   0028A6  0B80               	andlw	128
  8013   0028A8  1A42               	xorwf	___fldiv@sign^0,f,c
  8014   0028AA  5039               	movf	(___fldiv@a+3)^0,w,c
  8015   0028AC  2439               	addwf	(___fldiv@a+3)^0,w,c
  8016   0028AE  6E4A               	movwf	___fldiv@aexp^0,c
  8017   0028B0  AE38               	btfss	(___fldiv@a+2)^0,7,c
  8018   0028B2  EF5D  F014         	goto	u2351
  8019   0028B6  EF5F  F014         	goto	u2350
  8020   0028BA                     u2351:
  8021   0028BA  EF60  F014         	goto	l2632
  8022   0028BE                     u2350:
  8023   0028BE  804A               	bsf	___fldiv@aexp^0,0,c
  8024   0028C0                     l2632:
  8025   0028C0  504A               	movf	___fldiv@aexp^0,w,c
  8026   0028C2  B4D8               	btfsc	status,2,c
  8027   0028C4  EF66  F014         	goto	u2361
  8028   0028C8  EF68  F014         	goto	u2360
  8029   0028CC                     u2361:
  8030   0028CC  EF7D  F014         	goto	l2642
  8031   0028D0                     u2360:
  8032   0028D0  284A               	incf	___fldiv@aexp^0,w,c
  8033   0028D2  A4D8               	btfss	status,2,c
  8034   0028D4  EF6E  F014         	goto	u2371
  8035   0028D8  EF70  F014         	goto	u2370
  8036   0028DC                     u2371:
  8037   0028DC  EF78  F014         	goto	l2638
  8038   0028E0                     u2370:
  8039   0028E0  0E00               	movlw	0
  8040   0028E2  6E36               	movwf	___fldiv@a^0,c
  8041   0028E4  0E00               	movlw	0
  8042   0028E6  6E37               	movwf	(___fldiv@a+1)^0,c
  8043   0028E8  0E00               	movlw	0
  8044   0028EA  6E38               	movwf	(___fldiv@a+2)^0,c
  8045   0028EC  0E00               	movlw	0
  8046   0028EE  6E39               	movwf	(___fldiv@a+3)^0,c
  8047   0028F0                     l2638:
  8048   0028F0  8E38               	bsf	(___fldiv@a+2)^0,7,c
  8049   0028F2  0E00               	movlw	0
  8050   0028F4  6E39               	movwf	(___fldiv@a+3)^0,c
  8051   0028F6  EF85  F014         	goto	l2644
  8052   0028FA                     l2642:
  8053   0028FA  0E00               	movlw	0
  8054   0028FC  6E36               	movwf	___fldiv@a^0,c
  8055   0028FE  0E00               	movlw	0
  8056   002900  6E37               	movwf	(___fldiv@a+1)^0,c
  8057   002902  0E00               	movlw	0
  8058   002904  6E38               	movwf	(___fldiv@a+2)^0,c
  8059   002906  0E00               	movlw	0
  8060   002908  6E39               	movwf	(___fldiv@a+3)^0,c
  8061   00290A                     l2644:
  8062   00290A  5036               	movf	___fldiv@a^0,w,c
  8063   00290C  1037               	iorwf	(___fldiv@a+1)^0,w,c
  8064   00290E  1038               	iorwf	(___fldiv@a+2)^0,w,c
  8065   002910  1039               	iorwf	(___fldiv@a+3)^0,w,c
  8066   002912  A4D8               	btfss	status,2,c
  8067   002914  EF8E  F014         	goto	u2381
  8068   002918  EF90  F014         	goto	u2380
  8069   00291C                     u2381:
  8070   00291C  EFA8  F014         	goto	l2656
  8071   002920                     u2380:
  8072   002920  0E00               	movlw	0
  8073   002922  6E32               	movwf	___fldiv@b^0,c
  8074   002924  0E00               	movlw	0
  8075   002926  6E33               	movwf	(___fldiv@b+1)^0,c
  8076   002928  0E00               	movlw	0
  8077   00292A  6E34               	movwf	(___fldiv@b+2)^0,c
  8078   00292C  0E00               	movlw	0
  8079   00292E  6E35               	movwf	(___fldiv@b+3)^0,c
  8080   002930  0E80               	movlw	128
  8081   002932  1234               	iorwf	(___fldiv@b+2)^0,f,c
  8082   002934  0E7F               	movlw	127
  8083   002936  1235               	iorwf	(___fldiv@b+3)^0,f,c
  8084   002938                     l2650:
  8085   002938  5042               	movf	___fldiv@sign^0,w,c
  8086   00293A  1235               	iorwf	(___fldiv@b+3)^0,f,c
  8087   00293C  C032  F032         	movff	___fldiv@b,?___fldiv
  8088   002940  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  8089   002944  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  8090   002948  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  8091   00294C  EFEB  F015         	goto	l784
  8092   002950                     l2656:
  8093   002950  5049               	movf	___fldiv@bexp^0,w,c
  8094   002952  A4D8               	btfss	status,2,c
  8095   002954  EFAE  F014         	goto	u2391
  8096   002958  EFB0  F014         	goto	u2390
  8097   00295C                     u2391:
  8098   00295C  EFBA  F014         	goto	l2664
  8099   002960                     u2390:
  8100   002960  0E00               	movlw	0
  8101   002962  6E32               	movwf	?___fldiv^0,c
  8102   002964  0E00               	movlw	0
  8103   002966  6E33               	movwf	(?___fldiv+1)^0,c
  8104   002968  0E00               	movlw	0
  8105   00296A  6E34               	movwf	(?___fldiv+2)^0,c
  8106   00296C  0E00               	movlw	0
  8107   00296E  6E35               	movwf	(?___fldiv+3)^0,c
  8108   002970  EFEB  F015         	goto	l784
  8109   002974                     l2664:
  8110   002974  504A               	movf	___fldiv@aexp^0,w,c
  8111   002976  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  8112   00297A  6A3B               	clrf	(??___fldiv+1)^0,c
  8113   00297C  5E3A               	subwf	??___fldiv^0,f,c
  8114   00297E  0E00               	movlw	0
  8115   002980  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  8116   002982  0E7F               	movlw	127
  8117   002984  243A               	addwf	??___fldiv^0,w,c
  8118   002986  6E43               	movwf	___fldiv@new_exp^0,c
  8119   002988  0E00               	movlw	0
  8120   00298A  203B               	addwfc	(??___fldiv+1)^0,w,c
  8121   00298C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  8122   00298E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  8123   002992  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  8124   002996  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  8125   00299A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  8126   00299E  0E00               	movlw	0
  8127   0029A0  6E32               	movwf	___fldiv@b^0,c
  8128   0029A2  0E00               	movlw	0
  8129   0029A4  6E33               	movwf	(___fldiv@b+1)^0,c
  8130   0029A6  0E00               	movlw	0
  8131   0029A8  6E34               	movwf	(___fldiv@b+2)^0,c
  8132   0029AA  0E00               	movlw	0
  8133   0029AC  6E35               	movwf	(___fldiv@b+3)^0,c
  8134   0029AE  0E00               	movlw	0
  8135   0029B0  6E45               	movwf	___fldiv@grs^0,c
  8136   0029B2  0E00               	movlw	0
  8137   0029B4  6E46               	movwf	(___fldiv@grs+1)^0,c
  8138   0029B6  0E00               	movlw	0
  8139   0029B8  6E47               	movwf	(___fldiv@grs+2)^0,c
  8140   0029BA  0E00               	movlw	0
  8141   0029BC  6E48               	movwf	(___fldiv@grs+3)^0,c
  8142   0029BE  0E00               	movlw	0
  8143   0029C0  6E4A               	movwf	___fldiv@aexp^0,c
  8144   0029C2  EF1B  F015         	goto	l786
  8145   0029C6                     l2674:
  8146   0029C6  504A               	movf	___fldiv@aexp^0,w,c
  8147   0029C8  B4D8               	btfsc	status,2,c
  8148   0029CA  EFE9  F014         	goto	u2401
  8149   0029CE  EFEB  F014         	goto	u2400
  8150   0029D2                     u2401:
  8151   0029D2  EF02  F015         	goto	l2682
  8152   0029D6                     u2400:
  8153   0029D6  90D8               	bcf	status,0,c
  8154   0029D8  363E               	rlcf	___fldiv@rem^0,f,c
  8155   0029DA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  8156   0029DC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  8157   0029DE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  8158   0029E0  90D8               	bcf	status,0,c
  8159   0029E2  3632               	rlcf	___fldiv@b^0,f,c
  8160   0029E4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  8161   0029E6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  8162   0029E8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  8163   0029EA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  8164   0029EC  EFFA  F014         	goto	u2411
  8165   0029F0  EFFC  F014         	goto	u2410
  8166   0029F4                     u2411:
  8167   0029F4  EFFD  F014         	goto	l789
  8168   0029F8                     u2410:
  8169   0029F8  8032               	bsf	___fldiv@b^0,0,c
  8170   0029FA                     l789:
  8171   0029FA  90D8               	bcf	status,0,c
  8172   0029FC  3645               	rlcf	___fldiv@grs^0,f,c
  8173   0029FE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  8174   002A00  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  8175   002A02  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  8176   002A04                     l2682:
  8177   002A04  5036               	movf	___fldiv@a^0,w,c
  8178   002A06  5C3E               	subwf	___fldiv@rem^0,w,c
  8179   002A08  5037               	movf	(___fldiv@a+1)^0,w,c
  8180   002A0A  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  8181   002A0C  5038               	movf	(___fldiv@a+2)^0,w,c
  8182   002A0E  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  8183   002A10  5039               	movf	(___fldiv@a+3)^0,w,c
  8184   002A12  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  8185   002A14  A0D8               	btfss	status,0,c
  8186   002A16  EF0F  F015         	goto	u2421
  8187   002A1A  EF11  F015         	goto	u2420
  8188   002A1E                     u2421:
  8189   002A1E  EF1A  F015         	goto	l2688
  8190   002A22                     u2420:
  8191   002A22  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  8192   002A24  5036               	movf	___fldiv@a^0,w,c
  8193   002A26  5E3E               	subwf	___fldiv@rem^0,f,c
  8194   002A28  5037               	movf	(___fldiv@a+1)^0,w,c
  8195   002A2A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  8196   002A2C  5038               	movf	(___fldiv@a+2)^0,w,c
  8197   002A2E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  8198   002A30  5039               	movf	(___fldiv@a+3)^0,w,c
  8199   002A32  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  8200   002A34                     l2688:
  8201   002A34  2A4A               	incf	___fldiv@aexp^0,f,c
  8202   002A36                     l786:
  8203   002A36  0E19               	movlw	25
  8204   002A38  644A               	cpfsgt	___fldiv@aexp^0,c
  8205   002A3A  EF21  F015         	goto	u2431
  8206   002A3E  EF23  F015         	goto	u2430
  8207   002A42                     u2431:
  8208   002A42  EFE3  F014         	goto	l2674
  8209   002A46                     u2430:
  8210   002A46  503E               	movf	___fldiv@rem^0,w,c
  8211   002A48  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  8212   002A4A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  8213   002A4C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  8214   002A4E  B4D8               	btfsc	status,2,c
  8215   002A50  EF2C  F015         	goto	u2441
  8216   002A54  EF2E  F015         	goto	u2440
  8217   002A58                     u2441:
  8218   002A58  EF46  F015         	goto	l2700
  8219   002A5C                     u2440:
  8220   002A5C  8045               	bsf	___fldiv@grs^0,0,c
  8221   002A5E  EF46  F015         	goto	l2700
  8222   002A62                     l2694:
  8223   002A62  90D8               	bcf	status,0,c
  8224   002A64  3632               	rlcf	___fldiv@b^0,f,c
  8225   002A66  3633               	rlcf	(___fldiv@b+1)^0,f,c
  8226   002A68  3634               	rlcf	(___fldiv@b+2)^0,f,c
  8227   002A6A  3635               	rlcf	(___fldiv@b+3)^0,f,c
  8228   002A6C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  8229   002A6E  EF3B  F015         	goto	u2451
  8230   002A72  EF3D  F015         	goto	u2450
  8231   002A76                     u2451:
  8232   002A76  EF3E  F015         	goto	l795
  8233   002A7A                     u2450:
  8234   002A7A  8032               	bsf	___fldiv@b^0,0,c
  8235   002A7C                     l795:
  8236   002A7C  90D8               	bcf	status,0,c
  8237   002A7E  3645               	rlcf	___fldiv@grs^0,f,c
  8238   002A80  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  8239   002A82  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  8240   002A84  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  8241   002A86  0643               	decf	___fldiv@new_exp^0,f,c
  8242   002A88  A0D8               	btfss	status,0,c
  8243   002A8A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  8244   002A8C                     l2700:
  8245   002A8C  AE34               	btfss	(___fldiv@b+2)^0,7,c
  8246   002A8E  EF4B  F015         	goto	u2461
  8247   002A92  EF4D  F015         	goto	u2460
  8248   002A96                     u2461:
  8249   002A96  EF31  F015         	goto	l2694
  8250   002A9A                     u2460:
  8251   002A9A  0E00               	movlw	0
  8252   002A9C  6E4A               	movwf	___fldiv@aexp^0,c
  8253   002A9E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  8254   002AA0  EF54  F015         	goto	u2471
  8255   002AA4  EF56  F015         	goto	u2470
  8256   002AA8                     u2471:
  8257   002AA8  EF7A  F015         	goto	l797
  8258   002AAC                     u2470:
  8259   002AAC  0EFF               	movlw	255
  8260   002AAE  1445               	andwf	___fldiv@grs^0,w,c
  8261   002AB0  6E3A               	movwf	??___fldiv^0,c
  8262   002AB2  0EFF               	movlw	255
  8263   002AB4  1446               	andwf	(___fldiv@grs+1)^0,w,c
  8264   002AB6  6E3B               	movwf	(??___fldiv+1)^0,c
  8265   002AB8  0EFF               	movlw	255
  8266   002ABA  1447               	andwf	(___fldiv@grs+2)^0,w,c
  8267   002ABC  6E3C               	movwf	(??___fldiv+2)^0,c
  8268   002ABE  0E7F               	movlw	127
  8269   002AC0  1448               	andwf	(___fldiv@grs+3)^0,w,c
  8270   002AC2  6E3D               	movwf	(??___fldiv+3)^0,c
  8271   002AC4  503A               	movf	??___fldiv^0,w,c
  8272   002AC6  103B               	iorwf	(??___fldiv+1)^0,w,c
  8273   002AC8  103C               	iorwf	(??___fldiv+2)^0,w,c
  8274   002ACA  103D               	iorwf	(??___fldiv+3)^0,w,c
  8275   002ACC  B4D8               	btfsc	status,2,c
  8276   002ACE  EF6B  F015         	goto	u2481
  8277   002AD2  EF6D  F015         	goto	u2480
  8278   002AD6                     u2481:
  8279   002AD6  EF71  F015         	goto	l798
  8280   002ADA                     u2480:
  8281   002ADA                     l2708:
  8282   002ADA  0E01               	movlw	1
  8283   002ADC  6E4A               	movwf	___fldiv@aexp^0,c
  8284   002ADE  EF7A  F015         	goto	l797
  8285   002AE2                     l798:
  8286   002AE2  A032               	btfss	___fldiv@b^0,0,c
  8287   002AE4  EF76  F015         	goto	u2491
  8288   002AE8  EF78  F015         	goto	u2490
  8289   002AEC                     u2491:
  8290   002AEC  EF7A  F015         	goto	l797
  8291   002AF0                     u2490:
  8292   002AF0  EF6D  F015         	goto	l2708
  8293   002AF4                     l797:
  8294   002AF4  504A               	movf	___fldiv@aexp^0,w,c
  8295   002AF6  B4D8               	btfsc	status,2,c
  8296   002AF8  EF80  F015         	goto	u2501
  8297   002AFC  EF82  F015         	goto	u2500
  8298   002B00                     u2501:
  8299   002B00  EFA6  F015         	goto	l2720
  8300   002B04                     u2500:
  8301   002B04  0E01               	movlw	1
  8302   002B06  2632               	addwf	___fldiv@b^0,f,c
  8303   002B08  0E00               	movlw	0
  8304   002B0A  2233               	addwfc	(___fldiv@b+1)^0,f,c
  8305   002B0C  2234               	addwfc	(___fldiv@b+2)^0,f,c
  8306   002B0E  2235               	addwfc	(___fldiv@b+3)^0,f,c
  8307   002B10  A035               	btfss	(___fldiv@b+3)^0,0,c
  8308   002B12  EF8D  F015         	goto	u2511
  8309   002B16  EF8F  F015         	goto	u2510
  8310   002B1A                     u2511:
  8311   002B1A  EFA6  F015         	goto	l2720
  8312   002B1E                     u2510:
  8313   002B1E  C032  F03A         	movff	___fldiv@b,??___fldiv
  8314   002B22  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  8315   002B26  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  8316   002B2A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  8317   002B2E  343D               	rlcf	(??___fldiv+3)^0,w,c
  8318   002B30  323D               	rrcf	(??___fldiv+3)^0,f,c
  8319   002B32  323C               	rrcf	(??___fldiv+2)^0,f,c
  8320   002B34  323B               	rrcf	(??___fldiv+1)^0,f,c
  8321   002B36  323A               	rrcf	??___fldiv^0,f,c
  8322   002B38  C03A  F032         	movff	??___fldiv,___fldiv@b
  8323   002B3C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  8324   002B40  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  8325   002B44  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  8326   002B48  4A43               	infsnz	___fldiv@new_exp^0,f,c
  8327   002B4A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  8328   002B4C                     l2720:
  8329   002B4C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8330   002B4E  EFB1  F015         	goto	u2521
  8331   002B52  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  8332   002B54  E108               	bnz	u2520
  8333   002B56  2843               	incf	___fldiv@new_exp^0,w,c
  8334   002B58  A0D8               	btfss	status,0,c
  8335   002B5A  EFB1  F015         	goto	u2521
  8336   002B5E  EFB3  F015         	goto	u2520
  8337   002B62                     u2521:
  8338   002B62  EFBE  F015         	goto	l2724
  8339   002B66                     u2520:
  8340   002B66  0E00               	movlw	0
  8341   002B68  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  8342   002B6A  6843               	setf	___fldiv@new_exp^0,c
  8343   002B6C  0E00               	movlw	0
  8344   002B6E  6E32               	movwf	___fldiv@b^0,c
  8345   002B70  0E00               	movlw	0
  8346   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
  8347   002B74  0E00               	movlw	0
  8348   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
  8349   002B78  0E00               	movlw	0
  8350   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
  8351   002B7C                     l2724:
  8352   002B7C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8353   002B7E  EFCB  F015         	goto	u2530
  8354   002B82  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  8355   002B84  E106               	bnz	u2531
  8356   002B86  0443               	decf	___fldiv@new_exp^0,w,c
  8357   002B88  B0D8               	btfsc	status,0,c
  8358   002B8A  EFC9  F015         	goto	u2531
  8359   002B8E  EFCB  F015         	goto	u2530
  8360   002B92                     u2531:
  8361   002B92  EFD9  F015         	goto	l2728
  8362   002B96                     u2530:
  8363   002B96  0E00               	movlw	0
  8364   002B98  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  8365   002B9A  0E00               	movlw	0
  8366   002B9C  6E43               	movwf	___fldiv@new_exp^0,c
  8367   002B9E  0E00               	movlw	0
  8368   002BA0  6E32               	movwf	___fldiv@b^0,c
  8369   002BA2  0E00               	movlw	0
  8370   002BA4  6E33               	movwf	(___fldiv@b+1)^0,c
  8371   002BA6  0E00               	movlw	0
  8372   002BA8  6E34               	movwf	(___fldiv@b+2)^0,c
  8373   002BAA  0E00               	movlw	0
  8374   002BAC  6E35               	movwf	(___fldiv@b+3)^0,c
  8375   002BAE  0E00               	movlw	0
  8376   002BB0  6E42               	movwf	___fldiv@sign^0,c
  8377   002BB2                     l2728:
  8378   002BB2  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  8379   002BB6  A049               	btfss	___fldiv@bexp^0,0,c
  8380   002BB8  EFE0  F015         	goto	u2541
  8381   002BBC  EFE2  F015         	goto	u2540
  8382   002BC0                     u2541:
  8383   002BC0  EFE5  F015         	goto	l2734
  8384   002BC4                     u2540:
  8385   002BC4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  8386   002BC6  EFE6  F015         	goto	l2736
  8387   002BCA                     l2734:
  8388   002BCA  9E34               	bcf	(___fldiv@b+2)^0,7,c
  8389   002BCC                     l2736:
  8390   002BCC  90D8               	bcf	status,0,c
  8391   002BCE  3049               	rrcf	___fldiv@bexp^0,w,c
  8392   002BD0  6E35               	movwf	(___fldiv@b+3)^0,c
  8393   002BD2  EF9C  F014         	goto	l2650
  8394   002BD6                     l784:
  8395   002BD6  0012               	return		;funcret
  8396   002BD8                     __end_of___fldiv:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function _sendStringSerial4 *****************
  8400 ;; Defined at:
  8401 ;;		line 47 in file "serial.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  string          2    1[COMRAM] PTR unsigned char 
  8404 ;;		 -> main@data(60), 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;Total ram usage:        2 bytes
  8421 ;; Hardware stack levels used: 1
  8422 ;; Hardware stack levels required when called: 1
  8423 ;; This function calls:
  8424 ;;		_sendCharSerial4
  8425 ;; This function is called by:
  8426 ;;		_Color2String
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text40
  8431   003CBE                     __ptext40:
  8432                           	callstack 0
  8433   003CBE                     _sendStringSerial4:
  8434                           	callstack 28
  8435   003CBE                     
  8436                           ;serial.c: 50:     while(*string != 0){
  8437   003CBE  EF6E  F01E         	goto	l3452
  8438   003CC2                     l3446:
  8439                           
  8440                           ;serial.c: 52:   sendCharSerial4(*string++);
  8441   003CC2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8442   003CC6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8443   003CCA  50DF               	movf	indf2,w,c
  8444   003CCC  ECD4  F01E         	call	_sendCharSerial4
  8445   003CD0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8446   003CD2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8447   003CD4                     
  8448                           ;serial.c: 53:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  8449   003CD4  0E6A               	movlw	106
  8450   003CD6                     u3767:
  8451   003CD6  2EE8               	decfsz	wreg,f,c
  8452   003CD8  D7FE               	bra	u3767
  8453   003CDA  D000               	nop2	
  8454   003CDC                     l3452:
  8455                           
  8456                           ;serial.c: 50:     while(*string != 0){
  8457   003CDC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8458   003CE0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8459   003CE4  50DF               	movf	indf2,w,c
  8460   003CE6  A4D8               	btfss	status,2,c
  8461   003CE8  EF78  F01E         	goto	u3521
  8462   003CEC  EF7A  F01E         	goto	u3520
  8463   003CF0                     u3521:
  8464   003CF0  EF61  F01E         	goto	l3446
  8465   003CF4                     u3520:
  8466   003CF4  0012               	return		;funcret
  8467   003CF6                     __end_of_sendStringSerial4:
  8468                           	callstack 0
  8469                           
  8470 ;; *************** function _sendCharSerial4 *****************
  8471 ;; Defined at:
  8472 ;;		line 33 in file "serial.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  charToSend      1    wreg     unsigned char 
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;  charToSend      1    0[COMRAM] unsigned char 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;Total ram usage:        1 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_sendStringSerial4
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text41
  8500   003DA8                     __ptext41:
  8501                           	callstack 0
  8502   003DA8                     _sendCharSerial4:
  8503                           	callstack 28
  8504                           
  8505                           ;incstack = 0
  8506                           ;sendCharSerial4@charToSend stored from wreg
  8507   003DA8  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8508   003DAA                     l187:
  8509   003DAA  010E               	movlb	14	; () banked
  8510   003DAC  A537               	btfss	55,2,b	;volatile
  8511   003DAE  EFDB  F01E         	goto	u3501
  8512   003DB2  EFDD  F01E         	goto	u3500
  8513   003DB6                     u3501:
  8514   003DB6  EFD5  F01E         	goto	l187
  8515   003DBA                     u3500:
  8516   003DBA                     
  8517                           ; BSR set to: 14
  8518                           ;serial.c: 35:     TX4REG = charToSend;
  8519   003DBA  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8520   003DBE                     
  8521                           ; BSR set to: 14
  8522   003DBE  0012               	return		;funcret
  8523   003DC0                     __end_of_sendCharSerial4:
  8524                           	callstack 0
  8525                           
  8526                           	psect	rparam
  8527   000000                     
  8528                           	psect	idloc
  8529                           
  8530                           ;Config register IDLOC0 @ 0x200000
  8531                           ;	unspecified, using default values
  8532   200000                     	org	2097152
  8533   200000  0FFF               	dw	4095
  8534                           
  8535                           ;Config register IDLOC1 @ 0x200002
  8536                           ;	unspecified, using default values
  8537   200002                     	org	2097154
  8538   200002  0FFF               	dw	4095
  8539                           
  8540                           ;Config register IDLOC2 @ 0x200004
  8541                           ;	unspecified, using default values
  8542   200004                     	org	2097156
  8543   200004  0FFF               	dw	4095
  8544                           
  8545                           ;Config register IDLOC3 @ 0x200006
  8546                           ;	unspecified, using default values
  8547   200006                     	org	2097158
  8548   200006  0FFF               	dw	4095
  8549                           
  8550                           ;Config register IDLOC4 @ 0x200008
  8551                           ;	unspecified, using default values
  8552   200008                     	org	2097160
  8553   200008  0FFF               	dw	4095
  8554                           
  8555                           ;Config register IDLOC5 @ 0x20000A
  8556                           ;	unspecified, using default values
  8557   20000A                     	org	2097162
  8558   20000A  0FFF               	dw	4095
  8559                           
  8560                           ;Config register IDLOC6 @ 0x20000C
  8561                           ;	unspecified, using default values
  8562   20000C                     	org	2097164
  8563   20000C  0FFF               	dw	4095
  8564                           
  8565                           ;Config register IDLOC7 @ 0x20000E
  8566                           ;	unspecified, using default values
  8567   20000E                     	org	2097166
  8568   20000E  0FFF               	dw	4095
  8569                           
  8570                           	psect	config
  8571                           
  8572                           ;Config register CONFIG1L @ 0x300000
  8573                           ;	External Oscillator mode Selection bits
  8574                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8575                           ;	Power-up default value for COSC bits
  8576                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8577   300000                     	org	3145728
  8578   300000  AA                 	db	170
  8579                           
  8580                           ;Config register CONFIG1H @ 0x300001
  8581                           ;	unspecified, using default values
  8582                           ;	Clock Out Enable bit
  8583                           ;	CLKOUTEN = 0x1, unprogrammed default
  8584                           ;	Clock Switch Enable bit
  8585                           ;	CSWEN = 0x1, unprogrammed default
  8586                           ;	Fail-Safe Clock Monitor Enable bit
  8587                           ;	FCMEN = 0x1, unprogrammed default
  8588   300001                     	org	3145729
  8589   300001  FF                 	db	255
  8590                           
  8591                           ;Config register CONFIG2L @ 0x300002
  8592                           ;	unspecified, using default values
  8593                           ;	Master Clear Enable bit
  8594                           ;	MCLRE = 0x1, unprogrammed default
  8595                           ;	Power-up Timer Enable bit
  8596                           ;	PWRTE = 0x1, unprogrammed default
  8597                           ;	Low-power BOR enable bit
  8598                           ;	LPBOREN = 0x1, unprogrammed default
  8599                           ;	Brown-out Reset Enable bits
  8600                           ;	BOREN = 0x3, unprogrammed default
  8601   300002                     	org	3145730
  8602   300002  FF                 	db	255
  8603                           
  8604                           ;Config register CONFIG2H @ 0x300003
  8605                           ;	unspecified, using default values
  8606                           ;	Brown Out Reset Voltage selection bits
  8607                           ;	BORV = 0x3, unprogrammed default
  8608                           ;	ZCD Disable bit
  8609                           ;	ZCD = 0x1, unprogrammed default
  8610                           ;	PPSLOCK bit One-Way Set Enable bit
  8611                           ;	PPS1WAY = 0x1, unprogrammed default
  8612                           ;	Stack Full/Underflow Reset Enable bit
  8613                           ;	STVREN = 0x1, unprogrammed default
  8614                           ;	Debugger Enable bit
  8615                           ;	DEBUG = 0x1, unprogrammed default
  8616                           ;	Extended Instruction Set Enable bit
  8617                           ;	XINST = 0x1, unprogrammed default
  8618   300003                     	org	3145731
  8619   300003  FF                 	db	255
  8620                           
  8621                           ;Config register CONFIG3L @ 0x300004
  8622                           ;	WDT Period Select bits
  8623                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8624                           ;	WDT operating mode
  8625                           ;	WDTE = OFF, WDT Disabled
  8626   300004                     	org	3145732
  8627   300004  9F                 	db	159
  8628                           
  8629                           ;Config register CONFIG3H @ 0x300005
  8630                           ;	unspecified, using default values
  8631                           ;	WDT Window Select bits
  8632                           ;	WDTCWS = 0x7, unprogrammed default
  8633                           ;	WDT input clock selector
  8634                           ;	WDTCCS = 0x7, unprogrammed default
  8635   300005                     	org	3145733
  8636   300005  FF                 	db	255
  8637                           
  8638                           ;Config register CONFIG4L @ 0x300006
  8639                           ;	unspecified, using default values
  8640                           ;	Write Protection Block 0
  8641                           ;	WRT0 = 0x1, unprogrammed default
  8642                           ;	Write Protection Block 1
  8643                           ;	WRT1 = 0x1, unprogrammed default
  8644                           ;	Write Protection Block 2
  8645                           ;	WRT2 = 0x1, unprogrammed default
  8646                           ;	Write Protection Block 3
  8647                           ;	WRT3 = 0x1, unprogrammed default
  8648                           ;	Write Protection Block 3
  8649                           ;	WRT4 = 0x1, unprogrammed default
  8650                           ;	Write Protection Block 3
  8651                           ;	WRT5 = 0x1, unprogrammed default
  8652                           ;	Write Protection Block 3
  8653                           ;	WRT6 = 0x1, unprogrammed default
  8654                           ;	Write Protection Block 3
  8655                           ;	WRT7 = 0x1, unprogrammed default
  8656   300006                     	org	3145734
  8657   300006  FF                 	db	255
  8658                           
  8659                           ;Config register CONFIG4H @ 0x300007
  8660                           ;	unspecified, using default values
  8661                           ;	Configuration Register Write Protection bit
  8662                           ;	WRTC = 0x1, unprogrammed default
  8663                           ;	Boot Block Write Protection bit
  8664                           ;	WRTB = 0x1, unprogrammed default
  8665                           ;	Data EEPROM Write Protection bit
  8666                           ;	WRTD = 0x1, unprogrammed default
  8667                           ;	Scanner Enable bit
  8668                           ;	SCANE = 0x1, unprogrammed default
  8669                           ;	Low Voltage Programming Enable bit
  8670                           ;	LVP = 0x1, unprogrammed default
  8671   300007                     	org	3145735
  8672   300007  FF                 	db	255
  8673                           
  8674                           ;Config register CONFIG5L @ 0x300008
  8675                           ;	unspecified, using default values
  8676                           ;	UserNVM Program Memory Code Protection bit
  8677                           ;	CP = 0x1, unprogrammed default
  8678                           ;	DataNVM Memory Code Protection bit
  8679                           ;	CPD = 0x1, unprogrammed default
  8680   300008                     	org	3145736
  8681   300008  FF                 	db	255
  8682                           
  8683                           ;Config register CONFIG5H @ 0x300009
  8684                           ;	unspecified, using default values
  8685   300009                     	org	3145737
  8686   300009  FF                 	db	255
  8687                           
  8688                           ;Config register CONFIG6L @ 0x30000A
  8689                           ;	unspecified, using default values
  8690                           ;	Table Read Protection Block 0
  8691                           ;	EBTR0 = 0x1, unprogrammed default
  8692                           ;	Table Read Protection Block 1
  8693                           ;	EBTR1 = 0x1, unprogrammed default
  8694                           ;	Table Read Protection Block 2
  8695                           ;	EBTR2 = 0x1, unprogrammed default
  8696                           ;	Table Read Protection Block 3
  8697                           ;	EBTR3 = 0x1, unprogrammed default
  8698                           ;	Table Read Protection Block 4
  8699                           ;	EBTR4 = 0x1, unprogrammed default
  8700                           ;	Table Read Protection Block 5
  8701                           ;	EBTR5 = 0x1, unprogrammed default
  8702                           ;	Table Read Protection Block 6
  8703                           ;	EBTR6 = 0x1, unprogrammed default
  8704                           ;	Table Read Protection Block 7
  8705                           ;	EBTR7 = 0x1, unprogrammed default
  8706   30000A                     	org	3145738
  8707   30000A  FF                 	db	255
  8708                           
  8709                           ;Config register CONFIG6H @ 0x30000B
  8710                           ;	unspecified, using default values
  8711                           ;	Boot Block Table Read Protection bit
  8712                           ;	EBTRB = 0x1, unprogrammed default
  8713   30000B                     	org	3145739
  8714   30000B  FF                 	db	255
  8715                           tosu	equ	0xFFF
  8716                           tosh	equ	0xFFE
  8717                           tosl	equ	0xFFD
  8718                           stkptr	equ	0xFFC
  8719                           pclatu	equ	0xFFB
  8720                           pclath	equ	0xFFA
  8721                           pcl	equ	0xFF9
  8722                           tblptru	equ	0xFF8
  8723                           tblptrh	equ	0xFF7
  8724                           tblptrl	equ	0xFF6
  8725                           tablat	equ	0xFF5
  8726                           prodh	equ	0xFF4
  8727                           prodl	equ	0xFF3
  8728                           indf0	equ	0xFEF
  8729                           postinc0	equ	0xFEE
  8730                           postdec0	equ	0xFED
  8731                           preinc0	equ	0xFEC
  8732                           plusw0	equ	0xFEB
  8733                           fsr0h	equ	0xFEA
  8734                           fsr0l	equ	0xFE9
  8735                           wreg	equ	0xFE8
  8736                           indf1	equ	0xFE7
  8737                           postinc1	equ	0xFE6
  8738                           postdec1	equ	0xFE5
  8739                           preinc1	equ	0xFE4
  8740                           plusw1	equ	0xFE3
  8741                           fsr1h	equ	0xFE2
  8742                           fsr1l	equ	0xFE1
  8743                           bsr	equ	0xFE0
  8744                           indf2	equ	0xFDF
  8745                           postinc2	equ	0xFDE
  8746                           postdec2	equ	0xFDD
  8747                           preinc2	equ	0xFDC
  8748                           plusw2	equ	0xFDB
  8749                           fsr2h	equ	0xFDA
  8750                           fsr2l	equ	0xFD9
  8751                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    136     149
    BANK1           256     60     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1280$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1201$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1201$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 20
		 -> colorf(BANK1[20]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 20
		 -> colorf(BANK1[20]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 20
		 -> colorf(BANK1[20]), 


Critical Paths under _main in COMRAM

    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___flge
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___flsub
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_Color2String
    _RGB2Hue->___flge
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    ___flge->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   42131
                                            134 BANK0      2     2      0
                                              0 BANK1     60    60      0
                       _Color2String
                  _I2C_2_Master_Init
                            _RGB2Hue
                   _color_click_init
                    _colour_read_all
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    1518
                                             25 COMRAM    14    12      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16425
                                             17 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         4     0      4   23790
                                            130 BANK0      4     0      4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             35    15     20   23363
                                             97 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   23010
                                             89 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6   22660
                                             70 BANK0     19    13      6
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   21325
                                             17 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     751
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3477
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2708
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2798
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1574
                                             86 COMRAM     8     0      8
                                             13 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     842
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2301
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color2String
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
               ___xxtofl (ARG)
                 _color_read_Blue (ARG)
                   _I2C_2_Master_Read
                     _I2C_2_Master_Idle
                   _I2C_2_Master_RepStart
                     _I2C_2_Master_Idle
                   _I2C_2_Master_Start
                     _I2C_2_Master_Idle
                   _I2C_2_Master_Stop
                     _I2C_2_Master_Idle
                   _I2C_2_Master_Write
                     _I2C_2_Master_Idle
                 _color_read_Clear (ARG)
                   _I2C_2_Master_Read
                   _I2C_2_Master_RepStart
                   _I2C_2_Master_Start
                   _I2C_2_Master_Stop
                   _I2C_2_Master_Write
                 _color_read_Green (ARG)
                   _I2C_2_Master_Read
                   _I2C_2_Master_RepStart
                   _I2C_2_Master_Start
                   _I2C_2_Master_Stop
                   _I2C_2_Master_Write
                 _color_read_Red (ARG)
                   _I2C_2_Master_Read
                   _I2C_2_Master_RepStart
                   _I2C_2_Master_Start
                   _I2C_2_Master_Stop
                   _I2C_2_Master_Write
             ___fldiv
               ___fladd (ARG)
               ___flsub (ARG)
                 ___fladd
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flsub (ARG)
                 ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
   _I2C_2_Master_Init
   _RGB2Hue
     ___fladd
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      A0       7       62.5%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      95       5       93.1%
BITBIGSFRhlllh      8F      0       0      37        0.0%
BITBIGSFRhhh        78      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRlllhh      36      0       0      41        0.0%
BITBIGSFRllh        2D      0       0      40        0.0%
BITBIGSFRlllhll     2A      0       0      43        0.0%
BITBIGSFRlllll      26      0       0      46        0.0%
BITBIGSFRlllhll     19      0       0      44        0.0%
BITBIGSFRlllhlh      C      0       0      42        0.0%
BITBIGSFRhlllll      8      0       0      38        0.0%
BITBIGSFRllllh       6      0       0      45        0.0%
BITBIGSFRhllh        4      0       0      36        0.0%
BITBIGSFRhlhh        1      0       0      34        0.0%
BITBIGSFRhlhl        1      0       0      35        0.0%
BITBIGSFRhhl         1      0       0      33        0.0%
BITBIGSFRlh          1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     193      47        0.0%
DATA                 0      0     193       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 17:08:23 2023

               _color_read_Red 39A8                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 3A98                             l22 3D88  
                           l31 3AE6                             l25 39F6                             l34 3A96  
                           l19 3C84                             l28 3A46                             l53 1A84  
                           l61 1F50                             l47 35B0                             l91 3D20  
                           l94 3D46                             l88 3D1E                             l97 3DE8  
             _color_read_Clear 3A48               _color_read_Green 39F8                            l100 3DD4  
                          l103 3DDE                            l106 3DCA                            l109 3C46  
                          l190 3DBE                            l193 37B4                            l178 3D68  
                          l187 3DAA                            l461 3724                            l199 3CF4  
                          l472 33D8                            l730 2140                            l467 3392  
                          l731 212E                            l820 283C                            l476 3CBC  
                          l732 20F4                            l910 37D8                            l823 26CE  
                          l816 24D8                            l833 27FE                            l825 2746  
                          l826 2734                            l914 382E                            l930 1004  
                          l747 225A                            l739 2410                            l499 32D2  
                          l756 232A                            l772 3B7C                            l860 31CC  
                          l757 2318                            l925 1824                            l871 3164  
                          l784 2BD6                            l928 11BE                            l880 39A6  
                          l864 3108                            l857 3070                            l786 2A36  
                          l795 2A7C                            l797 2AF4                            l789 29FA  
                          l798 2AE2                            l958 1606                            l992 3954  
                          l985 2E06                            _pad 37B6                            wreg 000FE8  
                 ___flmul@aexp 0065                   ___flmul@bexp 0066                   ___flmul@sign 0060  
                 ___flmul@temp 006B                   ___flmul@prod 0067                __end_of_RGB2Hue 1F52  
                 ___fltol@exp1 000A                           l1002 34D6                           l1012 2F5C  
                         l1020 38EE                           l1023 38FE                           l1009 3018  
                         l1041 367A                           l1052 3DEA                           l1029 3B36  
                         l1049 3C04                           l3002 34CE                           l3010 389A  
                         l1058 3BC0                           l3020 2E92                           l3012 38B8  
                         l3100 0F86                           l3022 2EA0                           l3030 2F80  
                         l3014 2E08                           l3006 3B7E                           l3102 0F8A  
                         l2400 1F6C                           l3032 2FBC                           l3016 2E28  
                         l3008 3B8E                           l3200 152E                           l3120 1014  
                         l3104 0F90                           l2410 1FA0                           l2402 1F6E  
                         l3034 2FD0                           l3026 2F10                           l3018 2E7E  
                         l3050 3B18                           l3042 3AE8                           l3210 1558  
                         l3202 1532                           l3130 10FC                           l3122 101A  
                         l3106 0F98                           l3114 0FB4                           l2420 1FD2  
                         l2404 1F7E                           l2412 1FA8                           l3036 2FF8  
                         l3028 2F4C                           l3044 3AFC                           l3052 3B1C  
                         l3220 1626                           l3212 1564                           l3204 1542  
                         l3132 1110                           l3140 118C                           l3124 104E  
                         l3116 0FCE                           l3060 0E50                           l3300 2C5E  
                         l2510 21AA                           l2502 2172                           l2430 2008  
                         l2422 1FD8                           l2414 1FB8                           l2406 1F8E  
                         l3038 3008                           l3046 3B08                           l3230 1658  
                         l3222 1636                           l3214 15DC                           l3206 154A  
                         l3150 11F2                           l3142 11C6                           l3134 1144  
                         l3126 108C                           l3070 0E9A                           l3062 0E54  
                         l3054 0E2C                           l3310 2D1C                           l3302 2C90  
                         l2512 21AE                           l2504 2182                           l2520 21CE  
                         l2440 2044                           l2432 2018                           l2424 1FE6  
                         l2416 1FBE                           l2408 1F9E                           l3048 3B0C  
                         l2600 3BCE                           l3240 168C                           l3232 165C  
                         l3224 163A                           l3216 15FC                           l3208 1550  
                         l3160 1240                           l3152 11F6                           l3144 11D6  
                         l3136 114C                           l3128 10BE                           l3080 0EE8  
                         l3072 0EAA                           l3064 0E78                           l3056 0E32  
                         l3320 2D98                           l3312 2D46                           l3304 2CB4  
                         l3400 3D08                           l2610 2858                           l2522 21F4  
                         l2530 224A                           l2514 21BC                           l2506 2190  
                         l2450 2062                           l2442 2052                           l2434 201A  
                         l2426 1FE8                           l2418 1FD0                           l2602 3BE0  
                         l3250 172A                           l3242 1690                           l3234 1662  
                         l3226 1640                           l3218 1618                           l3170 12D8  
                         l3154 1208                           l3162 1248                           l3146 11E2  
                         l3090 0F24                           l3082 0EFA                           l3074 0EB6  
                         l3066 0E82                           l3058 0E42                           l3314 2D66  
                         l3306 2CE8                           l3322 2DC8                           l3402 3D0A  
                         l3410 39EE                           l2700 2A8C                           l2620 288C  
                         l2612 285A                           l2540 229E                           l2532 2270  
                         l2524 2228                           l2516 21BE                           l2508 219E  
                         l2460 2076                           l2452 2066                           l2444 2056  
                         l2428 1FF8                           l2436 2022                           l2604 3BE4  
                         l3260 1780                           l3244 1696                           l3228 1648  
                         l3236 1668                           l3252 172E                           l3180 13BC  
                         l3172 1330                           l3164 1250                           l3156 1216  
                         l3148 11EA                           l3092 0F2E                           l3084 0EFE  
                         l3076 0EBE                           l3068 0E8A                           l3404 3D0C  
                         l3500 3C48                           l3420 3A98                           l2702 2A9A  
                         l2630 28BE                           l2614 286A                           l2622 2894  
                         l2606 283E                           l2550 22C8                           l2542 22AC  
                         l2534 2280                           l2526 222A                           l2518 21C8  
                         l2470 208A                           l2462 207A                           l2454 206A  
                         l2446 205A                           l2438 2032                           l2390 35FE  
                         l2382 35B2                           l3270 17FC                           l3262 17B0  
                         l3254 174C                           l3246 16EE                           l3238 167A  
                         l3190 1456                           l3182 13EE                           l3174 1364  
                         l3166 1260                           l3158 122E                           l3086 0F04  
                         l3078 0EC2                           l3326 2DDA                           l3350 3DE0  
                         l3406 3D6C                           l3510 3C7A                           l3502 3C4C  
                         l3422 3ADE                           l3414 39F8                           l2712 2B04  
                         l2720 2B4C                           l2704 2A9E                           l2640 28F2  
                         l2632 28C0                           l2624 28A4                           l2616 287A  
                         l2608 284A                           l2800 2582                           l2560 22FA  
                         l2552 22D8                           l2544 22AE                           l2528 223A  
                         l2480 20DC                           l2472 208E                           l2464 207E  
                         l2456 206E                           l2448 205E                           l2392 3634  
                         l2384 35C4                           l3272 1804                           l3264 17BE  
                         l3256 1768                           l3248 1722                           l3192 148A  
                         l3184 1404                           l3168 1274                           l3176 136A  
                         l3088 0F0C                           l3096 0F4E                           l3280 2BD8  
                         l3440 3994                           l3432 3956                           l3520 1826  
                         l3352 3DE4                           l3360 3DDA                           l3504 3C56  
                         l3416 3A3E                           l3408 39A8                           l3512 34D8  
                         l3600 3848                           l3450 3CD4                           l2730 2BB6  
                         l2722 2B66                           l2714 2B10                           l2706 2AAC  
                         l2650 2938                           l2634 28D0                           l2642 28FA  
                         l2626 28AA                           l2618 288A                           l2810 25D4  
                         l2802 258E                           l2570 2354                           l2562 2310  
                         l2546 22BC                           l2538 2294                           l2554 22DA  
                         l2490 2120                           l2482 20EC                           l2466 2082  
                         l2458 2072                           l2474 2092                           l2386 35D6  
                         l3266 17D6                           l3258 1770                           l3194 14E0  
                         l3186 1436                           l3178 1388                           l3098 0F74  
                         l3290 2C30                           l3282 2C00                           l3434 3968  
                         l3530 1928                           l3522 186E                           l3354 3DC2  
                         l3506 3C66                           l3370 3C14                           l3362 3DCC  
                         l3426 3A48                           l3514 3560                           l3602 3854  
                         l3380 3DAA                           l3452 3CDC                           l3444 3CBE  
                         l2732 2BC4                           l2724 2B7C                           l2716 2B1E  
                         l2708 2ADA                           l2660 2960                           l2652 293C  
                         l2644 290A                           l2636 28E0                           l2628 28B0  
                         l2900 3314                           l2820 2652                           l2812 25E4  
                         l2804 259E                           l2580 23D0                           l2572 238E  
                         l2548 22C4                           l2556 22E8                           l2492 2122  
                         l2484 2102                           l2476 2096                           l2468 2086  
                         l2396 1F52                           l2388 35E0                           l3268 17E6  
                         l3196 14E6                           l3188 1446                           l3700 2D30  
                         l3292 2C46                           l3284 2C0E                           l3436 3970  
                         l3460 3080                           l3540 1A5A                           l3532 1970  
                         l3524 18B6                           l3276 3D20                           l3356 3DC6  
                         l3508 3C70                           l3372 3C1C                           l3364 3DD0  
                         l3428 3A8E                           l3516 3578                           l3604 3862  
                         l3382 3DBA                           l3446 3CC2                           l2734 2BCA  
                         l2726 2B96                           l2718 2B48                           l2670 29AE  
                         l2646 2920                           l2638 28F0                           l2910 3380  
                         l2902 3342                           l2830 26CC                           l2822 2688  
                         l2814 2600                           l2806 25AA                           l2750 2430  
                         l2590 23F0                           l2582 23D4                           l2566 233A  
                         l2574 2390                           l2558 22EC                           l2494 212C  
                         l2486 210E                           l2478 20C0                           l2398 1F5E  
                         l3198 151A                           l3702 2DBA                           l3294 2C4E  
                         l3286 2C1C                           l3390 394A                           l3438 3978  
                         l3470 30BE                           l3462 3096                           l3454 301C  
                         l3550 1C4E                           l3542 1ACC                           l3534 1998  
                         l3526 18D8                           l3278 3D30                           l3358 3DD6  
                         l3374 3C42                           l3366 3C08                           l3518 3594  
                         l3606 3878                           l3448 3CD0                           l2736 2BCC  
                         l2728 2BB2                           l2680 29F8                           l2672 29BE  
                         l2664 2974                           l2648 2930                           l2656 2950  
                         l2912 33D0                           l2904 3352                           l2840 272C  
                         l2832 26DE                           l2824 2696                           l2816 260C  
                         l2808 25BA                           l2760 2476                           l2752 2440  
                         l2744 2412                           l2920 3C9C                           l2592 23FE  
                         l2584 23E2                           l2576 23A0                           l2568 2346  
                         l2496 214E                           l2488 2112                           l3296 2C56  
                         l3288 2C20                           l3384 3900                           l3480 3146  
                         l3472 30F0                           l3456 302C                           l3552 1C9A  
                         l3560 1EE6                           l3544 1B14                           l3536 19E0  
                         l3528 18E2                           l3376 3C44                           l3368 3C0C  
                         l2690 2A46                           l2682 2A04                           l2674 29C6  
                         l2666 298E                           l2658 2960                           l2914 33D6  
                         l2906 3360                           l2850 279A                           l2834 26EC  
                         l2826 26B4                           l2818 2628                           l2770 24A2  
                         l2762 247C                           l2754 2450                           l2746 2420  
                         l2922 3CAC                           l2594 2400                           l2586 23E8  
                         l2578 23B0                           l2498 215E                           l3386 390C  
                         l3490 319C                           l3482 3154                           l3474 30F2  
                         l3466 30AA                           l3458 303A                           l3562 1F02  
                         l3554 1D58                           l3546 1B38                           l3538 1A2C  
                         l3394 3CF6                           l3570 3D58                           l2692 2A5C  
                         l2684 2A22                           l2676 29D6                           l2668 299E  
                         l2908 3372                           l2860 2802                           l2844 2756  
                         l2852 279E                           l2836 26F0                           l2828 26BE  
                         l2780 24F8                           l2772 24B2                           l2764 2482  
                         l2756 2460                           l2748 242E                           l2588 23EA  
                         l2940 3238                           l2932 31F8                           l3388 392A  
                         l3580 37A8                           l3492 31AC                           l3484 3172  
                         l3476 30FE                           l3468 30B2                           l3556 1DC2  
                         l3548 1C06                           l3396 3D00                           l3572 3D62  
                         l3564 3D48                           l2694 2A62                           l2686 2A24  
                         l2678 29EA                           l2870 282C                           l2862 2812  
                         l2854 27B8                           l2846 2762                           l2838 26FE  
                         l2790 2538                           l2774 24C2                           l2766 2490  
                         l2758 2466                           l2918 3C86                           l2950 3268  
                         l2942 3246                           l2934 3222                           l2926 31CE  
                         l2598 3BC2                           l3494 31BA                           l3486 3174  
                         l3478 313A                           l3558 1E80                           l3398 3D06  
                         l3574 3D64                           l3566 3D4C                           l3590 383E  
                         l3582 3830                           ?_pad 0011                           l2696 2A6C  
                         l2688 2A34                           l2880 367C                           l2864 2820  
                         l2856 27CC                           l2848 2770                           l2792 2544  
                         l2784 250C                           l2776 24C8                           l2768 2492  
                         l2960 3292                           l2952 3272                           l2936 3224  
                         l2928 31E4                           l3496 31BC                           l3488 3178  
                         l3576 3D66                           l3568 3D56                           l3592 3840  
                         l3584 3834                           l2698 2A7A                           l2890 371C  
                         l2882 36AA                           l2866 2822                           l2858 27E6  
                         l2794 255C                           l2786 2518                           l2778 24E8  
                         l2874 3B38                           l2962 32A2                           l2938 3234  
                         l2970 37B6                           l3578 3726                           l3594 3842  
                         l3586 3838                           l2892 3722                           l2884 36BA  
                         l2868 2828                           l2796 2568                           l2788 2522  
                         l2876 3B48                           l2964 32B2                           l2948 325E  
                         l2980 37FC                           l2972 37C4                           l3596 3844  
                         l3588 383C                           l2886 36E8                           l2798 2574  
                         l2966 32C2                           l2958 3286                           l2990 3460  
                         l2982 381A                           l2974 37D0                           l3598 3846  
                         l2888 36F8                           l2896 32D4                           l2992 346C  
                         l2984 33DA                           l2976 37E4                           l2898 3304  
                         l2986 33FA                           l2978 37F8                           l3698 2C72  
                         l2988 3438                           l2996 3478                           l2998 348A  
                         STR_1 0E01                           STR_2 0E22                           STR_5 0E26  
                         u2000 2052                           u2001 204E                           u2010 20C0  
                         u2011 20BC                           u2100 219E                           u2020 20D8  
                         u2101 219A                           u2021 20D2                           u2110 21BC  
                         u2030 20DA                           u2111 21B8                           u2200 22FA  
                         u2120 21F4                           u2040 2102                           u3000 38B8  
                         u2201 22F6                           u2121 21F0                           u2041 20FE  
                         u3001 38B4                           u2210 2310                           u2130 223A  
                         u2050 2120                           u3010 2E50                           u2211 230C  
                         u2131 2236                           u2051 211C                           u2300 23FE  
                         u2220 2326                           u2140 2270                           u2060 2140  
                         u3100 2FF8                           u3020 2E7E                           u2301 23FA  
                         u2221 2322                           u2141 226C                           u2061 213C  
                         u3101 2FF4                           u3021 2E7A                           u2230 233A  
                         u2150 2280                           u2070 214E                           u3030 2EA0  
                         u3110 3B36                           u2310 3C04                           u2231 2336  
                         u2151 227C                           u2071 214A                           u3031 2E9C  
                         u3015 2E46                           u3111 3B32                           u2311 3C00  
                         u2400 29D6                           u2320 2858                           u2240 2354  
                         u2160 22AC                           u2080 215E                           u3200 108C  
                         u3120 0E50                   _BAUD4CONbits 000EE9                           u2401 29D2  
                         u2321 2854                           u2241 2350                           u2161 22A8  
                         u2081 215A                           u3201 1088                           u3121 0E4C  
                         u2410 29F8                           u2330 286A                           u2250 238E  
                         u2170 22BC                           u2090 2190                           u3050 2F0C  
                         u3210 10BE                           u3130 0E9A                           u2411 29F4  
                         u2331 2866                           u2251 238A                           u2171 22B8  
                         u2091 218C                           u3051 2F08                           u3211 10BA  
                         u3131 0E96                           u2500 2B04                           u2420 2A22  
                         u2340 287A                           u2260 23A0                           u2180 22D8  
                         u3060 2F30                           u3300 13EE                           u3220 10FC  
                         u3140 0EAA                           u2501 2B00                           u2421 2A1E  
                         u2341 2876                           u2261 239C                           u2181 22D4  
                         u3045 2EB4                           u3301 13EA                           u3221 10F8  
                         u3141 0EA6                           u2510 2B1E                           u2430 2A46  
                         u2350 28BE                           u2270 23B0                           u2190 22E8  
                         u3070 2F4C                           u3046 2EBE                           u3310 1436  
                         u3230 1188                           u3150 0EE8                           u2511 2B1A  
                         u2431 2A42                           u2351 28BA                           u2271 23AC  
                         u2191 22E4                           u3071 2F48                           u3047 2ECE  
                         u3311 1432                           u3231 1184                           u3151 0EE4  
                         u2520 2B66                           u2440 2A5C                           u2360 28D0  
                         u2600 24B2                           u2280 23D0                           u3080 2FA0  
                         u3400 1768                           u3320 1446                           u3240 11BE  
                         u3160 0EFA                           u2521 2B62                           u2441 2A58  
                         u2361 28CC                           u2601 24AE                           u2281 23CC  
                         u3065 2F26                           u3401 1764                           u3321 1442  
                         u3241 11BA                           u3161 0EF6                           u2530 2B96  
                         u2450 2A7A                           u2370 28E0                           u2610 24E8  
                         u2290 23E2                           u3090 2FBC                           u3410 17D0  
                         u3330 14E0                           u3250 11D6                           u3170 0F74  
                         u2531 2B92                           u2451 2A76                           u2371 28DC  
                         u2611 24E4                           u2291 23DE                           u3091 2FB8  
                         u3411 17CA                           u3331 14DC                           u3251 11D2  
                         u3171 0F70                           u3500 3DBA                           u2540 2BC4  
                         u2460 2A9A                           u2380 2920                           u2700 2770  
                         u2620 24F8                           u1900 35FE                           u3420 17D2  
                         u3340 152E                           u3260 1208                           u3180 0F86  
                         u3501 3DB6                           u2541 2BC0                           u2461 2A96  
                         u2381 291C                           u2701 276C                           u2621 24F4  
                         u3085 2F96                           u1901 35FA                           u3341 152A  
                         u3261 1204                           u3181 0F82                           u2470 2AAC  
                         u2390 2960                           u2710 27B8                           u2630 2672  
                         u2550 242E                           u1910 3634                           u3430 17E6  
                         u3350 15DC                           u3270 1216                           u3190 1000  
                         u3510 394A                           u2471 2AA8                           u2391 295C  
                         u2711 27B4                           u2551 242A                           u1911 3630  
                         u3431 17E2                           u3351 15D8                           u3271 1212  
                         u3191 0FFC                           u3511 3946                           u3520 3CF4  
                         u2480 2ADA                           u2800 3380                           u2720 27E6  
                         u2640 26CC                           u2560 2440                           u1920 1F6C  
                         u3360 1618                           u3280 1240                           u3600 3172  
                         u3440 3D30                           u3521 3CF0                           u2481 2AD6  
                         u2801 337C                           u2721 27E2                           u2641 26C8  
                         u2561 243C                           u1921 1F68                           u3361 1614  
                         u3281 123C                           u3601 316E                           u3441 3D2C  
                         u2490 2AF0                           u2810 33D0                           u2730 2820  
                         u2650 26EC                           u2570 2450                           u1930 1F7E  
                         u3370 1626                           u3290 1388                           u3610 31AC  
                         u3530 302C                           u3450 3D46                           u2491 2AEC  
                         u2811 33CC                           u2731 281C                           u2651 26E8  
                         u2635 2668                           u2571 244C                           u1931 1F7A  
                         u3371 1622                           u3291 1384                           u3611 31A8  
                         u3531 3028                           u3451 3D42                           u2740 36AA  
                         u2660 26FE                           u2580 2490                           u2820 3C9C  
                         u1940 1F8E                           u2900 37C4                           u3380 167A  
                         u3460 2C00                           u3620 31BA                           u3540 303A  
                         u3700 1B14                           u2741 36A6                           u2661 26FA  
                         u2581 248C                           u2821 3C98                           u1941 1F8A  
                         u2901 37C0                           u3381 1676                           u3461 2BFC  
                         u3621 31B6                           u3541 3036                           u3701 1B10  
                         u2750 36E8                           u2670 272C                           u2590 24A2  
                         u1950 1FD0                           u2830 31E4                           u2910 381A  
                         u3390 174C                           u3470 2CB0                           u3550 3096  
                         u3710 1C4E                           u3630 186E                           u2751 36E4  
                         u2671 2728                           u2591 249E                           u1951 1FCC  
                         u2831 31E0                           u2911 3816                           u3391 1748  
                         u3471 2CAC                           u3551 3092                           u3711 1C4A  
                         u3631 186A                           u2760 371C                           u2680 2742  
                         u1960 1FE6                           u2840 3218                           u2920 341A  
                         u1880 35C4                           u3560 30EC                           u3720 1C9A  
                         u3640 18B6                           u3480 3C30                           u2761 3718  
                         u2681 273E                           u1961 1FE2                           u1881 35C0  
                         u3561 30E8                           u3721 1C96                           u3641 18B2  
                         u3481 3C28                           u2770 3304                           u2690 2756  
                         u1970 1FF8                           u2850 3246                           u2930 3438  
                         u1890 35D6                           u3570 3136                           u3730 1F02  
                         u3650 1928                           u2771 3300                           u2691 2752  
                         u1971 1FF4                           u2851 3242                           u2931 3434  
                         u1891 35D2                           u3571 3132                           u3731 1EFE  
                         u3651 1924                           u2780 3342                           u1980 2008  
                         u2860 325A                           u2940 3460                           u3580 3154  
                         u3660 1970                           u2781 333E                           u1981 2004  
                         u2861 3256                           u2845 320E                           u2941 345C  
                         u2925 3410                           u3581 3150                           u3661 196C  
                         u2790 3360                           u1990 2044                           u2870 3282  
                         u2950 348A                           u3590 3164                           u3670 19E0  
                         u2791 335C                           u1991 2040                           u2871 327E  
                         u2951 3486                           u3591 3160                           u3671 19DC  
                         u2880 32A2                           u3680 1A2C                           u2881 329E  
                         u3681 1A28                           u2890 32B2                           u2970 34C4  
                         u3690 1ACC                           u3498 3C32                           u2891 32AE  
                         u2971 34BE                           u3691 1AC8                           u3747 3884  
                         u2980 34C6                           u2965 349C                           u3757 3C5C  
                         u2990 3BC0                           u3767 3CD6                           u2991 3BBC  
                         _dbuf 0100                           _labs 389A                           _main 3830  
                         _prec 00F2                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                ___fpclassifyf 33DA                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 39F8  
                 ___param_bank 000000                          ??_pad 0017                  ___fltol@sign1 0009  
                        ?_labs 0001                __end_of___fladd 2412                          ?_main 0001  
              __end_of___fldiv 2BD8                __end_of___flneg 3CBE                __end_of___flmul 283E  
              __end_of___flsub 3B7E                __end_of___fltol 32D4                   vfpfcnvrt@fmt 00A8  
      __end_of_sendCharSerial4 3DC0     __end_of_I2C_2_Master_Start 3DEA     __end_of_I2C_2_Master_Write 3DCC  
                        _flags 00F4                          _fputc 35B2                          _fputs 3BC2  
                        labs@a 0001                          pad@fp 0011                          _width 00F0  
                        _putch 3DEA                          tablat 000FF5                          plusw2 000FDB  
                        status 000FD8                __end_of_sprintf 39A8                 ?___fpclassifyf 0001  
         __end_of_Color2String 37B6        __end_of_color_read_Blue 3AE8          _I2C_2_Master_RepStart 3DCC  
              ?_color_read_Red 0005                __initialization 3D8A                   __end_of_labs 3900  
                 __end_of_main 389A                         ??_labs 0005                         ??_main 00E6  
                __activetblptr 000003                      ??_RGB2Hue 0073                         ?_fputc 0001  
                       ?_fputs 000A                _colour_read_all 34D8                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70       __end_of_color_click_init 3C86                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 31CE                   vfprintf@cfmt 00BF  
                       ___flge 32D4                         ___fleq 367C                      ??___fladd 0022  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0053  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 0E2C  
                       _colorf 0150                         _floorf 2E08                         _memcpy 3AE8  
                       clear_0 3D90                         clear_1 3D9C                         isa$std 000001  
                       pad@buf 0013                         _strcpy 3B7E                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 3956                      ??_sprintf 005F                     ___flge@ff1 0057  
                   ___flge@ff2 005B                ??___fpclassifyf 0005                   ___xxtofl@arg 0016  
                 ___xxtofl@exp 0015                   ___xxtofl@val 000C                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 3DA2  
     __end_of_color_read_Clear 3A98                     ___flneg@f1 0001       __end_of_color_read_Green 3A48  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                  __end_of_fputc 367C  
                __end_of_fputs 3C06                  __end_of_putch 3DEC                      RGB2Hue@cf 0071  
      __end_of_colour_read_all 35B2                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00E8                     __pbssBANK1 0100  
            _color_writetoaddr 3D6A                        ?___flge 0057                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?_efgtoa 0071                        ?_floorf 004B  
                      ?_memcpy 0001            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                 _Color2String 3726                        _RGB2Hue 1826                      ?___xxtofl 000C  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 3D8A             _I2C_2_Master_Start 3DE0                     _initUSART4 3D48  
           _I2C_2_Master_Write 3DC0                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___fladd 1F52  
                      ___fldiv 283E                        ___flneg 3C86                        ___flmul 2412  
                      ___flsub 3B38                        ___fltol 31CE            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00B9                   __psmallconst 0E00  
                      __pcinit 3D8A                        __ramtop 0E00                        __ptext0 3830  
                      __ptext1 3D48                        __ptext2 34D8                        __ptext3 39A8  
                      __ptext4 39F8                        __ptext5 3A48                        __ptext6 3A98  
                      __ptext7 3DCC                        __ptext8 3C06                        __ptext9 3C48  
             ?_colour_read_all 001A                     ??___xxtofl 0010                 Color2String@cf 00E4  
                      efgtoa@c 0077                        efgtoa@d 0085                        efgtoa@e 0089  
                      efgtoa@f 0073                        efgtoa@g 009E                        efgtoa@h 0093  
                      efgtoa@i 0091                        efgtoa@l 0097                        efgtoa@m 0087  
                      efgtoa@n 009C                        efgtoa@p 007C                        efgtoa@t 007E  
                      efgtoa@u 00A2                        efgtoa@w 008B                        _sprintf 3956  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 3DA2  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001             ??_color_click_init 0005              __end_of_vfpfcnvrt 2E08  
                   efgtoa@mode 0083                     efgtoa@sign 009B                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 00AE                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                    ___fladd@grs 0029                  ___xxtofl@sign 0014  
                    _TRISAbits 000F81                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 0061              ?_color_read_Clear 0005              ?_color_read_Green 0005  
                  ?_initUSART4 0001      sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                   _RGB2Hue$1636 0077                 __end_of___flge 33DA  
               __end_of___fleq 3726                    vfpfcnvrt@ap 00AA                    vfpfcnvrt@cp 00B7  
                  vfpfcnvrt@fp 00A6                 __end_of_efgtoa 1826                 __end_of_floorf 301A  
               __end_of_memcpy 3B38                     floorf@F526 00E8                 __end_of_strcpy 3BC2  
                   RGB2Hue@max 007B                     RGB2Hue@min 007D            color_read_Clear@tmp 000A  
          start_initialization 3D8A                    __end_of_pad 3830          __end_of___fpclassifyf 34D8  
          color_read_Green@tmp 000A                    vfprintf@fmt 00BB                       ??___flge 006D  
                     ??___fleq 0009                       ??_efgtoa 0078                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 001E  
                    ___fladd@b 001A                      ___fldiv@a 0036                      ___fldiv@b 0032  
                     ?_RGB2Hue 0071                      ___flmul@a 004F                      ___flmul@b 004B  
                    ___flsub@a 002E                      ___flsub@b 002A                  __pcstackBANK0 0060  
                __pcstackBANK1 0164                    _efgtoa$1329 0080                       ?___fladd 001A  
                     ?___fldiv 0032                       ?___flneg 0001                       ?___flmul 004B  
                     ?___flsub 002A                       ?___fltol 0001           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 3D20  
            _I2C_2_Master_Init 3CF6              _I2C_2_Master_Read 3C06              _I2C_2_Master_Stop 3DD6  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 00C1              colour_read_all@cf 001A  
            _sendStringSerial4 3CBE            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATFbits 000F7E                       _LATGbits 000F7F             ?_sendStringSerial4 0002  
                     _PIR4bits 000E37              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 2BD8  
    __end_of_I2C_2_Master_Idle 3D48      __end_of_I2C_2_Master_Init 3D20      __end_of_I2C_2_Master_Read 3C48  
    __end_of_I2C_2_Master_Stop 3DE0    I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007  
                   vfpfcnvrt@c 00B6      __end_of_sendStringSerial4 3CF6  __end_of_I2C_2_Master_RepStart 3DD6  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                    memcpy@tmp 000B                     vfprintf@ap 00BD                       __Lrparam 0000  
                   vfprintf@fp 00B9                     ?_vfpfcnvrt 00A6                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EC                     sprintf@fmt 00C3                       ___xxtofl 301A  
           __end_of_initUSART4 3D6A                       __ptext10 3D6A                       __ptext11 3DC0  
                     __ptext20 3900                       __ptext12 3DD6                       __ptext21 2BD8  
                     __ptext13 3DE0                       __ptext30 2E08                       __ptext22 0E2C  
                     __ptext14 3D20                       __ptext31 33DA                       __ptext23 3B7E  
                     __ptext15 3CF6                       __ptext40 3CBE                       __ptext32 31CE  
                     __ptext24 37B6                       __ptext16 1826                       __ptext41 3DA8  
                     __ptext33 3B38                       __ptext25 3BC2                       __ptext17 301A  
                     __ptext34 1F52                       __ptext26 35B2                       __ptext18 3726  
                     __ptext35 3C86                       __ptext27 3DEA                       __ptext19 3956  
                     __ptext36 2412                       __ptext28 3AE8                       __ptext37 32D4  
                     __ptext29 389A                       __ptext38 367C                       __ptext39 283E  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
              Color2String@buf 00E2               colour_read_all@B 0024               colour_read_all@G 0020  
             colour_read_all@R 001C                       efgtoa@fp 0071                       efgtoa@ne 007A  
                     efgtoa@pp 0082                       efgtoa@ou 008D                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 3900                       main@data 0164  
                ?_Color2String 00E2                       memcpy@d1 0001                       memcpy@s1 0003  
                    sprintf@ap 00D5                      strcpy@src 0003              ??_colour_read_all 001C  
                  efgtoa@nmode 0084                    ??_vfpfcnvrt 00AC               _color_click_init 3C48  
               ??_Color2String 005F                       sprintf@f 00D7                       sprintf@s 00C1  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0026  
                   _TX4STAbits 000EE8                _sendCharSerial4 3DA8                   ___fladd@aexp 0027  
                 ___fladd@bexp 0028  
