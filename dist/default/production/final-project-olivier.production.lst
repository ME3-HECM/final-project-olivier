

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 28 12:35:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 06/04/2022 GMT
    49                           ; 
    50                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F67K40 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataBANK0
    84   001ADE                     __pidataBANK0:
    85                           	callstack 0
    86                           
    87                           ;initializer for _DataFlag
    88   001ADE  01                 	db	1
    89   000000                     _TX4REG	set	3812
    90   000000                     _RC4STAbits	set	3815
    91   000000                     _SP4BRGH	set	3814
    92   000000                     _SSP2CON2bits	set	3802
    93   000000                     _RX4PPS	set	3605
    94   000000                     _SSP2CLKPPS	set	3612
    95   000000                     _SSP2DATPPS	set	3613
    96   000000                     _ANSELDbits	set	3751
    97   000000                     _SSP2ADD	set	3798
    98   000000                     _SSP2CON1bits	set	3801
    99   000000                     _RC4REG	set	3811
   100   000000                     _SP4BRGL	set	3813
   101   000000                     _TX4STAbits	set	3816
   102   000000                     _BAUD4CONbits	set	3817
   103   000000                     _TRISCbits	set	3971
   104   000000                     _SSP2CON2	set	3802
   105   000000                     _TRISDbits	set	3972
   106   000000                     _SSP2STAT	set	3800
   107   000000                     _SSP2BUF	set	3797
   108   000000                     _PIR4bits	set	3639
   109   000000                     _RC0PPS	set	3682
   110   000000                     _RD5PPS	set	3695
   111   000000                     _RD6PPS	set	3696
   112                           
   113                           	psect	smallconst
   114   000E00                     __psmallconst:
   115                           	callstack 0
   116   000E00  00                 	db	0
   117   000E01                     STR_1:
   118                           
   119                           ; BSR set to: 14
   120   000E01  52                 	db	82	;'R'
   121   000E02  65                 	db	101	;'e'
   122   000E03  64                 	db	100	;'d'
   123   000E04  3A                 	db	58	;':'
   124   000E05  20                 	db	32
   125   000E06  25                 	db	37
   126   000E07  64                 	db	100	;'d'
   127   000E08  20                 	db	32
   128   000E09  47                 	db	71	;'G'
   129   000E0A  72                 	db	114	;'r'
   130   000E0B  65                 	db	101	;'e'
   131   000E0C  65                 	db	101	;'e'
   132   000E0D  6E                 	db	110	;'n'
   133   000E0E  3A                 	db	58	;':'
   134   000E0F  20                 	db	32
   135   000E10  25                 	db	37
   136   000E11  64                 	db	100	;'d'
   137   000E12  20                 	db	32
   138   000E13  42                 	db	66	;'B'
   139   000E14  6C                 	db	108	;'l'
   140   000E15  75                 	db	117	;'u'
   141   000E16  65                 	db	101	;'e'
   142   000E17  3A                 	db	58	;':'
   143   000E18  20                 	db	32
   144   000E19  25                 	db	37
   145   000E1A  64                 	db	100	;'d'
   146   000E1B  20                 	db	32
   147   000E1C  43                 	db	67	;'C'
   148   000E1D  6C                 	db	108	;'l'
   149   000E1E  65                 	db	101	;'e'
   150   000E1F  61                 	db	97	;'a'
   151   000E20  72                 	db	114	;'r'
   152   000E21  3A                 	db	58	;':'
   153   000E22  20                 	db	32
   154   000E23  25                 	db	37
   155   000E24  64                 	db	100	;'d'
   156   000E25  20                 	db	32
   157   000E26  0D                 	db	13
   158   000E27  00                 	db	0
   159   000E28  00                 	db	0	; dummy byte at the end
   160   000000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164   001960                     __pcinit:
   165                           	callstack 0
   166   001960                     start_initialization:
   167                           	callstack 0
   168   001960                     __initialization:
   169                           	callstack 0
   170                           
   171                           ; Initialize objects allocated to BANK0 (1 bytes)
   172                           ; load TBLPTR registers with __pidataBANK0
   173   001960  0EDE               	movlw	low __pidataBANK0
   174   001962  6EF6               	movwf	tblptrl,c
   175   001964  0E1A               	movlw	high __pidataBANK0
   176   001966  6EF7               	movwf	tblptrh,c
   177   001968  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   178   00196A  6EF8               	movwf	tblptru,c
   179   00196C  0009               	tblrd		*+	;fetch initializer
   180   00196E  CFF5 F0D5          	movff	tablat,__pdataBANK0
   181                           
   182                           ; Clear objects allocated to BANK1 (60 bytes)
   183   001972  EE01  F000         	lfsr	0,__pbssBANK1
   184   001976  0E3C               	movlw	60
   185   001978                     clear_0:
   186   001978  6AEE               	clrf	postinc0,c
   187   00197A  06E8               	decf	wreg,f,c
   188   00197C  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK0 (60 bytes)
   191   00197E  EE00  F060         	lfsr	0,__pbssBANK0
   192   001982  0E3C               	movlw	60
   193   001984                     clear_1:
   194   001984  6AEE               	clrf	postinc0,c
   195   001986  06E8               	decf	wreg,f,c
   196   001988  E1FD               	bnz	clear_1
   197                           
   198                           ; Clear objects allocated to COMRAM (1 bytes)
   199   00198A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   200   00198C                     end_of_initialization:
   201                           	callstack 0
   202   00198C                     __end_of__initialization:
   203                           	callstack 0
   204   00198C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   205   00198E  6EF8               	movwf	tblptru,c
   206   001990  0E0E               	movlw	high __Lsmallconst
   207   001992  6EF7               	movwf	tblptrh,c
   208   001994  0100               	movlb	0
   209   001996  EF12  F00B         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212   00005F                     __pbssCOMRAM:
   213                           	callstack 0
   214   00005F                     _RxBufWriteCnt:
   215                           	callstack 0
   216   00005F                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219   000060                     __pbssBANK0:
   220                           	callstack 0
   221   000060                     _EUSART4RXbuf:
   222                           	callstack 0
   223   000060                     	ds	20
   224   000074                     _width:
   225                           	callstack 0
   226   000074                     	ds	2
   227   000076                     _prec:
   228                           	callstack 0
   229   000076                     	ds	2
   230   000078                     _flags:
   231                           	callstack 0
   232   000078                     	ds	1
   233   000079                     _TxBufReadCnt:
   234                           	callstack 0
   235   000079                     	ds	1
   236   00007A                     _TxBufWriteCnt:
   237                           	callstack 0
   238   00007A                     	ds	1
   239   00007B                     _RxBufReadCnt:
   240                           	callstack 0
   241   00007B                     	ds	1
   242   00007C                     _dbuf:
   243                           	callstack 0
   244   00007C                     	ds	32
   245                           
   246                           	psect	dataBANK0
   247   0000D5                     __pdataBANK0:
   248                           	callstack 0
   249   0000D5                     _DataFlag:
   250                           	callstack 0
   251   0000D5                     	ds	1
   252                           
   253                           	psect	bssBANK1
   254   000100                     __pbssBANK1:
   255                           	callstack 0
   256   000100                     _EUSART4TXbuf:
   257                           	callstack 0
   258   000100                     	ds	60
   259                           
   260                           	psect	cstackBANK0
   261   00009C                     __pcstackBANK0:
   262                           	callstack 0
   263   00009C                     ?_sprintf:
   264                           	callstack 0
   265   00009C                     sprintf@s:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269   00009C                     	ds	2
   270   00009E                     sprintf@fmt:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274   00009E                     	ds	10
   275   0000A8                     sprintf@ap:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xC
   279   0000A8                     	ds	2
   280   0000AA                     sprintf@f:
   281                           	callstack 0
   282                           
   283                           ; 11 bytes @ 0xE
   284   0000AA                     	ds	11
   285   0000B5                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x19
   288   0000B5                     	ds	2
   289   0000B7                     main@data:
   290                           	callstack 0
   291                           
   292                           ; 30 bytes @ 0x1B
   293   0000B7                     	ds	30
   294                           
   295                           	psect	cstackCOMRAM
   296   000001                     __pcstackCOMRAM:
   297                           	callstack 0
   298   000001                     ??_I2C_2_Master_Idle:
   299   000001                     ?___aodiv:
   300                           	callstack 0
   301   000001                     ?___aomod:
   302                           	callstack 0
   303   000001                     sendCharSerial4@charToSend:
   304                           	callstack 0
   305   000001                     fputc@c:
   306                           	callstack 0
   307   000001                     ___aodiv@dividend:
   308                           	callstack 0
   309   000001                     ___aomod@dividend:
   310                           	callstack 0
   311                           
   312                           ; 8 bytes @ 0x0
   313   000001                     	ds	1
   314   000002                     ??_I2C_2_Master_Read:
   315   000002                     I2C_2_Master_Write@data_byte:
   316                           	callstack 0
   317   000002                     sendStringSerial4@string:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x1
   321   000002                     	ds	1
   322   000003                     color_writetoaddr@value:
   323                           	callstack 0
   324   000003                     I2C_2_Master_Read@ack:
   325                           	callstack 0
   326   000003                     fputc@fp:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330   000003                     	ds	1
   331   000004                     color_writetoaddr@address:
   332                           	callstack 0
   333   000004                     I2C_2_Master_Read@tmp:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x3
   337   000004                     	ds	1
   338   000005                     ??_fputc:
   339   000005                     ??_color_click_init:
   340   000005                     ?_color_read_Red:
   341                           	callstack 0
   342   000005                     ?_color_read_Green:
   343                           	callstack 0
   344   000005                     ?_color_read_Blue:
   345                           	callstack 0
   346   000005                     ?_color_read_Clear:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350   000005                     	ds	2
   351   000007                     ??_color_read_Red:
   352   000007                     ??_color_read_Green:
   353   000007                     ??_color_read_Blue:
   354   000007                     ??_color_read_Clear:
   355                           
   356                           ; 1 bytes @ 0x6
   357   000007                     	ds	2
   358   000009                     ___aodiv@divisor:
   359                           	callstack 0
   360   000009                     ___aomod@divisor:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x8
   364   000009                     	ds	1
   365   00000A                     color_read_Red@tmp:
   366                           	callstack 0
   367   00000A                     color_read_Green@tmp:
   368                           	callstack 0
   369   00000A                     color_read_Blue@tmp:
   370                           	callstack 0
   371   00000A                     color_read_Clear@tmp:
   372                           	callstack 0
   373   00000A                     fputs@s:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x9
   377   00000A                     	ds	2
   378   00000C                     fputs@fp:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0xB
   382   00000C                     	ds	2
   383   00000E                     fputs@c:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xD
   387   00000E                     	ds	1
   388   00000F                     fputs@i:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xE
   392   00000F                     	ds	2
   393   000011                     ___aodiv@counter:
   394                           	callstack 0
   395   000011                     ___aomod@counter:
   396                           	callstack 0
   397   000011                     pad@fp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x10
   401   000011                     	ds	1
   402   000012                     ___aodiv@sign:
   403                           	callstack 0
   404   000012                     ___aomod@sign:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x11
   408   000012                     	ds	1
   409   000013                     ?_abs:
   410                           	callstack 0
   411   000013                     pad@buf:
   412                           	callstack 0
   413   000013                     abs@a:
   414                           	callstack 0
   415   000013                     ___aodiv@quotient:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0x12
   419   000013                     	ds	2
   420   000015                     ??_abs:
   421   000015                     pad@p:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x14
   425   000015                     	ds	2
   426   000017                     ??_pad:
   427                           
   428                           ; 1 bytes @ 0x16
   429   000017                     	ds	1
   430   000018                     pad@i:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x17
   434   000018                     	ds	2
   435   00001A                     pad@w:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x19
   439   00001A                     	ds	2
   440   00001C                     dtoa@fp:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x1B
   444   00001C                     	ds	2
   445   00001E                     dtoa@d:
   446                           	callstack 0
   447                           
   448                           ; 8 bytes @ 0x1D
   449   00001E                     	ds	8
   450   000026                     ??_dtoa:
   451                           
   452                           ; 1 bytes @ 0x25
   453   000026                     	ds	8
   454   00002E                     _dtoa$1022:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x2D
   458   00002E                     	ds	2
   459   000030                     dtoa@p:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x2F
   463   000030                     	ds	2
   464   000032                     dtoa@w:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x31
   468   000032                     	ds	2
   469   000034                     dtoa@n:
   470                           	callstack 0
   471                           
   472                           ; 8 bytes @ 0x33
   473   000034                     	ds	8
   474   00003C                     dtoa@i:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x3B
   478   00003C                     	ds	2
   479   00003E                     dtoa@s:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x3D
   483   00003E                     	ds	1
   484   00003F                     vfpfcnvrt@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x3E
   488   00003F                     	ds	2
   489   000041                     vfpfcnvrt@fmt:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x40
   493   000041                     	ds	2
   494   000043                     vfpfcnvrt@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x42
   498   000043                     	ds	2
   499   000045                     ??_vfpfcnvrt:
   500                           
   501                           ; 1 bytes @ 0x44
   502   000045                     	ds	2
   503   000047                     vfpfcnvrt@convarg:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x46
   507   000047                     	ds	8
   508   00004F                     vfpfcnvrt@cp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x4E
   512   00004F                     	ds	2
   513   000051                     ?_vfprintf:
   514                           	callstack 0
   515   000051                     vfprintf@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x50
   519   000051                     	ds	2
   520   000053                     vfprintf@fmt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x52
   524   000053                     	ds	2
   525   000055                     vfprintf@ap:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x54
   529   000055                     	ds	2
   530   000057                     vfprintf@cfmt:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x56
   534   000057                     	ds	2
   535   000059                     Color2String@buf:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x58
   539   000059                     	ds	2
   540   00005B                     Color2String@R:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x5A
   544   00005B                     	ds	1
   545   00005C                     Color2String@G:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x5B
   549   00005C                     	ds	1
   550   00005D                     Color2String@B:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x5C
   554   00005D                     	ds	1
   555   00005E                     Color2String@C:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x5D
   559   00005E                     	ds	1
   560   00005F                     
   561                           ; 1 bytes @ 0x5E
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 13 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  data           30   27[BANK0 ] unsigned char [30]
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   582 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   584 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   585 ;;Total ram usage:       32 bytes
   586 ;; Hardware stack levels required when called: 9
   587 ;; This function calls:
   588 ;;		_Color2String
   589 ;;		_I2C_2_Master_Init
   590 ;;		_color_click_init
   591 ;;		_color_read_Blue
   592 ;;		_color_read_Clear
   593 ;;		_color_read_Green
   594 ;;		_color_read_Red
   595 ;;		_initUSART4
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602   001624                     __ptext0:
   603                           	callstack 0
   604   001624                     _main:
   605                           	callstack 22
   606   001624                     
   607                           ;main.c: 14:     char data[30];;main.c: 15:     initUSART4();
   608   001624  EC2C  F00D         	call	_initUSART4	;wreg free
   609   001628                     
   610                           ;main.c: 16:     color_click_init();
   611   001628  ECE9  F00C         	call	_color_click_init	;wreg free
   612   00162C                     
   613                           ;main.c: 17:     I2C_2_Master_Init();
   614   00162C  EC03  F00D         	call	_I2C_2_Master_Init	;wreg free
   615   001630                     l1657:
   616                           
   617                           ;main.c: 20:         Color2String(data,color_read_Red(),color_read_Green(),
   618   001630  0EB7               	movlw	low main@data
   619   001632  6E59               	movwf	Color2String@buf^0,c
   620   001634  0E00               	movlw	high main@data
   621   001636  6E5A               	movwf	(Color2String@buf+1)^0,c
   622   001638  EC68  F00B         	call	_color_read_Red	;wreg free
   623   00163C  5005               	movf	?_color_read_Red^0,w,c
   624   00163E  6E5B               	movwf	Color2String@R^0,c
   625   001640  EC90  F00B         	call	_color_read_Green	;wreg free
   626   001644  5005               	movf	?_color_read_Green^0,w,c
   627   001646  6E5C               	movwf	Color2String@G^0,c
   628   001648  ECE0  F00B         	call	_color_read_Blue	;wreg free
   629   00164C  5005               	movf	?_color_read_Blue^0,w,c
   630   00164E  6E5D               	movwf	Color2String@B^0,c
   631   001650  ECB8  F00B         	call	_color_read_Clear	;wreg free
   632   001654  5005               	movf	?_color_read_Clear^0,w,c
   633   001656  6E5E               	movwf	Color2String@C^0,c
   634   001658  EC92  F00C         	call	_Color2String	;wreg free
   635   00165C                     
   636                           ;main.c: 22:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   637   00165C  0E52               	movlw	82
   638   00165E  0100               	movlb	0	; () banked
   639   001660  6FB6               	movwf	(??_main+1)& (0+255),b
   640   001662  0E2B               	movlw	43
   641   001664  6FB5               	movwf	??_main& (0+255),b
   642   001666  0E00               	movlw	0
   643   001668                     u847:
   644   001668  2EE8               	decfsz	wreg,f,c
   645   00166A  D7FE               	bra	u847
   646   00166C  2FB5               	decfsz	??_main& (0+255),f,b
   647   00166E  D7FC               	bra	u847
   648   001670  2FB6               	decfsz	(??_main+1)& (0+255),f,b
   649   001672  D7FA               	bra	u847
   650   001674  F000               	nop	
   651   001676  EF18  F00B         	goto	l1657
   652   00167A  EF00  F000         	goto	start
   653   00167E                     __end_of_main:
   654                           	callstack 0
   655                           
   656 ;; *************** function _initUSART4 *****************
   657 ;; Defined at:
   658 ;;		line 5 in file "serial.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text1
   686   001A58                     __ptext1:
   687                           	callstack 0
   688   001A58                     _initUSART4:
   689                           	callstack 30
   690   001A58                     
   691                           ;serial.c: 6:     TRISCbits.TRISC4=1;
   692   001A58  8883               	bsf	131,4,c	;volatile
   693                           
   694                           ;serial.c: 7:     TRISCbits.TRISC1=1;
   695   001A5A  8283               	bsf	131,1,c	;volatile
   696   001A5C                     
   697                           ;serial.c: 8:     RC0PPS = 0x12;
   698   001A5C  0E12               	movlw	18
   699   001A5E  010E               	movlb	14	; () banked
   700   001A60  6F62               	movwf	98,b	;volatile
   701                           
   702                           ;serial.c: 9:     RX4PPS = 0x11;
   703   001A62  0E11               	movlw	17
   704   001A64  6F15               	movwf	21,b	;volatile
   705   001A66                     
   706                           ; BSR set to: 14
   707                           ;serial.c: 10:     BAUD4CONbits.BRG16 = 0;
   708   001A66  97E9               	bcf	233,3,b	;volatile
   709   001A68                     
   710                           ; BSR set to: 14
   711                           ;serial.c: 11:     TX4STAbits.BRGH = 0;
   712   001A68  95E8               	bcf	232,2,b	;volatile
   713                           
   714                           ;serial.c: 13:     SP4BRGL = 51;
   715   001A6A  0E33               	movlw	51
   716   001A6C  6FE5               	movwf	229,b	;volatile
   717                           
   718                           ;serial.c: 14:     SP4BRGH = 0;
   719   001A6E  0E00               	movlw	0
   720   001A70  6FE6               	movwf	230,b	;volatile
   721   001A72                     
   722                           ; BSR set to: 14
   723                           ;serial.c: 16:     RC4STAbits.CREN = 1;
   724   001A72  89E7               	bsf	231,4,b	;volatile
   725   001A74                     
   726                           ; BSR set to: 14
   727                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
   728   001A74  8BE8               	bsf	232,5,b	;volatile
   729   001A76                     
   730                           ; BSR set to: 14
   731                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
   732   001A76  8FE7               	bsf	231,7,b	;volatile
   733   001A78                     
   734                           ; BSR set to: 14
   735   001A78  0012               	return		;funcret
   736   001A7A                     __end_of_initUSART4:
   737                           	callstack 0
   738                           
   739 ;; *************** function _color_read_Red *****************
   740 ;; Defined at:
   741 ;;		line 30 in file "color.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  tmp             2    9[COMRAM] unsigned int 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  2    4[COMRAM] unsigned int 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        7 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 2
   762 ;; This function calls:
   763 ;;		_I2C_2_Master_Read
   764 ;;		_I2C_2_Master_RepStart
   765 ;;		_I2C_2_Master_Start
   766 ;;		_I2C_2_Master_Stop
   767 ;;		_I2C_2_Master_Write
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text2
   774   0016D0                     __ptext2:
   775                           	callstack 0
   776   0016D0                     _color_read_Red:
   777                           	callstack 28
   778   0016D0                     
   779                           ;color.c: 32:  unsigned int tmp;;color.c: 33:  I2C_2_Master_Start();
   780   0016D0  EC69  F00D         	call	_I2C_2_Master_Start	;wreg free
   781                           
   782                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
   783   0016D4  0E52               	movlw	82
   784   0016D6  EC59  F00D         	call	_I2C_2_Master_Write
   785                           
   786                           ;color.c: 35:  I2C_2_Master_Write(0xA0 | 0x16);
   787   0016DA  0EB6               	movlw	182
   788   0016DC  EC59  F00D         	call	_I2C_2_Master_Write
   789                           
   790                           ;color.c: 36:  I2C_2_Master_RepStart();
   791   0016E0  EC5F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
   792                           
   793                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x01);
   794   0016E4  0E53               	movlw	83
   795   0016E6  EC59  F00D         	call	_I2C_2_Master_Write
   796                           
   797                           ;color.c: 38:  tmp=I2C_2_Master_Read(1);
   798   0016EA  0E01               	movlw	1
   799   0016EC  EC51  F00C         	call	_I2C_2_Master_Read
   800   0016F0  6E07               	movwf	??_color_read_Red^0,c
   801   0016F2  5007               	movf	??_color_read_Red^0,w,c
   802   0016F4  6E0A               	movwf	color_read_Red@tmp^0,c
   803   0016F6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
   804                           
   805                           ;color.c: 39:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   806   0016F8  0E00               	movlw	0
   807   0016FA  EC51  F00C         	call	_I2C_2_Master_Read
   808   0016FE  6E07               	movwf	??_color_read_Red^0,c
   809   001700  5007               	movf	??_color_read_Red^0,w,c
   810   001702  6E09               	movwf	(??_color_read_Red+2)^0,c
   811   001704  6A08               	clrf	(??_color_read_Red+1)^0,c
   812   001706  500A               	movf	color_read_Red@tmp^0,w,c
   813   001708  1008               	iorwf	(??_color_read_Red+1)^0,w,c
   814   00170A  6E0A               	movwf	color_read_Red@tmp^0,c
   815   00170C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
   816   00170E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
   817   001710  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
   818                           
   819                           ;color.c: 40:  I2C_2_Master_Stop();
   820   001712  EC64  F00D         	call	_I2C_2_Master_Stop	;wreg free
   821   001716                     
   822                           ;color.c: 41:  return tmp;
   823   001716  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
   824   00171A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
   825   00171E  0012               	return		;funcret
   826   001720                     __end_of_color_read_Red:
   827                           	callstack 0
   828                           
   829 ;; *************** function _color_read_Green *****************
   830 ;; Defined at:
   831 ;;		line 43 in file "color.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  tmp             2    9[COMRAM] unsigned int 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  2    4[COMRAM] unsigned int 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   847 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   848 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   849 ;;Total ram usage:        7 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 2
   852 ;; This function calls:
   853 ;;		_I2C_2_Master_Read
   854 ;;		_I2C_2_Master_RepStart
   855 ;;		_I2C_2_Master_Start
   856 ;;		_I2C_2_Master_Stop
   857 ;;		_I2C_2_Master_Write
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text3
   864   001720                     __ptext3:
   865                           	callstack 0
   866   001720                     _color_read_Green:
   867                           	callstack 28
   868   001720                     
   869                           ;color.c: 45:     unsigned int tmp;;color.c: 46:     I2C_2_Master_Start();
   870   001720  EC69  F00D         	call	_I2C_2_Master_Start	;wreg free
   871                           
   872                           ;color.c: 47:     I2C_2_Master_Write(0x52 | 0x00);
   873   001724  0E52               	movlw	82
   874   001726  EC59  F00D         	call	_I2C_2_Master_Write
   875                           
   876                           ;color.c: 48:     I2C_2_Master_Write(0xA0 | 0x18);
   877   00172A  0EB8               	movlw	184
   878   00172C  EC59  F00D         	call	_I2C_2_Master_Write
   879                           
   880                           ;color.c: 49:     I2C_2_Master_RepStart();
   881   001730  EC5F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
   882                           
   883                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x01);
   884   001734  0E53               	movlw	83
   885   001736  EC59  F00D         	call	_I2C_2_Master_Write
   886                           
   887                           ;color.c: 51:     tmp=I2C_2_Master_Read(1);
   888   00173A  0E01               	movlw	1
   889   00173C  EC51  F00C         	call	_I2C_2_Master_Read
   890   001740  6E07               	movwf	??_color_read_Green^0,c
   891   001742  5007               	movf	??_color_read_Green^0,w,c
   892   001744  6E0A               	movwf	color_read_Green@tmp^0,c
   893   001746  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
   894                           
   895                           ;color.c: 52:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
   896   001748  0E00               	movlw	0
   897   00174A  EC51  F00C         	call	_I2C_2_Master_Read
   898   00174E  6E07               	movwf	??_color_read_Green^0,c
   899   001750  5007               	movf	??_color_read_Green^0,w,c
   900   001752  6E09               	movwf	(??_color_read_Green+2)^0,c
   901   001754  6A08               	clrf	(??_color_read_Green+1)^0,c
   902   001756  500A               	movf	color_read_Green@tmp^0,w,c
   903   001758  1008               	iorwf	(??_color_read_Green+1)^0,w,c
   904   00175A  6E0A               	movwf	color_read_Green@tmp^0,c
   905   00175C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
   906   00175E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
   907   001760  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
   908                           
   909                           ;color.c: 53:     I2C_2_Master_Stop();
   910   001762  EC64  F00D         	call	_I2C_2_Master_Stop	;wreg free
   911   001766                     
   912                           ;color.c: 54:     return tmp;
   913   001766  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
   914   00176A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
   915   00176E  0012               	return		;funcret
   916   001770                     __end_of_color_read_Green:
   917                           	callstack 0
   918                           
   919 ;; *************** function _color_read_Clear *****************
   920 ;; Defined at:
   921 ;;		line 72 in file "color.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  tmp             2    9[COMRAM] unsigned int 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2    4[COMRAM] unsigned int 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   937 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;Total ram usage:        7 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 2
   942 ;; This function calls:
   943 ;;		_I2C_2_Master_Read
   944 ;;		_I2C_2_Master_RepStart
   945 ;;		_I2C_2_Master_Start
   946 ;;		_I2C_2_Master_Stop
   947 ;;		_I2C_2_Master_Write
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text4
   954   001770                     __ptext4:
   955                           	callstack 0
   956   001770                     _color_read_Clear:
   957                           	callstack 28
   958   001770                     
   959                           ;color.c: 74:     unsigned int tmp;;color.c: 75:     I2C_2_Master_Start();
   960   001770  EC69  F00D         	call	_I2C_2_Master_Start	;wreg free
   961                           
   962                           ;color.c: 76:     I2C_2_Master_Write(0x52 | 0x00);
   963   001774  0E52               	movlw	82
   964   001776  EC59  F00D         	call	_I2C_2_Master_Write
   965                           
   966                           ;color.c: 77:     I2C_2_Master_Write(0xA0 | 0x14);
   967   00177A  0EB4               	movlw	180
   968   00177C  EC59  F00D         	call	_I2C_2_Master_Write
   969                           
   970                           ;color.c: 78:     I2C_2_Master_RepStart();
   971   001780  EC5F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
   972                           
   973                           ;color.c: 79:     I2C_2_Master_Write(0x52 | 0x01);
   974   001784  0E53               	movlw	83
   975   001786  EC59  F00D         	call	_I2C_2_Master_Write
   976                           
   977                           ;color.c: 80:     tmp=I2C_2_Master_Read(1);
   978   00178A  0E01               	movlw	1
   979   00178C  EC51  F00C         	call	_I2C_2_Master_Read
   980   001790  6E07               	movwf	??_color_read_Clear^0,c
   981   001792  5007               	movf	??_color_read_Clear^0,w,c
   982   001794  6E0A               	movwf	color_read_Clear@tmp^0,c
   983   001796  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
   984                           
   985                           ;color.c: 81:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
   986   001798  0E00               	movlw	0
   987   00179A  EC51  F00C         	call	_I2C_2_Master_Read
   988   00179E  6E07               	movwf	??_color_read_Clear^0,c
   989   0017A0  5007               	movf	??_color_read_Clear^0,w,c
   990   0017A2  6E09               	movwf	(??_color_read_Clear+2)^0,c
   991   0017A4  6A08               	clrf	(??_color_read_Clear+1)^0,c
   992   0017A6  500A               	movf	color_read_Clear@tmp^0,w,c
   993   0017A8  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
   994   0017AA  6E0A               	movwf	color_read_Clear@tmp^0,c
   995   0017AC  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
   996   0017AE  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
   997   0017B0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
   998                           
   999                           ;color.c: 82:     I2C_2_Master_Stop();
  1000   0017B2  EC64  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1001   0017B6                     
  1002                           ;color.c: 83:     return tmp;
  1003   0017B6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1004   0017BA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1005   0017BE  0012               	return		;funcret
  1006   0017C0                     __end_of_color_read_Clear:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _color_read_Blue *****************
  1010 ;; Defined at:
  1011 ;;		line 57 in file "color.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  tmp             2    9[COMRAM] unsigned int 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  2    4[COMRAM] unsigned int 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;Total ram usage:        7 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 2
  1032 ;; This function calls:
  1033 ;;		_I2C_2_Master_Read
  1034 ;;		_I2C_2_Master_RepStart
  1035 ;;		_I2C_2_Master_Start
  1036 ;;		_I2C_2_Master_Stop
  1037 ;;		_I2C_2_Master_Write
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text5
  1044   0017C0                     __ptext5:
  1045                           	callstack 0
  1046   0017C0                     _color_read_Blue:
  1047                           	callstack 28
  1048   0017C0                     
  1049                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  1050   0017C0  EC69  F00D         	call	_I2C_2_Master_Start	;wreg free
  1051                           
  1052                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  1053   0017C4  0E52               	movlw	82
  1054   0017C6  EC59  F00D         	call	_I2C_2_Master_Write
  1055                           
  1056                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  1057   0017CA  0EBA               	movlw	186
  1058   0017CC  EC59  F00D         	call	_I2C_2_Master_Write
  1059                           
  1060                           ;color.c: 63:     I2C_2_Master_RepStart();
  1061   0017D0  EC5F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1062                           
  1063                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  1064   0017D4  0E53               	movlw	83
  1065   0017D6  EC59  F00D         	call	_I2C_2_Master_Write
  1066                           
  1067                           ;color.c: 65:     tmp=I2C_2_Master_Read(1);
  1068   0017DA  0E01               	movlw	1
  1069   0017DC  EC51  F00C         	call	_I2C_2_Master_Read
  1070   0017E0  6E07               	movwf	??_color_read_Blue^0,c
  1071   0017E2  5007               	movf	??_color_read_Blue^0,w,c
  1072   0017E4  6E0A               	movwf	color_read_Blue@tmp^0,c
  1073   0017E6  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1074                           
  1075                           ;color.c: 66:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1076   0017E8  0E00               	movlw	0
  1077   0017EA  EC51  F00C         	call	_I2C_2_Master_Read
  1078   0017EE  6E07               	movwf	??_color_read_Blue^0,c
  1079   0017F0  5007               	movf	??_color_read_Blue^0,w,c
  1080   0017F2  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1081   0017F4  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1082   0017F6  500A               	movf	color_read_Blue@tmp^0,w,c
  1083   0017F8  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1084   0017FA  6E0A               	movwf	color_read_Blue@tmp^0,c
  1085   0017FC  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1086   0017FE  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1087   001800  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1088                           
  1089                           ;color.c: 67:     I2C_2_Master_Stop();
  1090   001802  EC64  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1091   001806                     
  1092                           ;color.c: 68:     return tmp;
  1093   001806  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1094   00180A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1095   00180E  0012               	return		;funcret
  1096   001810                     __end_of_color_read_Blue:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _I2C_2_Master_RepStart *****************
  1100 ;; Defined at:
  1101 ;;		line 33 in file "i2c.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;Total ram usage:        0 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 1
  1122 ;; This function calls:
  1123 ;;		_I2C_2_Master_Idle
  1124 ;; This function is called by:
  1125 ;;		_color_read_Red
  1126 ;;		_color_read_Green
  1127 ;;		_color_read_Blue
  1128 ;;		_color_read_Clear
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text6
  1133   001ABE                     __ptext6:
  1134                           	callstack 0
  1135   001ABE                     _I2C_2_Master_RepStart:
  1136                           	callstack 28
  1137   001ABE                     
  1138                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1139   001ABE  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1140   001AC2                     
  1141                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1142   001AC2  010E               	movlb	14	; () banked
  1143   001AC4  83DA               	bsf	218,1,b	;volatile
  1144   001AC6                     
  1145                           ; BSR set to: 14
  1146   001AC6  0012               	return		;funcret
  1147   001AC8                     __end_of_I2C_2_Master_RepStart:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _I2C_2_Master_Read *****************
  1151 ;; Defined at:
  1152 ;;		line 51 in file "i2c.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  ack             1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  ack             1    2[COMRAM] unsigned char 
  1157 ;;  tmp             1    3[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      unsigned char 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;Total ram usage:        3 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 1
  1174 ;; This function calls:
  1175 ;;		_I2C_2_Master_Idle
  1176 ;; This function is called by:
  1177 ;;		_color_read_Red
  1178 ;;		_color_read_Green
  1179 ;;		_color_read_Blue
  1180 ;;		_color_read_Clear
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text7
  1185   0018A2                     __ptext7:
  1186                           	callstack 0
  1187   0018A2                     _I2C_2_Master_Read:
  1188                           	callstack 28
  1189                           
  1190                           ; BSR set to: 14
  1191                           ;incstack = 0
  1192                           ;I2C_2_Master_Read@ack stored from wreg
  1193   0018A2  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1194   0018A4                     
  1195                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1196   0018A4  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1197   0018A8                     
  1198                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1199   0018A8  010E               	movlb	14	; () banked
  1200   0018AA  87DA               	bsf	218,3,b	;volatile
  1201                           
  1202                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1203   0018AC  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1204   0018B0                     
  1205                           ;i2c.c: 57:   tmp = SSP2BUF;
  1206   0018B0  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1207                           
  1208                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1209   0018B4  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1210   0018B8                     
  1211                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1212   0018B8  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1213   0018BA  B4D8               	btfsc	status,2,c
  1214   0018BC  EF62  F00C         	goto	u811
  1215   0018C0  EF66  F00C         	goto	u810
  1216   0018C4                     u811:
  1217   0018C4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1218   0018C6  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1219   0018C8  EF67  F00C         	goto	u828
  1220   0018CC                     u810:
  1221   0018CC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1222   0018CE                     u828:
  1223   0018CE  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1224   0018D0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1225   0018D2  010E               	movlb	14	; () banked
  1226   0018D4  51DA               	movf	218,w,b	;volatile
  1227   0018D6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1228   0018D8  0BDF               	andlw	-33
  1229   0018DA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1230   0018DC  6FDA               	movwf	218,b	;volatile
  1231   0018DE                     
  1232                           ; BSR set to: 14
  1233                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1234   0018DE  89DA               	bsf	218,4,b	;volatile
  1235   0018E0                     
  1236                           ; BSR set to: 14
  1237                           ;i2c.c: 61:   return tmp;
  1238   0018E0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1239   0018E2                     
  1240                           ; BSR set to: 14
  1241   0018E2  0012               	return		;funcret
  1242   0018E4                     __end_of_I2C_2_Master_Read:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _color_click_init *****************
  1246 ;; Defined at:
  1247 ;;		line 6 in file "color.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 3
  1268 ;; This function calls:
  1269 ;;		_I2C_2_Master_Init
  1270 ;;		_color_writetoaddr
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text8
  1277   0019D2                     __ptext8:
  1278                           	callstack 0
  1279   0019D2                     _color_click_init:
  1280                           	callstack 27
  1281   0019D2                     
  1282                           ;color.c: 9:     I2C_2_Master_Init();
  1283   0019D2  EC03  F00D         	call	_I2C_2_Master_Init	;wreg free
  1284   0019D6                     
  1285                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  1286   0019D6  0E01               	movlw	1
  1287   0019D8  6E03               	movwf	color_writetoaddr@value^0,c
  1288   0019DA  0E00               	movlw	0
  1289   0019DC  EC3D  F00D         	call	_color_writetoaddr
  1290   0019E0                     
  1291                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1292   0019E0  0E3F               	movlw	63
  1293   0019E2  6E05               	movwf	??_color_click_init^0,c
  1294   0019E4  0E55               	movlw	85
  1295   0019E6                     u857:
  1296   0019E6  2EE8               	decfsz	wreg,f,c
  1297   0019E8  D7FE               	bra	u857
  1298   0019EA  2E05               	decfsz	??_color_click_init^0,f,c
  1299   0019EC  D7FC               	bra	u857
  1300   0019EE  F000               	nop	
  1301   0019F0                     
  1302                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  1303   0019F0  0E03               	movlw	3
  1304   0019F2  6E03               	movwf	color_writetoaddr@value^0,c
  1305   0019F4  0E00               	movlw	0
  1306   0019F6  EC3D  F00D         	call	_color_writetoaddr
  1307   0019FA                     
  1308                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  1309   0019FA  0ED5               	movlw	213
  1310   0019FC  6E03               	movwf	color_writetoaddr@value^0,c
  1311   0019FE  0E01               	movlw	1
  1312   001A00  EC3D  F00D         	call	_color_writetoaddr
  1313   001A04  0012               	return		;funcret
  1314   001A06                     __end_of_color_click_init:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _color_writetoaddr *****************
  1318 ;; Defined at:
  1319 ;;		line 22 in file "color.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  address         1    wreg     unsigned char 
  1322 ;;  value           1    2[COMRAM] unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  address         1    3[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 2
  1341 ;; This function calls:
  1342 ;;		_I2C_2_Master_Start
  1343 ;;		_I2C_2_Master_Stop
  1344 ;;		_I2C_2_Master_Write
  1345 ;; This function is called by:
  1346 ;;		_color_click_init
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text9
  1351   001A7A                     __ptext9:
  1352                           	callstack 0
  1353   001A7A                     _color_writetoaddr:
  1354                           	callstack 27
  1355                           
  1356                           ;incstack = 0
  1357                           ;color_writetoaddr@address stored from wreg
  1358   001A7A  6E04               	movwf	color_writetoaddr@address^0,c
  1359   001A7C                     
  1360                           ;color.c: 23:     I2C_2_Master_Start();
  1361   001A7C  EC69  F00D         	call	_I2C_2_Master_Start	;wreg free
  1362                           
  1363                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  1364   001A80  0E52               	movlw	82
  1365   001A82  EC59  F00D         	call	_I2C_2_Master_Write
  1366                           
  1367                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  1368   001A86  5004               	movf	color_writetoaddr@address^0,w,c
  1369   001A88  0980               	iorlw	128
  1370   001A8A  EC59  F00D         	call	_I2C_2_Master_Write
  1371                           
  1372                           ;color.c: 26:     I2C_2_Master_Write(value);
  1373   001A8E  5003               	movf	color_writetoaddr@value^0,w,c
  1374   001A90  EC59  F00D         	call	_I2C_2_Master_Write
  1375                           
  1376                           ;color.c: 27:     I2C_2_Master_Stop();
  1377   001A94  EC64  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1378   001A98  0012               	return		;funcret
  1379   001A9A                     __end_of_color_writetoaddr:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _I2C_2_Master_Write *****************
  1383 ;; Defined at:
  1384 ;;		line 45 in file "i2c.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  data_byte       1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  data_byte       1    1[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;Total ram usage:        1 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 1
  1405 ;; This function calls:
  1406 ;;		_I2C_2_Master_Idle
  1407 ;; This function is called by:
  1408 ;;		_color_writetoaddr
  1409 ;;		_color_read_Red
  1410 ;;		_color_read_Green
  1411 ;;		_color_read_Blue
  1412 ;;		_color_read_Clear
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text10
  1417   001AB2                     __ptext10:
  1418                           	callstack 0
  1419   001AB2                     _I2C_2_Master_Write:
  1420                           	callstack 28
  1421                           
  1422                           ;incstack = 0
  1423                           ;I2C_2_Master_Write@data_byte stored from wreg
  1424   001AB2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1425   001AB4                     
  1426                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1427   001AB4  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1428   001AB8                     
  1429                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1430   001AB8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1431   001ABC  0012               	return		;funcret
  1432   001ABE                     __end_of_I2C_2_Master_Write:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _I2C_2_Master_Stop *****************
  1436 ;; Defined at:
  1437 ;;		line 39 in file "i2c.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 1
  1458 ;; This function calls:
  1459 ;;		_I2C_2_Master_Idle
  1460 ;; This function is called by:
  1461 ;;		_color_writetoaddr
  1462 ;;		_color_read_Red
  1463 ;;		_color_read_Green
  1464 ;;		_color_read_Blue
  1465 ;;		_color_read_Clear
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text11
  1470   001AC8                     __ptext11:
  1471                           	callstack 0
  1472   001AC8                     _I2C_2_Master_Stop:
  1473                           	callstack 28
  1474   001AC8                     
  1475                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1476   001AC8  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1477   001ACC                     
  1478                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1479   001ACC  010E               	movlb	14	; () banked
  1480   001ACE  85DA               	bsf	218,2,b	;volatile
  1481   001AD0                     
  1482                           ; BSR set to: 14
  1483   001AD0  0012               	return		;funcret
  1484   001AD2                     __end_of_I2C_2_Master_Stop:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _I2C_2_Master_Start *****************
  1488 ;; Defined at:
  1489 ;;		line 27 in file "i2c.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 1
  1510 ;; This function calls:
  1511 ;;		_I2C_2_Master_Idle
  1512 ;; This function is called by:
  1513 ;;		_color_writetoaddr
  1514 ;;		_color_read_Red
  1515 ;;		_color_read_Green
  1516 ;;		_color_read_Blue
  1517 ;;		_color_read_Clear
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text12
  1522   001AD2                     __ptext12:
  1523                           	callstack 0
  1524   001AD2                     _I2C_2_Master_Start:
  1525                           	callstack 28
  1526   001AD2                     
  1527                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1528   001AD2  EC18  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1529   001AD6                     
  1530                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1531   001AD6  010E               	movlb	14	; () banked
  1532   001AD8  81DA               	bsf	218,0,b	;volatile
  1533   001ADA                     
  1534                           ; BSR set to: 14
  1535   001ADA  0012               	return		;funcret
  1536   001ADC                     __end_of_I2C_2_Master_Start:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _I2C_2_Master_Idle *****************
  1540 ;; Defined at:
  1541 ;;		line 22 in file "i2c.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;		None
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;		None
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_I2C_2_Master_Start
  1565 ;;		_I2C_2_Master_RepStart
  1566 ;;		_I2C_2_Master_Stop
  1567 ;;		_I2C_2_Master_Write
  1568 ;;		_I2C_2_Master_Read
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text13
  1573   001A30                     __ptext13:
  1574                           	callstack 0
  1575   001A30                     _I2C_2_Master_Idle:
  1576                           	callstack 28
  1577   001A30                     l64:
  1578   001A30  010E               	movlb	14	; () banked
  1579   001A32  B5D8               	btfsc	216,2,b	;volatile
  1580   001A34  EF1E  F00D         	goto	u741
  1581   001A38  EF20  F00D         	goto	u740
  1582   001A3C                     u741:
  1583   001A3C  EF18  F00D         	goto	l64
  1584   001A40                     u740:
  1585   001A40                     
  1586                           ; BSR set to: 14
  1587   001A40  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1588   001A44  0E1F               	movlw	31
  1589   001A46  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1590   001A48  A4D8               	btfss	status,2,c
  1591   001A4A  EF29  F00D         	goto	u751
  1592   001A4E  EF2B  F00D         	goto	u750
  1593   001A52                     u751:
  1594   001A52  EF18  F00D         	goto	l64
  1595   001A56                     u750:
  1596   001A56                     
  1597                           ; BSR set to: 14
  1598   001A56  0012               	return		;funcret
  1599   001A58                     __end_of_I2C_2_Master_Idle:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _I2C_2_Master_Init *****************
  1603 ;; Defined at:
  1604 ;;		line 4 in file "i2c.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;Total ram usage:        0 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_color_click_init
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text14
  1633   001A06                     __ptext14:
  1634                           	callstack 0
  1635   001A06                     _I2C_2_Master_Init:
  1636                           	callstack 29
  1637   001A06                     
  1638                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1639   001A06  010E               	movlb	14	; () banked
  1640   001A08  51D9               	movf	217,w,b	;volatile
  1641   001A0A  0BF0               	andlw	-16
  1642   001A0C  0908               	iorlw	8
  1643   001A0E  6FD9               	movwf	217,b	;volatile
  1644   001A10                     
  1645                           ; BSR set to: 14
  1646                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1647   001A10  8BD9               	bsf	217,5,b	;volatile
  1648                           
  1649                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1650   001A12  0E9F               	movlw	159
  1651   001A14  6FD6               	movwf	214,b	;volatile
  1652   001A16                     
  1653                           ; BSR set to: 14
  1654                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1655   001A16  8A84               	bsf	132,5,c	;volatile
  1656   001A18                     
  1657                           ; BSR set to: 14
  1658                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1659   001A18  8C84               	bsf	132,6,c	;volatile
  1660   001A1A                     
  1661                           ; BSR set to: 14
  1662                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1663   001A1A  9BA7               	bcf	167,5,b	;volatile
  1664   001A1C                     
  1665                           ; BSR set to: 14
  1666                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1667   001A1C  9DA7               	bcf	167,6,b	;volatile
  1668                           
  1669                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1670   001A1E  0E1D               	movlw	29
  1671   001A20  6F1D               	movwf	29,b	;volatile
  1672                           
  1673                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1674   001A22  0E1E               	movlw	30
  1675   001A24  6F1C               	movwf	28,b	;volatile
  1676                           
  1677                           ;i2c.c: 18:   RD5PPS=0x1C;
  1678   001A26  0E1C               	movlw	28
  1679   001A28  6F6F               	movwf	111,b	;volatile
  1680                           
  1681                           ;i2c.c: 19:   RD6PPS=0x1B;
  1682   001A2A  0E1B               	movlw	27
  1683   001A2C  6F70               	movwf	112,b	;volatile
  1684   001A2E                     
  1685                           ; BSR set to: 14
  1686   001A2E  0012               	return		;funcret
  1687   001A30                     __end_of_I2C_2_Master_Init:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _Color2String *****************
  1691 ;; Defined at:
  1692 ;;		line 37 in file "serial.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  buf             2   88[COMRAM] PTR unsigned char 
  1695 ;;		 -> main@data(30), 
  1696 ;;  R               1   90[COMRAM] unsigned char 
  1697 ;;  G               1   91[COMRAM] unsigned char 
  1698 ;;  B               1   92[COMRAM] unsigned char 
  1699 ;;  C               1   93[COMRAM] unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:        6 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 8
  1718 ;; This function calls:
  1719 ;;		_sendStringSerial4
  1720 ;;		_sprintf
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text15
  1727   001924                     __ptext15:
  1728                           	callstack 0
  1729   001924                     _Color2String:
  1730                           	callstack 22
  1731   001924                     
  1732                           ;serial.c: 40:     sprintf(buf,"Red: %d Green: %d Blue: %d Clear: %d \r",R,G,B,C);
  1733   001924  C059  F09C         	movff	Color2String@buf,sprintf@s
  1734   001928  C05A  F09D         	movff	Color2String@buf+1,sprintf@s+1
  1735   00192C  0E01               	movlw	low STR_1
  1736   00192E  0100               	movlb	0	; () banked
  1737   001930  6F9E               	movwf	sprintf@fmt& (0+255),b
  1738   001932  0E0E               	movlw	high STR_1
  1739   001934  6F9F               	movwf	(sprintf@fmt+1)& (0+255),b
  1740   001936  C05B  F0A0         	movff	Color2String@R,?_sprintf+4
  1741   00193A  6BA1               	clrf	(?_sprintf+5)& (0+255),b
  1742   00193C  C05C  F0A2         	movff	Color2String@G,?_sprintf+6
  1743   001940  6BA3               	clrf	(?_sprintf+7)& (0+255),b
  1744   001942  C05D  F0A4         	movff	Color2String@B,?_sprintf+8
  1745   001946  6BA5               	clrf	(?_sprintf+9)& (0+255),b
  1746   001948  C05E  F0A6         	movff	Color2String@C,?_sprintf+10
  1747   00194C  6BA7               	clrf	(?_sprintf+11)& (0+255),b
  1748   00194E  EC3F  F00B         	call	_sprintf	;wreg free
  1749   001952                     
  1750                           ;serial.c: 41:     sendStringSerial4(buf);
  1751   001952  C059  F002         	movff	Color2String@buf,sendStringSerial4@string
  1752   001956  C05A  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  1753   00195A  ECCD  F00C         	call	_sendStringSerial4	;wreg free
  1754   00195E  0012               	return		;funcret
  1755   001960                     __end_of_Color2String:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _sprintf *****************
  1759 ;; Defined at:
  1760 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1763 ;;		 -> main@data(30), 
  1764 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1765 ;;		 -> STR_1(39), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1768 ;;  ap              2   12[BANK0 ] PTR void [1]
  1769 ;;		 -> ?_sprintf(2), 
  1770 ;;  ret             2    0        int 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  2    0[BANK0 ] int 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1780 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;Total ram usage:       25 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 7
  1787 ;; This function calls:
  1788 ;;		_vfprintf
  1789 ;; This function is called by:
  1790 ;;		_Color2String
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text16
  1795   00167E                     __ptext16:
  1796                           	callstack 0
  1797   00167E                     _sprintf:
  1798                           	callstack 22
  1799   00167E  0EA0               	movlw	low (?_sprintf+4)
  1800   001680  0100               	movlb	0	; () banked
  1801   001682  6FA8               	movwf	sprintf@ap& (0+255),b
  1802   001684  0E00               	movlw	high (?_sprintf+4)
  1803   001686  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1804   001688  C09C  F0AA         	movff	sprintf@s,sprintf@f
  1805   00168C  C09D  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1806   001690                     
  1807                           ; BSR set to: 0
  1808   001690  0E00               	movlw	0
  1809   001692  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1810   001694  0E00               	movlw	0
  1811   001696  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1812   001698                     
  1813                           ; BSR set to: 0
  1814   001698  0E00               	movlw	0
  1815   00169A  6FB4               	movwf	(sprintf@f+10)& (0+255),b
  1816   00169C  0E00               	movlw	0
  1817   00169E  6FB3               	movwf	(sprintf@f+9)& (0+255),b
  1818   0016A0                     
  1819                           ; BSR set to: 0
  1820   0016A0  0EAA               	movlw	low sprintf@f
  1821   0016A2  6E51               	movwf	vfprintf@fp^0,c
  1822   0016A4  0E00               	movlw	high sprintf@f
  1823   0016A6  6E52               	movwf	(vfprintf@fp+1)^0,c
  1824   0016A8  C09E  F053         	movff	sprintf@fmt,vfprintf@fmt
  1825   0016AC  C09F  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1826   0016B0  0EA8               	movlw	low sprintf@ap
  1827   0016B2  6E55               	movwf	vfprintf@ap^0,c
  1828   0016B4  0E00               	movlw	high sprintf@ap
  1829   0016B6  6E56               	movwf	(vfprintf@ap+1)^0,c
  1830   0016B8  EC08  F00C         	call	_vfprintf	;wreg free
  1831   0016BC  0100               	movlb	0	; () banked
  1832   0016BE  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1833   0016C0  259C               	addwf	sprintf@s& (0+255),w,b
  1834   0016C2  6ED9               	movwf	fsr2l,c
  1835   0016C4  51AE               	movf	(sprintf@f+4)& (0+255),w,b
  1836   0016C6  219D               	addwfc	(sprintf@s+1)& (0+255),w,b
  1837   0016C8  6EDA               	movwf	fsr2h,c
  1838   0016CA  0E00               	movlw	0
  1839   0016CC  6EDF               	movwf	indf2,c
  1840   0016CE                     
  1841                           ; BSR set to: 0
  1842   0016CE  0012               	return		;funcret
  1843   0016D0                     __end_of_sprintf:
  1844                           	callstack 0
  1845                           
  1846 ;; *************** function _vfprintf *****************
  1847 ;; Defined at:
  1848 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  1851 ;;		 -> sprintf@f(11), 
  1852 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  1853 ;;		 -> STR_1(39), 
  1854 ;;  ap              2   84[COMRAM] PTR PTR void 
  1855 ;;		 -> sprintf@ap(2), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1858 ;;		 -> STR_1(39), 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2   80[COMRAM] int 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1868 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 6
  1875 ;; This function calls:
  1876 ;;		_vfpfcnvrt
  1877 ;; This function is called by:
  1878 ;;		_sprintf
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text17
  1883   001810                     __ptext17:
  1884                           	callstack 0
  1885   001810                     _vfprintf:
  1886                           	callstack 22
  1887   001810                     
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1889   001810  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1890   001814  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1893   001818  EF1C  F00C         	goto	l1539
  1894   00181C                     l1537:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1897   00181C  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1898   001820  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1899   001824  0E57               	movlw	low vfprintf@cfmt
  1900   001826  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1901   001828  0E00               	movlw	high vfprintf@cfmt
  1902   00182A  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1903   00182C  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1904   001830  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1905   001834  ECC9  F009         	call	_vfpfcnvrt	;wreg free
  1906   001838                     l1539:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1909   001838  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1910   00183C  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1911   001840                     	if	0	;tblptru may be non-zero
  1912   001840                     	endif
  1913   001840                     	if	0	;tblptru may be non-zero
  1914   001840                     	endif
  1915   001840  0008               	tblrd		*
  1916   001842  50F5               	movf	tablat,w,c
  1917   001844  0900               	iorlw	0
  1918   001846  A4D8               	btfss	status,2,c
  1919   001848  EF28  F00C         	goto	u801
  1920   00184C  EF2A  F00C         	goto	u800
  1921   001850                     u801:
  1922   001850  EF0E  F00C         	goto	l1537
  1923   001854                     u800:
  1924   001854                     
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1926   001854  0E00               	movlw	0
  1927   001856  6E52               	movwf	(?_vfprintf+1)^0,c
  1928   001858  0E00               	movlw	0
  1929   00185A  6E51               	movwf	?_vfprintf^0,c
  1930   00185C  0012               	return		;funcret
  1931   00185E                     __end_of_vfprintf:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _vfpfcnvrt *****************
  1935 ;; Defined at:
  1936 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1939 ;;		 -> sprintf@f(11), 
  1940 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1941 ;;		 -> vfprintf@cfmt(2), 
  1942 ;;  ap              2   66[COMRAM] PTR PTR void 
  1943 ;;		 -> sprintf@ap(2), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  convarg         8   70[COMRAM] struct .
  1946 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1947 ;;		 -> STR_1(39), 
  1948 ;;  i               2    0        int 
  1949 ;;  done            2    0        int 
  1950 ;;  c               1    0        unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1963 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1964 ;;Total ram usage:       18 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 5
  1967 ;; This function calls:
  1968 ;;		_dtoa
  1969 ;;		_fputc
  1970 ;; This function is called by:
  1971 ;;		_vfprintf
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text18
  1976   001392                     __ptext18:
  1977                           	callstack 0
  1978   001392                     _vfpfcnvrt:
  1979                           	callstack 22
  1980   001392                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1982   001392  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983   001396  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984   00139A  CFDE FFF6          	movff	postinc2,tblptrl
  1985   00139E  CFDD FFF7          	movff	postdec2,tblptrh
  1986   0013A2                     	if	0	;tblptru may be non-zero
  1987   0013A2                     	endif
  1988   0013A2                     	if	0	;tblptru may be non-zero
  1989   0013A2                     	endif
  1990   0013A2  0008               	tblrd		*
  1991   0013A4  50F5               	movf	tablat,w,c
  1992   0013A6  0A25               	xorlw	37
  1993   0013A8  A4D8               	btfss	status,2,c
  1994   0013AA  EFD9  F009         	goto	u761
  1995   0013AE  EFDB  F009         	goto	u760
  1996   0013B2                     u761:
  1997   0013B2  EF5B  F00A         	goto	l1513
  1998   0013B6                     u760:
  1999   0013B6                     
  2000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2001   0013B6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2002   0013BA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2003   0013BE  2ADE               	incf	postinc2,f,c
  2004   0013C0  0E00               	movlw	0
  2005   0013C2  22DD               	addwfc	postdec2,f,c
  2006   0013C4                     
  2007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2008   0013C4  0E00               	movlw	0
  2009   0013C6  0100               	movlb	0	; () banked
  2010   0013C8  6F75               	movwf	(_width+1)& (0+255),b
  2011   0013CA  0E00               	movlw	0
  2012   0013CC  6F74               	movwf	_width& (0+255),b
  2013   0013CE  C074  F078         	movff	_width,_flags
  2014   0013D2                     
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2017   0013D2  6976               	setf	_prec& (0+255),b
  2018   0013D4  6977               	setf	(_prec+1)& (0+255),b
  2019   0013D6                     
  2020                           ; BSR set to: 0
  2021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2022   0013D6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2023   0013DA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2024   0013DE  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2025   0013E2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2026   0013E6                     
  2027                           ; BSR set to: 0
  2028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2029   0013E6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2030   0013EA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2031   0013EE                     	if	0	;tblptru may be non-zero
  2032   0013EE                     	endif
  2033   0013EE                     	if	0	;tblptru may be non-zero
  2034   0013EE                     	endif
  2035   0013EE  0008               	tblrd		*
  2036   0013F0  50F5               	movf	tablat,w,c
  2037   0013F2  0A64               	xorlw	100
  2038   0013F4  B4D8               	btfsc	status,2,c
  2039   0013F6  EFFF  F009         	goto	u771
  2040   0013FA  EF01  F00A         	goto	u770
  2041   0013FE                     u771:
  2042   0013FE  EF0F  F00A         	goto	l1503
  2043   001402                     u770:
  2044   001402                     
  2045                           ; BSR set to: 0
  2046   001402  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2047   001406  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2048   00140A                     	if	0	;tblptru may be non-zero
  2049   00140A                     	endif
  2050   00140A                     	if	0	;tblptru may be non-zero
  2051   00140A                     	endif
  2052   00140A  0008               	tblrd		*
  2053   00140C  50F5               	movf	tablat,w,c
  2054   00140E  0A69               	xorlw	105
  2055   001410  A4D8               	btfss	status,2,c
  2056   001412  EF0D  F00A         	goto	u781
  2057   001416  EF0F  F00A         	goto	u780
  2058   00141A                     u781:
  2059   00141A  EF52  F00A         	goto	l1509
  2060   00141E                     u780:
  2061   00141E                     l1503:
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2065   00141E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2066   001422  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2067   001426  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2068   00142A  0E02               	movlw	2
  2069   00142C  26DE               	addwf	postinc2,f,c
  2070   00142E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2071   001432  0E00               	movlw	0
  2072   001434  22DD               	addwfc	postdec2,f,c
  2073   001436  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2074   00143A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2075   00143E  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2076   001442  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2077   001446  0E00               	movlw	0
  2078   001448  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2079   00144A  0EFF               	movlw	-1
  2080   00144C  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2081   00144E  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2082   001450  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2083   001452  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2084   001454  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2085   001456  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2088   001458  0E01               	movlw	1
  2089   00145A  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2090   00145C  6E45               	movwf	??_vfpfcnvrt^0,c
  2091   00145E  0E00               	movlw	0
  2092   001460  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2093   001462  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2094   001464  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095   001468  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096   00146C  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2097   001470  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2098   001474                     
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2101   001474  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2102   001478  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2103   00147C  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2104   001480  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2105   001484  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2106   001488  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2107   00148C  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2108   001490  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2109   001494  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2110   001498  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2111   00149C  EC15  F007         	call	_dtoa	;wreg free
  2112   0014A0  EF6F  F00A         	goto	l921
  2113   0014A4                     l1509:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2116   0014A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117   0014A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118   0014AC  2ADE               	incf	postinc2,f,c
  2119   0014AE  0E00               	movlw	0
  2120   0014B0  22DD               	addwfc	postdec2,f,c
  2121   0014B2  EF6F  F00A         	goto	l921
  2122   0014B6                     l1513:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2125   0014B6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2126   0014BA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2127   0014BE  CFDE FFF6          	movff	postinc2,tblptrl
  2128   0014C2  CFDD FFF7          	movff	postdec2,tblptrh
  2129   0014C6                     	if	0	;tblptru may be non-zero
  2130   0014C6                     	endif
  2131   0014C6                     	if	0	;tblptru may be non-zero
  2132   0014C6                     	endif
  2133   0014C6  0008               	tblrd		*
  2134   0014C8  50F5               	movf	tablat,w,c
  2135   0014CA  6E01               	movwf	fputc@c^0,c
  2136   0014CC  6A02               	clrf	(fputc@c+1)^0,c
  2137   0014CE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2138   0014D2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2139   0014D6  EC70  F00A         	call	_fputc	;wreg free
  2140   0014DA  EF52  F00A         	goto	l1509
  2141   0014DE                     l921:
  2142   0014DE  0012               	return		;funcret
  2143   0014E0                     __end_of_vfpfcnvrt:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _dtoa *****************
  2147 ;; Defined at:
  2148 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2151 ;;		 -> sprintf@f(11), 
  2152 ;;  d               8   29[COMRAM] long long 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  n               8   51[COMRAM] long long 
  2155 ;;  i               2   59[COMRAM] int 
  2156 ;;  w               2   49[COMRAM] int 
  2157 ;;  p               2   47[COMRAM] int 
  2158 ;;  s               1   61[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:       35 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		___aodiv
  2177 ;;		___aomod
  2178 ;;		_abs
  2179 ;;		_pad
  2180 ;; This function is called by:
  2181 ;;		_vfpfcnvrt
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text19
  2186   000E2A                     __ptext19:
  2187                           	callstack 0
  2188   000E2A                     _dtoa:
  2189                           	callstack 22
  2190   000E2A                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2192   000E2A  C01E  F034         	movff	dtoa@d,dtoa@n
  2193   000E2E  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2194   000E32  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2195   000E36  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2196   000E3A  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2197   000E3E  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2198   000E42  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2199   000E46  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2200   000E4A                     
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2202   000E4A  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2203   000E4C  EF2A  F007         	goto	u641
  2204   000E50  EF2D  F007         	goto	u640
  2205   000E54                     u641:
  2206   000E54  0E01               	movlw	1
  2207   000E56  EF2E  F007         	goto	u650
  2208   000E5A                     u640:
  2209   000E5A  0E00               	movlw	0
  2210   000E5C                     u650:
  2211   000E5C  6E3E               	movwf	dtoa@s^0,c
  2212   000E5E                     
  2213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2214   000E5E  503E               	movf	dtoa@s^0,w,c
  2215   000E60  B4D8               	btfsc	status,2,c
  2216   000E62  EF35  F007         	goto	u661
  2217   000E66  EF37  F007         	goto	u660
  2218   000E6A                     u661:
  2219   000E6A  EF47  F007         	goto	l1441
  2220   000E6E                     u660:
  2221   000E6E                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2223   000E6E  1E3B               	comf	(dtoa@n+7)^0,f,c
  2224   000E70  1E3A               	comf	(dtoa@n+6)^0,f,c
  2225   000E72  1E39               	comf	(dtoa@n+5)^0,f,c
  2226   000E74  1E38               	comf	(dtoa@n+4)^0,f,c
  2227   000E76  1E37               	comf	(dtoa@n+3)^0,f,c
  2228   000E78  1E36               	comf	(dtoa@n+2)^0,f,c
  2229   000E7A  1E35               	comf	(dtoa@n+1)^0,f,c
  2230   000E7C  6C34               	negf	dtoa@n^0,c
  2231   000E7E  0E00               	movlw	0
  2232   000E80  2235               	addwfc	(dtoa@n+1)^0,f,c
  2233   000E82  2236               	addwfc	(dtoa@n+2)^0,f,c
  2234   000E84  2237               	addwfc	(dtoa@n+3)^0,f,c
  2235   000E86  2238               	addwfc	(dtoa@n+4)^0,f,c
  2236   000E88  2239               	addwfc	(dtoa@n+5)^0,f,c
  2237   000E8A  223A               	addwfc	(dtoa@n+6)^0,f,c
  2238   000E8C  223B               	addwfc	(dtoa@n+7)^0,f,c
  2239   000E8E                     l1441:
  2240                           
  2241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2242   000E8E  0100               	movlb	0	; () banked
  2243   000E90  BF77               	btfsc	(_prec+1)& (0+255),7,b
  2244   000E92  EF55  F007         	goto	u670
  2245   000E96  5177               	movf	(_prec+1)& (0+255),w,b
  2246   000E98  E106               	bnz	u671
  2247   000E9A  0576               	decf	_prec& (0+255),w,b
  2248   000E9C  B0D8               	btfsc	status,0,c
  2249   000E9E  EF53  F007         	goto	u671
  2250   000EA2  EF55  F007         	goto	u670
  2251   000EA6                     u671:
  2252   000EA6  EF5B  F007         	goto	l900
  2253   000EAA                     u670:
  2254   000EAA                     
  2255                           ; BSR set to: 0
  2256   000EAA  0E00               	movlw	0
  2257   000EAC  6E31               	movwf	(dtoa@p+1)^0,c
  2258   000EAE  0E01               	movlw	1
  2259   000EB0  6E30               	movwf	dtoa@p^0,c
  2260   000EB2  EF5F  F007         	goto	l902
  2261   000EB6                     l900:
  2262                           
  2263                           ; BSR set to: 0
  2264   000EB6  C076  F030         	movff	_prec,dtoa@p
  2265   000EBA  C077  F031         	movff	_prec+1,dtoa@p+1
  2266   000EBE                     l902:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2270   000EBE  C074  F032         	movff	_width,dtoa@w
  2271   000EC2  C075  F033         	movff	_width+1,dtoa@w+1
  2272   000EC6                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2275   000EC6  503E               	movf	dtoa@s^0,w,c
  2276   000EC8  B4D8               	btfsc	status,2,c
  2277   000ECA  EF69  F007         	goto	u681
  2278   000ECE  EF6B  F007         	goto	u680
  2279   000ED2                     u681:
  2280   000ED2  EF82  F007         	goto	l903
  2281   000ED6                     u680:
  2282   000ED6                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2285   000ED6  0632               	decf	dtoa@w^0,f,c
  2286   000ED8  A0D8               	btfss	status,0,c
  2287   000EDA  0633               	decf	(dtoa@w+1)^0,f,c
  2288   000EDC                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2291   000EDC  503E               	movf	dtoa@s^0,w,c
  2292   000EDE  A4D8               	btfss	status,2,c
  2293   000EE0  EF74  F007         	goto	u691
  2294   000EE4  EF76  F007         	goto	u690
  2295   000EE8                     u691:
  2296   000EE8  EF7C  F007         	goto	l1453
  2297   000EEC                     u690:
  2298   000EEC                     
  2299                           ; BSR set to: 0
  2300   000EEC  0E00               	movlw	0
  2301   000EEE  6E2F               	movwf	(_dtoa$1022+1)^0,c
  2302   000EF0  0E2B               	movlw	43
  2303   000EF2  6E2E               	movwf	_dtoa$1022^0,c
  2304   000EF4  EF80  F007         	goto	l1455
  2305   000EF8                     l1453:
  2306                           
  2307                           ; BSR set to: 0
  2308   000EF8  0E00               	movlw	0
  2309   000EFA  6E2F               	movwf	(_dtoa$1022+1)^0,c
  2310   000EFC  0E2D               	movlw	45
  2311   000EFE  6E2E               	movwf	_dtoa$1022^0,c
  2312   000F00                     l1455:
  2313                           
  2314                           ; BSR set to: 0
  2315   000F00  C02E  F03E         	movff	_dtoa$1022,dtoa@s
  2316   000F04                     l903:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2320   000F04  0E00               	movlw	0
  2321   000F06  6E3D               	movwf	(dtoa@i+1)^0,c
  2322   000F08  0E1F               	movlw	31
  2323   000F0A  6E3C               	movwf	dtoa@i^0,c
  2324   000F0C                     
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2327   000F0C  0E00               	movlw	0
  2328   000F0E  6F9B               	movwf	(_dbuf+31)& (0+255),b
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2331   000F10  EF06  F008         	goto	l1469
  2332   000F14                     l1459:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2335   000F14  063C               	decf	dtoa@i^0,f,c
  2336   000F16  A0D8               	btfss	status,0,c
  2337   000F18  063D               	decf	(dtoa@i+1)^0,f,c
  2338   000F1A                     
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2340   000F1A  0E7C               	movlw	low _dbuf
  2341   000F1C  243C               	addwf	dtoa@i^0,w,c
  2342   000F1E  6ED9               	movwf	fsr2l,c
  2343   000F20  0E00               	movlw	high _dbuf
  2344   000F22  203D               	addwfc	(dtoa@i+1)^0,w,c
  2345   000F24  6EDA               	movwf	fsr2h,c
  2346   000F26  C034  F001         	movff	dtoa@n,___aomod@dividend
  2347   000F2A  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2348   000F2E  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2349   000F32  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2350   000F36  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2351   000F3A  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2352   000F3E  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2353   000F42  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2354   000F46  0E0A               	movlw	10
  2355   000F48  6E09               	movwf	___aomod@divisor^0,c
  2356   000F4A  0E00               	movlw	0
  2357   000F4C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2358   000F4E  0E00               	movlw	0
  2359   000F50  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2360   000F52  0E00               	movlw	0
  2361   000F54  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2362   000F56  0E00               	movlw	0
  2363   000F58  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2364   000F5A  0E00               	movlw	0
  2365   000F5C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2366   000F5E  0E00               	movlw	0
  2367   000F60  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2368   000F62  0E00               	movlw	0
  2369   000F64  6E10               	movwf	(___aomod@divisor+7)^0,c
  2370   000F66  EC17  F009         	call	___aomod	;wreg free
  2371   000F6A  C001  F026         	movff	?___aomod,??_dtoa
  2372   000F6E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2373   000F72  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2374   000F76  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2375   000F7A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2376   000F7E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2377   000F82  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2378   000F86  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2379   000F8A  C026  F013         	movff	??_dtoa,abs@a
  2380   000F8E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2381   000F92  EC72  F00C         	call	_abs	;wreg free
  2382   000F96  5013               	movf	?_abs^0,w,c
  2383   000F98  0F30               	addlw	48
  2384   000F9A  6EDF               	movwf	indf2,c
  2385   000F9C                     
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2387   000F9C  0630               	decf	dtoa@p^0,f,c
  2388   000F9E  A0D8               	btfss	status,0,c
  2389   000FA0  0631               	decf	(dtoa@p+1)^0,f,c
  2390   000FA2                     
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2392   000FA2  0632               	decf	dtoa@w^0,f,c
  2393   000FA4  A0D8               	btfss	status,0,c
  2394   000FA6  0633               	decf	(dtoa@w+1)^0,f,c
  2395   000FA8                     
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2397   000FA8  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2398   000FAC  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2399   000FB0  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2400   000FB4  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2401   000FB8  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2402   000FBC  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2403   000FC0  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2404   000FC4  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2405   000FC8  0E0A               	movlw	10
  2406   000FCA  6E09               	movwf	___aodiv@divisor^0,c
  2407   000FCC  0E00               	movlw	0
  2408   000FCE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2409   000FD0  0E00               	movlw	0
  2410   000FD2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2411   000FD4  0E00               	movlw	0
  2412   000FD6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2413   000FD8  0E00               	movlw	0
  2414   000FDA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2415   000FDC  0E00               	movlw	0
  2416   000FDE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2417   000FE0  0E00               	movlw	0
  2418   000FE2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2419   000FE4  0E00               	movlw	0
  2420   000FE6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2421   000FE8  EC53  F008         	call	___aodiv	;wreg free
  2422   000FEC  C001  F034         	movff	?___aodiv,dtoa@n
  2423   000FF0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2424   000FF4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2425   000FF8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2426   000FFC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2427   001000  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2428   001004  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2429   001008  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2430   00100C                     l1469:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2433   00100C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2434   00100E  EF11  F008         	goto	u701
  2435   001012  503D               	movf	(dtoa@i+1)^0,w,c
  2436   001014  E108               	bnz	u700
  2437   001016  043C               	decf	dtoa@i^0,w,c
  2438   001018  A0D8               	btfss	status,0,c
  2439   00101A  EF11  F008         	goto	u701
  2440   00101E  EF13  F008         	goto	u700
  2441   001022                     u701:
  2442   001022  EF2F  F008         	goto	l1475
  2443   001026                     u700:
  2444   001026  5034               	movf	dtoa@n^0,w,c
  2445   001028  1035               	iorwf	(dtoa@n+1)^0,w,c
  2446   00102A  1036               	iorwf	(dtoa@n+2)^0,w,c
  2447   00102C  1037               	iorwf	(dtoa@n+3)^0,w,c
  2448   00102E  1038               	iorwf	(dtoa@n+4)^0,w,c
  2449   001030  1039               	iorwf	(dtoa@n+5)^0,w,c
  2450   001032  103A               	iorwf	(dtoa@n+6)^0,w,c
  2451   001034  103B               	iorwf	(dtoa@n+7)^0,w,c
  2452   001036  A4D8               	btfss	status,2,c
  2453   001038  EF20  F008         	goto	u711
  2454   00103C  EF22  F008         	goto	u710
  2455   001040                     u711:
  2456   001040  EF8A  F007         	goto	l1459
  2457   001044                     u710:
  2458   001044  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2459   001046  EF2F  F008         	goto	u720
  2460   00104A  5031               	movf	(dtoa@p+1)^0,w,c
  2461   00104C  E106               	bnz	u721
  2462   00104E  0430               	decf	dtoa@p^0,w,c
  2463   001050  B0D8               	btfsc	status,0,c
  2464   001052  EF2D  F008         	goto	u721
  2465   001056  EF2F  F008         	goto	u720
  2466   00105A                     u721:
  2467   00105A  EF8A  F007         	goto	l1459
  2468   00105E                     u720:
  2469   00105E                     l1475:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2472   00105E  503E               	movf	dtoa@s^0,w,c
  2473   001060  B4D8               	btfsc	status,2,c
  2474   001062  EF35  F008         	goto	u731
  2475   001066  EF37  F008         	goto	u730
  2476   00106A                     u731:
  2477   00106A  EF42  F008         	goto	l1481
  2478   00106E                     u730:
  2479   00106E                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2481   00106E  063C               	decf	dtoa@i^0,f,c
  2482   001070  A0D8               	btfss	status,0,c
  2483   001072  063D               	decf	(dtoa@i+1)^0,f,c
  2484   001074                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2486   001074  0E7C               	movlw	low _dbuf
  2487   001076  243C               	addwf	dtoa@i^0,w,c
  2488   001078  6ED9               	movwf	fsr2l,c
  2489   00107A  0E00               	movlw	high _dbuf
  2490   00107C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2491   00107E  6EDA               	movwf	fsr2h,c
  2492   001080  C03E  FFDF         	movff	dtoa@s,indf2
  2493   001084                     l1481:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2496   001084  C01C  F011         	movff	dtoa@fp,pad@fp
  2497   001088  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2498   00108C  0E7C               	movlw	low _dbuf
  2499   00108E  243C               	addwf	dtoa@i^0,w,c
  2500   001090  6E13               	movwf	pad@buf^0,c
  2501   001092  0E00               	movlw	high _dbuf
  2502   001094  203D               	addwfc	(dtoa@i+1)^0,w,c
  2503   001096  6E14               	movwf	(pad@buf+1)^0,c
  2504   001098  C032  F015         	movff	dtoa@w,pad@p
  2505   00109C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2506   0010A0  ECD5  F00A         	call	_pad	;wreg free
  2507   0010A4  0012               	return		;funcret
  2508   0010A6                     __end_of_dtoa:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _pad *****************
  2512 ;; Defined at:
  2513 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2516 ;;		 -> sprintf@f(11), 
  2517 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2518 ;;		 -> dbuf(32), 
  2519 ;;  p               2   20[COMRAM] int 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  w               2   25[COMRAM] int 
  2522 ;;  i               2   23[COMRAM] int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2532 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;Total ram usage:       11 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 3
  2539 ;; This function calls:
  2540 ;;		_fputc
  2541 ;;		_fputs
  2542 ;; This function is called by:
  2543 ;;		_dtoa
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text20
  2548   0015AA                     __ptext20:
  2549                           	callstack 0
  2550   0015AA                     _pad:
  2551                           	callstack 22
  2552   0015AA                     
  2553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2554   0015AA  BE16               	btfsc	(pad@p+1)^0,7,c
  2555   0015AC  EFDA  F00A         	goto	u611
  2556   0015B0  EFDC  F00A         	goto	u610
  2557   0015B4                     u611:
  2558   0015B4  EFE2  F00A         	goto	l1419
  2559   0015B8                     u610:
  2560   0015B8  C015  F01A         	movff	pad@p,pad@w
  2561   0015BC  C016  F01B         	movff	pad@p+1,pad@w+1
  2562   0015C0  EFE6  F00A         	goto	l891
  2563   0015C4                     l1419:
  2564   0015C4  0E00               	movlw	0
  2565   0015C6  6E1B               	movwf	(pad@w+1)^0,c
  2566   0015C8  0E00               	movlw	0
  2567   0015CA  6E1A               	movwf	pad@w^0,c
  2568   0015CC                     l891:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2571   0015CC  0E00               	movlw	0
  2572   0015CE  6E19               	movwf	(pad@i+1)^0,c
  2573   0015D0  0E00               	movlw	0
  2574   0015D2  6E18               	movwf	pad@i^0,c
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2577   0015D4  EFF8  F00A         	goto	l1425
  2578   0015D8                     l1421:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2581   0015D8  0E00               	movlw	0
  2582   0015DA  6E02               	movwf	(fputc@c+1)^0,c
  2583   0015DC  0E20               	movlw	32
  2584   0015DE  6E01               	movwf	fputc@c^0,c
  2585   0015E0  C011  F003         	movff	pad@fp,fputc@fp
  2586   0015E4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2587   0015E8  EC70  F00A         	call	_fputc	;wreg free
  2588   0015EC                     
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2590   0015EC  4A18               	infsnz	pad@i^0,f,c
  2591   0015EE  2A19               	incf	(pad@i+1)^0,f,c
  2592   0015F0                     l1425:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2595   0015F0  501A               	movf	pad@w^0,w,c
  2596   0015F2  5C18               	subwf	pad@i^0,w,c
  2597   0015F4  5019               	movf	(pad@i+1)^0,w,c
  2598   0015F6  0A80               	xorlw	128
  2599   0015F8  6E17               	movwf	??_pad^0,c
  2600   0015FA  501B               	movf	(pad@w+1)^0,w,c
  2601   0015FC  0A80               	xorlw	128
  2602   0015FE  5817               	subwfb	??_pad^0,w,c
  2603   001600  A0D8               	btfss	status,0,c
  2604   001602  EF05  F00B         	goto	u621
  2605   001606  EF07  F00B         	goto	u620
  2606   00160A                     u621:
  2607   00160A  EFEC  F00A         	goto	l1421
  2608   00160E                     u620:
  2609   00160E                     
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2611   00160E  C013  F00A         	movff	pad@buf,fputs@s
  2612   001612  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2613   001616  C011  F00C         	movff	pad@fp,fputs@fp
  2614   00161A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2615   00161E  EC2F  F00C         	call	_fputs	;wreg free
  2616   001622  0012               	return		;funcret
  2617   001624                     __end_of_pad:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _fputs *****************
  2621 ;; Defined at:
  2622 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2625 ;;		 -> dbuf(32), 
  2626 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2627 ;;		 -> sprintf@f(11), 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  i               2   14[COMRAM] int 
  2630 ;;  c               1   13[COMRAM] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  2    9[COMRAM] int 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;Total ram usage:        7 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; Hardware stack levels required when called: 2
  2647 ;; This function calls:
  2648 ;;		_fputc
  2649 ;; This function is called by:
  2650 ;;		_pad
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text21
  2655   00185E                     __ptext21:
  2656                           	callstack 0
  2657   00185E                     _fputs:
  2658                           	callstack 22
  2659   00185E  0E00               	movlw	0
  2660   001860  6E10               	movwf	(fputs@i+1)^0,c
  2661   001862  0E00               	movlw	0
  2662   001864  6E0F               	movwf	fputs@i^0,c
  2663   001866  EF40  F00C         	goto	l1333
  2664   00186A                     l1329:
  2665   00186A  C00E  F001         	movff	fputs@c,fputc@c
  2666   00186E  6A02               	clrf	(fputc@c+1)^0,c
  2667   001870  C00C  F003         	movff	fputs@fp,fputc@fp
  2668   001874  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2669   001878  EC70  F00A         	call	_fputc	;wreg free
  2670   00187C  4A0F               	infsnz	fputs@i^0,f,c
  2671   00187E  2A10               	incf	(fputs@i+1)^0,f,c
  2672   001880                     l1333:
  2673   001880  500F               	movf	fputs@i^0,w,c
  2674   001882  240A               	addwf	fputs@s^0,w,c
  2675   001884  6ED9               	movwf	fsr2l,c
  2676   001886  5010               	movf	(fputs@i+1)^0,w,c
  2677   001888  200B               	addwfc	(fputs@s+1)^0,w,c
  2678   00188A  6EDA               	movwf	fsr2h,c
  2679   00188C  50DF               	movf	indf2,w,c
  2680   00188E  6E0E               	movwf	fputs@c^0,c
  2681   001890  500E               	movf	fputs@c^0,w,c
  2682   001892  A4D8               	btfss	status,2,c
  2683   001894  EF4E  F00C         	goto	u471
  2684   001898  EF50  F00C         	goto	u470
  2685   00189C                     u471:
  2686   00189C  EF35  F00C         	goto	l1329
  2687   0018A0                     u470:
  2688   0018A0  0012               	return		;funcret
  2689   0018A2                     __end_of_fputs:
  2690                           	callstack 0
  2691                           
  2692 ;; *************** function _fputc *****************
  2693 ;; Defined at:
  2694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  c               2    0[COMRAM] int 
  2697 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2698 ;;		 -> sprintf@f(11), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2    0[COMRAM] int 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;Total ram usage:        9 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 1
  2717 ;; This function calls:
  2718 ;;		_putch
  2719 ;; This function is called by:
  2720 ;;		_pad
  2721 ;;		_vfpfcnvrt
  2722 ;;		_fputs
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text22
  2727   0014E0                     __ptext22:
  2728                           	callstack 0
  2729   0014E0                     _fputc:
  2730                           	callstack 25
  2731   0014E0  5003               	movf	fputc@fp^0,w,c
  2732   0014E2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2733   0014E4  B4D8               	btfsc	status,2,c
  2734   0014E6  EF77  F00A         	goto	u431
  2735   0014EA  EF79  F00A         	goto	u430
  2736   0014EE                     u431:
  2737   0014EE  EF82  F00A         	goto	l1317
  2738   0014F2                     u430:
  2739   0014F2  5003               	movf	fputc@fp^0,w,c
  2740   0014F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  2741   0014F6  A4D8               	btfss	status,2,c
  2742   0014F8  EF80  F00A         	goto	u441
  2743   0014FC  EF82  F00A         	goto	u440
  2744   001500                     u441:
  2745   001500  EF87  F00A         	goto	l1319
  2746   001504                     u440:
  2747   001504                     l1317:
  2748   001504  5001               	movf	fputc@c^0,w,c
  2749   001506  EC6E  F00D         	call	_putch
  2750   00150A  EFD4  F00A         	goto	l946
  2751   00150E                     l1319:
  2752   00150E  EE20 F009          	lfsr	2,9
  2753   001512  5003               	movf	fputc@fp^0,w,c
  2754   001514  26D9               	addwf	fsr2l,f,c
  2755   001516  5004               	movf	(fputc@fp+1)^0,w,c
  2756   001518  22DA               	addwfc	fsr2h,f,c
  2757   00151A  50DE               	movf	postinc2,w,c
  2758   00151C  10DE               	iorwf	postinc2,w,c
  2759   00151E  B4D8               	btfsc	status,2,c
  2760   001520  EF94  F00A         	goto	u451
  2761   001524  EF96  F00A         	goto	u450
  2762   001528                     u451:
  2763   001528  EFB1  F00A         	goto	l1323
  2764   00152C                     u450:
  2765   00152C  EE20 F009          	lfsr	2,9
  2766   001530  5003               	movf	fputc@fp^0,w,c
  2767   001532  26D9               	addwf	fsr2l,f,c
  2768   001534  5004               	movf	(fputc@fp+1)^0,w,c
  2769   001536  22DA               	addwfc	fsr2h,f,c
  2770   001538  EE10 F003          	lfsr	1,3
  2771   00153C  5003               	movf	fputc@fp^0,w,c
  2772   00153E  26E1               	addwf	fsr1l,f,c
  2773   001540  5004               	movf	(fputc@fp+1)^0,w,c
  2774   001542  22E2               	addwfc	fsr1h,f,c
  2775   001544  50DE               	movf	postinc2,w,c
  2776   001546  5CE6               	subwf	postinc1,w,c
  2777   001548  50E6               	movf	postinc1,w,c
  2778   00154A  0A80               	xorlw	128
  2779   00154C  6E09               	movwf	(??_fputc+4)^0,c
  2780   00154E  50DE               	movf	postinc2,w,c
  2781   001550  0A80               	xorlw	128
  2782   001552  5809               	subwfb	(??_fputc+4)^0,w,c
  2783   001554  B0D8               	btfsc	status,0,c
  2784   001556  EFAF  F00A         	goto	u461
  2785   00155A  EFB1  F00A         	goto	u460
  2786   00155E                     u461:
  2787   00155E  EFD4  F00A         	goto	l946
  2788   001562                     u460:
  2789   001562                     l1323:
  2790   001562  EE20 F003          	lfsr	2,3
  2791   001566  5003               	movf	fputc@fp^0,w,c
  2792   001568  26D9               	addwf	fsr2l,f,c
  2793   00156A  5004               	movf	(fputc@fp+1)^0,w,c
  2794   00156C  22DA               	addwfc	fsr2h,f,c
  2795   00156E  CFDE F005          	movff	postinc2,??_fputc
  2796   001572  CFDD F006          	movff	postdec2,??_fputc+1
  2797   001576  C003  FFD9         	movff	fputc@fp,fsr2l
  2798   00157A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2799   00157E  CFDE F007          	movff	postinc2,??_fputc+2
  2800   001582  CFDD F008          	movff	postdec2,??_fputc+3
  2801   001586  5005               	movf	??_fputc^0,w,c
  2802   001588  2407               	addwf	(??_fputc+2)^0,w,c
  2803   00158A  6ED9               	movwf	fsr2l,c
  2804   00158C  5006               	movf	(??_fputc+1)^0,w,c
  2805   00158E  2008               	addwfc	(??_fputc+3)^0,w,c
  2806   001590  6EDA               	movwf	fsr2h,c
  2807   001592  C001  FFDF         	movff	fputc@c,indf2
  2808   001596  EE20 F003          	lfsr	2,3
  2809   00159A  5003               	movf	fputc@fp^0,w,c
  2810   00159C  26D9               	addwf	fsr2l,f,c
  2811   00159E  5004               	movf	(fputc@fp+1)^0,w,c
  2812   0015A0  22DA               	addwfc	fsr2h,f,c
  2813   0015A2  2ADE               	incf	postinc2,f,c
  2814   0015A4  0E00               	movlw	0
  2815   0015A6  22DD               	addwfc	postdec2,f,c
  2816   0015A8                     l946:
  2817   0015A8  0012               	return		;funcret
  2818   0015AA                     __end_of_fputc:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _putch *****************
  2822 ;; Defined at:
  2823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  c               1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  c               1    0[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_fputc
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text23
  2851   001ADC                     __ptext23:
  2852                           	callstack 0
  2853   001ADC                     _putch:
  2854                           	callstack 25
  2855   001ADC  0012               	return		;funcret
  2856   001ADE                     __end_of_putch:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _abs *****************
  2860 ;; Defined at:
  2861 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  a               2   18[COMRAM] int 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   18[COMRAM] int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        4 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_dtoa
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text24
  2889   0018E4                     __ptext24:
  2890                           	callstack 0
  2891   0018E4                     _abs:
  2892                           	callstack 25
  2893   0018E4  BE14               	btfsc	(abs@a+1)^0,7,c
  2894   0018E6  EF7F  F00C         	goto	u630
  2895   0018EA  5014               	movf	(abs@a+1)^0,w,c
  2896   0018EC  E106               	bnz	u631
  2897   0018EE  0413               	decf	abs@a^0,w,c
  2898   0018F0  B0D8               	btfsc	status,0,c
  2899   0018F2  EF7D  F00C         	goto	u631
  2900   0018F6  EF7F  F00C         	goto	u630
  2901   0018FA                     u631:
  2902   0018FA  EF8D  F00C         	goto	l931
  2903   0018FE                     u630:
  2904   0018FE  C013  F015         	movff	abs@a,??_abs
  2905   001902  C014  F016         	movff	abs@a+1,??_abs+1
  2906   001906  1E15               	comf	??_abs^0,f,c
  2907   001908  1E16               	comf	(??_abs+1)^0,f,c
  2908   00190A  4A15               	infsnz	??_abs^0,f,c
  2909   00190C  2A16               	incf	(??_abs+1)^0,f,c
  2910   00190E  C015  F013         	movff	??_abs,?_abs
  2911   001912  C016  F014         	movff	??_abs+1,?_abs+1
  2912   001916  EF91  F00C         	goto	l934
  2913   00191A                     l931:
  2914   00191A  C013  F013         	movff	abs@a,?_abs
  2915   00191E  C014  F014         	movff	abs@a+1,?_abs+1
  2916   001922                     l934:
  2917   001922  0012               	return		;funcret
  2918   001924                     __end_of_abs:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function ___aomod *****************
  2922 ;; Defined at:
  2923 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  dividend        8    0[COMRAM] long long 
  2926 ;;  divisor         8    8[COMRAM] long long 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  sign            1   17[COMRAM] unsigned char 
  2929 ;;  counter         1   16[COMRAM] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  8    0[COMRAM] long long 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2939 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;Total ram usage:       18 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_dtoa
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text25
  2953   00122E                     __ptext25:
  2954                           	callstack 0
  2955   00122E                     ___aomod:
  2956                           	callstack 25
  2957   00122E  0E00               	movlw	0
  2958   001230  6E12               	movwf	___aomod@sign^0,c
  2959   001232  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2960   001234  EF20  F009         	goto	u550
  2961   001238  EF1E  F009         	goto	u551
  2962   00123C                     u551:
  2963   00123C  EF32  F009         	goto	l1387
  2964   001240                     u550:
  2965   001240  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2966   001242  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2967   001244  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2968   001246  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2969   001248  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2970   00124A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2971   00124C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2972   00124E  6C01               	negf	___aomod@dividend^0,c
  2973   001250  0E00               	movlw	0
  2974   001252  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2975   001254  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2976   001256  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2977   001258  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2978   00125A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2979   00125C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2980   00125E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2981   001260  0E01               	movlw	1
  2982   001262  6E12               	movwf	___aomod@sign^0,c
  2983   001264                     l1387:
  2984   001264  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2985   001266  EF39  F009         	goto	u560
  2986   00126A  EF37  F009         	goto	u561
  2987   00126E                     u561:
  2988   00126E  EF49  F009         	goto	l1391
  2989   001272                     u560:
  2990   001272  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2991   001274  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2992   001276  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2993   001278  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2994   00127A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2995   00127C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2996   00127E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2997   001280  6C09               	negf	___aomod@divisor^0,c
  2998   001282  0E00               	movlw	0
  2999   001284  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3000   001286  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3001   001288  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3002   00128A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3003   00128C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3004   00128E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3005   001290  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3006   001292                     l1391:
  3007   001292  5009               	movf	___aomod@divisor^0,w,c
  3008   001294  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3009   001296  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3010   001298  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3011   00129A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3012   00129C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3013   00129E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3014   0012A0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3015   0012A2  B4D8               	btfsc	status,2,c
  3016   0012A4  EF56  F009         	goto	u571
  3017   0012A8  EF58  F009         	goto	u570
  3018   0012AC                     u571:
  3019   0012AC  EFA0  F009         	goto	l1407
  3020   0012B0                     u570:
  3021   0012B0  0E01               	movlw	1
  3022   0012B2  6E11               	movwf	___aomod@counter^0,c
  3023   0012B4  EF66  F009         	goto	l1397
  3024   0012B8                     l1395:
  3025   0012B8  90D8               	bcf	status,0,c
  3026   0012BA  3609               	rlcf	___aomod@divisor^0,f,c
  3027   0012BC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3028   0012BE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3029   0012C0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3030   0012C2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3031   0012C4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3032   0012C6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3033   0012C8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3034   0012CA  2A11               	incf	___aomod@counter^0,f,c
  3035   0012CC                     l1397:
  3036   0012CC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3037   0012CE  EF6B  F009         	goto	u581
  3038   0012D2  EF6D  F009         	goto	u580
  3039   0012D6                     u581:
  3040   0012D6  EF5C  F009         	goto	l1395
  3041   0012DA                     u580:
  3042   0012DA                     l1399:
  3043   0012DA  5009               	movf	___aomod@divisor^0,w,c
  3044   0012DC  5C01               	subwf	___aomod@dividend^0,w,c
  3045   0012DE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3046   0012E0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3047   0012E2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3048   0012E4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3049   0012E6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3050   0012E8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3051   0012EA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3052   0012EC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3053   0012EE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3054   0012F0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3055   0012F2  500F               	movf	(___aomod@divisor+6)^0,w,c
  3056   0012F4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3057   0012F6  5010               	movf	(___aomod@divisor+7)^0,w,c
  3058   0012F8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3059   0012FA  A0D8               	btfss	status,0,c
  3060   0012FC  EF82  F009         	goto	u591
  3061   001300  EF84  F009         	goto	u590
  3062   001304                     u591:
  3063   001304  EF94  F009         	goto	l1403
  3064   001308                     u590:
  3065   001308  5009               	movf	___aomod@divisor^0,w,c
  3066   00130A  5E01               	subwf	___aomod@dividend^0,f,c
  3067   00130C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3068   00130E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3069   001310  500B               	movf	(___aomod@divisor+2)^0,w,c
  3070   001312  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3071   001314  500C               	movf	(___aomod@divisor+3)^0,w,c
  3072   001316  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3073   001318  500D               	movf	(___aomod@divisor+4)^0,w,c
  3074   00131A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3075   00131C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3076   00131E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3077   001320  500F               	movf	(___aomod@divisor+6)^0,w,c
  3078   001322  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3079   001324  5010               	movf	(___aomod@divisor+7)^0,w,c
  3080   001326  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3081   001328                     l1403:
  3082   001328  90D8               	bcf	status,0,c
  3083   00132A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3084   00132C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3085   00132E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3086   001330  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3087   001332  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3088   001334  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3089   001336  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3090   001338  3209               	rrcf	___aomod@divisor^0,f,c
  3091   00133A  2E11               	decfsz	___aomod@counter^0,f,c
  3092   00133C  EF6D  F009         	goto	l1399
  3093   001340                     l1407:
  3094   001340  5012               	movf	___aomod@sign^0,w,c
  3095   001342  B4D8               	btfsc	status,2,c
  3096   001344  EFA6  F009         	goto	u601
  3097   001348  EFA8  F009         	goto	u600
  3098   00134C                     u601:
  3099   00134C  EFB8  F009         	goto	l1411
  3100   001350                     u600:
  3101   001350  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3102   001352  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3103   001354  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3104   001356  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3105   001358  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3106   00135A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3107   00135C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3108   00135E  6C01               	negf	___aomod@dividend^0,c
  3109   001360  0E00               	movlw	0
  3110   001362  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3111   001364  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3112   001366  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3113   001368  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3114   00136A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3115   00136C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3116   00136E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3117   001370                     l1411:
  3118   001370  C001  F001         	movff	___aomod@dividend,?___aomod
  3119   001374  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3120   001378  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3121   00137C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3122   001380  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3123   001384  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3124   001388  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3125   00138C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3126   001390  0012               	return		;funcret
  3127   001392                     __end_of___aomod:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function ___aodiv *****************
  3131 ;; Defined at:
  3132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  dividend        8    0[COMRAM] long long 
  3135 ;;  divisor         8    8[COMRAM] long long 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  quotient        8   18[COMRAM] long long 
  3138 ;;  sign            1   17[COMRAM] unsigned char 
  3139 ;;  counter         1   16[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  8    0[COMRAM] long long 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:       26 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_dtoa
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text26
  3163   0010A6                     __ptext26:
  3164                           	callstack 0
  3165   0010A6                     ___aodiv:
  3166                           	callstack 25
  3167   0010A6  0E00               	movlw	0
  3168   0010A8  6E12               	movwf	___aodiv@sign^0,c
  3169   0010AA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3170   0010AC  EF5C  F008         	goto	u480
  3171   0010B0  EF5A  F008         	goto	u481
  3172   0010B4                     u481:
  3173   0010B4  EF6E  F008         	goto	l1343
  3174   0010B8                     u480:
  3175   0010B8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3176   0010BA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3177   0010BC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3178   0010BE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3179   0010C0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3180   0010C2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3181   0010C4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3182   0010C6  6C09               	negf	___aodiv@divisor^0,c
  3183   0010C8  0E00               	movlw	0
  3184   0010CA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3185   0010CC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3186   0010CE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3187   0010D0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3188   0010D2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3189   0010D4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3190   0010D6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3191   0010D8  0E01               	movlw	1
  3192   0010DA  6E12               	movwf	___aodiv@sign^0,c
  3193   0010DC                     l1343:
  3194   0010DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3195   0010DE  EF75  F008         	goto	u490
  3196   0010E2  EF73  F008         	goto	u491
  3197   0010E6                     u491:
  3198   0010E6  EF87  F008         	goto	l1349
  3199   0010EA                     u490:
  3200   0010EA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3201   0010EC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3202   0010EE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3203   0010F0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3204   0010F2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3205   0010F4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3206   0010F6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3207   0010F8  6C01               	negf	___aodiv@dividend^0,c
  3208   0010FA  0E00               	movlw	0
  3209   0010FC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3210   0010FE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3211   001100  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3212   001102  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3213   001104  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3214   001106  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3215   001108  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3216   00110A  0E01               	movlw	1
  3217   00110C  1A12               	xorwf	___aodiv@sign^0,f,c
  3218   00110E                     l1349:
  3219   00110E  EE20  F013         	lfsr	2,___aodiv@quotient
  3220   001112  0E07               	movlw	7
  3221   001114                     u501:
  3222   001114  6ADE               	clrf	postinc2,c
  3223   001116  06E8               	decf	wreg,f,c
  3224   001118  E2FD               	bc	u501
  3225   00111A  5009               	movf	___aodiv@divisor^0,w,c
  3226   00111C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3227   00111E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3228   001120  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3229   001122  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3230   001124  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3231   001126  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3232   001128  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3233   00112A  B4D8               	btfsc	status,2,c
  3234   00112C  EF9A  F008         	goto	u511
  3235   001130  EF9C  F008         	goto	u510
  3236   001134                     u511:
  3237   001134  EFEE  F008         	goto	l1371
  3238   001138                     u510:
  3239   001138  0E01               	movlw	1
  3240   00113A  6E11               	movwf	___aodiv@counter^0,c
  3241   00113C  EFAA  F008         	goto	l1357
  3242   001140                     l1355:
  3243   001140  90D8               	bcf	status,0,c
  3244   001142  3609               	rlcf	___aodiv@divisor^0,f,c
  3245   001144  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3246   001146  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3247   001148  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3248   00114A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3249   00114C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3250   00114E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3251   001150  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3252   001152  2A11               	incf	___aodiv@counter^0,f,c
  3253   001154                     l1357:
  3254   001154  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3255   001156  EFAF  F008         	goto	u521
  3256   00115A  EFB1  F008         	goto	u520
  3257   00115E                     u521:
  3258   00115E  EFA0  F008         	goto	l1355
  3259   001162                     u520:
  3260   001162                     l1359:
  3261   001162  90D8               	bcf	status,0,c
  3262   001164  3613               	rlcf	___aodiv@quotient^0,f,c
  3263   001166  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3264   001168  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3265   00116A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3266   00116C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3267   00116E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3268   001170  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3269   001172  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3270   001174  5009               	movf	___aodiv@divisor^0,w,c
  3271   001176  5C01               	subwf	___aodiv@dividend^0,w,c
  3272   001178  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3273   00117A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3274   00117C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3275   00117E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3276   001180  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3277   001182  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3278   001184  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3279   001186  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3280   001188  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3281   00118A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3282   00118C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3283   00118E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3284   001190  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3285   001192  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3286   001194  A0D8               	btfss	status,0,c
  3287   001196  EFCF  F008         	goto	u531
  3288   00119A  EFD1  F008         	goto	u530
  3289   00119E                     u531:
  3290   00119E  EFE2  F008         	goto	l1367
  3291   0011A2                     u530:
  3292   0011A2  5009               	movf	___aodiv@divisor^0,w,c
  3293   0011A4  5E01               	subwf	___aodiv@dividend^0,f,c
  3294   0011A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3295   0011A8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3296   0011AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3297   0011AC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3298   0011AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3299   0011B0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3300   0011B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3301   0011B4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3302   0011B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3303   0011B8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3304   0011BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3305   0011BC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3306   0011BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3307   0011C0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3308   0011C2  8013               	bsf	___aodiv@quotient^0,0,c
  3309   0011C4                     l1367:
  3310   0011C4  90D8               	bcf	status,0,c
  3311   0011C6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3312   0011C8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3313   0011CA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3314   0011CC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3315   0011CE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3316   0011D0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3317   0011D2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3318   0011D4  3209               	rrcf	___aodiv@divisor^0,f,c
  3319   0011D6  2E11               	decfsz	___aodiv@counter^0,f,c
  3320   0011D8  EFB1  F008         	goto	l1359
  3321   0011DC                     l1371:
  3322   0011DC  5012               	movf	___aodiv@sign^0,w,c
  3323   0011DE  B4D8               	btfsc	status,2,c
  3324   0011E0  EFF4  F008         	goto	u541
  3325   0011E4  EFF6  F008         	goto	u540
  3326   0011E8                     u541:
  3327   0011E8  EF06  F009         	goto	l1375
  3328   0011EC                     u540:
  3329   0011EC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3330   0011EE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3331   0011F0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3332   0011F2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3333   0011F4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3334   0011F6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3335   0011F8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3336   0011FA  6C13               	negf	___aodiv@quotient^0,c
  3337   0011FC  0E00               	movlw	0
  3338   0011FE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3339   001200  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3340   001202  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3341   001204  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3342   001206  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3343   001208  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3344   00120A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3345   00120C                     l1375:
  3346   00120C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3347   001210  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3348   001214  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3349   001218  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3350   00121C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3351   001220  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3352   001224  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3353   001228  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3354   00122C  0012               	return		;funcret
  3355   00122E                     __end_of___aodiv:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _sendStringSerial4 *****************
  3359 ;; Defined at:
  3360 ;;		line 45 in file "serial.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  string          2    1[COMRAM] PTR unsigned char 
  3363 ;;		 -> main@data(30), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;Total ram usage:        2 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 1
  3382 ;; This function calls:
  3383 ;;		_sendCharSerial4
  3384 ;; This function is called by:
  3385 ;;		_Color2String
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text27
  3390   00199A                     __ptext27:
  3391                           	callstack 0
  3392   00199A                     _sendStringSerial4:
  3393                           	callstack 28
  3394   00199A                     
  3395                           ;serial.c: 48:     while(*string != 0){
  3396   00199A  EFDC  F00C         	goto	l1597
  3397   00199E                     l1591:
  3398                           
  3399                           ;serial.c: 50:   sendCharSerial4(*string++);
  3400   00199E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3401   0019A2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3402   0019A6  50DF               	movf	indf2,w,c
  3403   0019A8  EC4D  F00D         	call	_sendCharSerial4
  3404   0019AC  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3405   0019AE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3406   0019B0                     
  3407                           ;serial.c: 51:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  3408   0019B0  0E6A               	movlw	106
  3409   0019B2                     u867:
  3410   0019B2  2EE8               	decfsz	wreg,f,c
  3411   0019B4  D7FE               	bra	u867
  3412   0019B6  D000               	nop2	
  3413   0019B8                     l1597:
  3414                           
  3415                           ;serial.c: 48:     while(*string != 0){
  3416   0019B8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3417   0019BC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3418   0019C0  50DF               	movf	indf2,w,c
  3419   0019C2  A4D8               	btfss	status,2,c
  3420   0019C4  EFE6  F00C         	goto	u831
  3421   0019C8  EFE8  F00C         	goto	u830
  3422   0019CC                     u831:
  3423   0019CC  EFCF  F00C         	goto	l1591
  3424   0019D0                     u830:
  3425   0019D0  0012               	return		;funcret
  3426   0019D2                     __end_of_sendStringSerial4:
  3427                           	callstack 0
  3428                           
  3429 ;; *************** function _sendCharSerial4 *****************
  3430 ;; Defined at:
  3431 ;;		line 32 in file "serial.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  charToSend      1    wreg     unsigned char 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;  charToSend      1    0[COMRAM] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;Total ram usage:        1 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_sendStringSerial4
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text28
  3459   001A9A                     __ptext28:
  3460                           	callstack 0
  3461   001A9A                     _sendCharSerial4:
  3462                           	callstack 28
  3463                           
  3464                           ;incstack = 0
  3465                           ;sendCharSerial4@charToSend stored from wreg
  3466   001A9A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3467   001A9C                     l176:
  3468   001A9C  010E               	movlb	14	; () banked
  3469   001A9E  A537               	btfss	55,2,b	;volatile
  3470   001AA0  EF54  F00D         	goto	u791
  3471   001AA4  EF56  F00D         	goto	u790
  3472   001AA8                     u791:
  3473   001AA8  EF4E  F00D         	goto	l176
  3474   001AAC                     u790:
  3475   001AAC                     
  3476                           ; BSR set to: 14
  3477                           ;serial.c: 34:     TX4REG = charToSend;
  3478   001AAC  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3479   001AB0                     
  3480                           ; BSR set to: 14
  3481   001AB0  0012               	return		;funcret
  3482   001AB2                     __end_of_sendCharSerial4:
  3483                           	callstack 0
  3484                           
  3485                           	psect	rparam
  3486   000000                     
  3487                           	psect	idloc
  3488                           
  3489                           ;Config register IDLOC0 @ 0x200000
  3490                           ;	unspecified, using default values
  3491   200000                     	org	2097152
  3492   200000  0FFF               	dw	4095
  3493                           
  3494                           ;Config register IDLOC1 @ 0x200002
  3495                           ;	unspecified, using default values
  3496   200002                     	org	2097154
  3497   200002  0FFF               	dw	4095
  3498                           
  3499                           ;Config register IDLOC2 @ 0x200004
  3500                           ;	unspecified, using default values
  3501   200004                     	org	2097156
  3502   200004  0FFF               	dw	4095
  3503                           
  3504                           ;Config register IDLOC3 @ 0x200006
  3505                           ;	unspecified, using default values
  3506   200006                     	org	2097158
  3507   200006  0FFF               	dw	4095
  3508                           
  3509                           ;Config register IDLOC4 @ 0x200008
  3510                           ;	unspecified, using default values
  3511   200008                     	org	2097160
  3512   200008  0FFF               	dw	4095
  3513                           
  3514                           ;Config register IDLOC5 @ 0x20000A
  3515                           ;	unspecified, using default values
  3516   20000A                     	org	2097162
  3517   20000A  0FFF               	dw	4095
  3518                           
  3519                           ;Config register IDLOC6 @ 0x20000C
  3520                           ;	unspecified, using default values
  3521   20000C                     	org	2097164
  3522   20000C  0FFF               	dw	4095
  3523                           
  3524                           ;Config register IDLOC7 @ 0x20000E
  3525                           ;	unspecified, using default values
  3526   20000E                     	org	2097166
  3527   20000E  0FFF               	dw	4095
  3528                           
  3529                           	psect	config
  3530                           
  3531                           ;Config register CONFIG1L @ 0x300000
  3532                           ;	External Oscillator mode Selection bits
  3533                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3534                           ;	Power-up default value for COSC bits
  3535                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3536   300000                     	org	3145728
  3537   300000  AA                 	db	170
  3538                           
  3539                           ;Config register CONFIG1H @ 0x300001
  3540                           ;	unspecified, using default values
  3541                           ;	Clock Out Enable bit
  3542                           ;	CLKOUTEN = 0x1, unprogrammed default
  3543                           ;	Clock Switch Enable bit
  3544                           ;	CSWEN = 0x1, unprogrammed default
  3545                           ;	Fail-Safe Clock Monitor Enable bit
  3546                           ;	FCMEN = 0x1, unprogrammed default
  3547   300001                     	org	3145729
  3548   300001  FF                 	db	255
  3549                           
  3550                           ;Config register CONFIG2L @ 0x300002
  3551                           ;	unspecified, using default values
  3552                           ;	Master Clear Enable bit
  3553                           ;	MCLRE = 0x1, unprogrammed default
  3554                           ;	Power-up Timer Enable bit
  3555                           ;	PWRTE = 0x1, unprogrammed default
  3556                           ;	Low-power BOR enable bit
  3557                           ;	LPBOREN = 0x1, unprogrammed default
  3558                           ;	Brown-out Reset Enable bits
  3559                           ;	BOREN = 0x3, unprogrammed default
  3560   300002                     	org	3145730
  3561   300002  FF                 	db	255
  3562                           
  3563                           ;Config register CONFIG2H @ 0x300003
  3564                           ;	unspecified, using default values
  3565                           ;	Brown Out Reset Voltage selection bits
  3566                           ;	BORV = 0x3, unprogrammed default
  3567                           ;	ZCD Disable bit
  3568                           ;	ZCD = 0x1, unprogrammed default
  3569                           ;	PPSLOCK bit One-Way Set Enable bit
  3570                           ;	PPS1WAY = 0x1, unprogrammed default
  3571                           ;	Stack Full/Underflow Reset Enable bit
  3572                           ;	STVREN = 0x1, unprogrammed default
  3573                           ;	Debugger Enable bit
  3574                           ;	DEBUG = 0x1, unprogrammed default
  3575                           ;	Extended Instruction Set Enable bit
  3576                           ;	XINST = 0x1, unprogrammed default
  3577   300003                     	org	3145731
  3578   300003  FF                 	db	255
  3579                           
  3580                           ;Config register CONFIG3L @ 0x300004
  3581                           ;	WDT Period Select bits
  3582                           ;	WDTCPS = 0x1F, unprogrammed default
  3583                           ;	WDT operating mode
  3584                           ;	WDTE = OFF, WDT Disabled
  3585   300004                     	org	3145732
  3586   300004  9F                 	db	159
  3587                           
  3588                           ;Config register CONFIG3H @ 0x300005
  3589                           ;	unspecified, using default values
  3590                           ;	WDT Window Select bits
  3591                           ;	WDTCWS = 0x7, unprogrammed default
  3592                           ;	WDT input clock selector
  3593                           ;	WDTCCS = 0x7, unprogrammed default
  3594   300005                     	org	3145733
  3595   300005  FF                 	db	255
  3596                           
  3597                           ;Config register CONFIG4L @ 0x300006
  3598                           ;	unspecified, using default values
  3599                           ;	Write Protection Block 0
  3600                           ;	WRT0 = 0x1, unprogrammed default
  3601                           ;	Write Protection Block 1
  3602                           ;	WRT1 = 0x1, unprogrammed default
  3603                           ;	Write Protection Block 2
  3604                           ;	WRT2 = 0x1, unprogrammed default
  3605                           ;	Write Protection Block 3
  3606                           ;	WRT3 = 0x1, unprogrammed default
  3607                           ;	Write Protection Block 3
  3608                           ;	WRT4 = 0x1, unprogrammed default
  3609                           ;	Write Protection Block 3
  3610                           ;	WRT5 = 0x1, unprogrammed default
  3611                           ;	Write Protection Block 3
  3612                           ;	WRT6 = 0x1, unprogrammed default
  3613                           ;	Write Protection Block 3
  3614                           ;	WRT7 = 0x1, unprogrammed default
  3615   300006                     	org	3145734
  3616   300006  FF                 	db	255
  3617                           
  3618                           ;Config register CONFIG4H @ 0x300007
  3619                           ;	unspecified, using default values
  3620                           ;	Configuration Register Write Protection bit
  3621                           ;	WRTC = 0x1, unprogrammed default
  3622                           ;	Boot Block Write Protection bit
  3623                           ;	WRTB = 0x1, unprogrammed default
  3624                           ;	Data EEPROM Write Protection bit
  3625                           ;	WRTD = 0x1, unprogrammed default
  3626                           ;	Scanner Enable bit
  3627                           ;	SCANE = 0x1, unprogrammed default
  3628                           ;	Low Voltage Programming Enable bit
  3629                           ;	LVP = 0x1, unprogrammed default
  3630   300007                     	org	3145735
  3631   300007  FF                 	db	255
  3632                           
  3633                           ;Config register CONFIG5L @ 0x300008
  3634                           ;	unspecified, using default values
  3635                           ;	UserNVM Program Memory Code Protection bit
  3636                           ;	CP = 0x1, unprogrammed default
  3637                           ;	DataNVM Memory Code Protection bit
  3638                           ;	CPD = 0x1, unprogrammed default
  3639   300008                     	org	3145736
  3640   300008  FF                 	db	255
  3641                           
  3642                           ;Config register CONFIG5H @ 0x300009
  3643                           ;	unspecified, using default values
  3644   300009                     	org	3145737
  3645   300009  FF                 	db	255
  3646                           
  3647                           ;Config register CONFIG6L @ 0x30000A
  3648                           ;	unspecified, using default values
  3649                           ;	Table Read Protection Block 0
  3650                           ;	EBTR0 = 0x1, unprogrammed default
  3651                           ;	Table Read Protection Block 1
  3652                           ;	EBTR1 = 0x1, unprogrammed default
  3653                           ;	Table Read Protection Block 2
  3654                           ;	EBTR2 = 0x1, unprogrammed default
  3655                           ;	Table Read Protection Block 3
  3656                           ;	EBTR3 = 0x1, unprogrammed default
  3657                           ;	Table Read Protection Block 4
  3658                           ;	EBTR4 = 0x1, unprogrammed default
  3659                           ;	Table Read Protection Block 5
  3660                           ;	EBTR5 = 0x1, unprogrammed default
  3661                           ;	Table Read Protection Block 6
  3662                           ;	EBTR6 = 0x1, unprogrammed default
  3663                           ;	Table Read Protection Block 7
  3664                           ;	EBTR7 = 0x1, unprogrammed default
  3665   30000A                     	org	3145738
  3666   30000A  FF                 	db	255
  3667                           
  3668                           ;Config register CONFIG6H @ 0x30000B
  3669                           ;	unspecified, using default values
  3670                           ;	Boot Block Table Read Protection bit
  3671                           ;	EBTRB = 0x1, unprogrammed default
  3672   30000B                     	org	3145739
  3673   30000B  FF                 	db	255
  3674                           tosu	equ	0xFFF
  3675                           tosh	equ	0xFFE
  3676                           tosl	equ	0xFFD
  3677                           stkptr	equ	0xFFC
  3678                           pclatu	equ	0xFFB
  3679                           pclath	equ	0xFFA
  3680                           pcl	equ	0xFF9
  3681                           tblptru	equ	0xFF8
  3682                           tblptrh	equ	0xFF7
  3683                           tblptrl	equ	0xFF6
  3684                           tablat	equ	0xFF5
  3685                           prodh	equ	0xFF4
  3686                           prodl	equ	0xFF3
  3687                           indf0	equ	0xFEF
  3688                           postinc0	equ	0xFEE
  3689                           postdec0	equ	0xFED
  3690                           preinc0	equ	0xFEC
  3691                           plusw0	equ	0xFEB
  3692                           fsr0h	equ	0xFEA
  3693                           fsr0l	equ	0xFE9
  3694                           wreg	equ	0xFE8
  3695                           indf1	equ	0xFE7
  3696                           postinc1	equ	0xFE6
  3697                           postdec1	equ	0xFE5
  3698                           preinc1	equ	0xFE4
  3699                           plusw1	equ	0xFE3
  3700                           fsr1h	equ	0xFE2
  3701                           fsr1l	equ	0xFE1
  3702                           bsr	equ	0xFE0
  3703                           indf2	equ	0xFDF
  3704                           postinc2	equ	0xFDE
  3705                           postdec2	equ	0xFDD
  3706                           preinc2	equ	0xFDC
  3707                           plusw2	equ	0xFDB
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        1
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     57     118
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S994$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_1(CODE[39]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S941$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S941$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 30
		 -> main@data(BANK0[30]), 


Critical Paths under _main in COMRAM

    _main->_Color2String
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _main in BANK0

    _Color2String->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    6999
                                             25 BANK0     32    32      0
                       _Color2String
                  _I2C_2_Master_Init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     0      6    6225
                                             88 COMRAM     6     0      6
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color2String
     _color_read_Blue (ARG)
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red (ARG)
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4 (ARG)
       _sendCharSerial4
     _sprintf (ARG)
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Blue
   _color_read_Clear
   _color_read_Green
   _color_read_Red
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     39      76       5       73.8%
BITBIGSFRhlh        99      0       0      33        0.0%
BITBIGSFRhh         7B      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRlllhh      36      0       0      37        0.0%
BITBIGSFRllh        2D      0       0      36        0.0%
BITBIGSFRlllhll     2A      0       0      39        0.0%
BITBIGSFRlllll      26      0       0      42        0.0%
BITBIGSFRlllhll     19      0       0      40        0.0%
BITBIGSFRlllhlh      C      0       0      38        0.0%
BITBIGSFRhllll       8      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      41        0.0%
BITBIGSFRlh          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111      43        0.0%
DATA                 0      0     111       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 28 12:35:28 2023

               _color_read_Red 16D0                _color_read_Blue 17C0                             l22 1A98  
                           l31 180E                             l25 171E                             l34 17BE  
                           l19 1A04                             l28 176E                             l61 1A2E  
                           l70 1ADA                             l64 1A30                             l73 1AC6  
                           l82 18E2                             l67 1A56                             l76 1AD0  
                           l79 1ABC               _color_read_Clear 1770               _color_read_Green 1720  
                          l305 122C                            l318 1390                            l182 195E  
                          l167 1A78                            l176 1A9C                            l179 1AB0  
                          l188 19D0                            l900 0EB6                            l902 0EBE  
                          l903 0F04                            l921 14DE                            l914 10A4  
                          l931 191A                            l934 1922                            l927 185C  
                          l946 15A8                            l954 18A0                            l891 15CC  
                          l957 1ADC                            l869 16CE                            l895 1622  
                          u501 1114                            u510 1138                            u430 14F2  
                          u511 1134                            u431 14EE                            u520 1162  
                          u600 1350                            u440 1504                            u521 115E  
                          u601 134C                            u441 1500                            u530 11A2  
                          u450 152C                            u610 15B8                            u531 119E  
                          u451 1528                            u611 15B4                            u540 11EC  
                          u460 1562                            u620 160E                            u700 1026  
                          u541 11E8                            u461 155E                            u621 160A  
                          u701 1022                            u550 1240                            u630 18FE  
                          u470 18A0                            u710 1044                            u551 123C  
                          u631 18FA                            u471 189C                            u711 1040  
                          u480 10B8                            u560 1272                            u720 105E  
                          u640 0E5A                            u800 1854                            u481 10B4  
                          u561 126E                            u721 105A                            u641 0E54  
                          u801 1850                            u490 10EA                            u570 12B0  
                          u730 106E                            u650 0E5C                            u810 18CC  
                          u491 10E6                            u571 12AC                            u731 106A  
                          u811 18C4                            u580 12DA                            u660 0E6E  
                          u740 1A40                            u581 12D6                            u661 0E6A  
                          u741 1A3C                            u830 19D0                            u590 1308  
                          u670 0EAA                            u750 1A56                            u831 19CC  
                          u591 1304                            u671 0EA6                            u751 1A52  
                          u680 0ED6                            u760 13B6                            u681 0ED2  
                          u761 13B2                            u690 0EEC                            u770 1402  
                          u691 0EE8                            u771 13FE                            u780 141E  
                          u828 18CE                            u781 141A                            u790 1AAC  
                          u791 1AA8                            u847 1668                            u857 19E6  
                          u867 19B2                            _abs 18E4                            _pad 15AA  
                          wreg 000FE8                           ?_abs 0013                           l1401 1308  
                         l1321 152C                           l1313 14E0                           l1411 1370  
                         l1403 1328                           l1323 1562                           l1315 14F2  
                         l1331 187C                           l1341 10D8                           l1405 133A  
                         l1317 1504                           l1333 1880                           l1421 15D8  
                         l1501 1402                           l1351 111A                           l1343 10DC  
                         l1335 10A6                           l1407 1340                           l1431 18FE  
                         l1319 150E                           l1327 185E                           l1423 15EC  
                         l1415 15AA                           l1503 141E                           l1361 1174  
                         l1353 1138                           l1345 10EA                           l1337 10AA  
                         l1409 1350                           l1329 186A                           l1425 15F0  
                         l1417 15B8                           l1441 0E8E                           l1433 0E2A  
                         l1505 1474                           l1513 14B6                           l1521 1AD6  
                         l1601 19D6                           l1531 1A9C                           l1363 11A2  
                         l1355 1140                           l1371 11DC                           l1347 110A  
                         l1339 10B8                           l1427 160E                           l1419 15C4  
                         l1451 0EEC                           l1443 0EAA                           l1435 0E4A  
                         l1523 1AB4                           l1603 19E0                           l1611 1716  
                         l1533 1AAC                           l1373 11EC                           l1365 11C2  
                         l1357 1154                           l1349 110E                           l1381 1232  
                         l1429 18E4                           l1461 0F1A                           l1453 0EF8  
                         l1445 0EC6                           l1437 0E5E                           l1509 14A4  
                         l1541 1854                           l1525 1AB8                           l1605 19F0  
                         l1621 17C0                           l1375 120C                           l1367 11C4  
                         l1359 1162                           l1391 1292                           l1383 1240  
                         l1471 1026                           l1463 0F9C                           l1455 0F00  
                         l1447 0ED6                           l1439 0E6E                           l1535 1810  
                         l1551 1A18                           l1519 1AD2                           l1527 1AC8  
                         l1607 19FA                           l1623 1806                           l1615 1720  
                         l1369 11D6                           l1393 12B0                           l1385 1260  
                         l1481 1084                           l1473 1044                           l1465 0FA2  
                         l1457 0F0C                           l1449 0EDC                           l1537 181C  
                         l1553 1A1A                           l1545 1A06                           l1529 1ACC  
                         l1561 1AC2                           l1617 1766                           l1609 16D0  
                         l1641 1A72                           l1633 1A58                           l1395 12B8  
                         l1387 1264                           l1379 122E                           l1475 105E  
                         l1467 0FA8                           l1459 0F14                           l1491 13B6  
                         l1539 1838                           l1555 1A1C                           l1547 1A10  
                         l1571 18DE                           l1563 18A4                           l1627 1770  
                         l1643 1A74                           l1635 1A5C                           l1651 1624  
                         l1397 12CC                           l1389 1272                           l1477 106E  
                         l1469 100C                           l1493 13C4                           l1581 1698  
                         l1549 1A16                           l1485 1A30                           l1557 1A7C  
                         l1573 18E0                           l1565 18A8                           l1629 17B6  
                         l1645 1A76                           l1637 1A66                           l1653 1628  
                         l1591 199E                           l1399 12DA                           l1479 1074  
                         l1495 13D2                           l1583 16A0                           l1647 1924  
                         l1487 1A40                           l1567 18B0                           l1559 1ABE  
                         l1639 1A68                           l1655 162C                           l1593 19AC  
                         l1497 13D6                           l1489 1392                           l1585 16BC  
                         l1577 167E                           l1649 1952                           l1569 18B8  
                         l1657 1630                           l1595 19B0                           l1499 13E6  
                         l1579 1690                           l1659 165C                           l1597 19B8  
                         l1589 199A                           l1599 19D2                           ?_pad 0011  
                         STR_1 0E01                   _BAUD4CONbits 000EE9                           abs@a 0013  
                         _dbuf 007C                           _main 1624                           _dtoa 0E2A  
                         _prec 0076                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         start 0000         __end_of_color_read_Red 1720                   ___param_bank 000000  
                        ??_abs 0015                          ??_pad 0017                __end_of___aodiv 122E  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 1392  
                 vfpfcnvrt@fmt 0041        __end_of_sendCharSerial4 1AB2     __end_of_I2C_2_Master_Start 1ADC  
   __end_of_I2C_2_Master_Write 1ABE                          _flags 0078                          _fputc 14E0  
                        _fputs 185E                          pad@fp 0011                          _width 0074  
                        _putch 1ADC                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                          tablat 000FF5                          status 000FD8  
              __end_of_sprintf 16D0           __end_of_Color2String 1960        __end_of_color_read_Blue 1810  
        _I2C_2_Master_RepStart 1ABE                ?_color_read_Red 0005                __initialization 1960  
                 __end_of_main 167E                   __end_of_dtoa 10A6                         ??_main 00B5  
                       ??_dtoa 0026                  __activetblptr 000001                         ?_fputc 0001  
                       ?_fputs 000A                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
     __end_of_color_click_init 1A06                         _RX4PPS 000E15                         _TX4REG 000EE4  
                 vfprintf@cfmt 0057                      ??___aodiv 0011                      ??___aomod 0011  
                       clear_0 1978                         clear_1 1984                         isa$std 000001  
                       pad@buf 0013                         dtoa@fp 001C                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 185E                      ??_sprintf 0059                     __accesstop 0060  
      __end_of__initialization 198C       __end_of_color_read_Clear 17C0       __end_of_color_read_Green 1770  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 1ADE                  __end_of_fputc 15AA  
                __end_of_fputs 18A2                  __end_of_putch 1ADE                        ??_fputc 0005  
                      ??_fputs 000E                        ??_putch 0001                     __pbssBANK0 0060  
                   __pbssBANK1 0100              _color_writetoaddr 1A7A             ?_color_writetoaddr 0003  
          ??_color_writetoaddr 0004                   _Color2String 1924                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 1A9A  
           _I2C_2_Master_Start 1AD2                     _initUSART4 1A58             _I2C_2_Master_Write 1AB2  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___aodiv 10A6                        ___aomod 122E  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                        __pcinit 1960                        __ramtop 0E00  
                      __ptext0 1624                        __ptext1 1A58                        __ptext2 16D0  
                      __ptext3 1720                        __ptext4 1770                        __ptext5 17C0  
                      __ptext6 1ABE                        __ptext7 18A2                        __ptext8 19D2  
                      __ptext9 1A7A                  _RxBufWriteCnt 005F                        _sprintf 167E  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 198C  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 14E0                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                      _TRISCbits 000F83  
                    _TRISDbits 000F84       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 0060                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0005                    ?_initUSART4 0001      sendCharSerial4@charToSend 0001  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F            color_read_Clear@tmp 000A  
          start_initialization 1960                    __end_of_abs 1924                    __end_of_pad 1624  
                _TxBufWriteCnt 007A            color_read_Green@tmp 000A                    vfprintf@fmt 0053  
                  __pdataBANK0 00D5                    __pbssCOMRAM 005F                  __pcstackBANK0 009C  
             ___aodiv@dividend 0001                      _dtoa$1022 002E                       ?___aodiv 0001  
                     ?___aomod 0001               ___aodiv@quotient 0013           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 1A30  
            _I2C_2_Master_Init 1A06              _I2C_2_Master_Read 18A2              _I2C_2_Master_Stop 1AC8  
                 _RxBufReadCnt 007B             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 009C  
                Color2String@B 005D                  Color2String@C 005E                  Color2String@G 005C  
                Color2String@R 005B              _sendStringSerial4 199A            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002            ??_I2C_2_Master_Stop 0002  
           ?_sendStringSerial4 0002                       _PIR4bits 000E37              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 1392      __end_of_I2C_2_Master_Idle 1A58      __end_of_I2C_2_Master_Init 1A30  
    __end_of_I2C_2_Master_Read 18E4      __end_of_I2C_2_Master_Stop 1AD2                       _DataFlag 00D5  
  I2C_2_Master_Write@data_byte 0002              ??_color_read_Blue 0007                   _TxBufReadCnt 0079  
    __end_of_sendStringSerial4 19D2  __end_of_I2C_2_Master_RepStart 1AC8             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 003F                ___aodiv@divisor 0009                ___aodiv@counter 0011  
                   _ANSELDbits 000EA7                     sprintf@fmt 009E             __end_of_initUSART4 1A7A  
                     __ptext10 1AB2                       __ptext11 1AC8                       __ptext20 15AA  
                     __ptext12 1AD2                       __ptext21 185E                       __ptext13 1A30  
                     __ptext22 14E0                       __ptext14 1A06                       __ptext23 1ADC  
                     __ptext15 1924                       __ptext24 18E4                       __ptext16 167E  
                     __ptext25 122E                       __ptext17 1810                       __ptext26 10A6  
                     __ptext18 1392                       __ptext27 199A                       __ptext19 0E2A  
                     __ptext28 1A9A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
              Color2String@buf 0059                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 1810                       main@data 00B7               ___aomod@dividend 0001  
                ?_Color2String 0059                      sprintf@ap 00A8                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 19D2  
               ??_Color2String 005F                       sprintf@f 00AA                       sprintf@s 009C  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 1A9A                   ___aomod@sign 0012  
