

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 16:17:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 06/04/2022 GMT
    69                           ; 
    70                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F67K40 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _SSP2CON2bits	set	3802
   106   000000                     _RX4PPS	set	3605
   107   000000                     _SSP2CLKPPS	set	3612
   108   000000                     _SSP2DATPPS	set	3613
   109   000000                     _ANSELDbits	set	3751
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _RC4REG	set	3811
   113   000000                     _SP4BRGL	set	3813
   114   000000                     _TX4STAbits	set	3816
   115   000000                     _BAUD4CONbits	set	3817
   116   000000                     _TRISCbits	set	3971
   117   000000                     _SSP2CON2	set	3802
   118   000000                     _TRISDbits	set	3972
   119   000000                     _SSP2STAT	set	3800
   120   000000                     _SSP2BUF	set	3797
   121   000000                     _PIR4bits	set	3639
   122   000000                     _RC0PPS	set	3682
   123   000000                     _RD5PPS	set	3695
   124   000000                     _RD6PPS	set	3696
   125                           
   126                           	psect	smallconst
   127   000E00                     __psmallconst:
   128                           	callstack 0
   129   000E00  00                 	db	0
   130   000E01                     STR_1:
   131   000E01  52                 	db	82	;'R'
   132   000E02  65                 	db	101	;'e'
   133   000E03  64                 	db	100	;'d'
   134   000E04  20                 	db	32
   135   000E05  25                 	db	37
   136   000E06  64                 	db	100	;'d'
   137   000E07  20                 	db	32
   138   000E08  47                 	db	71	;'G'
   139   000E09  72                 	db	114	;'r'
   140   000E0A  65                 	db	101	;'e'
   141   000E0B  65                 	db	101	;'e'
   142   000E0C  6E                 	db	110	;'n'
   143   000E0D  2C                 	db	44
   144   000E0E  25                 	db	37
   145   000E0F  64                 	db	100	;'d'
   146   000E10  20                 	db	32
   147   000E11  42                 	db	66	;'B'
   148   000E12  6C                 	db	108	;'l'
   149   000E13  75                 	db	117	;'u'
   150   000E14  65                 	db	101	;'e'
   151   000E15  2C                 	db	44
   152   000E16  25                 	db	37
   153   000E17  64                 	db	100	;'d'
   154   000E18  20                 	db	32
   155   000E19  48                 	db	72	;'H'
   156   000E1A  75                 	db	117	;'u'
   157   000E1B  65                 	db	101	;'e'
   158   000E1C  20                 	db	32
   159   000E1D  25                 	db	37
   160   000E1E  64                 	db	100	;'d'
   161   000E1F  2E                 	db	46
   162   000E20  25                 	db	37
   163   000E21  30                 	db	48	;'0'
   164   000E22  33                 	db	51	;'3'
   165   000E23  64                 	db	100	;'d'
   166   000E24  20                 	db	32
   167   000E25  25                 	db	37
   168   000E26  66                 	db	102	;'f'
   169   000E27  20                 	db	32
   170   000E28  0D                 	db	13
   171   000E29  00                 	db	0
   172   000E2A                     STR_2:
   173   000E2A  69                 	db	105	;'i'
   174   000E2B  6E                 	db	110	;'n'
   175   000E2C  66                 	db	102	;'f'
   176   000E2D  00                 	db	0
   177   000E2E                     STR_5:
   178   000E2E  6E                 	db	110	;'n'
   179   000E2F  61                 	db	97	;'a'
   180   000E30  6E                 	db	110	;'n'
   181   000E31  00                 	db	0
   182   000E32  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   0048C0                     __pcinit:
   188                           	callstack 0
   189   0048C0                     start_initialization:
   190                           	callstack 0
   191   0048C0                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Clear objects allocated to BANK1 (92 bytes)
   195   0048C0  EE01  F000         	lfsr	0,__pbssBANK1
   196   0048C4  0E5C               	movlw	92
   197   0048C6                     clear_0:
   198   0048C6  6AEE               	clrf	postinc0,c
   199   0048C8  06E8               	decf	wreg,f,c
   200   0048CA  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (13 bytes)
   203   0048CC  EE00  F0D1         	lfsr	0,__pbssBANK0
   204   0048D0  0E0D               	movlw	13
   205   0048D2                     clear_1:
   206   0048D2  6AEE               	clrf	postinc0,c
   207   0048D4  06E8               	decf	wreg,f,c
   208   0048D6  E1FD               	bnz	clear_1
   209   0048D8                     end_of_initialization:
   210                           	callstack 0
   211   0048D8                     __end_of__initialization:
   212                           	callstack 0
   213   0048D8  0100               	movlb	0
   214   0048DA  EF81  F021         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssBANK0
   217   0000D1                     __pbssBANK0:
   218                           	callstack 0
   219   0000D1                     floorf@F526:
   220                           	callstack 0
   221   0000D1                     	ds	4
   222   0000D5                     ___fpclassifyf@F465:
   223                           	callstack 0
   224   0000D5                     	ds	4
   225   0000D9                     _width:
   226                           	callstack 0
   227   0000D9                     	ds	2
   228   0000DB                     _prec:
   229                           	callstack 0
   230   0000DB                     	ds	2
   231   0000DD                     _flags:
   232                           	callstack 0
   233   0000DD                     	ds	1
   234                           
   235                           	psect	bssBANK1
   236   000100                     __pbssBANK1:
   237                           	callstack 0
   238   000100                     _dbuf:
   239                           	callstack 0
   240   000100                     	ds	80
   241   000150                     _colorf:
   242                           	callstack 0
   243   000150                     	ds	12
   244                           
   245                           	psect	cstackBANK1
   246   00015C                     __pcstackBANK1:
   247                           	callstack 0
   248   00015C                     main@data:
   249                           	callstack 0
   250                           
   251                           ; 60 bytes @ 0x0
   252   00015C                     	ds	60
   253                           
   254                           	psect	cstackBANK0
   255   000060                     __pcstackBANK0:
   256                           	callstack 0
   257   000060                     efgtoa@ne:
   258                           	callstack 0
   259   000060                     _colour_read_all$1477:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0x0
   263   000060                     	ds	2
   264   000062                     efgtoa@p:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x2
   268   000062                     	ds	2
   269   000064                     efgtoa@t:
   270                           	callstack 0
   271   000064                     colour_read_all@R:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x4
   275   000064                     	ds	2
   276   000066                     _efgtoa$1131:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x6
   280   000066                     	ds	2
   281   000068                     efgtoa@pp:
   282                           	callstack 0
   283   000068                     colour_read_all@G:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0x8
   287   000068                     	ds	1
   288   000069                     efgtoa@mode:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x9
   292   000069                     	ds	1
   293   00006A                     efgtoa@nmode:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0xA
   297   00006A                     	ds	1
   298   00006B                     efgtoa@d:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xB
   302   00006B                     	ds	1
   303   00006C                     colour_read_all@B:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0xC
   307   00006C                     	ds	1
   308   00006D                     efgtoa@m:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xD
   312   00006D                     	ds	2
   313   00006F                     efgtoa@e:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xF
   317   00006F                     	ds	2
   318   000071                     efgtoa@w:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x11
   322   000071                     	ds	2
   323   000073                     efgtoa@ou:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x13
   327   000073                     	ds	4
   328   000077                     efgtoa@h:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x17
   332   000077                     	ds	4
   333   00007B                     efgtoa@l:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x1B
   337   00007B                     	ds	4
   338   00007F                     efgtoa@i:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x1F
   342   00007F                     	ds	2
   343   000081                     efgtoa@sign:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x21
   347   000081                     	ds	1
   348   000082                     efgtoa@g:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x22
   352   000082                     	ds	4
   353   000086                     efgtoa@n:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x26
   357   000086                     	ds	2
   358   000088                     efgtoa@u:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x28
   362   000088                     	ds	4
   363   00008C                     vfpfcnvrt@fp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2C
   367   00008C                     	ds	2
   368   00008E                     vfpfcnvrt@fmt:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x2E
   372   00008E                     	ds	2
   373   000090                     vfpfcnvrt@ap:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x30
   377   000090                     	ds	2
   378   000092                     ??_vfpfcnvrt:
   379                           
   380                           ; 1 bytes @ 0x32
   381   000092                     	ds	3
   382   000095                     vfpfcnvrt@done:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x35
   386   000095                     	ds	2
   387   000097                     vfpfcnvrt@convarg:
   388                           	callstack 0
   389                           
   390                           ; 8 bytes @ 0x37
   391   000097                     	ds	8
   392   00009F                     vfpfcnvrt@c:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x3F
   396   00009F                     	ds	1
   397   0000A0                     vfpfcnvrt@cp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x40
   401   0000A0                     	ds	2
   402   0000A2                     ?_vfprintf:
   403                           	callstack 0
   404   0000A2                     vfprintf@fp:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x42
   408   0000A2                     	ds	2
   409   0000A4                     vfprintf@fmt:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x44
   413   0000A4                     	ds	2
   414   0000A6                     vfprintf@ap:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x46
   418   0000A6                     	ds	2
   419   0000A8                     ?_sprintf:
   420                           	callstack 0
   421   0000A8                     sprintf@s:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x48
   425   0000A8                     	ds	2
   426   0000AA                     sprintf@fmt:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x4A
   430   0000AA                     	ds	16
   431   0000BA                     sprintf@ap:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x5A
   435   0000BA                     	ds	2
   436   0000BC                     sprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 11 bytes @ 0x5C
   440   0000BC                     	ds	11
   441   0000C7                     Color2String@buf:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x67
   445   0000C7                     	ds	2
   446   0000C9                     Color2String@cf:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x69
   450   0000C9                     	ds	2
   451   0000CB                     Color2String@frac_part:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x6B
   455   0000CB                     	ds	2
   456   0000CD                     Color2String@int_part:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x6D
   460   0000CD                     	ds	2
   461   0000CF                     ??_main:
   462                           
   463                           ; 1 bytes @ 0x6F
   464   0000CF                     	ds	2
   465                           
   466                           	psect	cstackCOMRAM
   467   000001                     __pcstackCOMRAM:
   468                           	callstack 0
   469   000001                     ??_I2C_2_Master_Idle:
   470   000001                     ?___fpclassifyf:
   471                           	callstack 0
   472   000001                     ?_isdigit:
   473                           	callstack 0
   474   000001                     ?_isspace:
   475                           	callstack 0
   476   000001                     ?___awdiv:
   477                           	callstack 0
   478   000001                     ?___fladd:
   479                           	callstack 0
   480   000001                     ?_labs:
   481                           	callstack 0
   482   000001                     ?___flneg:
   483                           	callstack 0
   484   000001                     ?___aodiv:
   485                           	callstack 0
   486   000001                     ?___aomod:
   487                           	callstack 0
   488   000001                     sendCharSerial4@charToSend:
   489                           	callstack 0
   490   000001                     ___awdiv@dividend:
   491                           	callstack 0
   492   000001                     isdigit@c:
   493                           	callstack 0
   494   000001                     isspace@c:
   495                           	callstack 0
   496   000001                     memcpy@d1:
   497                           	callstack 0
   498   000001                     fputc@c:
   499                           	callstack 0
   500   000001                     strcpy@dest:
   501                           	callstack 0
   502   000001                     ___fleq@ff1:
   503                           	callstack 0
   504   000001                     ___flneg@f1:
   505                           	callstack 0
   506   000001                     ___fladd@b:
   507                           	callstack 0
   508   000001                     ___fpclassifyf@x:
   509                           	callstack 0
   510   000001                     labs@a:
   511                           	callstack 0
   512   000001                     ___aodiv@dividend:
   513                           	callstack 0
   514   000001                     ___aomod@dividend:
   515                           	callstack 0
   516                           
   517                           ; 8 bytes @ 0x0
   518   000001                     	ds	1
   519   000002                     ??_I2C_2_Master_Read:
   520   000002                     I2C_2_Master_Write@data_byte:
   521                           	callstack 0
   522   000002                     sendStringSerial4@string:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1
   526   000002                     	ds	1
   527   000003                     ??_isdigit:
   528   000003                     ??_isspace:
   529   000003                     color_writetoaddr@value:
   530                           	callstack 0
   531   000003                     I2C_2_Master_Read@ack:
   532                           	callstack 0
   533   000003                     ___awdiv@divisor:
   534                           	callstack 0
   535   000003                     memcpy@s1:
   536                           	callstack 0
   537   000003                     fputc@fp:
   538                           	callstack 0
   539   000003                     strcpy@src:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x2
   543   000003                     	ds	1
   544   000004                     color_writetoaddr@address:
   545                           	callstack 0
   546   000004                     I2C_2_Master_Read@tmp:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x3
   550   000004                     	ds	1
   551   000005                     ??_fputc:
   552   000005                     ??___fpclassifyf:
   553   000005                     ??_labs:
   554   000005                     ??_color_click_init:
   555   000005                     ?_color_read_Red:
   556                           	callstack 0
   557   000005                     ?_color_read_Green:
   558                           	callstack 0
   559   000005                     ?_color_read_Blue:
   560                           	callstack 0
   561   000005                     ?_color_read_Clear:
   562                           	callstack 0
   563   000005                     ___awdiv@counter:
   564                           	callstack 0
   565   000005                     _isspace$1211:
   566                           	callstack 0
   567   000005                     memcpy@n:
   568                           	callstack 0
   569   000005                     strcpy@s:
   570                           	callstack 0
   571   000005                     ___fleq@ff2:
   572                           	callstack 0
   573   000005                     ___fladd@a:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x4
   577   000005                     	ds	1
   578   000006                     ___awdiv@sign:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x5
   582   000006                     	ds	1
   583   000007                     ??_color_read_Red:
   584   000007                     ??_color_read_Green:
   585   000007                     ??_color_read_Blue:
   586   000007                     ??_color_read_Clear:
   587   000007                     ___awdiv@quotient:
   588                           	callstack 0
   589   000007                     memcpy@d:
   590                           	callstack 0
   591   000007                     strcpy@d:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x6
   595   000007                     	ds	2
   596   000009                     ??___fladd:
   597   000009                     ??___fleq:
   598   000009                     ?___wmul:
   599                           	callstack 0
   600   000009                     ___wmul@multiplier:
   601                           	callstack 0
   602   000009                     ___fpclassifyf@e:
   603                           	callstack 0
   604   000009                     memcpy@s:
   605                           	callstack 0
   606   000009                     ___aodiv@divisor:
   607                           	callstack 0
   608   000009                     ___aomod@divisor:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x8
   612   000009                     	ds	1
   613   00000A                     color_read_Red@tmp:
   614                           	callstack 0
   615   00000A                     color_read_Green@tmp:
   616                           	callstack 0
   617   00000A                     color_read_Blue@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Clear@tmp:
   620                           	callstack 0
   621   00000A                     fputs@s:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x9
   625   00000A                     	ds	1
   626   00000B                     memcpy@tmp:
   627                           	callstack 0
   628   00000B                     ___wmul@multiplicand:
   629                           	callstack 0
   630   00000B                     ___fpclassifyf@u:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0xA
   634   00000B                     	ds	1
   635   00000C                     fputs@fp:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0xB
   639   00000C                     	ds	1
   640   00000D                     ___fladd@signs:
   641                           	callstack 0
   642   00000D                     ___wmul@product:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xC
   646   00000D                     	ds	1
   647   00000E                     ___fladd@aexp:
   648                           	callstack 0
   649   00000E                     fputs@c:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0xD
   653   00000E                     	ds	1
   654   00000F                     ?_atoi:
   655                           	callstack 0
   656   00000F                     ?___xxtofl:
   657                           	callstack 0
   658   00000F                     ___fladd@bexp:
   659                           	callstack 0
   660   00000F                     atoi@s:
   661                           	callstack 0
   662   00000F                     fputs@i:
   663                           	callstack 0
   664   00000F                     ___xxtofl@val:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0xE
   668   00000F                     	ds	1
   669   000010                     ___fladd@grs:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0xF
   673   000010                     	ds	1
   674   000011                     ??_atoi:
   675   000011                     ?___fldiv:
   676                           	callstack 0
   677   000011                     ___aodiv@counter:
   678                           	callstack 0
   679   000011                     ___aomod@counter:
   680                           	callstack 0
   681   000011                     pad@fp:
   682                           	callstack 0
   683   000011                     ___fldiv@b:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x10
   687   000011                     	ds	1
   688   000012                     ___aodiv@sign:
   689                           	callstack 0
   690   000012                     ___aomod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x11
   694   000012                     	ds	1
   695   000013                     ??___xxtofl:
   696   000013                     ?_abs:
   697                           	callstack 0
   698   000013                     pad@buf:
   699                           	callstack 0
   700   000013                     abs@a:
   701                           	callstack 0
   702   000013                     ___aodiv@quotient:
   703                           	callstack 0
   704                           
   705                           ; 8 bytes @ 0x12
   706   000013                     	ds	1
   707   000014                     atoi@neg:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x13
   711   000014                     	ds	1
   712   000015                     ??_abs:
   713   000015                     pad@p:
   714                           	callstack 0
   715   000015                     ___fldiv@a:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x14
   719   000015                     	ds	1
   720   000016                     atoi@n:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x15
   724   000016                     	ds	1
   725   000017                     ??_pad:
   726   000017                     ___xxtofl@sign:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x16
   730   000017                     	ds	1
   731   000018                     ___xxtofl@exp:
   732                           	callstack 0
   733   000018                     pad@i:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x17
   737   000018                     	ds	1
   738   000019                     ??___fldiv:
   739   000019                     ___xxtofl@arg:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x18
   743   000019                     	ds	1
   744   00001A                     pad@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x19
   748   00001A                     	ds	2
   749   00001C                     dtoa@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1B
   753   00001C                     	ds	1
   754   00001D                     RGB2Hue@cf:
   755                           	callstack 0
   756   00001D                     ___fldiv@rem:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x1C
   760   00001D                     	ds	1
   761   00001E                     dtoa@d:
   762                           	callstack 0
   763                           
   764                           ; 8 bytes @ 0x1D
   765   00001E                     	ds	1
   766   00001F                     ??_RGB2Hue:
   767                           
   768                           ; 1 bytes @ 0x1E
   769   00001F                     	ds	2
   770   000021                     ___fldiv@sign:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x20
   774   000021                     	ds	1
   775   000022                     ___fldiv@new_exp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x21
   779   000022                     	ds	2
   780   000024                     RGB2Hue@max:
   781                           	callstack 0
   782   000024                     ___fldiv@grs:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x23
   786   000024                     	ds	2
   787   000026                     ??_dtoa:
   788   000026                     RGB2Hue@min:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x25
   792   000026                     	ds	2
   793   000028                     ___fldiv@bexp:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x27
   797   000028                     	ds	1
   798   000029                     ___fldiv@aexp:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x28
   802   000029                     	ds	1
   803   00002A                     ?___flmul:
   804                           	callstack 0
   805   00002A                     ?_floorf:
   806                           	callstack 0
   807   00002A                     ___flmul@b:
   808                           	callstack 0
   809   00002A                     floorf@x:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x29
   813   00002A                     	ds	4
   814   00002E                     ??_floorf:
   815   00002E                     _dtoa$1100:
   816                           	callstack 0
   817   00002E                     ___flmul@a:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x2D
   821   00002E                     	ds	2
   822   000030                     dtoa@p:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x2F
   826   000030                     	ds	2
   827   000032                     ??___flmul:
   828   000032                     dtoa@w:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x31
   832   000032                     	ds	2
   833   000034                     floorf@m:
   834                           	callstack 0
   835   000034                     dtoa@n:
   836                           	callstack 0
   837                           
   838                           ; 8 bytes @ 0x33
   839   000034                     	ds	2
   840   000036                     ___flmul@sign:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x35
   844   000036                     	ds	1
   845   000037                     ___flmul@grs:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x36
   849   000037                     	ds	1
   850   000038                     floorf@e:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x37
   854   000038                     	ds	2
   855   00003A                     floorf@u:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x39
   859   00003A                     	ds	1
   860   00003B                     ___flmul@aexp:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x3A
   864   00003B                     	ds	1
   865   00003C                     ___flmul@bexp:
   866                           	callstack 0
   867   00003C                     dtoa@i:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x3B
   871   00003C                     	ds	1
   872   00003D                     ___flmul@prod:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x3C
   876   00003D                     	ds	1
   877   00003E                     dtoa@s:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x3D
   881   00003E                     	ds	3
   882   000041                     ___flmul@temp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x40
   886   000041                     	ds	2
   887   000043                     ?___flsub:
   888                           	callstack 0
   889   000043                     ___flge@ff1:
   890                           	callstack 0
   891   000043                     ___flsub@b:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x42
   895   000043                     	ds	4
   896   000047                     ___flge@ff2:
   897                           	callstack 0
   898   000047                     ___flsub@a:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x46
   902   000047                     	ds	4
   903   00004B                     ??___flge:
   904   00004B                     ?___fltol:
   905                           	callstack 0
   906   00004B                     ___fltol@f1:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x4A
   910   00004B                     	ds	4
   911   00004F                     ??___fltol:
   912                           
   913                           ; 1 bytes @ 0x4E
   914   00004F                     	ds	4
   915   000053                     ___fltol@sign1:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x52
   919   000053                     	ds	1
   920   000054                     ___fltol@exp1:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x53
   924   000054                     	ds	1
   925   000055                     colour_read_all@cf:
   926                           	callstack 0
   927   000055                     efgtoa@fp:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x54
   931   000055                     	ds	2
   932   000057                     efgtoa@f:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x56
   936   000057                     	ds	4
   937   00005B                     efgtoa@c:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x5A
   941   00005B                     	ds	1
   942   00005C                     ??_efgtoa:
   943                           
   944                           ; 1 bytes @ 0x5B
   945   00005C                     	ds	2
   946   00005E                     vfprintf@cfmt:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x5D
   950   00005E                     	ds	2
   951   000060                     
   952                           ; 1 bytes @ 0x5F
   953 ;;
   954 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   955 ;;
   956 ;; *************** function _main *****************
   957 ;; Defined at:
   958 ;;		line 15 in file "main.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  data           60    0[BANK1 ] unsigned char [60]
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   973 ;;      Locals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   975 ;;      Totals:         0       2      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
   976 ;;Total ram usage:       62 bytes
   977 ;; Hardware stack levels required when called: 9
   978 ;; This function calls:
   979 ;;		_Color2String
   980 ;;		_I2C_2_Master_Init
   981 ;;		_RGB2Hue
   982 ;;		_color_click_init
   983 ;;		_colour_read_all
   984 ;;		_initUSART4
   985 ;; This function is called by:
   986 ;;		Startup code after reset
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text0
   991   004302                     __ptext0:
   992                           	callstack 0
   993   004302                     _main:
   994                           	callstack 22
   995   004302                     
   996                           ;main.c: 16:     char data[60];;main.c: 17:     initUSART4();
   997   004302  EC3F  F024         	call	_initUSART4	;wreg free
   998   004306                     
   999                           ;main.c: 18:     color_click_init();
  1000   004306  EC96  F023         	call	_color_click_init	;wreg free
  1001   00430A                     
  1002                           ;main.c: 19:     I2C_2_Master_Init();
  1003   00430A  EC03  F024         	call	_I2C_2_Master_Init	;wreg free
  1004   00430E                     l4285:
  1005                           
  1006                           ;main.c: 21:         colour_read_all(&colorf);
  1007   00430E  0E50               	movlw	low _colorf
  1008   004310  6E55               	movwf	colour_read_all@cf^0,c
  1009   004312  0E01               	movlw	high _colorf
  1010   004314  6E56               	movwf	(colour_read_all@cf+1)^0,c
  1011   004316  ECDC  F016         	call	_colour_read_all	;wreg free
  1012   00431A                     
  1013                           ;main.c: 22:         RGB2Hue(&colorf);
  1014   00431A  0E50               	movlw	low _colorf
  1015   00431C  6E1D               	movwf	RGB2Hue@cf^0,c
  1016   00431E  0E01               	movlw	high _colorf
  1017   004320  6E1E               	movwf	(RGB2Hue@cf+1)^0,c
  1018   004322  ECDD  F010         	call	_RGB2Hue	;wreg free
  1019   004326                     
  1020                           ;main.c: 24:         Color2String(data,&colorf);
  1021   004326  0E5C               	movlw	low main@data
  1022   004328  0100               	movlb	0	; () banked
  1023   00432A  6FC7               	movwf	Color2String@buf& (0+255),b
  1024   00432C  0E01               	movlw	high main@data
  1025   00432E  6FC8               	movwf	(Color2String@buf+1)& (0+255),b
  1026   004330  0E50               	movlw	low _colorf
  1027   004332  6FC9               	movwf	Color2String@cf& (0+255),b
  1028   004334  0E01               	movlw	high _colorf
  1029   004336  6FCA               	movwf	(Color2String@cf+1)& (0+255),b
  1030   004338  ECAF  F01D         	call	_Color2String	;wreg free
  1031   00433C                     
  1032                           ;main.c: 25:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1033   00433C  0E52               	movlw	82
  1034   00433E  0100               	movlb	0	; () banked
  1035   004340  6FD0               	movwf	(??_main+1)& (0+255),b
  1036   004342  0E2B               	movlw	43
  1037   004344  6FCF               	movwf	??_main& (0+255),b
  1038   004346  0E00               	movlw	0
  1039   004348                     u4767:
  1040   004348  2EE8               	decfsz	wreg,f,c
  1041   00434A  D7FE               	bra	u4767
  1042   00434C  2FCF               	decfsz	??_main& (0+255),f,b
  1043   00434E  D7FC               	bra	u4767
  1044   004350  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1045   004352  D7FA               	bra	u4767
  1046   004354  F000               	nop	
  1047   004356  EF87  F021         	goto	l4285
  1048   00435A  EF00  F000         	goto	start
  1049   00435E                     __end_of_main:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _initUSART4 *****************
  1053 ;; Defined at:
  1054 ;;		line 6 in file "serial.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text1
  1082   00487E                     __ptext1:
  1083                           	callstack 0
  1084   00487E                     _initUSART4:
  1085                           	callstack 30
  1086   00487E                     
  1087                           ;serial.c: 7:     TRISCbits.TRISC4=1;
  1088   00487E  8883               	bsf	131,4,c	;volatile
  1089                           
  1090                           ;serial.c: 8:     TRISCbits.TRISC1=1;
  1091   004880  8283               	bsf	131,1,c	;volatile
  1092   004882                     
  1093                           ;serial.c: 9:     RC0PPS = 0x12;
  1094   004882  0E12               	movlw	18
  1095   004884  010E               	movlb	14	; () banked
  1096   004886  6F62               	movwf	98,b	;volatile
  1097                           
  1098                           ;serial.c: 10:     RX4PPS = 0x11;
  1099   004888  0E11               	movlw	17
  1100   00488A  6F15               	movwf	21,b	;volatile
  1101   00488C                     
  1102                           ; BSR set to: 14
  1103                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1104   00488C  97E9               	bcf	233,3,b	;volatile
  1105   00488E                     
  1106                           ; BSR set to: 14
  1107                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1108   00488E  95E8               	bcf	232,2,b	;volatile
  1109                           
  1110                           ;serial.c: 14:     SP4BRGL = 51;
  1111   004890  0E33               	movlw	51
  1112   004892  6FE5               	movwf	229,b	;volatile
  1113                           
  1114                           ;serial.c: 15:     SP4BRGH = 0;
  1115   004894  0E00               	movlw	0
  1116   004896  6FE6               	movwf	230,b	;volatile
  1117   004898                     
  1118                           ; BSR set to: 14
  1119                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1120   004898  89E7               	bsf	231,4,b	;volatile
  1121   00489A                     
  1122                           ; BSR set to: 14
  1123                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1124   00489A  8BE8               	bsf	232,5,b	;volatile
  1125   00489C                     
  1126                           ; BSR set to: 14
  1127                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1128   00489C  8FE7               	bsf	231,7,b	;volatile
  1129   00489E                     
  1130                           ; BSR set to: 14
  1131   00489E  0012               	return		;funcret
  1132   0048A0                     __end_of_initUSART4:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _colour_read_all *****************
  1136 ;; Defined at:
  1137 ;;		line 5 in file "colorfunctions.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  cf              2   84[COMRAM] PTR struct RGBC_rel
  1140 ;;		 -> colorf(12), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  B               4   12[BANK0 ] float 
  1143 ;;  G               4    8[BANK0 ] float 
  1144 ;;  R               4    4[BANK0 ] float 
  1145 ;;  C               4    0        float 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1156 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1158 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;Total ram usage:       18 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 3
  1162 ;; This function calls:
  1163 ;;		___fladd
  1164 ;;		___fldiv
  1165 ;;		___flmul
  1166 ;;		___fltol
  1167 ;;		___xxtofl
  1168 ;;		_color_read_Blue
  1169 ;;		_color_read_Clear
  1170 ;;		_color_read_Green
  1171 ;;		_color_read_Red
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text2
  1178   002DB8                     __ptext2:
  1179                           	callstack 0
  1180   002DB8                     _colour_read_all:
  1181                           	callstack 27
  1182   002DB8                     
  1183                           ;colorfunctions.c: 7:     float R = color_read_Red();
  1184   002DB8  EC03  F022         	call	_color_read_Red	;wreg free
  1185   002DBC  C005  F00F         	movff	?_color_read_Red,___xxtofl@val
  1186   002DC0  C006  F010         	movff	?_color_read_Red+1,___xxtofl@val+1
  1187   002DC4  6A11               	clrf	(___xxtofl@val+2)^0,c
  1188   002DC6  6A12               	clrf	(___xxtofl@val+3)^0,c
  1189   002DC8  0E00               	movlw	0
  1190   002DCA  ECB0  F01A         	call	___xxtofl
  1191   002DCE  C00F  F064         	movff	?___xxtofl,colour_read_all@R
  1192   002DD2  C010  F065         	movff	?___xxtofl+1,colour_read_all@R+1
  1193   002DD6  C011  F066         	movff	?___xxtofl+2,colour_read_all@R+2
  1194   002DDA  C012  F067         	movff	?___xxtofl+3,colour_read_all@R+3
  1195                           
  1196                           ;colorfunctions.c: 8:     float G= color_read_Green();
  1197   002DDE  EC2B  F022         	call	_color_read_Green	;wreg free
  1198   002DE2  C005  F00F         	movff	?_color_read_Green,___xxtofl@val
  1199   002DE6  C006  F010         	movff	?_color_read_Green+1,___xxtofl@val+1
  1200   002DEA  6A11               	clrf	(___xxtofl@val+2)^0,c
  1201   002DEC  6A12               	clrf	(___xxtofl@val+3)^0,c
  1202   002DEE  0E00               	movlw	0
  1203   002DF0  ECB0  F01A         	call	___xxtofl
  1204   002DF4  C00F  F068         	movff	?___xxtofl,colour_read_all@G
  1205   002DF8  C010  F069         	movff	?___xxtofl+1,colour_read_all@G+1
  1206   002DFC  C011  F06A         	movff	?___xxtofl+2,colour_read_all@G+2
  1207   002E00  C012  F06B         	movff	?___xxtofl+3,colour_read_all@G+3
  1208                           
  1209                           ;colorfunctions.c: 9:     float B= color_read_Blue();
  1210   002E04  EC7B  F022         	call	_color_read_Blue	;wreg free
  1211   002E08  C005  F00F         	movff	?_color_read_Blue,___xxtofl@val
  1212   002E0C  C006  F010         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1213   002E10  6A11               	clrf	(___xxtofl@val+2)^0,c
  1214   002E12  6A12               	clrf	(___xxtofl@val+3)^0,c
  1215   002E14  0E00               	movlw	0
  1216   002E16  ECB0  F01A         	call	___xxtofl
  1217   002E1A  C00F  F06C         	movff	?___xxtofl,colour_read_all@B
  1218   002E1E  C010  F06D         	movff	?___xxtofl+1,colour_read_all@B+1
  1219   002E22  C011  F06E         	movff	?___xxtofl+2,colour_read_all@B+2
  1220   002E26  C012  F06F         	movff	?___xxtofl+3,colour_read_all@B+3
  1221   002E2A  EC53  F022         	call	_color_read_Clear	;wreg free
  1222   002E2E  C005  F00F         	movff	?_color_read_Clear,___xxtofl@val
  1223   002E32  C006  F010         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1224   002E36  6A11               	clrf	(___xxtofl@val+2)^0,c
  1225   002E38  6A12               	clrf	(___xxtofl@val+3)^0,c
  1226   002E3A  0E00               	movlw	0
  1227   002E3C  ECB0  F01A         	call	___xxtofl
  1228                           
  1229                           ;colorfunctions.c: 14:     (cf->Rf)=1000*(R/(R+G+B));
  1230   002E40  C068  F005         	movff	colour_read_all@G,___fladd@a
  1231   002E44  C069  F006         	movff	colour_read_all@G+1,___fladd@a+1
  1232   002E48  C06A  F007         	movff	colour_read_all@G+2,___fladd@a+2
  1233   002E4C  C06B  F008         	movff	colour_read_all@G+3,___fladd@a+3
  1234   002E50  C064  F001         	movff	colour_read_all@R,___fladd@b
  1235   002E54  C065  F002         	movff	colour_read_all@R+1,___fladd@b+1
  1236   002E58  C066  F003         	movff	colour_read_all@R+2,___fladd@b+2
  1237   002E5C  C067  F004         	movff	colour_read_all@R+3,___fladd@b+3
  1238   002E60  EC4C  F00C         	call	___fladd	;wreg free
  1239   002E64  C001  F060         	movff	?___fladd,_colour_read_all$1477
  1240   002E68  C002  F061         	movff	?___fladd+1,_colour_read_all$1477+1
  1241   002E6C  C003  F062         	movff	?___fladd+2,_colour_read_all$1477+2
  1242   002E70  C004  F063         	movff	?___fladd+3,_colour_read_all$1477+3
  1243   002E74                     
  1244                           ;colorfunctions.c: 14:     (cf->Rf)=1000*(R/(R+G+B));
  1245   002E74  0E00               	movlw	0
  1246   002E76  6E2E               	movwf	___flmul@a^0,c
  1247   002E78  0E00               	movlw	0
  1248   002E7A  6E2F               	movwf	(___flmul@a+1)^0,c
  1249   002E7C  0E7A               	movlw	122
  1250   002E7E  6E30               	movwf	(___flmul@a+2)^0,c
  1251   002E80  0E44               	movlw	68
  1252   002E82  6E31               	movwf	(___flmul@a+3)^0,c
  1253   002E84  C06C  F005         	movff	colour_read_all@B,___fladd@a
  1254   002E88  C06D  F006         	movff	colour_read_all@B+1,___fladd@a+1
  1255   002E8C  C06E  F007         	movff	colour_read_all@B+2,___fladd@a+2
  1256   002E90  C06F  F008         	movff	colour_read_all@B+3,___fladd@a+3
  1257   002E94  C060  F001         	movff	_colour_read_all$1477,___fladd@b
  1258   002E98  C061  F002         	movff	_colour_read_all$1477+1,___fladd@b+1
  1259   002E9C  C062  F003         	movff	_colour_read_all$1477+2,___fladd@b+2
  1260   002EA0  C063  F004         	movff	_colour_read_all$1477+3,___fladd@b+3
  1261   002EA4  EC4C  F00C         	call	___fladd	;wreg free
  1262   002EA8  C001  F015         	movff	?___fladd,___fldiv@a
  1263   002EAC  C002  F016         	movff	?___fladd+1,___fldiv@a+1
  1264   002EB0  C003  F017         	movff	?___fladd+2,___fldiv@a+2
  1265   002EB4  C004  F018         	movff	?___fladd+3,___fldiv@a+3
  1266   002EB8  C064  F011         	movff	colour_read_all@R,___fldiv@b
  1267   002EBC  C065  F012         	movff	colour_read_all@R+1,___fldiv@b+1
  1268   002EC0  C066  F013         	movff	colour_read_all@R+2,___fldiv@b+2
  1269   002EC4  C067  F014         	movff	colour_read_all@R+3,___fldiv@b+3
  1270   002EC8  EC0F  F015         	call	___fldiv	;wreg free
  1271   002ECC  C011  F02A         	movff	?___fldiv,___flmul@b
  1272   002ED0  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1273   002ED4  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1274   002ED8  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1275   002EDC  ECFA  F012         	call	___flmul	;wreg free
  1276   002EE0  C02A  F04B         	movff	?___flmul,___fltol@f1
  1277   002EE4  C02B  F04C         	movff	?___flmul+1,___fltol@f1+1
  1278   002EE8  C02C  F04D         	movff	?___flmul+2,___fltol@f1+2
  1279   002EEC  C02D  F04E         	movff	?___flmul+3,___fltol@f1+3
  1280   002EF0  EC57  F01E         	call	___fltol	;wreg free
  1281   002EF4  C055  FFD9         	movff	colour_read_all@cf,fsr2l
  1282   002EF8  C056  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1283   002EFC  C04B  FFDE         	movff	?___fltol,postinc2
  1284   002F00  C04C  FFDD         	movff	?___fltol+1,postdec2
  1285   002F04                     
  1286                           ;colorfunctions.c: 15:     (cf->Bf)=1000*(B/(R+G+B));
  1287   002F04  C068  F005         	movff	colour_read_all@G,___fladd@a
  1288   002F08  C069  F006         	movff	colour_read_all@G+1,___fladd@a+1
  1289   002F0C  C06A  F007         	movff	colour_read_all@G+2,___fladd@a+2
  1290   002F10  C06B  F008         	movff	colour_read_all@G+3,___fladd@a+3
  1291   002F14  C064  F001         	movff	colour_read_all@R,___fladd@b
  1292   002F18  C065  F002         	movff	colour_read_all@R+1,___fladd@b+1
  1293   002F1C  C066  F003         	movff	colour_read_all@R+2,___fladd@b+2
  1294   002F20  C067  F004         	movff	colour_read_all@R+3,___fladd@b+3
  1295   002F24  EC4C  F00C         	call	___fladd	;wreg free
  1296   002F28  C001  F060         	movff	?___fladd,_colour_read_all$1477
  1297   002F2C  C002  F061         	movff	?___fladd+1,_colour_read_all$1477+1
  1298   002F30  C003  F062         	movff	?___fladd+2,_colour_read_all$1477+2
  1299   002F34  C004  F063         	movff	?___fladd+3,_colour_read_all$1477+3
  1300                           
  1301                           ;colorfunctions.c: 15:     (cf->Bf)=1000*(B/(R+G+B));
  1302   002F38  0E00               	movlw	0
  1303   002F3A  6E2E               	movwf	___flmul@a^0,c
  1304   002F3C  0E00               	movlw	0
  1305   002F3E  6E2F               	movwf	(___flmul@a+1)^0,c
  1306   002F40  0E7A               	movlw	122
  1307   002F42  6E30               	movwf	(___flmul@a+2)^0,c
  1308   002F44  0E44               	movlw	68
  1309   002F46  6E31               	movwf	(___flmul@a+3)^0,c
  1310   002F48  C06C  F005         	movff	colour_read_all@B,___fladd@a
  1311   002F4C  C06D  F006         	movff	colour_read_all@B+1,___fladd@a+1
  1312   002F50  C06E  F007         	movff	colour_read_all@B+2,___fladd@a+2
  1313   002F54  C06F  F008         	movff	colour_read_all@B+3,___fladd@a+3
  1314   002F58  C060  F001         	movff	_colour_read_all$1477,___fladd@b
  1315   002F5C  C061  F002         	movff	_colour_read_all$1477+1,___fladd@b+1
  1316   002F60  C062  F003         	movff	_colour_read_all$1477+2,___fladd@b+2
  1317   002F64  C063  F004         	movff	_colour_read_all$1477+3,___fladd@b+3
  1318   002F68  EC4C  F00C         	call	___fladd	;wreg free
  1319   002F6C  C001  F015         	movff	?___fladd,___fldiv@a
  1320   002F70  C002  F016         	movff	?___fladd+1,___fldiv@a+1
  1321   002F74  C003  F017         	movff	?___fladd+2,___fldiv@a+2
  1322   002F78  C004  F018         	movff	?___fladd+3,___fldiv@a+3
  1323   002F7C  C06C  F011         	movff	colour_read_all@B,___fldiv@b
  1324   002F80  C06D  F012         	movff	colour_read_all@B+1,___fldiv@b+1
  1325   002F84  C06E  F013         	movff	colour_read_all@B+2,___fldiv@b+2
  1326   002F88  C06F  F014         	movff	colour_read_all@B+3,___fldiv@b+3
  1327   002F8C  EC0F  F015         	call	___fldiv	;wreg free
  1328   002F90  C011  F02A         	movff	?___fldiv,___flmul@b
  1329   002F94  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1330   002F98  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1331   002F9C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1332   002FA0  ECFA  F012         	call	___flmul	;wreg free
  1333   002FA4  C02A  F04B         	movff	?___flmul,___fltol@f1
  1334   002FA8  C02B  F04C         	movff	?___flmul+1,___fltol@f1+1
  1335   002FAC  C02C  F04D         	movff	?___flmul+2,___fltol@f1+2
  1336   002FB0  C02D  F04E         	movff	?___flmul+3,___fltol@f1+3
  1337   002FB4  EC57  F01E         	call	___fltol	;wreg free
  1338   002FB8  EE20 F004          	lfsr	2,4
  1339   002FBC  5055               	movf	colour_read_all@cf^0,w,c
  1340   002FBE  26D9               	addwf	fsr2l,f,c
  1341   002FC0  5056               	movf	(colour_read_all@cf+1)^0,w,c
  1342   002FC2  22DA               	addwfc	fsr2h,f,c
  1343   002FC4  C04B  FFDE         	movff	?___fltol,postinc2
  1344   002FC8  C04C  FFDD         	movff	?___fltol+1,postdec2
  1345   002FCC                     
  1346                           ;colorfunctions.c: 16:     (cf->Gf)=1000*(G/(R+G+B));
  1347   002FCC  C068  F005         	movff	colour_read_all@G,___fladd@a
  1348   002FD0  C069  F006         	movff	colour_read_all@G+1,___fladd@a+1
  1349   002FD4  C06A  F007         	movff	colour_read_all@G+2,___fladd@a+2
  1350   002FD8  C06B  F008         	movff	colour_read_all@G+3,___fladd@a+3
  1351   002FDC  C064  F001         	movff	colour_read_all@R,___fladd@b
  1352   002FE0  C065  F002         	movff	colour_read_all@R+1,___fladd@b+1
  1353   002FE4  C066  F003         	movff	colour_read_all@R+2,___fladd@b+2
  1354   002FE8  C067  F004         	movff	colour_read_all@R+3,___fladd@b+3
  1355   002FEC  EC4C  F00C         	call	___fladd	;wreg free
  1356   002FF0  C001  F060         	movff	?___fladd,_colour_read_all$1477
  1357   002FF4  C002  F061         	movff	?___fladd+1,_colour_read_all$1477+1
  1358   002FF8  C003  F062         	movff	?___fladd+2,_colour_read_all$1477+2
  1359   002FFC  C004  F063         	movff	?___fladd+3,_colour_read_all$1477+3
  1360   003000                     
  1361                           ;colorfunctions.c: 16:     (cf->Gf)=1000*(G/(R+G+B));
  1362   003000  0E00               	movlw	0
  1363   003002  6E2E               	movwf	___flmul@a^0,c
  1364   003004  0E00               	movlw	0
  1365   003006  6E2F               	movwf	(___flmul@a+1)^0,c
  1366   003008  0E7A               	movlw	122
  1367   00300A  6E30               	movwf	(___flmul@a+2)^0,c
  1368   00300C  0E44               	movlw	68
  1369   00300E  6E31               	movwf	(___flmul@a+3)^0,c
  1370   003010  C06C  F005         	movff	colour_read_all@B,___fladd@a
  1371   003014  C06D  F006         	movff	colour_read_all@B+1,___fladd@a+1
  1372   003018  C06E  F007         	movff	colour_read_all@B+2,___fladd@a+2
  1373   00301C  C06F  F008         	movff	colour_read_all@B+3,___fladd@a+3
  1374   003020  C060  F001         	movff	_colour_read_all$1477,___fladd@b
  1375   003024  C061  F002         	movff	_colour_read_all$1477+1,___fladd@b+1
  1376   003028  C062  F003         	movff	_colour_read_all$1477+2,___fladd@b+2
  1377   00302C  C063  F004         	movff	_colour_read_all$1477+3,___fladd@b+3
  1378   003030  EC4C  F00C         	call	___fladd	;wreg free
  1379   003034  C001  F015         	movff	?___fladd,___fldiv@a
  1380   003038  C002  F016         	movff	?___fladd+1,___fldiv@a+1
  1381   00303C  C003  F017         	movff	?___fladd+2,___fldiv@a+2
  1382   003040  C004  F018         	movff	?___fladd+3,___fldiv@a+3
  1383   003044  C068  F011         	movff	colour_read_all@G,___fldiv@b
  1384   003048  C069  F012         	movff	colour_read_all@G+1,___fldiv@b+1
  1385   00304C  C06A  F013         	movff	colour_read_all@G+2,___fldiv@b+2
  1386   003050  C06B  F014         	movff	colour_read_all@G+3,___fldiv@b+3
  1387   003054  EC0F  F015         	call	___fldiv	;wreg free
  1388   003058  C011  F02A         	movff	?___fldiv,___flmul@b
  1389   00305C  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1390   003060  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1391   003064  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1392   003068  ECFA  F012         	call	___flmul	;wreg free
  1393   00306C  C02A  F04B         	movff	?___flmul,___fltol@f1
  1394   003070  C02B  F04C         	movff	?___flmul+1,___fltol@f1+1
  1395   003074  C02C  F04D         	movff	?___flmul+2,___fltol@f1+2
  1396   003078  C02D  F04E         	movff	?___flmul+3,___fltol@f1+3
  1397   00307C  EC57  F01E         	call	___fltol	;wreg free
  1398   003080  EE20 F002          	lfsr	2,2
  1399   003084  5055               	movf	colour_read_all@cf^0,w,c
  1400   003086  26D9               	addwf	fsr2l,f,c
  1401   003088  5056               	movf	(colour_read_all@cf+1)^0,w,c
  1402   00308A  22DA               	addwfc	fsr2h,f,c
  1403   00308C  C04B  FFDE         	movff	?___fltol,postinc2
  1404   003090  C04C  FFDD         	movff	?___fltol+1,postdec2
  1405   003094  0012               	return		;funcret
  1406   003096                     __end_of_colour_read_all:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _color_read_Red *****************
  1410 ;; Defined at:
  1411 ;;		line 32 in file "colorclick.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  tmp             2    9[COMRAM] unsigned int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2    4[COMRAM] unsigned int 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1429 ;;Total ram usage:        7 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 2
  1432 ;; This function calls:
  1433 ;;		_I2C_2_Master_Read
  1434 ;;		_I2C_2_Master_RepStart
  1435 ;;		_I2C_2_Master_Start
  1436 ;;		_I2C_2_Master_Stop
  1437 ;;		_I2C_2_Master_Write
  1438 ;; This function is called by:
  1439 ;;		_colour_read_all
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text3
  1444   004406                     __ptext3:
  1445                           	callstack 0
  1446   004406                     _color_read_Red:
  1447                           	callstack 27
  1448   004406                     
  1449                           ;colorclick.c: 34:  unsigned int tmp;;colorclick.c: 35:  I2C_2_Master_Start();
  1450   004406  EC8B  F024         	call	_I2C_2_Master_Start	;wreg free
  1451                           
  1452                           ;colorclick.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  1453   00440A  0E52               	movlw	82
  1454   00440C  EC7B  F024         	call	_I2C_2_Master_Write
  1455                           
  1456                           ;colorclick.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  1457   004410  0EB6               	movlw	182
  1458   004412  EC7B  F024         	call	_I2C_2_Master_Write
  1459                           
  1460                           ;colorclick.c: 38:  I2C_2_Master_RepStart();
  1461   004416  EC81  F024         	call	_I2C_2_Master_RepStart	;wreg free
  1462                           
  1463                           ;colorclick.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  1464   00441A  0E53               	movlw	83
  1465   00441C  EC7B  F024         	call	_I2C_2_Master_Write
  1466                           
  1467                           ;colorclick.c: 40:  tmp=I2C_2_Master_Read(1);
  1468   004420  0E01               	movlw	1
  1469   004422  EC55  F023         	call	_I2C_2_Master_Read
  1470   004426  6E07               	movwf	??_color_read_Red^0,c
  1471   004428  5007               	movf	??_color_read_Red^0,w,c
  1472   00442A  6E0A               	movwf	color_read_Red@tmp^0,c
  1473   00442C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1474                           
  1475                           ;colorclick.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1476   00442E  0E00               	movlw	0
  1477   004430  EC55  F023         	call	_I2C_2_Master_Read
  1478   004434  6E07               	movwf	??_color_read_Red^0,c
  1479   004436  5007               	movf	??_color_read_Red^0,w,c
  1480   004438  6E09               	movwf	(??_color_read_Red+2)^0,c
  1481   00443A  6A08               	clrf	(??_color_read_Red+1)^0,c
  1482   00443C  500A               	movf	color_read_Red@tmp^0,w,c
  1483   00443E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1484   004440  6E0A               	movwf	color_read_Red@tmp^0,c
  1485   004442  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1486   004444  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1487   004446  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1488                           
  1489                           ;colorclick.c: 42:  I2C_2_Master_Stop();
  1490   004448  EC86  F024         	call	_I2C_2_Master_Stop	;wreg free
  1491   00444C                     
  1492                           ;colorclick.c: 43:  return tmp;
  1493   00444C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1494   004450  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1495   004454  0012               	return		;funcret
  1496   004456                     __end_of_color_read_Red:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _color_read_Green *****************
  1500 ;; Defined at:
  1501 ;;		line 45 in file "colorclick.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  tmp             2    9[COMRAM] unsigned int 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2    4[COMRAM] unsigned int 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;Total ram usage:        7 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 2
  1522 ;; This function calls:
  1523 ;;		_I2C_2_Master_Read
  1524 ;;		_I2C_2_Master_RepStart
  1525 ;;		_I2C_2_Master_Start
  1526 ;;		_I2C_2_Master_Stop
  1527 ;;		_I2C_2_Master_Write
  1528 ;; This function is called by:
  1529 ;;		_colour_read_all
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text4
  1534   004456                     __ptext4:
  1535                           	callstack 0
  1536   004456                     _color_read_Green:
  1537                           	callstack 27
  1538   004456                     
  1539                           ;colorclick.c: 47:     unsigned int tmp;;colorclick.c: 48:     I2C_2_Master_Start();
  1540   004456  EC8B  F024         	call	_I2C_2_Master_Start	;wreg free
  1541                           
  1542                           ;colorclick.c: 49:     I2C_2_Master_Write(0x52 | 0x00);
  1543   00445A  0E52               	movlw	82
  1544   00445C  EC7B  F024         	call	_I2C_2_Master_Write
  1545                           
  1546                           ;colorclick.c: 50:     I2C_2_Master_Write(0xA0 | 0x18);
  1547   004460  0EB8               	movlw	184
  1548   004462  EC7B  F024         	call	_I2C_2_Master_Write
  1549                           
  1550                           ;colorclick.c: 51:     I2C_2_Master_RepStart();
  1551   004466  EC81  F024         	call	_I2C_2_Master_RepStart	;wreg free
  1552                           
  1553                           ;colorclick.c: 52:     I2C_2_Master_Write(0x52 | 0x01);
  1554   00446A  0E53               	movlw	83
  1555   00446C  EC7B  F024         	call	_I2C_2_Master_Write
  1556                           
  1557                           ;colorclick.c: 53:     tmp=I2C_2_Master_Read(1);
  1558   004470  0E01               	movlw	1
  1559   004472  EC55  F023         	call	_I2C_2_Master_Read
  1560   004476  6E07               	movwf	??_color_read_Green^0,c
  1561   004478  5007               	movf	??_color_read_Green^0,w,c
  1562   00447A  6E0A               	movwf	color_read_Green@tmp^0,c
  1563   00447C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1564                           
  1565                           ;colorclick.c: 54:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1566   00447E  0E00               	movlw	0
  1567   004480  EC55  F023         	call	_I2C_2_Master_Read
  1568   004484  6E07               	movwf	??_color_read_Green^0,c
  1569   004486  5007               	movf	??_color_read_Green^0,w,c
  1570   004488  6E09               	movwf	(??_color_read_Green+2)^0,c
  1571   00448A  6A08               	clrf	(??_color_read_Green+1)^0,c
  1572   00448C  500A               	movf	color_read_Green@tmp^0,w,c
  1573   00448E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1574   004490  6E0A               	movwf	color_read_Green@tmp^0,c
  1575   004492  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1576   004494  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1577   004496  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1578                           
  1579                           ;colorclick.c: 55:     I2C_2_Master_Stop();
  1580   004498  EC86  F024         	call	_I2C_2_Master_Stop	;wreg free
  1581   00449C                     
  1582                           ;colorclick.c: 56:     return tmp;
  1583   00449C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1584   0044A0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1585   0044A4  0012               	return		;funcret
  1586   0044A6                     __end_of_color_read_Green:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _color_read_Clear *****************
  1590 ;; Defined at:
  1591 ;;		line 74 in file "colorclick.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  tmp             2    9[COMRAM] unsigned int 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2    4[COMRAM] unsigned int 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;Total ram usage:        7 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 2
  1612 ;; This function calls:
  1613 ;;		_I2C_2_Master_Read
  1614 ;;		_I2C_2_Master_RepStart
  1615 ;;		_I2C_2_Master_Start
  1616 ;;		_I2C_2_Master_Stop
  1617 ;;		_I2C_2_Master_Write
  1618 ;; This function is called by:
  1619 ;;		_colour_read_all
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text5
  1624   0044A6                     __ptext5:
  1625                           	callstack 0
  1626   0044A6                     _color_read_Clear:
  1627                           	callstack 27
  1628   0044A6                     
  1629                           ;colorclick.c: 76:     unsigned int tmp;;colorclick.c: 77:     I2C_2_Master_Start();
  1630   0044A6  EC8B  F024         	call	_I2C_2_Master_Start	;wreg free
  1631                           
  1632                           ;colorclick.c: 78:     I2C_2_Master_Write(0x52 | 0x00);
  1633   0044AA  0E52               	movlw	82
  1634   0044AC  EC7B  F024         	call	_I2C_2_Master_Write
  1635                           
  1636                           ;colorclick.c: 79:     I2C_2_Master_Write(0xA0 | 0x14);
  1637   0044B0  0EB4               	movlw	180
  1638   0044B2  EC7B  F024         	call	_I2C_2_Master_Write
  1639                           
  1640                           ;colorclick.c: 80:     I2C_2_Master_RepStart();
  1641   0044B6  EC81  F024         	call	_I2C_2_Master_RepStart	;wreg free
  1642                           
  1643                           ;colorclick.c: 81:     I2C_2_Master_Write(0x52 | 0x01);
  1644   0044BA  0E53               	movlw	83
  1645   0044BC  EC7B  F024         	call	_I2C_2_Master_Write
  1646                           
  1647                           ;colorclick.c: 82:     tmp=I2C_2_Master_Read(1);
  1648   0044C0  0E01               	movlw	1
  1649   0044C2  EC55  F023         	call	_I2C_2_Master_Read
  1650   0044C6  6E07               	movwf	??_color_read_Clear^0,c
  1651   0044C8  5007               	movf	??_color_read_Clear^0,w,c
  1652   0044CA  6E0A               	movwf	color_read_Clear@tmp^0,c
  1653   0044CC  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1654                           
  1655                           ;colorclick.c: 83:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1656   0044CE  0E00               	movlw	0
  1657   0044D0  EC55  F023         	call	_I2C_2_Master_Read
  1658   0044D4  6E07               	movwf	??_color_read_Clear^0,c
  1659   0044D6  5007               	movf	??_color_read_Clear^0,w,c
  1660   0044D8  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1661   0044DA  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1662   0044DC  500A               	movf	color_read_Clear@tmp^0,w,c
  1663   0044DE  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1664   0044E0  6E0A               	movwf	color_read_Clear@tmp^0,c
  1665   0044E2  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1666   0044E4  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1667   0044E6  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1668                           
  1669                           ;colorclick.c: 84:     I2C_2_Master_Stop();
  1670   0044E8  EC86  F024         	call	_I2C_2_Master_Stop	;wreg free
  1671   0044EC                     
  1672                           ;colorclick.c: 85:     return tmp;
  1673   0044EC  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1674   0044F0  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1675   0044F4  0012               	return		;funcret
  1676   0044F6                     __end_of_color_read_Clear:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _color_read_Blue *****************
  1680 ;; Defined at:
  1681 ;;		line 59 in file "colorclick.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  tmp             2    9[COMRAM] unsigned int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2    4[COMRAM] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;Total ram usage:        7 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 2
  1702 ;; This function calls:
  1703 ;;		_I2C_2_Master_Read
  1704 ;;		_I2C_2_Master_RepStart
  1705 ;;		_I2C_2_Master_Start
  1706 ;;		_I2C_2_Master_Stop
  1707 ;;		_I2C_2_Master_Write
  1708 ;; This function is called by:
  1709 ;;		_colour_read_all
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text6
  1714   0044F6                     __ptext6:
  1715                           	callstack 0
  1716   0044F6                     _color_read_Blue:
  1717                           	callstack 27
  1718   0044F6                     
  1719                           ;colorclick.c: 61:     unsigned int tmp;;colorclick.c: 62:     I2C_2_Master_Start();
  1720   0044F6  EC8B  F024         	call	_I2C_2_Master_Start	;wreg free
  1721                           
  1722                           ;colorclick.c: 63:     I2C_2_Master_Write(0x52 | 0x00);
  1723   0044FA  0E52               	movlw	82
  1724   0044FC  EC7B  F024         	call	_I2C_2_Master_Write
  1725                           
  1726                           ;colorclick.c: 64:     I2C_2_Master_Write(0xA0 | 0x1A);
  1727   004500  0EBA               	movlw	186
  1728   004502  EC7B  F024         	call	_I2C_2_Master_Write
  1729                           
  1730                           ;colorclick.c: 65:     I2C_2_Master_RepStart();
  1731   004506  EC81  F024         	call	_I2C_2_Master_RepStart	;wreg free
  1732                           
  1733                           ;colorclick.c: 66:     I2C_2_Master_Write(0x52 | 0x01);
  1734   00450A  0E53               	movlw	83
  1735   00450C  EC7B  F024         	call	_I2C_2_Master_Write
  1736                           
  1737                           ;colorclick.c: 67:     tmp=I2C_2_Master_Read(1);
  1738   004510  0E01               	movlw	1
  1739   004512  EC55  F023         	call	_I2C_2_Master_Read
  1740   004516  6E07               	movwf	??_color_read_Blue^0,c
  1741   004518  5007               	movf	??_color_read_Blue^0,w,c
  1742   00451A  6E0A               	movwf	color_read_Blue@tmp^0,c
  1743   00451C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1744                           
  1745                           ;colorclick.c: 68:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1746   00451E  0E00               	movlw	0
  1747   004520  EC55  F023         	call	_I2C_2_Master_Read
  1748   004524  6E07               	movwf	??_color_read_Blue^0,c
  1749   004526  5007               	movf	??_color_read_Blue^0,w,c
  1750   004528  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1751   00452A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1752   00452C  500A               	movf	color_read_Blue@tmp^0,w,c
  1753   00452E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1754   004530  6E0A               	movwf	color_read_Blue@tmp^0,c
  1755   004532  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1756   004534  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1757   004536  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1758                           
  1759                           ;colorclick.c: 69:     I2C_2_Master_Stop();
  1760   004538  EC86  F024         	call	_I2C_2_Master_Stop	;wreg free
  1761   00453C                     
  1762                           ;colorclick.c: 70:     return tmp;
  1763   00453C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1764   004540  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1765   004544  0012               	return		;funcret
  1766   004546                     __end_of_color_read_Blue:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _I2C_2_Master_RepStart *****************
  1770 ;; Defined at:
  1771 ;;		line 33 in file "i2c.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		_I2C_2_Master_Idle
  1794 ;; This function is called by:
  1795 ;;		_color_read_Red
  1796 ;;		_color_read_Green
  1797 ;;		_color_read_Blue
  1798 ;;		_color_read_Clear
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text7
  1803   004902                     __ptext7:
  1804                           	callstack 0
  1805   004902                     _I2C_2_Master_RepStart:
  1806                           	callstack 27
  1807   004902                     
  1808                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1809   004902  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  1810   004906                     
  1811                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1812   004906  010E               	movlb	14	; () banked
  1813   004908  83DA               	bsf	218,1,b	;volatile
  1814   00490A                     
  1815                           ; BSR set to: 14
  1816   00490A  0012               	return		;funcret
  1817   00490C                     __end_of_I2C_2_Master_RepStart:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _I2C_2_Master_Read *****************
  1821 ;; Defined at:
  1822 ;;		line 51 in file "i2c.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  ack             1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  ack             1    2[COMRAM] unsigned char 
  1827 ;;  tmp             1    3[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;Total ram usage:        3 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_I2C_2_Master_Idle
  1846 ;; This function is called by:
  1847 ;;		_color_read_Red
  1848 ;;		_color_read_Green
  1849 ;;		_color_read_Blue
  1850 ;;		_color_read_Clear
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text8
  1855   0046AA                     __ptext8:
  1856                           	callstack 0
  1857   0046AA                     _I2C_2_Master_Read:
  1858                           	callstack 27
  1859                           
  1860                           ; BSR set to: 14
  1861                           ;incstack = 0
  1862                           ;I2C_2_Master_Read@ack stored from wreg
  1863   0046AA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1864   0046AC                     
  1865                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1866   0046AC  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  1867   0046B0                     
  1868                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1869   0046B0  010E               	movlb	14	; () banked
  1870   0046B2  87DA               	bsf	218,3,b	;volatile
  1871                           
  1872                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1873   0046B4  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  1874   0046B8                     
  1875                           ;i2c.c: 57:   tmp = SSP2BUF;
  1876   0046B8  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1877                           
  1878                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1879   0046BC  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  1880   0046C0                     
  1881                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1882   0046C0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1883   0046C2  B4D8               	btfsc	status,2,c
  1884   0046C4  EF66  F023         	goto	u4451
  1885   0046C8  EF6A  F023         	goto	u4450
  1886   0046CC                     u4451:
  1887   0046CC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1888   0046CE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1889   0046D0  EF6B  F023         	goto	u4468
  1890   0046D4                     u4450:
  1891   0046D4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1892   0046D6                     u4468:
  1893   0046D6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1894   0046D8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1895   0046DA  010E               	movlb	14	; () banked
  1896   0046DC  51DA               	movf	218,w,b	;volatile
  1897   0046DE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1898   0046E0  0BDF               	andlw	-33
  1899   0046E2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1900   0046E4  6FDA               	movwf	218,b	;volatile
  1901   0046E6                     
  1902                           ; BSR set to: 14
  1903                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1904   0046E6  89DA               	bsf	218,4,b	;volatile
  1905   0046E8                     
  1906                           ; BSR set to: 14
  1907                           ;i2c.c: 61:   return tmp;
  1908   0046E8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1909   0046EA                     
  1910                           ; BSR set to: 14
  1911   0046EA  0012               	return		;funcret
  1912   0046EC                     __end_of_I2C_2_Master_Read:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _color_click_init *****************
  1916 ;; Defined at:
  1917 ;;		line 6 in file "colorclick.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 3
  1938 ;; This function calls:
  1939 ;;		_I2C_2_Master_Init
  1940 ;;		_color_writetoaddr
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text9
  1947   00472C                     __ptext9:
  1948                           	callstack 0
  1949   00472C                     _color_click_init:
  1950                           	callstack 27
  1951   00472C                     
  1952                           ;colorclick.c: 9:     I2C_2_Master_Init();
  1953   00472C  EC03  F024         	call	_I2C_2_Master_Init	;wreg free
  1954   004730                     
  1955                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  1956   004730  0E01               	movlw	1
  1957   004732  6E03               	movwf	color_writetoaddr@value^0,c
  1958   004734  0E00               	movlw	0
  1959   004736  EC50  F024         	call	_color_writetoaddr
  1960   00473A                     
  1961                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1962   00473A  0E3F               	movlw	63
  1963   00473C  6E05               	movwf	??_color_click_init^0,c
  1964   00473E  0E55               	movlw	85
  1965   004740                     u4777:
  1966   004740  2EE8               	decfsz	wreg,f,c
  1967   004742  D7FE               	bra	u4777
  1968   004744  2E05               	decfsz	??_color_click_init^0,f,c
  1969   004746  D7FC               	bra	u4777
  1970   004748  F000               	nop	
  1971   00474A                     
  1972                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  1973   00474A  0E03               	movlw	3
  1974   00474C  6E03               	movwf	color_writetoaddr@value^0,c
  1975   00474E  0E00               	movlw	0
  1976   004750  EC50  F024         	call	_color_writetoaddr
  1977   004754                     
  1978                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  1979   004754  0ED6               	movlw	214
  1980   004756  6E03               	movwf	color_writetoaddr@value^0,c
  1981   004758  0E01               	movlw	1
  1982   00475A  EC50  F024         	call	_color_writetoaddr
  1983   00475E                     
  1984                           ;colorclick.c: 21:     color_writetoaddr(0x00, 0x13);
  1985   00475E  0E13               	movlw	19
  1986   004760  6E03               	movwf	color_writetoaddr@value^0,c
  1987   004762  0E00               	movlw	0
  1988   004764  EC50  F024         	call	_color_writetoaddr
  1989   004768  0012               	return		;funcret
  1990   00476A                     __end_of_color_click_init:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function _color_writetoaddr *****************
  1994 ;; Defined at:
  1995 ;;		line 24 in file "colorclick.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  address         1    wreg     unsigned char 
  1998 ;;  value           1    2[COMRAM] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  address         1    3[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 2
  2017 ;; This function calls:
  2018 ;;		_I2C_2_Master_Start
  2019 ;;		_I2C_2_Master_Stop
  2020 ;;		_I2C_2_Master_Write
  2021 ;; This function is called by:
  2022 ;;		_color_click_init
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text10
  2027   0048A0                     __ptext10:
  2028                           	callstack 0
  2029   0048A0                     _color_writetoaddr:
  2030                           	callstack 27
  2031                           
  2032                           ;incstack = 0
  2033                           ;color_writetoaddr@address stored from wreg
  2034   0048A0  6E04               	movwf	color_writetoaddr@address^0,c
  2035   0048A2                     
  2036                           ;colorclick.c: 25:     I2C_2_Master_Start();
  2037   0048A2  EC8B  F024         	call	_I2C_2_Master_Start	;wreg free
  2038                           
  2039                           ;colorclick.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  2040   0048A6  0E52               	movlw	82
  2041   0048A8  EC7B  F024         	call	_I2C_2_Master_Write
  2042                           
  2043                           ;colorclick.c: 27:     I2C_2_Master_Write(0x80 | address);
  2044   0048AC  5004               	movf	color_writetoaddr@address^0,w,c
  2045   0048AE  0980               	iorlw	128
  2046   0048B0  EC7B  F024         	call	_I2C_2_Master_Write
  2047                           
  2048                           ;colorclick.c: 28:     I2C_2_Master_Write(value);
  2049   0048B4  5003               	movf	color_writetoaddr@value^0,w,c
  2050   0048B6  EC7B  F024         	call	_I2C_2_Master_Write
  2051                           
  2052                           ;colorclick.c: 29:     I2C_2_Master_Stop();
  2053   0048BA  EC86  F024         	call	_I2C_2_Master_Stop	;wreg free
  2054   0048BE  0012               	return		;funcret
  2055   0048C0                     __end_of_color_writetoaddr:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function _I2C_2_Master_Write *****************
  2059 ;; Defined at:
  2060 ;;		line 45 in file "i2c.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  data_byte       1    wreg     unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  data_byte       1    1[COMRAM] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;Total ram usage:        1 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 1
  2081 ;; This function calls:
  2082 ;;		_I2C_2_Master_Idle
  2083 ;; This function is called by:
  2084 ;;		_color_writetoaddr
  2085 ;;		_color_read_Red
  2086 ;;		_color_read_Green
  2087 ;;		_color_read_Blue
  2088 ;;		_color_read_Clear
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text11
  2093   0048F6                     __ptext11:
  2094                           	callstack 0
  2095   0048F6                     _I2C_2_Master_Write:
  2096                           	callstack 27
  2097                           
  2098                           ;incstack = 0
  2099                           ;I2C_2_Master_Write@data_byte stored from wreg
  2100   0048F6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2101   0048F8                     
  2102                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2103   0048F8  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  2104   0048FC                     
  2105                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2106   0048FC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2107   004900  0012               	return		;funcret
  2108   004902                     __end_of_I2C_2_Master_Write:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _I2C_2_Master_Stop *****************
  2112 ;; Defined at:
  2113 ;;		line 39 in file "i2c.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 1
  2134 ;; This function calls:
  2135 ;;		_I2C_2_Master_Idle
  2136 ;; This function is called by:
  2137 ;;		_color_writetoaddr
  2138 ;;		_color_read_Red
  2139 ;;		_color_read_Green
  2140 ;;		_color_read_Blue
  2141 ;;		_color_read_Clear
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text12
  2146   00490C                     __ptext12:
  2147                           	callstack 0
  2148   00490C                     _I2C_2_Master_Stop:
  2149                           	callstack 27
  2150   00490C                     
  2151                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2152   00490C  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  2153   004910                     
  2154                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2155   004910  010E               	movlb	14	; () banked
  2156   004912  85DA               	bsf	218,2,b	;volatile
  2157   004914                     
  2158                           ; BSR set to: 14
  2159   004914  0012               	return		;funcret
  2160   004916                     __end_of_I2C_2_Master_Stop:
  2161                           	callstack 0
  2162                           
  2163 ;; *************** function _I2C_2_Master_Start *****************
  2164 ;; Defined at:
  2165 ;;		line 27 in file "i2c.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 1
  2186 ;; This function calls:
  2187 ;;		_I2C_2_Master_Idle
  2188 ;; This function is called by:
  2189 ;;		_color_writetoaddr
  2190 ;;		_color_read_Red
  2191 ;;		_color_read_Green
  2192 ;;		_color_read_Blue
  2193 ;;		_color_read_Clear
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text13
  2198   004916                     __ptext13:
  2199                           	callstack 0
  2200   004916                     _I2C_2_Master_Start:
  2201                           	callstack 27
  2202   004916                     
  2203                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2204   004916  EC18  F024         	call	_I2C_2_Master_Idle	;wreg free
  2205   00491A                     
  2206                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2207   00491A  010E               	movlb	14	; () banked
  2208   00491C  81DA               	bsf	218,0,b	;volatile
  2209   00491E                     
  2210                           ; BSR set to: 14
  2211   00491E  0012               	return		;funcret
  2212   004920                     __end_of_I2C_2_Master_Start:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _I2C_2_Master_Idle *****************
  2216 ;; Defined at:
  2217 ;;		line 22 in file "i2c.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_I2C_2_Master_Start
  2241 ;;		_I2C_2_Master_RepStart
  2242 ;;		_I2C_2_Master_Stop
  2243 ;;		_I2C_2_Master_Write
  2244 ;;		_I2C_2_Master_Read
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text14
  2249   004830                     __ptext14:
  2250                           	callstack 0
  2251   004830                     _I2C_2_Master_Idle:
  2252                           	callstack 27
  2253   004830                     l90:
  2254   004830  010E               	movlb	14	; () banked
  2255   004832  B5D8               	btfsc	216,2,b	;volatile
  2256   004834  EF1E  F024         	goto	u4351
  2257   004838  EF20  F024         	goto	u4350
  2258   00483C                     u4351:
  2259   00483C  EF18  F024         	goto	l90
  2260   004840                     u4350:
  2261   004840                     
  2262                           ; BSR set to: 14
  2263   004840  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2264   004844  0E1F               	movlw	31
  2265   004846  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2266   004848  A4D8               	btfss	status,2,c
  2267   00484A  EF29  F024         	goto	u4361
  2268   00484E  EF2B  F024         	goto	u4360
  2269   004852                     u4361:
  2270   004852  EF18  F024         	goto	l90
  2271   004856                     u4360:
  2272   004856                     
  2273                           ; BSR set to: 14
  2274   004856  0012               	return		;funcret
  2275   004858                     __end_of_I2C_2_Master_Idle:
  2276                           	callstack 0
  2277                           
  2278 ;; *************** function _I2C_2_Master_Init *****************
  2279 ;; Defined at:
  2280 ;;		line 4 in file "i2c.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;Total ram usage:        0 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_color_click_init
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text15
  2309   004806                     __ptext15:
  2310                           	callstack 0
  2311   004806                     _I2C_2_Master_Init:
  2312                           	callstack 29
  2313   004806                     
  2314                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2315   004806  010E               	movlb	14	; () banked
  2316   004808  51D9               	movf	217,w,b	;volatile
  2317   00480A  0BF0               	andlw	-16
  2318   00480C  0908               	iorlw	8
  2319   00480E  6FD9               	movwf	217,b	;volatile
  2320   004810                     
  2321                           ; BSR set to: 14
  2322                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2323   004810  8BD9               	bsf	217,5,b	;volatile
  2324                           
  2325                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2326   004812  0E9F               	movlw	159
  2327   004814  6FD6               	movwf	214,b	;volatile
  2328   004816                     
  2329                           ; BSR set to: 14
  2330                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2331   004816  8A84               	bsf	132,5,c	;volatile
  2332   004818                     
  2333                           ; BSR set to: 14
  2334                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2335   004818  8C84               	bsf	132,6,c	;volatile
  2336   00481A                     
  2337                           ; BSR set to: 14
  2338                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2339   00481A  9BA7               	bcf	167,5,b	;volatile
  2340   00481C                     
  2341                           ; BSR set to: 14
  2342                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2343   00481C  9DA7               	bcf	167,6,b	;volatile
  2344                           
  2345                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2346   00481E  0E1D               	movlw	29
  2347   004820  6F1D               	movwf	29,b	;volatile
  2348                           
  2349                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2350   004822  0E1E               	movlw	30
  2351   004824  6F1C               	movwf	28,b	;volatile
  2352                           
  2353                           ;i2c.c: 18:   RD5PPS=0x1C;
  2354   004826  0E1C               	movlw	28
  2355   004828  6F6F               	movwf	111,b	;volatile
  2356                           
  2357                           ;i2c.c: 19:   RD6PPS=0x1B;
  2358   00482A  0E1B               	movlw	27
  2359   00482C  6F70               	movwf	112,b	;volatile
  2360   00482E                     
  2361                           ; BSR set to: 14
  2362   00482E  0012               	return		;funcret
  2363   004830                     __end_of_I2C_2_Master_Init:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _RGB2Hue *****************
  2367 ;; Defined at:
  2368 ;;		line 19 in file "colorfunctions.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  cf              2   28[COMRAM] PTR struct RGBC_rel
  2371 ;;		 -> colorf(12), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  min             2   37[COMRAM] int 
  2374 ;;  max             2   35[COMRAM] int 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2386 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2387 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2388 ;;Total ram usage:       11 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 1
  2391 ;; This function calls:
  2392 ;;		___awdiv
  2393 ;;		___wmul
  2394 ;;		___xxtofl
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text16
  2401   0021BA                     __ptext16:
  2402                           	callstack 0
  2403   0021BA                     _RGB2Hue:
  2404                           	callstack 29
  2405   0021BA                     
  2406                           ;colorfunctions.c: 20:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  2407   0021BA  EE20 F002          	lfsr	2,2
  2408   0021BE  501D               	movf	RGB2Hue@cf^0,w,c
  2409   0021C0  26D9               	addwf	fsr2l,f,c
  2410   0021C2  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2411   0021C4  22DA               	addwfc	fsr2h,f,c
  2412   0021C6  C01D  FFE1         	movff	RGB2Hue@cf,fsr1l
  2413   0021CA  C01E  FFE2         	movff	RGB2Hue@cf+1,fsr1h
  2414   0021CE  50DE               	movf	postinc2,w,c
  2415   0021D0  18E6               	xorwf	postinc1,w,c
  2416   0021D2  E107               	bnz	u4661
  2417   0021D4  50DE               	movf	postinc2,w,c
  2418   0021D6  18E6               	xorwf	postinc1,w,c
  2419   0021D8  A4D8               	btfss	status,2,c
  2420   0021DA  EFF1  F010         	goto	u4661
  2421   0021DE  EFF3  F010         	goto	u4660
  2422   0021E2                     u4661:
  2423   0021E2  EF19  F011         	goto	l4221
  2424   0021E6                     u4660:
  2425   0021E6  EE20 F004          	lfsr	2,4
  2426   0021EA  501D               	movf	RGB2Hue@cf^0,w,c
  2427   0021EC  26D9               	addwf	fsr2l,f,c
  2428   0021EE  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2429   0021F0  22DA               	addwfc	fsr2h,f,c
  2430   0021F2  C01D  FFE1         	movff	RGB2Hue@cf,fsr1l
  2431   0021F6  C01E  FFE2         	movff	RGB2Hue@cf+1,fsr1h
  2432   0021FA  50DE               	movf	postinc2,w,c
  2433   0021FC  18E6               	xorwf	postinc1,w,c
  2434   0021FE  E107               	bnz	u4671
  2435   002200  50DE               	movf	postinc2,w,c
  2436   002202  18E6               	xorwf	postinc1,w,c
  2437   002204  A4D8               	btfss	status,2,c
  2438   002206  EF07  F011         	goto	u4671
  2439   00220A  EF09  F011         	goto	u4670
  2440   00220E                     u4671:
  2441   00220E  EF19  F011         	goto	l4221
  2442   002212                     u4670:
  2443   002212                     
  2444                           ;colorfunctions.c: 21:         cf->h=0;
  2445   002212  EE20 F008          	lfsr	2,8
  2446   002216  501D               	movf	RGB2Hue@cf^0,w,c
  2447   002218  26D9               	addwf	fsr2l,f,c
  2448   00221A  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2449   00221C  22DA               	addwfc	fsr2h,f,c
  2450   00221E  0E00               	movlw	0
  2451   002220  6EDE               	movwf	postinc2,c
  2452   002222  0E00               	movlw	0
  2453   002224  6EDE               	movwf	postinc2,c
  2454   002226  0E00               	movlw	0
  2455   002228  6EDE               	movwf	postinc2,c
  2456   00222A  0E00               	movlw	0
  2457   00222C  6EDD               	movwf	postdec2,c
  2458                           
  2459                           ;colorfunctions.c: 22:     } else{
  2460   00222E  EFF9  F012         	goto	l60
  2461   002232                     l4221:
  2462                           
  2463                           ;colorfunctions.c: 24:         signed int min=0;
  2464   002232  0E00               	movlw	0
  2465   002234  6E27               	movwf	(RGB2Hue@min+1)^0,c
  2466   002236  0E00               	movlw	0
  2467   002238  6E26               	movwf	RGB2Hue@min^0,c
  2468   00223A                     
  2469                           ;colorfunctions.c: 26:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  2470   00223A  EE20 F002          	lfsr	2,2
  2471   00223E  501D               	movf	RGB2Hue@cf^0,w,c
  2472   002240  26D9               	addwf	fsr2l,f,c
  2473   002242  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2474   002244  22DA               	addwfc	fsr2h,f,c
  2475   002246  C01D  FFE1         	movff	RGB2Hue@cf,fsr1l
  2476   00224A  C01E  FFE2         	movff	RGB2Hue@cf+1,fsr1h
  2477   00224E  50DE               	movf	postinc2,w,c
  2478   002250  5CE6               	subwf	postinc1,w,c
  2479   002252  50E6               	movf	postinc1,w,c
  2480   002254  0A80               	xorlw	128
  2481   002256  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2482   002258  50DE               	movf	postinc2,w,c
  2483   00225A  0A80               	xorlw	128
  2484   00225C  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2485   00225E  B0D8               	btfsc	status,0,c
  2486   002260  EF34  F011         	goto	u4681
  2487   002264  EF36  F011         	goto	u4680
  2488   002268                     u4681:
  2489   002268  EF59  F011         	goto	l4229
  2490   00226C                     u4680:
  2491   00226C  EE20 F004          	lfsr	2,4
  2492   002270  501D               	movf	RGB2Hue@cf^0,w,c
  2493   002272  26D9               	addwf	fsr2l,f,c
  2494   002274  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2495   002276  22DA               	addwfc	fsr2h,f,c
  2496   002278  C01D  FFE1         	movff	RGB2Hue@cf,fsr1l
  2497   00227C  C01E  FFE2         	movff	RGB2Hue@cf+1,fsr1h
  2498   002280  50DE               	movf	postinc2,w,c
  2499   002282  5CE6               	subwf	postinc1,w,c
  2500   002284  50E6               	movf	postinc1,w,c
  2501   002286  0A80               	xorlw	128
  2502   002288  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2503   00228A  50DE               	movf	postinc2,w,c
  2504   00228C  0A80               	xorlw	128
  2505   00228E  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2506   002290  B0D8               	btfsc	status,0,c
  2507   002292  EF4D  F011         	goto	u4691
  2508   002296  EF4F  F011         	goto	u4690
  2509   00229A                     u4691:
  2510   00229A  EF59  F011         	goto	l4229
  2511   00229E                     u4690:
  2512   00229E                     
  2513                           ;colorfunctions.c: 27:             min=cf->Rf;
  2514   00229E  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2515   0022A2  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2516   0022A6  CFDE F026          	movff	postinc2,RGB2Hue@min
  2517   0022AA  CFDD F027          	movff	postdec2,RGB2Hue@min+1
  2518                           
  2519                           ;colorfunctions.c: 28:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  2520   0022AE  EFA3  F011         	goto	l4237
  2521   0022B2                     l4229:
  2522   0022B2  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2523   0022B6  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2524   0022BA  EE10 F002          	lfsr	1,2
  2525   0022BE  501D               	movf	RGB2Hue@cf^0,w,c
  2526   0022C0  26E1               	addwf	fsr1l,f,c
  2527   0022C2  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2528   0022C4  22E2               	addwfc	fsr1h,f,c
  2529   0022C6  50DE               	movf	postinc2,w,c
  2530   0022C8  5CE6               	subwf	postinc1,w,c
  2531   0022CA  50E6               	movf	postinc1,w,c
  2532   0022CC  0A80               	xorlw	128
  2533   0022CE  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2534   0022D0  50DE               	movf	postinc2,w,c
  2535   0022D2  0A80               	xorlw	128
  2536   0022D4  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2537   0022D6  B0D8               	btfsc	status,0,c
  2538   0022D8  EF70  F011         	goto	u4701
  2539   0022DC  EF72  F011         	goto	u4700
  2540   0022E0                     u4701:
  2541   0022E0  EF99  F011         	goto	l4235
  2542   0022E4                     u4700:
  2543   0022E4  EE20 F004          	lfsr	2,4
  2544   0022E8  501D               	movf	RGB2Hue@cf^0,w,c
  2545   0022EA  26D9               	addwf	fsr2l,f,c
  2546   0022EC  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2547   0022EE  22DA               	addwfc	fsr2h,f,c
  2548   0022F0  EE10 F002          	lfsr	1,2
  2549   0022F4  501D               	movf	RGB2Hue@cf^0,w,c
  2550   0022F6  26E1               	addwf	fsr1l,f,c
  2551   0022F8  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2552   0022FA  22E2               	addwfc	fsr1h,f,c
  2553   0022FC  50DE               	movf	postinc2,w,c
  2554   0022FE  5CE6               	subwf	postinc1,w,c
  2555   002300  50E6               	movf	postinc1,w,c
  2556   002302  0A80               	xorlw	128
  2557   002304  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2558   002306  50DE               	movf	postinc2,w,c
  2559   002308  0A80               	xorlw	128
  2560   00230A  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2561   00230C  B0D8               	btfsc	status,0,c
  2562   00230E  EF8B  F011         	goto	u4711
  2563   002312  EF8D  F011         	goto	u4710
  2564   002316                     u4711:
  2565   002316  EF99  F011         	goto	l4235
  2566   00231A                     u4710:
  2567   00231A                     
  2568                           ;colorfunctions.c: 29:             min=cf->Gf;
  2569   00231A  EE20 F002          	lfsr	2,2
  2570   00231E  501D               	movf	RGB2Hue@cf^0,w,c
  2571   002320  26D9               	addwf	fsr2l,f,c
  2572   002322  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2573   002324  22DA               	addwfc	fsr2h,f,c
  2574   002326  CFDE F026          	movff	postinc2,RGB2Hue@min
  2575   00232A  CFDD F027          	movff	postdec2,RGB2Hue@min+1
  2576                           
  2577                           ;colorfunctions.c: 30:         } else{
  2578   00232E  EFA3  F011         	goto	l4237
  2579   002332                     l4235:
  2580                           
  2581                           ;colorfunctions.c: 31:             min=cf->Bf;
  2582   002332  EE20 F004          	lfsr	2,4
  2583   002336  501D               	movf	RGB2Hue@cf^0,w,c
  2584   002338  26D9               	addwf	fsr2l,f,c
  2585   00233A  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2586   00233C  22DA               	addwfc	fsr2h,f,c
  2587   00233E  CFDE F026          	movff	postinc2,RGB2Hue@min
  2588   002342  CFDD F027          	movff	postdec2,RGB2Hue@min+1
  2589   002346                     l4237:
  2590                           
  2591                           ;colorfunctions.c: 34:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  2592   002346  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2593   00234A  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2594   00234E  EE10 F002          	lfsr	1,2
  2595   002352  501D               	movf	RGB2Hue@cf^0,w,c
  2596   002354  26E1               	addwf	fsr1l,f,c
  2597   002356  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2598   002358  22E2               	addwfc	fsr1h,f,c
  2599   00235A  50DE               	movf	postinc2,w,c
  2600   00235C  5CE6               	subwf	postinc1,w,c
  2601   00235E  50E6               	movf	postinc1,w,c
  2602   002360  0A80               	xorlw	128
  2603   002362  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2604   002364  50DE               	movf	postinc2,w,c
  2605   002366  0A80               	xorlw	128
  2606   002368  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2607   00236A  B0D8               	btfsc	status,0,c
  2608   00236C  EFBA  F011         	goto	u4721
  2609   002370  EFBC  F011         	goto	u4720
  2610   002374                     u4721:
  2611   002374  EF25  F012         	goto	l4245
  2612   002378                     u4720:
  2613   002378  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2614   00237C  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2615   002380  EE10 F004          	lfsr	1,4
  2616   002384  501D               	movf	RGB2Hue@cf^0,w,c
  2617   002386  26E1               	addwf	fsr1l,f,c
  2618   002388  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2619   00238A  22E2               	addwfc	fsr1h,f,c
  2620   00238C  50DE               	movf	postinc2,w,c
  2621   00238E  5CE6               	subwf	postinc1,w,c
  2622   002390  50E6               	movf	postinc1,w,c
  2623   002392  0A80               	xorlw	128
  2624   002394  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2625   002396  50DE               	movf	postinc2,w,c
  2626   002398  0A80               	xorlw	128
  2627   00239A  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2628   00239C  B0D8               	btfsc	status,0,c
  2629   00239E  EFD3  F011         	goto	u4731
  2630   0023A2  EFD5  F011         	goto	u4730
  2631   0023A6                     u4731:
  2632   0023A6  EF25  F012         	goto	l4245
  2633   0023AA                     u4730:
  2634   0023AA                     
  2635                           ;colorfunctions.c: 35:             max=(cf->Rf);
  2636   0023AA  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2637   0023AE  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2638   0023B2  CFDE F024          	movff	postinc2,RGB2Hue@max
  2639   0023B6  CFDD F025          	movff	postdec2,RGB2Hue@max+1
  2640   0023BA                     
  2641                           ;colorfunctions.c: 38:             (cf->h)=100*(((cf->Gf)-(cf->Bf))/(max-min));
  2642   0023BA  5026               	movf	RGB2Hue@min^0,w,c
  2643   0023BC  5C24               	subwf	RGB2Hue@max^0,w,c
  2644   0023BE  6E03               	movwf	___awdiv@divisor^0,c
  2645   0023C0  5027               	movf	(RGB2Hue@min+1)^0,w,c
  2646   0023C2  5825               	subwfb	(RGB2Hue@max+1)^0,w,c
  2647   0023C4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2648   0023C6  EE20 F004          	lfsr	2,4
  2649   0023CA  501D               	movf	RGB2Hue@cf^0,w,c
  2650   0023CC  26D9               	addwf	fsr2l,f,c
  2651   0023CE  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2652   0023D0  22DA               	addwfc	fsr2h,f,c
  2653   0023D2  CFDE F01F          	movff	postinc2,??_RGB2Hue
  2654   0023D6  CFDD F020          	movff	postdec2,??_RGB2Hue+1
  2655   0023DA  EE20 F002          	lfsr	2,2
  2656   0023DE  501D               	movf	RGB2Hue@cf^0,w,c
  2657   0023E0  26D9               	addwf	fsr2l,f,c
  2658   0023E2  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2659   0023E4  22DA               	addwfc	fsr2h,f,c
  2660   0023E6  CFDE F021          	movff	postinc2,??_RGB2Hue+2
  2661   0023EA  CFDD F022          	movff	postdec2,??_RGB2Hue+3
  2662   0023EE  501F               	movf	??_RGB2Hue^0,w,c
  2663   0023F0  5C21               	subwf	(??_RGB2Hue+2)^0,w,c
  2664   0023F2  6E01               	movwf	___awdiv@dividend^0,c
  2665   0023F4  5020               	movf	(??_RGB2Hue+1)^0,w,c
  2666   0023F6  5822               	subwfb	(??_RGB2Hue+3)^0,w,c
  2667   0023F8  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2668   0023FA  EC40  F020         	call	___awdiv	;wreg free
  2669   0023FE  C001  F009         	movff	?___awdiv,___wmul@multiplier
  2670   002402  C002  F00A         	movff	?___awdiv+1,___wmul@multiplier+1
  2671   002406  0E00               	movlw	0
  2672   002408  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  2673   00240A  0E64               	movlw	100
  2674   00240C  6E0B               	movwf	___wmul@multiplicand^0,c
  2675   00240E  EC2C  F024         	call	___wmul	;wreg free
  2676   002412  C009  F00F         	movff	?___wmul,___xxtofl@val
  2677   002416  C00A  F010         	movff	?___wmul+1,___xxtofl@val+1
  2678   00241A  0E00               	movlw	0
  2679   00241C  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  2680   00241E  0EFF               	movlw	-1
  2681   002420  6E11               	movwf	(___xxtofl@val+2)^0,c
  2682   002422  6E12               	movwf	(___xxtofl@val+3)^0,c
  2683   002424  0E01               	movlw	1
  2684   002426  ECB0  F01A         	call	___xxtofl
  2685   00242A  EE20 F008          	lfsr	2,8
  2686   00242E  501D               	movf	RGB2Hue@cf^0,w,c
  2687   002430  26D9               	addwf	fsr2l,f,c
  2688   002432  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2689   002434  22DA               	addwfc	fsr2h,f,c
  2690   002436  C00F  FFDE         	movff	?___xxtofl,postinc2
  2691   00243A  C010  FFDE         	movff	?___xxtofl+1,postinc2
  2692   00243E  C011  FFDE         	movff	?___xxtofl+2,postinc2
  2693   002442  C012  FFDE         	movff	?___xxtofl+3,postinc2
  2694                           
  2695                           ;colorfunctions.c: 39:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  2696   002446  EFF9  F012         	goto	l60
  2697   00244A                     l4245:
  2698   00244A  EE20 F002          	lfsr	2,2
  2699   00244E  501D               	movf	RGB2Hue@cf^0,w,c
  2700   002450  26D9               	addwf	fsr2l,f,c
  2701   002452  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2702   002454  22DA               	addwfc	fsr2h,f,c
  2703   002456  C01D  FFE1         	movff	RGB2Hue@cf,fsr1l
  2704   00245A  C01E  FFE2         	movff	RGB2Hue@cf+1,fsr1h
  2705   00245E  50DE               	movf	postinc2,w,c
  2706   002460  5CE6               	subwf	postinc1,w,c
  2707   002462  50E6               	movf	postinc1,w,c
  2708   002464  0A80               	xorlw	128
  2709   002466  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2710   002468  50DE               	movf	postinc2,w,c
  2711   00246A  0A80               	xorlw	128
  2712   00246C  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2713   00246E  B0D8               	btfsc	status,0,c
  2714   002470  EF3C  F012         	goto	u4741
  2715   002474  EF3E  F012         	goto	u4740
  2716   002478                     u4741:
  2717   002478  EFA9  F012         	goto	l4253
  2718   00247C                     u4740:
  2719   00247C  EE20 F002          	lfsr	2,2
  2720   002480  501D               	movf	RGB2Hue@cf^0,w,c
  2721   002482  26D9               	addwf	fsr2l,f,c
  2722   002484  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2723   002486  22DA               	addwfc	fsr2h,f,c
  2724   002488  EE10 F004          	lfsr	1,4
  2725   00248C  501D               	movf	RGB2Hue@cf^0,w,c
  2726   00248E  26E1               	addwf	fsr1l,f,c
  2727   002490  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2728   002492  22E2               	addwfc	fsr1h,f,c
  2729   002494  50DE               	movf	postinc2,w,c
  2730   002496  5CE6               	subwf	postinc1,w,c
  2731   002498  50E6               	movf	postinc1,w,c
  2732   00249A  0A80               	xorlw	128
  2733   00249C  6E23               	movwf	(??_RGB2Hue+4)^0,c
  2734   00249E  50DE               	movf	postinc2,w,c
  2735   0024A0  0A80               	xorlw	128
  2736   0024A2  5823               	subwfb	(??_RGB2Hue+4)^0,w,c
  2737   0024A4  B0D8               	btfsc	status,0,c
  2738   0024A6  EF57  F012         	goto	u4751
  2739   0024AA  EF59  F012         	goto	u4750
  2740   0024AE                     u4751:
  2741   0024AE  EFA9  F012         	goto	l4253
  2742   0024B2                     u4750:
  2743   0024B2                     
  2744                           ;colorfunctions.c: 40:             max=cf->Gf;
  2745   0024B2  EE20 F002          	lfsr	2,2
  2746   0024B6  501D               	movf	RGB2Hue@cf^0,w,c
  2747   0024B8  26D9               	addwf	fsr2l,f,c
  2748   0024BA  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2749   0024BC  22DA               	addwfc	fsr2h,f,c
  2750   0024BE  CFDE F024          	movff	postinc2,RGB2Hue@max
  2751   0024C2  CFDD F025          	movff	postdec2,RGB2Hue@max+1
  2752   0024C6                     
  2753                           ;colorfunctions.c: 41:             cf->h=100*(((cf->Bf)-(cf->Rf))/(max-min));
  2754   0024C6  5026               	movf	RGB2Hue@min^0,w,c
  2755   0024C8  5C24               	subwf	RGB2Hue@max^0,w,c
  2756   0024CA  6E03               	movwf	___awdiv@divisor^0,c
  2757   0024CC  5027               	movf	(RGB2Hue@min+1)^0,w,c
  2758   0024CE  5825               	subwfb	(RGB2Hue@max+1)^0,w,c
  2759   0024D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2760   0024D2  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2761   0024D6  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2762   0024DA  CFDE F01F          	movff	postinc2,??_RGB2Hue
  2763   0024DE  CFDD F020          	movff	postdec2,??_RGB2Hue+1
  2764   0024E2  EE20 F004          	lfsr	2,4
  2765   0024E6  501D               	movf	RGB2Hue@cf^0,w,c
  2766   0024E8  26D9               	addwf	fsr2l,f,c
  2767   0024EA  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2768   0024EC  22DA               	addwfc	fsr2h,f,c
  2769   0024EE  CFDE F021          	movff	postinc2,??_RGB2Hue+2
  2770   0024F2  CFDD F022          	movff	postdec2,??_RGB2Hue+3
  2771   0024F6  501F               	movf	??_RGB2Hue^0,w,c
  2772   0024F8  5C21               	subwf	(??_RGB2Hue+2)^0,w,c
  2773   0024FA  6E01               	movwf	___awdiv@dividend^0,c
  2774   0024FC  5020               	movf	(??_RGB2Hue+1)^0,w,c
  2775   0024FE  5822               	subwfb	(??_RGB2Hue+3)^0,w,c
  2776   002500  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2777   002502  EC40  F020         	call	___awdiv	;wreg free
  2778   002506  C001  F009         	movff	?___awdiv,___wmul@multiplier
  2779   00250A  C002  F00A         	movff	?___awdiv+1,___wmul@multiplier+1
  2780   00250E  0E00               	movlw	0
  2781   002510  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  2782   002512  0E64               	movlw	100
  2783   002514  6E0B               	movwf	___wmul@multiplicand^0,c
  2784   002516  EC2C  F024         	call	___wmul	;wreg free
  2785   00251A  C009  F00F         	movff	?___wmul,___xxtofl@val
  2786   00251E  C00A  F010         	movff	?___wmul+1,___xxtofl@val+1
  2787   002522  0E00               	movlw	0
  2788   002524  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  2789   002526  0EFF               	movlw	-1
  2790   002528  6E11               	movwf	(___xxtofl@val+2)^0,c
  2791   00252A  6E12               	movwf	(___xxtofl@val+3)^0,c
  2792   00252C  0E01               	movlw	1
  2793   00252E  ECB0  F01A         	call	___xxtofl
  2794   002532  EE20 F008          	lfsr	2,8
  2795   002536  501D               	movf	RGB2Hue@cf^0,w,c
  2796   002538  26D9               	addwf	fsr2l,f,c
  2797   00253A  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2798   00253C  22DA               	addwfc	fsr2h,f,c
  2799   00253E  C00F  FFDE         	movff	?___xxtofl,postinc2
  2800   002542  C010  FFDE         	movff	?___xxtofl+1,postinc2
  2801   002546  C011  FFDE         	movff	?___xxtofl+2,postinc2
  2802   00254A  C012  FFDE         	movff	?___xxtofl+3,postinc2
  2803                           
  2804                           ;colorfunctions.c: 42:         }else{
  2805   00254E  EFF9  F012         	goto	l60
  2806   002552                     l4253:
  2807                           
  2808                           ;colorfunctions.c: 43:             max=cf->Bf;
  2809   002552  EE20 F004          	lfsr	2,4
  2810   002556  501D               	movf	RGB2Hue@cf^0,w,c
  2811   002558  26D9               	addwf	fsr2l,f,c
  2812   00255A  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2813   00255C  22DA               	addwfc	fsr2h,f,c
  2814   00255E  CFDE F024          	movff	postinc2,RGB2Hue@max
  2815   002562  CFDD F025          	movff	postdec2,RGB2Hue@max+1
  2816   002566                     
  2817                           ;colorfunctions.c: 44:             cf->h=100*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  2818   002566  5026               	movf	RGB2Hue@min^0,w,c
  2819   002568  5C24               	subwf	RGB2Hue@max^0,w,c
  2820   00256A  6E03               	movwf	___awdiv@divisor^0,c
  2821   00256C  5027               	movf	(RGB2Hue@min+1)^0,w,c
  2822   00256E  5825               	subwfb	(RGB2Hue@max+1)^0,w,c
  2823   002570  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2824   002572  EE20 F002          	lfsr	2,2
  2825   002576  501D               	movf	RGB2Hue@cf^0,w,c
  2826   002578  26D9               	addwf	fsr2l,f,c
  2827   00257A  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2828   00257C  22DA               	addwfc	fsr2h,f,c
  2829   00257E  CFDE F01F          	movff	postinc2,??_RGB2Hue
  2830   002582  CFDD F020          	movff	postdec2,??_RGB2Hue+1
  2831   002586  C01D  FFD9         	movff	RGB2Hue@cf,fsr2l
  2832   00258A  C01E  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  2833   00258E  CFDE F021          	movff	postinc2,??_RGB2Hue+2
  2834   002592  CFDD F022          	movff	postdec2,??_RGB2Hue+3
  2835   002596  501F               	movf	??_RGB2Hue^0,w,c
  2836   002598  5C21               	subwf	(??_RGB2Hue+2)^0,w,c
  2837   00259A  6E01               	movwf	___awdiv@dividend^0,c
  2838   00259C  5020               	movf	(??_RGB2Hue+1)^0,w,c
  2839   00259E  5822               	subwfb	(??_RGB2Hue+3)^0,w,c
  2840   0025A0  6E02               	movwf	(___awdiv@dividend+1)^0,c
  2841   0025A2  EC40  F020         	call	___awdiv	;wreg free
  2842   0025A6  0E04               	movlw	4
  2843   0025A8  2401               	addwf	?___awdiv^0,w,c
  2844   0025AA  6E09               	movwf	___wmul@multiplier^0,c
  2845   0025AC  0E00               	movlw	0
  2846   0025AE  2002               	addwfc	(?___awdiv+1)^0,w,c
  2847   0025B0  6E0A               	movwf	(___wmul@multiplier+1)^0,c
  2848   0025B2  0E00               	movlw	0
  2849   0025B4  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  2850   0025B6  0E64               	movlw	100
  2851   0025B8  6E0B               	movwf	___wmul@multiplicand^0,c
  2852   0025BA  EC2C  F024         	call	___wmul	;wreg free
  2853   0025BE  C009  F00F         	movff	?___wmul,___xxtofl@val
  2854   0025C2  C00A  F010         	movff	?___wmul+1,___xxtofl@val+1
  2855   0025C6  0E00               	movlw	0
  2856   0025C8  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  2857   0025CA  0EFF               	movlw	-1
  2858   0025CC  6E11               	movwf	(___xxtofl@val+2)^0,c
  2859   0025CE  6E12               	movwf	(___xxtofl@val+3)^0,c
  2860   0025D0  0E01               	movlw	1
  2861   0025D2  ECB0  F01A         	call	___xxtofl
  2862   0025D6  EE20 F008          	lfsr	2,8
  2863   0025DA  501D               	movf	RGB2Hue@cf^0,w,c
  2864   0025DC  26D9               	addwf	fsr2l,f,c
  2865   0025DE  501E               	movf	(RGB2Hue@cf+1)^0,w,c
  2866   0025E0  22DA               	addwfc	fsr2h,f,c
  2867   0025E2  C00F  FFDE         	movff	?___xxtofl,postinc2
  2868   0025E6  C010  FFDE         	movff	?___xxtofl+1,postinc2
  2869   0025EA  C011  FFDE         	movff	?___xxtofl+2,postinc2
  2870   0025EE  C012  FFDE         	movff	?___xxtofl+3,postinc2
  2871   0025F2                     l60:
  2872   0025F2  0012               	return		;funcret
  2873   0025F4                     __end_of_RGB2Hue:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function ___awdiv *****************
  2877 ;; Defined at:
  2878 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  dividend        2    0[COMRAM] int 
  2881 ;;  divisor         2    2[COMRAM] int 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  quotient        2    6[COMRAM] int 
  2884 ;;  sign            1    5[COMRAM] unsigned char 
  2885 ;;  counter         1    4[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    0[COMRAM] int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2898 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2899 ;;Total ram usage:        8 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_RGB2Hue
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text17
  2909   004080                     __ptext17:
  2910                           	callstack 0
  2911   004080                     ___awdiv:
  2912                           	callstack 29
  2913   004080  0E00               	movlw	0
  2914   004082  6E06               	movwf	___awdiv@sign^0,c
  2915   004084  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2916   004086  EF49  F020         	goto	u4500
  2917   00408A  EF47  F020         	goto	u4501
  2918   00408E                     u4501:
  2919   00408E  EF4F  F020         	goto	l4111
  2920   004092                     u4500:
  2921   004092  6C03               	negf	___awdiv@divisor^0,c
  2922   004094  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2923   004096  B0D8               	btfsc	status,0,c
  2924   004098  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2925   00409A  0E01               	movlw	1
  2926   00409C  6E06               	movwf	___awdiv@sign^0,c
  2927   00409E                     l4111:
  2928   00409E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2929   0040A0  EF56  F020         	goto	u4510
  2930   0040A4  EF54  F020         	goto	u4511
  2931   0040A8                     u4511:
  2932   0040A8  EF5C  F020         	goto	l4117
  2933   0040AC                     u4510:
  2934   0040AC  6C01               	negf	___awdiv@dividend^0,c
  2935   0040AE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2936   0040B0  B0D8               	btfsc	status,0,c
  2937   0040B2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2938   0040B4  0E01               	movlw	1
  2939   0040B6  1A06               	xorwf	___awdiv@sign^0,f,c
  2940   0040B8                     l4117:
  2941   0040B8  0E00               	movlw	0
  2942   0040BA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2943   0040BC  0E00               	movlw	0
  2944   0040BE  6E07               	movwf	___awdiv@quotient^0,c
  2945   0040C0  5003               	movf	___awdiv@divisor^0,w,c
  2946   0040C2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2947   0040C4  B4D8               	btfsc	status,2,c
  2948   0040C6  EF67  F020         	goto	u4521
  2949   0040CA  EF69  F020         	goto	u4520
  2950   0040CE                     u4521:
  2951   0040CE  EF91  F020         	goto	l4139
  2952   0040D2                     u4520:
  2953   0040D2  0E01               	movlw	1
  2954   0040D4  6E05               	movwf	___awdiv@counter^0,c
  2955   0040D6  EF71  F020         	goto	l4125
  2956   0040DA                     l4123:
  2957   0040DA  90D8               	bcf	status,0,c
  2958   0040DC  3603               	rlcf	___awdiv@divisor^0,f,c
  2959   0040DE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2960   0040E0  2A05               	incf	___awdiv@counter^0,f,c
  2961   0040E2                     l4125:
  2962   0040E2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2963   0040E4  EF76  F020         	goto	u4531
  2964   0040E8  EF78  F020         	goto	u4530
  2965   0040EC                     u4531:
  2966   0040EC  EF6D  F020         	goto	l4123
  2967   0040F0                     u4530:
  2968   0040F0                     l4127:
  2969   0040F0  90D8               	bcf	status,0,c
  2970   0040F2  3607               	rlcf	___awdiv@quotient^0,f,c
  2971   0040F4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2972   0040F6  5003               	movf	___awdiv@divisor^0,w,c
  2973   0040F8  5C01               	subwf	___awdiv@dividend^0,w,c
  2974   0040FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2975   0040FC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2976   0040FE  A0D8               	btfss	status,0,c
  2977   004100  EF84  F020         	goto	u4541
  2978   004104  EF86  F020         	goto	u4540
  2979   004108                     u4541:
  2980   004108  EF8B  F020         	goto	l4135
  2981   00410C                     u4540:
  2982   00410C  5003               	movf	___awdiv@divisor^0,w,c
  2983   00410E  5E01               	subwf	___awdiv@dividend^0,f,c
  2984   004110  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2985   004112  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2986   004114  8007               	bsf	___awdiv@quotient^0,0,c
  2987   004116                     l4135:
  2988   004116  90D8               	bcf	status,0,c
  2989   004118  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2990   00411A  3203               	rrcf	___awdiv@divisor^0,f,c
  2991   00411C  2E05               	decfsz	___awdiv@counter^0,f,c
  2992   00411E  EF78  F020         	goto	l4127
  2993   004122                     l4139:
  2994   004122  5006               	movf	___awdiv@sign^0,w,c
  2995   004124  B4D8               	btfsc	status,2,c
  2996   004126  EF97  F020         	goto	u4551
  2997   00412A  EF99  F020         	goto	u4550
  2998   00412E                     u4551:
  2999   00412E  EF9D  F020         	goto	l4143
  3000   004132                     u4550:
  3001   004132  6C07               	negf	___awdiv@quotient^0,c
  3002   004134  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3003   004136  B0D8               	btfsc	status,0,c
  3004   004138  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3005   00413A                     l4143:
  3006   00413A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3007   00413E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3008   004142  0012               	return		;funcret
  3009   004144                     __end_of___awdiv:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _Color2String *****************
  3013 ;; Defined at:
  3014 ;;		line 38 in file "serial.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  buf             2  103[BANK0 ] PTR unsigned char 
  3017 ;;		 -> main@data(60), 
  3018 ;;  cf              2  105[BANK0 ] PTR struct RGBC_rel
  3019 ;;		 -> colorf(12), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  int_part        2  109[BANK0 ] int 
  3022 ;;  frac_part       2  107[BANK0 ] int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3035 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;Total ram usage:        8 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 8
  3039 ;; This function calls:
  3040 ;;		___flmul
  3041 ;;		___flsub
  3042 ;;		___fltol
  3043 ;;		___wmul
  3044 ;;		___xxtofl
  3045 ;;		_sendStringSerial4
  3046 ;;		_sprintf
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text18
  3053   003B5E                     __ptext18:
  3054                           	callstack 0
  3055   003B5E                     _Color2String:
  3056                           	callstack 22
  3057   003B5E                     
  3058                           ;serial.c: 40:     int int_part= (cf->h);
  3059   003B5E  0100               	movlb	0	; () banked
  3060   003B60  EE20 F008          	lfsr	2,8
  3061   003B64  51C9               	movf	Color2String@cf& (0+255),w,b
  3062   003B66  26D9               	addwf	fsr2l,f,c
  3063   003B68  51CA               	movf	(Color2String@cf+1)& (0+255),w,b
  3064   003B6A  22DA               	addwfc	fsr2h,f,c
  3065   003B6C  CFDE F04B          	movff	postinc2,___fltol@f1
  3066   003B70  CFDE F04C          	movff	postinc2,___fltol@f1+1
  3067   003B74  CFDE F04D          	movff	postinc2,___fltol@f1+2
  3068   003B78  CFDE F04E          	movff	postinc2,___fltol@f1+3
  3069   003B7C  EC57  F01E         	call	___fltol	;wreg free
  3070   003B80  C04B  F0CD         	movff	?___fltol,Color2String@int_part
  3071   003B84  C04C  F0CE         	movff	?___fltol+1,Color2String@int_part+1
  3072   003B88                     
  3073                           ;serial.c: 41:     int frac_part= ((cf->h)*100) - (int_part*100);
  3074   003B88  0E00               	movlw	0
  3075   003B8A  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  3076   003B8C  0E64               	movlw	100
  3077   003B8E  6E0B               	movwf	___wmul@multiplicand^0,c
  3078   003B90  C0CD  F009         	movff	Color2String@int_part,___wmul@multiplier
  3079   003B94  C0CE  F00A         	movff	Color2String@int_part+1,___wmul@multiplier+1
  3080   003B98  EC2C  F024         	call	___wmul	;wreg free
  3081   003B9C  C009  F00F         	movff	?___wmul,___xxtofl@val
  3082   003BA0  C00A  F010         	movff	?___wmul+1,___xxtofl@val+1
  3083   003BA4  0E00               	movlw	0
  3084   003BA6  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  3085   003BA8  0EFF               	movlw	-1
  3086   003BAA  6E11               	movwf	(___xxtofl@val+2)^0,c
  3087   003BAC  6E12               	movwf	(___xxtofl@val+3)^0,c
  3088   003BAE  0E01               	movlw	1
  3089   003BB0  ECB0  F01A         	call	___xxtofl
  3090   003BB4  C00F  F047         	movff	?___xxtofl,___flsub@a
  3091   003BB8  C010  F048         	movff	?___xxtofl+1,___flsub@a+1
  3092   003BBC  C011  F049         	movff	?___xxtofl+2,___flsub@a+2
  3093   003BC0  C012  F04A         	movff	?___xxtofl+3,___flsub@a+3
  3094   003BC4  0E00               	movlw	0
  3095   003BC6  6E2E               	movwf	___flmul@a^0,c
  3096   003BC8  0E00               	movlw	0
  3097   003BCA  6E2F               	movwf	(___flmul@a+1)^0,c
  3098   003BCC  0EC8               	movlw	200
  3099   003BCE  6E30               	movwf	(___flmul@a+2)^0,c
  3100   003BD0  0E42               	movlw	66
  3101   003BD2  6E31               	movwf	(___flmul@a+3)^0,c
  3102   003BD4  0100               	movlb	0	; () banked
  3103   003BD6  EE20 F008          	lfsr	2,8
  3104   003BDA  51C9               	movf	Color2String@cf& (0+255),w,b
  3105   003BDC  26D9               	addwf	fsr2l,f,c
  3106   003BDE  51CA               	movf	(Color2String@cf+1)& (0+255),w,b
  3107   003BE0  22DA               	addwfc	fsr2h,f,c
  3108   003BE2  CFDE F02A          	movff	postinc2,___flmul@b
  3109   003BE6  CFDE F02B          	movff	postinc2,___flmul@b+1
  3110   003BEA  CFDE F02C          	movff	postinc2,___flmul@b+2
  3111   003BEE  CFDE F02D          	movff	postinc2,___flmul@b+3
  3112   003BF2  ECFA  F012         	call	___flmul	;wreg free
  3113   003BF6  C02A  F043         	movff	?___flmul,___flsub@b
  3114   003BFA  C02B  F044         	movff	?___flmul+1,___flsub@b+1
  3115   003BFE  C02C  F045         	movff	?___flmul+2,___flsub@b+2
  3116   003C02  C02D  F046         	movff	?___flmul+3,___flsub@b+3
  3117   003C06  ECCB  F022         	call	___flsub	;wreg free
  3118   003C0A  C043  F04B         	movff	?___flsub,___fltol@f1
  3119   003C0E  C044  F04C         	movff	?___flsub+1,___fltol@f1+1
  3120   003C12  C045  F04D         	movff	?___flsub+2,___fltol@f1+2
  3121   003C16  C046  F04E         	movff	?___flsub+3,___fltol@f1+3
  3122   003C1A  EC57  F01E         	call	___fltol	;wreg free
  3123   003C1E  C04B  F0CB         	movff	?___fltol,Color2String@frac_part
  3124   003C22  C04C  F0CC         	movff	?___fltol+1,Color2String@frac_part+1
  3125   003C26                     
  3126                           ;serial.c: 43:     sprintf(buf,"Red %d Green,%d Blue,%d Hue %d.%03d %f \r",cf->Rf,
  3127   003C26  C0C7  F0A8         	movff	Color2String@buf,sprintf@s
  3128   003C2A  C0C8  F0A9         	movff	Color2String@buf+1,sprintf@s+1
  3129   003C2E  0E01               	movlw	low STR_1
  3130   003C30  0100               	movlb	0	; () banked
  3131   003C32  6FAA               	movwf	sprintf@fmt& (0+255),b
  3132   003C34  0E0E               	movlw	high STR_1
  3133   003C36  6FAB               	movwf	(sprintf@fmt+1)& (0+255),b
  3134   003C38  C0C9  FFD9         	movff	Color2String@cf,fsr2l
  3135   003C3C  C0CA  FFDA         	movff	Color2String@cf+1,fsr2h
  3136   003C40  CFDE F0AC          	movff	postinc2,?_sprintf+4
  3137   003C44  CFDD F0AD          	movff	postdec2,?_sprintf+5
  3138   003C48  EE20 F002          	lfsr	2,2
  3139   003C4C  51C9               	movf	Color2String@cf& (0+255),w,b
  3140   003C4E  26D9               	addwf	fsr2l,f,c
  3141   003C50  51CA               	movf	(Color2String@cf+1)& (0+255),w,b
  3142   003C52  22DA               	addwfc	fsr2h,f,c
  3143   003C54  CFDE F0AE          	movff	postinc2,?_sprintf+6
  3144   003C58  CFDD F0AF          	movff	postdec2,?_sprintf+7
  3145   003C5C  EE20 F004          	lfsr	2,4
  3146   003C60  51C9               	movf	Color2String@cf& (0+255),w,b
  3147   003C62  26D9               	addwf	fsr2l,f,c
  3148   003C64  51CA               	movf	(Color2String@cf+1)& (0+255),w,b
  3149   003C66  22DA               	addwfc	fsr2h,f,c
  3150   003C68  CFDE F0B0          	movff	postinc2,?_sprintf+8
  3151   003C6C  CFDD F0B1          	movff	postdec2,?_sprintf+9
  3152   003C70  C0CD  F0B2         	movff	Color2String@int_part,?_sprintf+10
  3153   003C74  C0CE  F0B3         	movff	Color2String@int_part+1,?_sprintf+11
  3154   003C78  C0CB  F0B4         	movff	Color2String@frac_part,?_sprintf+12
  3155   003C7C  C0CC  F0B5         	movff	Color2String@frac_part+1,?_sprintf+13
  3156   003C80  EE20 F008          	lfsr	2,8
  3157   003C84  51C9               	movf	Color2String@cf& (0+255),w,b
  3158   003C86  26D9               	addwf	fsr2l,f,c
  3159   003C88  51CA               	movf	(Color2String@cf+1)& (0+255),w,b
  3160   003C8A  22DA               	addwfc	fsr2h,f,c
  3161   003C8C  CFDE F0B6          	movff	postinc2,?_sprintf+14
  3162   003C90  CFDE F0B7          	movff	postinc2,?_sprintf+15
  3163   003C94  CFDE F0B8          	movff	postinc2,?_sprintf+16
  3164   003C98  CFDE F0B9          	movff	postinc2,?_sprintf+17
  3165   003C9C  ECDA  F021         	call	_sprintf	;wreg free
  3166   003CA0                     
  3167                           ;serial.c: 45:     sendStringSerial4(buf);
  3168   003CA0  C0C7  F002         	movff	Color2String@buf,sendStringSerial4@string
  3169   003CA4  C0C8  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  3170   003CA8  ECD1  F023         	call	_sendStringSerial4	;wreg free
  3171   003CAC  0012               	return		;funcret
  3172   003CAE                     __end_of_Color2String:
  3173                           	callstack 0
  3174                           
  3175 ;; *************** function _sprintf *****************
  3176 ;; Defined at:
  3177 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  s               2   72[BANK0 ] PTR unsigned char 
  3180 ;;		 -> main@data(60), 
  3181 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  3182 ;;		 -> STR_1(41), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  f              11   92[BANK0 ] struct _IO_FILE
  3185 ;;  ap              2   90[BANK0 ] PTR void [1]
  3186 ;;		 -> ?_sprintf(2), 
  3187 ;;  ret             2    0        int 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  2   72[BANK0 ] int 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3197 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;Total ram usage:       31 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 7
  3204 ;; This function calls:
  3205 ;;		_vfprintf
  3206 ;; This function is called by:
  3207 ;;		_Color2String
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text19
  3212   0043B4                     __ptext19:
  3213                           	callstack 0
  3214   0043B4                     _sprintf:
  3215                           	callstack 22
  3216   0043B4  0EAC               	movlw	low (?_sprintf+4)
  3217   0043B6  0100               	movlb	0	; () banked
  3218   0043B8  6FBA               	movwf	sprintf@ap& (0+255),b
  3219   0043BA  0E00               	movlw	high (?_sprintf+4)
  3220   0043BC  6FBB               	movwf	(sprintf@ap+1)& (0+255),b
  3221   0043BE  C0A8  F0BC         	movff	sprintf@s,sprintf@f
  3222   0043C2  C0A9  F0BD         	movff	sprintf@s+1,sprintf@f+1
  3223   0043C6                     
  3224                           ; BSR set to: 0
  3225   0043C6  0E00               	movlw	0
  3226   0043C8  6FC0               	movwf	(sprintf@f+4)& (0+255),b
  3227   0043CA  0E00               	movlw	0
  3228   0043CC  6FBF               	movwf	(sprintf@f+3)& (0+255),b
  3229   0043CE                     
  3230                           ; BSR set to: 0
  3231   0043CE  0E00               	movlw	0
  3232   0043D0  6FC6               	movwf	(sprintf@f+10)& (0+255),b
  3233   0043D2  0E00               	movlw	0
  3234   0043D4  6FC5               	movwf	(sprintf@f+9)& (0+255),b
  3235   0043D6                     
  3236                           ; BSR set to: 0
  3237   0043D6  0EBC               	movlw	low sprintf@f
  3238   0043D8  6FA2               	movwf	vfprintf@fp& (0+255),b
  3239   0043DA  0E00               	movlw	high sprintf@f
  3240   0043DC  6FA3               	movwf	(vfprintf@fp+1)& (0+255),b
  3241   0043DE  C0AA  F0A4         	movff	sprintf@fmt,vfprintf@fmt
  3242   0043E2  C0AB  F0A5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3243   0043E6  0EBA               	movlw	low sprintf@ap
  3244   0043E8  6FA6               	movwf	vfprintf@ap& (0+255),b
  3245   0043EA  0E00               	movlw	high sprintf@ap
  3246   0043EC  6FA7               	movwf	(vfprintf@ap+1)& (0+255),b
  3247   0043EE  ECAF  F021         	call	_vfprintf	;wreg free
  3248   0043F2  0100               	movlb	0	; () banked
  3249   0043F4  51BF               	movf	(sprintf@f+3)& (0+255),w,b
  3250   0043F6  25A8               	addwf	sprintf@s& (0+255),w,b
  3251   0043F8  6ED9               	movwf	fsr2l,c
  3252   0043FA  51C0               	movf	(sprintf@f+4)& (0+255),w,b
  3253   0043FC  21A9               	addwfc	(sprintf@s+1)& (0+255),w,b
  3254   0043FE  6EDA               	movwf	fsr2h,c
  3255   004400  0E00               	movlw	0
  3256   004402  6EDF               	movwf	indf2,c
  3257   004404                     
  3258                           ; BSR set to: 0
  3259   004404  0012               	return		;funcret
  3260   004406                     __end_of_sprintf:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _vfprintf *****************
  3264 ;; Defined at:
  3265 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  fp              2   66[BANK0 ] PTR struct _IO_FILE
  3268 ;;		 -> sprintf@f(11), 
  3269 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  3270 ;;		 -> STR_1(41), 
  3271 ;;  ap              2   70[BANK0 ] PTR PTR void 
  3272 ;;		 -> sprintf@ap(2), 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3275 ;;		 -> STR_1(41), 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2   66[BANK0 ] int 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3285 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;Total ram usage:        8 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 6
  3292 ;; This function calls:
  3293 ;;		_vfpfcnvrt
  3294 ;; This function is called by:
  3295 ;;		_sprintf
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text20
  3300   00435E                     __ptext20:
  3301                           	callstack 0
  3302   00435E                     _vfprintf:
  3303                           	callstack 22
  3304   00435E                     
  3305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3306   00435E  C0A4  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  3307   004362  C0A5  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3308                           
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3310   004366  EFC4  F021         	goto	l4037
  3311   00436A                     l4035:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3314   00436A  C0A2  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3315   00436E  C0A3  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3316   004372  0E5E               	movlw	low vfprintf@cfmt
  3317   004374  0100               	movlb	0	; () banked
  3318   004376  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  3319   004378  0E00               	movlw	high vfprintf@cfmt
  3320   00437A  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3321   00437C  C0A6  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  3322   004380  C0A7  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3323   004384  ECAC  F00E         	call	_vfpfcnvrt	;wreg free
  3324   004388                     l4037:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3327   004388  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3328   00438C  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3329   004390                     	if	0	;tblptru may be non-zero
  3330   004390                     	endif
  3331   004390                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3332   004390  0E00               	movlw	low (__mediumconst shr (0+16))
  3333   004392  6EF8               	movwf	tblptru,c
  3334   004394                     	endif
  3335   004394  0008               	tblrd		*
  3336   004396  50F5               	movf	tablat,w,c
  3337   004398  0900               	iorlw	0
  3338   00439A  A4D8               	btfss	status,2,c
  3339   00439C  EFD2  F021         	goto	u4481
  3340   0043A0  EFD4  F021         	goto	u4480
  3341   0043A4                     u4481:
  3342   0043A4  EFB5  F021         	goto	l4035
  3343   0043A8                     u4480:
  3344   0043A8                     
  3345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3346   0043A8  0E00               	movlw	0
  3347   0043AA  0100               	movlb	0	; () banked
  3348   0043AC  6FA3               	movwf	(?_vfprintf+1)& (0+255),b
  3349   0043AE  0E00               	movlw	0
  3350   0043B0  6FA2               	movwf	?_vfprintf& (0+255),b
  3351   0043B2                     
  3352                           ; BSR set to: 0
  3353   0043B2  0012               	return		;funcret
  3354   0043B4                     __end_of_vfprintf:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _vfpfcnvrt *****************
  3358 ;; Defined at:
  3359 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  3362 ;;		 -> sprintf@f(11), 
  3363 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  3364 ;;		 -> vfprintf@cfmt(2), 
  3365 ;;  ap              2   48[BANK0 ] PTR PTR void 
  3366 ;;		 -> sprintf@ap(2), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  convarg         8   55[BANK0 ] struct .
  3369 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  3370 ;;		 -> STR_1(41), 
  3371 ;;  done            2   53[BANK0 ] int 
  3372 ;;  i               2    0        int 
  3373 ;;  c               1   63[BANK0 ] unsigned char 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;Total ram usage:       22 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 5
  3390 ;; This function calls:
  3391 ;;		_atoi
  3392 ;;		_dtoa
  3393 ;;		_efgtoa
  3394 ;;		_fputc
  3395 ;;		_isdigit
  3396 ;; This function is called by:
  3397 ;;		_vfprintf
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text21
  3402   001D58                     __ptext21:
  3403                           	callstack 0
  3404   001D58                     _vfpfcnvrt:
  3405                           	callstack 22
  3406   001D58                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3408   001D58  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3409   001D5C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3410   001D60  CFDE FFF6          	movff	postinc2,tblptrl
  3411   001D64  CFDD FFF7          	movff	postdec2,tblptrh
  3412   001D68                     	if	0	;tblptru may be non-zero
  3413   001D68                     	endif
  3414   001D68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3415   001D68  0E00               	movlw	low (__mediumconst shr (0+16))
  3416   001D6A  6EF8               	movwf	tblptru,c
  3417   001D6C                     	endif
  3418   001D6C  0008               	tblrd		*
  3419   001D6E  50F5               	movf	tablat,w,c
  3420   001D70  0A25               	xorlw	37
  3421   001D72  A4D8               	btfss	status,2,c
  3422   001D74  EFBE  F00E         	goto	u4371
  3423   001D78  EFC0  F00E         	goto	u4370
  3424   001D7C                     u4371:
  3425   001D7C  EFC6  F010         	goto	l3969
  3426   001D80                     u4370:
  3427   001D80                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3429   001D80  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3430   001D84  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3431   001D88  2ADE               	incf	postinc2,f,c
  3432   001D8A  0E00               	movlw	0
  3433   001D8C  22DD               	addwfc	postdec2,f,c
  3434   001D8E                     
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3436   001D8E  0E00               	movlw	0
  3437   001D90  0100               	movlb	0	; () banked
  3438   001D92  6FDA               	movwf	(_width+1)& (0+255),b
  3439   001D94  0E00               	movlw	0
  3440   001D96  6FD9               	movwf	_width& (0+255),b
  3441   001D98  C0D9  F0DD         	movff	_width,_flags
  3442   001D9C                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3445   001D9C  69DB               	setf	_prec& (0+255),b
  3446   001D9E  69DC               	setf	(_prec+1)& (0+255),b
  3447   001DA0                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  3450   001DA0  0E00               	movlw	0
  3451   001DA2  6F96               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3452   001DA4  0E00               	movlw	0
  3453   001DA6  6F95               	movwf	vfpfcnvrt@done& (0+255),b
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3456   001DA8  EF02  F00F         	goto	l3901
  3457   001DAC                     l3891:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  3461   001DAC  83DD               	bsf	_flags& (0+255),1,b
  3462   001DAE                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  3465   001DAE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3466   001DB2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3467   001DB6  2ADE               	incf	postinc2,f,c
  3468   001DB8  0E00               	movlw	0
  3469   001DBA  22DD               	addwfc	postdec2,f,c
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  3472   001DBC  EF02  F00F         	goto	l3901
  3473   001DC0                     l3895:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  3477   001DC0  0E00               	movlw	0
  3478   001DC2  6F96               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3479   001DC4  0E01               	movlw	1
  3480   001DC6  6F95               	movwf	vfpfcnvrt@done& (0+255),b
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  3483   001DC8  EF02  F00F         	goto	l3901
  3484   001DCC                     l3899:
  3485                           
  3486                           ; BSR set to: 0
  3487   001DCC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3488   001DD0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3489   001DD4  CFDE FFF6          	movff	postinc2,tblptrl
  3490   001DD8  CFDD FFF7          	movff	postdec2,tblptrh
  3491   001DDC                     	if	0	;tblptru may be non-zero
  3492   001DDC                     	endif
  3493   001DDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3494   001DDC  0E00               	movlw	low (__mediumconst shr (0+16))
  3495   001DDE  6EF8               	movwf	tblptru,c
  3496   001DE0                     	endif
  3497   001DE0  0008               	tblrd		*
  3498   001DE2  50F5               	movf	tablat,w,c
  3499   001DE4  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3500   001DE6  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3501                           
  3502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3503                           ; Switch size 1, requested type "simple"
  3504                           ; Number of cases is 1, Range of values is 0 to 0
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte            4     3 (average)
  3508                           ;	Chosen strategy is simple_byte
  3509   001DE8  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3510   001DEA  0A00               	xorlw	0	; case 0
  3511   001DEC  B4D8               	btfsc	status,2,c
  3512   001DEE  EFFB  F00E         	goto	l4433
  3513   001DF2  EFE0  F00E         	goto	l3895
  3514   001DF6                     l4433:
  3515                           
  3516                           ; BSR set to: 0
  3517                           ; Switch size 1, requested type "simple"
  3518                           ; Number of cases is 1, Range of values is 48 to 48
  3519                           ; switch strategies available:
  3520                           ; Name         Instructions Cycles
  3521                           ; simple_byte            4     3 (average)
  3522                           ;	Chosen strategy is simple_byte
  3523   001DF6  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  3524   001DF8  0A30               	xorlw	48	; case 48
  3525   001DFA  B4D8               	btfsc	status,2,c
  3526   001DFC  EFD6  F00E         	goto	l3891
  3527   001E00  EFE0  F00E         	goto	l3895
  3528   001E04                     l3901:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  3532   001E04  5195               	movf	vfpfcnvrt@done& (0+255),w,b
  3533   001E06  1196               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3534   001E08  B4D8               	btfsc	status,2,c
  3535   001E0A  EF09  F00F         	goto	u4381
  3536   001E0E  EF0B  F00F         	goto	u4380
  3537   001E12                     u4381:
  3538   001E12  EFE6  F00E         	goto	l3899
  3539   001E16                     u4380:
  3540   001E16                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  3543   001E16  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3544   001E1A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3545   001E1E  CFDE FFF6          	movff	postinc2,tblptrl
  3546   001E22  CFDD FFF7          	movff	postdec2,tblptrh
  3547   001E26                     	if	0	;tblptru may be non-zero
  3548   001E26                     	endif
  3549   001E26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3550   001E26  0E00               	movlw	low (__mediumconst shr (0+16))
  3551   001E28  6EF8               	movwf	tblptru,c
  3552   001E2A                     	endif
  3553   001E2A  0008               	tblrd		*
  3554   001E2C  50F5               	movf	tablat,w,c
  3555   001E2E  0A2A               	xorlw	42
  3556   001E30  A4D8               	btfss	status,2,c
  3557   001E32  EF1D  F00F         	goto	u4391
  3558   001E36  EF1F  F00F         	goto	u4390
  3559   001E3A                     u4391:
  3560   001E3A  EF48  F00F         	goto	l3911
  3561   001E3E                     u4390:
  3562   001E3E                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  3565   001E3E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3566   001E42  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3567   001E46  2ADE               	incf	postinc2,f,c
  3568   001E48  0E00               	movlw	0
  3569   001E4A  22DD               	addwfc	postdec2,f,c
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3572   001E4C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3573   001E50  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3574   001E54  CFDF F092          	movff	indf2,??_vfpfcnvrt
  3575   001E58  0E02               	movlw	2
  3576   001E5A  26DE               	addwf	postinc2,f,c
  3577   001E5C  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  3578   001E60  0E00               	movlw	0
  3579   001E62  22DD               	addwfc	postdec2,f,c
  3580   001E64  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3581   001E68  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3582   001E6C  CFDE F0D9          	movff	postinc2,_width
  3583   001E70  CFDD F0DA          	movff	postdec2,_width+1
  3584   001E74                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  3587   001E74  BFDA               	btfsc	(_width+1)& (0+255),7,b
  3588   001E76  EF41  F00F         	goto	u4400
  3589   001E7A  EF3F  F00F         	goto	u4401
  3590   001E7E                     u4401:
  3591   001E7E  EF7E  F00F         	goto	l3919
  3592   001E82                     u4400:
  3593   001E82                     
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  3596   001E82  81DD               	bsf	_flags& (0+255),0,b
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  3599   001E84  6DD9               	negf	_width& (0+255),b
  3600   001E86  1FDA               	comf	(_width+1)& (0+255),f,b
  3601   001E88  B0D8               	btfsc	status,0,c
  3602   001E8A  2BDA               	incf	(_width+1)& (0+255),f,b
  3603   001E8C  EF7E  F00F         	goto	l3919
  3604   001E90                     l3911:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  3608   001E90  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3609   001E94  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3610   001E98  CFDE F00F          	movff	postinc2,atoi@s
  3611   001E9C  CFDD F010          	movff	postdec2,atoi@s+1
  3612   001EA0  EC00  F01D         	call	_atoi	;wreg free
  3613   001EA4  C00F  F0D9         	movff	?_atoi,_width
  3614   001EA8  C010  F0DA         	movff	?_atoi+1,_width+1
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3617   001EAC  EF5F  F00F         	goto	l3917
  3618   001EB0                     l3913:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  3622   001EB0  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3623   001EB4  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3624   001EB8  2ADE               	incf	postinc2,f,c
  3625   001EBA  0E00               	movlw	0
  3626   001EBC  22DD               	addwfc	postdec2,f,c
  3627   001EBE                     l3917:
  3628   001EBE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3629   001EC2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3630   001EC6  CFDE FFF6          	movff	postinc2,tblptrl
  3631   001ECA  CFDD FFF7          	movff	postdec2,tblptrh
  3632   001ECE                     	if	0	;tblptru may be non-zero
  3633   001ECE                     	endif
  3634   001ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3635   001ECE  0E00               	movlw	low (__mediumconst shr (0+16))
  3636   001ED0  6EF8               	movwf	tblptru,c
  3637   001ED2                     	endif
  3638   001ED2  0008               	tblrd		*
  3639   001ED4  CFF5 F092          	movff	tablat,??_vfpfcnvrt
  3640   001ED8  0ED0               	movlw	208
  3641   001EDA  0100               	movlb	0	; () banked
  3642   001EDC  2592               	addwf	??_vfpfcnvrt& (0+255),w,b
  3643   001EDE  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3644   001EE0  6B94               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  3645   001EE2  0EFF               	movlw	255
  3646   001EE4  2394               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  3647   001EE6  5194               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  3648   001EE8  E109               	bnz	u4410
  3649   001EEA  0E0A               	movlw	10
  3650   001EEC  5D93               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  3651   001EEE  A0D8               	btfss	status,0,c
  3652   001EF0  EF7C  F00F         	goto	u4411
  3653   001EF4  EF7E  F00F         	goto	u4410
  3654   001EF8                     u4411:
  3655   001EF8  EF58  F00F         	goto	l3913
  3656   001EFC                     u4410:
  3657   001EFC                     l3919:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3661   001EFC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3662   001F00  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3663   001F04  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  3664   001F08  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  3665   001F0C                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3668   001F0C  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3669   001F10  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3670   001F14                     	if	0	;tblptru may be non-zero
  3671   001F14                     	endif
  3672   001F14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3673   001F14  0E00               	movlw	low (__mediumconst shr (0+16))
  3674   001F16  6EF8               	movwf	tblptru,c
  3675   001F18                     	endif
  3676   001F18  0008               	tblrd		*
  3677   001F1A  50F5               	movf	tablat,w,c
  3678   001F1C  0A64               	xorlw	100
  3679   001F1E  B4D8               	btfsc	status,2,c
  3680   001F20  EF94  F00F         	goto	u4421
  3681   001F24  EF96  F00F         	goto	u4420
  3682   001F28                     u4421:
  3683   001F28  EFA6  F00F         	goto	l3925
  3684   001F2C                     u4420:
  3685   001F2C                     
  3686                           ; BSR set to: 0
  3687   001F2C  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3688   001F30  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3689   001F34                     	if	0	;tblptru may be non-zero
  3690   001F34                     	endif
  3691   001F34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3692   001F34  0E00               	movlw	low (__mediumconst shr (0+16))
  3693   001F36  6EF8               	movwf	tblptru,c
  3694   001F38                     	endif
  3695   001F38  0008               	tblrd		*
  3696   001F3A  50F5               	movf	tablat,w,c
  3697   001F3C  0A69               	xorlw	105
  3698   001F3E  A4D8               	btfss	status,2,c
  3699   001F40  EFA4  F00F         	goto	u4431
  3700   001F44  EFA6  F00F         	goto	u4430
  3701   001F48                     u4431:
  3702   001F48  EFE9  F00F         	goto	l3931
  3703   001F4C                     u4430:
  3704   001F4C                     l3925:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3708   001F4C  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3709   001F50  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3710   001F54  CFDF F092          	movff	indf2,??_vfpfcnvrt
  3711   001F58  0E02               	movlw	2
  3712   001F5A  26DE               	addwf	postinc2,f,c
  3713   001F5C  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  3714   001F60  0E00               	movlw	0
  3715   001F62  22DD               	addwfc	postdec2,f,c
  3716   001F64  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3717   001F68  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3718   001F6C  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg
  3719   001F70  CFDD F098          	movff	postdec2,vfpfcnvrt@convarg+1
  3720   001F74  0E00               	movlw	0
  3721   001F76  BF98               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3722   001F78  0EFF               	movlw	-1
  3723   001F7A  6F99               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3724   001F7C  6F9A               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3725   001F7E  6F9B               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3726   001F80  6F9C               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3727   001F82  6F9D               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3728   001F84  6F9E               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3731   001F86  0E01               	movlw	1
  3732   001F88  25A0               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3733   001F8A  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3734   001F8C  0E00               	movlw	0
  3735   001F8E  21A1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3736   001F90  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3737   001F92  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3738   001F96  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3739   001F9A  C092  FFDE         	movff	??_vfpfcnvrt,postinc2
  3740   001F9E  C093  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3741   001FA2                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3744   001FA2  C08C  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3745   001FA6  C08D  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3746   001FAA  C097  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3747   001FAE  C098  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3748   001FB2  C099  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3749   001FB6  C09A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3750   001FBA  C09B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3751   001FBE  C09C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3752   001FC2  C09D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3753   001FC6  C09E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3754   001FCA  EC4B  F018         	call	_dtoa	;wreg free
  3755   001FCE  EFDC  F010         	goto	l1011
  3756   001FD2                     l3931:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3760   001FD2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3761   001FD6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3762   001FDA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@cp
  3763   001FDE  CFDD F0A1          	movff	postdec2,vfpfcnvrt@cp+1
  3764   001FE2                     
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3767   001FE2  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3768   001FE6  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3769   001FEA                     	if	0	;tblptru may be non-zero
  3770   001FEA                     	endif
  3771   001FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3772   001FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3773   001FEC  6EF8               	movwf	tblptru,c
  3774   001FEE                     	endif
  3775   001FEE  0008               	tblrd		*
  3776   001FF0  CFF5 F09F          	movff	tablat,vfpfcnvrt@c
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3779   001FF4  EF08  F010         	goto	l3943
  3780   001FF8                     l3935:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3784   001FF8  4BA0               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3785   001FFA  2BA1               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3788   001FFC  EF21  F010         	goto	l3945
  3789   002000                     l3937:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3793   002000  0E6C               	movlw	108
  3794   002002  6F9F               	movwf	vfpfcnvrt@c& (0+255),b
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3797   002004  EF21  F010         	goto	l3945
  3798   002008                     l3939:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3802   002008  0E00               	movlw	0
  3803   00200A  6F9F               	movwf	vfpfcnvrt@c& (0+255),b
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3806   00200C  EF21  F010         	goto	l3945
  3807   002010                     l3943:
  3808                           
  3809                           ; BSR set to: 0
  3810   002010  519F               	movf	vfpfcnvrt@c& (0+255),w,b
  3811   002012  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3812   002014  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3813                           
  3814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3815                           ; Switch size 1, requested type "simple"
  3816                           ; Number of cases is 1, Range of values is 0 to 0
  3817                           ; switch strategies available:
  3818                           ; Name         Instructions Cycles
  3819                           ; simple_byte            4     3 (average)
  3820                           ;	Chosen strategy is simple_byte
  3821   002016  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3822   002018  0A00               	xorlw	0	; case 0
  3823   00201A  B4D8               	btfsc	status,2,c
  3824   00201C  EF12  F010         	goto	l4435
  3825   002020  EF04  F010         	goto	l3939
  3826   002024                     l4435:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ; Switch size 1, requested type "simple"
  3830                           ; Number of cases is 3, Range of values is 76 to 108
  3831                           ; switch strategies available:
  3832                           ; Name         Instructions Cycles
  3833                           ; simple_byte           10     6 (average)
  3834                           ;	Chosen strategy is simple_byte
  3835   002024  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  3836   002026  0A4C               	xorlw	76	; case 76
  3837   002028  B4D8               	btfsc	status,2,c
  3838   00202A  EFFC  F00F         	goto	l3935
  3839   00202E  0A2A               	xorlw	42	; case 102
  3840   002030  B4D8               	btfsc	status,2,c
  3841   002032  EF00  F010         	goto	l3937
  3842   002036  0A0A               	xorlw	10	; case 108
  3843   002038  B4D8               	btfsc	status,2,c
  3844   00203A  EFFC  F00F         	goto	l3935
  3845   00203E  EF04  F010         	goto	l3939
  3846   002042                     l3945:
  3847                           
  3848                           ; BSR set to: 0
  3849   002042  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3850   002046  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3851   00204A                     	if	0	;tblptru may be non-zero
  3852   00204A                     	endif
  3853   00204A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3854   00204A  0E00               	movlw	low (__mediumconst shr (0+16))
  3855   00204C  6EF8               	movwf	tblptru,c
  3856   00204E                     	endif
  3857   00204E  0008               	tblrd		*
  3858   002050  50F5               	movf	tablat,w,c
  3859   002052  0A66               	xorlw	102
  3860   002054  A4D8               	btfss	status,2,c
  3861   002056  EF2F  F010         	goto	u4441
  3862   00205A  EF31  F010         	goto	u4440
  3863   00205E                     u4441:
  3864   00205E  EFBD  F010         	goto	l3965
  3865   002062                     u4440:
  3866   002062  EF67  F010         	goto	l3953
  3867   002066                     l3947:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3871   002066  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3872   00206A  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3873   00206E  CFDF F092          	movff	indf2,??_vfpfcnvrt
  3874   002072  0E04               	movlw	4
  3875   002074  26DE               	addwf	postinc2,f,c
  3876   002076  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  3877   00207A  0E00               	movlw	0
  3878   00207C  22DD               	addwfc	postdec2,f,c
  3879   00207E  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3880   002082  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3881   002086  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg
  3882   00208A  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+1
  3883   00208E  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+2
  3884   002092  CFDE F09A          	movff	postinc2,vfpfcnvrt@convarg+3
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3887   002096  EF7C  F010         	goto	l3955
  3888   00209A                     l3949:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3892   00209A  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3893   00209E  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3894   0020A2  CFDF F092          	movff	indf2,??_vfpfcnvrt
  3895   0020A6  0E04               	movlw	4
  3896   0020A8  26DE               	addwf	postinc2,f,c
  3897   0020AA  CFDF F093          	movff	indf2,??_vfpfcnvrt+1
  3898   0020AE  0E00               	movlw	0
  3899   0020B0  22DD               	addwfc	postdec2,f,c
  3900   0020B2  C092  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3901   0020B6  C093  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3902   0020BA  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg
  3903   0020BE  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+1
  3904   0020C2  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+2
  3905   0020C6  CFDE F09A          	movff	postinc2,vfpfcnvrt@convarg+3
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3908   0020CA  EF7C  F010         	goto	l3955
  3909   0020CE                     l3953:
  3910                           
  3911                           ; BSR set to: 0
  3912   0020CE  519F               	movf	vfpfcnvrt@c& (0+255),w,b
  3913   0020D0  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3914   0020D2  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3915                           
  3916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3917                           ; Switch size 1, requested type "simple"
  3918                           ; Number of cases is 1, Range of values is 0 to 0
  3919                           ; switch strategies available:
  3920                           ; Name         Instructions Cycles
  3921                           ; simple_byte            4     3 (average)
  3922                           ;	Chosen strategy is simple_byte
  3923   0020D4  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3924   0020D6  0A00               	xorlw	0	; case 0
  3925   0020D8  B4D8               	btfsc	status,2,c
  3926   0020DA  EF71  F010         	goto	l4437
  3927   0020DE  EF7C  F010         	goto	l3955
  3928   0020E2                     l4437:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ; Switch size 1, requested type "simple"
  3932                           ; Number of cases is 2, Range of values is 76 to 108
  3933                           ; switch strategies available:
  3934                           ; Name         Instructions Cycles
  3935                           ; simple_byte            7     4 (average)
  3936                           ;	Chosen strategy is simple_byte
  3937   0020E2  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  3938   0020E4  0A4C               	xorlw	76	; case 76
  3939   0020E6  B4D8               	btfsc	status,2,c
  3940   0020E8  EF4D  F010         	goto	l3949
  3941   0020EC  0A20               	xorlw	32	; case 108
  3942   0020EE  B4D8               	btfsc	status,2,c
  3943   0020F0  EF33  F010         	goto	l3947
  3944   0020F4  EF7C  F010         	goto	l3955
  3945   0020F8                     l3955:
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3949   0020F8  0E01               	movlw	1
  3950   0020FA  25A0               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3951   0020FC  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3952   0020FE  0E00               	movlw	0
  3953   002100  21A1               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3954   002102  6F93               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3955   002104  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3956   002108  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3957   00210C  C092  FFDE         	movff	??_vfpfcnvrt,postinc2
  3958   002110  C093  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3961   002114  EFA5  F010         	goto	l3963
  3962   002118                     l3957:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3966   002118  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  3967   00211C  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3968   002120  C097  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  3969   002124  C098  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3970   002128  C099  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3971   00212C  C09A  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3972   002130  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3973   002134  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3974   002138                     	if	0	;tblptru may be non-zero
  3975   002138                     	endif
  3976   002138                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3977   002138  0E00               	movlw	low (__mediumconst shr (0+16))
  3978   00213A  6EF8               	movwf	tblptru,c
  3979   00213C                     	endif
  3980   00213C  0008               	tblrd		*
  3981   00213E  CFF5 F05B          	movff	tablat,efgtoa@c
  3982   002142  EC1A  F007         	call	_efgtoa	;wreg free
  3983   002146  EFDC  F010         	goto	l1011
  3984   00214A                     l3963:
  3985                           
  3986                           ; BSR set to: 0
  3987   00214A  C0A0  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3988   00214E  C0A1  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3989   002152                     	if	0	;tblptru may be non-zero
  3990   002152                     	endif
  3991   002152                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3992   002152  0E00               	movlw	low (__mediumconst shr (0+16))
  3993   002154  6EF8               	movwf	tblptru,c
  3994   002156                     	endif
  3995   002156  0008               	tblrd		*
  3996   002158  50F5               	movf	tablat,w,c
  3997   00215A  6F92               	movwf	??_vfpfcnvrt& (0+255),b
  3998   00215C  6B93               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3999                           
  4000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4001                           ; Switch size 1, requested type "simple"
  4002                           ; Number of cases is 1, Range of values is 0 to 0
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte            4     3 (average)
  4006                           ;	Chosen strategy is simple_byte
  4007   00215E  5193               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4008   002160  0A00               	xorlw	0	; case 0
  4009   002162  B4D8               	btfsc	status,2,c
  4010   002164  EFB6  F010         	goto	l4439
  4011   002168  EFBD  F010         	goto	l3965
  4012   00216C                     l4439:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ; Switch size 1, requested type "simple"
  4016                           ; Number of cases is 1, Range of values is 102 to 102
  4017                           ; switch strategies available:
  4018                           ; Name         Instructions Cycles
  4019                           ; simple_byte            4     3 (average)
  4020                           ;	Chosen strategy is simple_byte
  4021   00216C  5192               	movf	??_vfpfcnvrt& (0+255),w,b
  4022   00216E  0A66               	xorlw	102	; case 102
  4023   002170  B4D8               	btfsc	status,2,c
  4024   002172  EF8C  F010         	goto	l3957
  4025   002176  EFBD  F010         	goto	l3965
  4026   00217A                     l3965:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4029   00217A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4030   00217E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4031   002182  2ADE               	incf	postinc2,f,c
  4032   002184  0E00               	movlw	0
  4033   002186  22DD               	addwfc	postdec2,f,c
  4034   002188  EFDC  F010         	goto	l1011
  4035   00218C                     l3969:
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4038   00218C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4039   002190  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4040   002194  CFDE FFF6          	movff	postinc2,tblptrl
  4041   002198  CFDD FFF7          	movff	postdec2,tblptrh
  4042   00219C                     	if	0	;tblptru may be non-zero
  4043   00219C                     	endif
  4044   00219C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4045   00219C  0E00               	movlw	low (__mediumconst shr (0+16))
  4046   00219E  6EF8               	movwf	tblptru,c
  4047   0021A0                     	endif
  4048   0021A0  0008               	tblrd		*
  4049   0021A2  50F5               	movf	tablat,w,c
  4050   0021A4  6E01               	movwf	fputc@c^0,c
  4051   0021A6  6A02               	clrf	(fputc@c+1)^0,c
  4052   0021A8  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4053   0021AC  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4054   0021B0  ECDB  F01F         	call	_fputc	;wreg free
  4055   0021B4  EFBD  F010         	goto	l3965
  4056   0021B8                     l1011:
  4057   0021B8  0012               	return		;funcret
  4058   0021BA                     __end_of_vfpfcnvrt:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _efgtoa *****************
  4062 ;; Defined at:
  4063 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  4066 ;;		 -> sprintf@f(11), 
  4067 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  4068 ;;  c               1   90[COMRAM] unsigned char 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  u               4   40[BANK0 ] struct flui
  4071 ;;  g               4   34[BANK0 ] struct flui
  4072 ;;  l               4   27[BANK0 ] struct flui
  4073 ;;  h               4   23[BANK0 ] struct flui
  4074 ;;  ou              4   19[BANK0 ] struct flui
  4075 ;;  n               2   38[BANK0 ] int 
  4076 ;;  i               2   31[BANK0 ] int 
  4077 ;;  w               2   17[BANK0 ] int 
  4078 ;;  e               2   15[BANK0 ] int 
  4079 ;;  m               2   13[BANK0 ] int 
  4080 ;;  d               2   11[BANK0 ] int 
  4081 ;;  t               2    4[BANK0 ] int 
  4082 ;;  p               2    2[BANK0 ] int 
  4083 ;;  ne              2    0[BANK0 ] int 
  4084 ;;  sign            1   33[BANK0 ] unsigned char 
  4085 ;;  nmode           1   10[BANK0 ] unsigned char 
  4086 ;;  mode            1    9[BANK0 ] unsigned char 
  4087 ;;  pp              1    8[BANK0 ] unsigned char 
  4088 ;;  esign           1    0        unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4098 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;Total ram usage:       53 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 4
  4105 ;; This function calls:
  4106 ;;		___fladd
  4107 ;;		___fldiv
  4108 ;;		___fleq
  4109 ;;		___flge
  4110 ;;		___flmul
  4111 ;;		___flneg
  4112 ;;		___flsub
  4113 ;;		___fltol
  4114 ;;		___fpclassifyf
  4115 ;;		_floorf
  4116 ;;		_labs
  4117 ;;		_memcpy
  4118 ;;		_pad
  4119 ;;		_strcpy
  4120 ;; This function is called by:
  4121 ;;		_vfpfcnvrt
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text22
  4126   000E34                     __ptext22:
  4127                           	callstack 0
  4128   000E34                     _efgtoa:
  4129                           	callstack 22
  4130   000E34                     
  4131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  4132   000E34  0E00               	movlw	0
  4133   000E36  0100               	movlb	0	; () banked
  4134   000E38  6F81               	movwf	efgtoa@sign& (0+255),b
  4135   000E3A                     
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  4138   000E3A  C057  F082         	movff	efgtoa@f,efgtoa@g
  4139   000E3E  C058  F083         	movff	efgtoa@f+1,efgtoa@g+1
  4140   000E42  C059  F084         	movff	efgtoa@f+2,efgtoa@g+2
  4141   000E46  C05A  F085         	movff	efgtoa@f+3,efgtoa@g+3
  4142   000E4A                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  4145   000E4A  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4146   000E4C  EF2C  F007         	goto	u3960
  4147   000E50  EF2A  F007         	goto	u3961
  4148   000E54                     u3961:
  4149   000E54  EF40  F007         	goto	l3621
  4150   000E58                     u3960:
  4151   000E58                     
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  4154   000E58  0E01               	movlw	1
  4155   000E5A  6F81               	movwf	efgtoa@sign& (0+255),b
  4156   000E5C                     
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  4159   000E5C  C082  F001         	movff	efgtoa@g,___flneg@f1
  4160   000E60  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4161   000E64  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4162   000E68  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4163   000E6C  ECB5  F023         	call	___flneg	;wreg free
  4164   000E70  C001  F082         	movff	?___flneg,efgtoa@g
  4165   000E74  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  4166   000E78  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  4167   000E7C  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  4168   000E80                     l3621:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  4171   000E80  0E00               	movlw	0
  4172   000E82  0100               	movlb	0	; () banked
  4173   000E84  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4174   000E86  0E00               	movlw	0
  4175   000E88  6F86               	movwf	efgtoa@n& (0+255),b
  4176   000E8A                     
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  4179   000E8A  C0D9  F071         	movff	_width,efgtoa@w
  4180   000E8E  C0DA  F072         	movff	_width+1,efgtoa@w+1
  4181   000E92                     
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  4184   000E92  5181               	movf	efgtoa@sign& (0+255),w,b
  4185   000E94  B4D8               	btfsc	status,2,c
  4186   000E96  EF4F  F007         	goto	u3971
  4187   000E9A  EF51  F007         	goto	u3970
  4188   000E9E                     u3971:
  4189   000E9E  EF65  F007         	goto	l3635
  4190   000EA2                     u3970:
  4191   000EA2                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  4194   000EA2  5181               	movf	efgtoa@sign& (0+255),w,b
  4195   000EA4  A4D8               	btfss	status,2,c
  4196   000EA6  EF57  F007         	goto	u3981
  4197   000EAA  EF59  F007         	goto	u3980
  4198   000EAE                     u3981:
  4199   000EAE  EF5F  F007         	goto	l3631
  4200   000EB2                     u3980:
  4201   000EB2                     
  4202                           ; BSR set to: 0
  4203   000EB2  0E00               	movlw	0
  4204   000EB4  6F67               	movwf	(_efgtoa$1131+1)& (0+255),b
  4205   000EB6  0E2B               	movlw	43
  4206   000EB8  6F66               	movwf	_efgtoa$1131& (0+255),b
  4207   000EBA  EF63  F007         	goto	l3633
  4208   000EBE                     l3631:
  4209                           
  4210                           ; BSR set to: 0
  4211   000EBE  0E00               	movlw	0
  4212   000EC0  6F67               	movwf	(_efgtoa$1131+1)& (0+255),b
  4213   000EC2  0E2D               	movlw	45
  4214   000EC4  6F66               	movwf	_efgtoa$1131& (0+255),b
  4215   000EC6                     l3633:
  4216                           
  4217                           ; BSR set to: 0
  4218   000EC6  C066  F081         	movff	_efgtoa$1131,efgtoa@sign
  4219   000ECA                     l3635:
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4223   000ECA  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  4224   000ECE  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4225   000ED2  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4226   000ED6  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4227   000EDA  EC5C  F01F         	call	___fpclassifyf	;wreg free
  4228   000EDE  0401               	decf	?___fpclassifyf^0,w,c
  4229   000EE0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4230   000EE2  A4D8               	btfss	status,2,c
  4231   000EE4  EF76  F007         	goto	u3991
  4232   000EE8  EF78  F007         	goto	u3990
  4233   000EEC                     u3991:
  4234   000EEC  EFAB  F007         	goto	l3653
  4235   000EF0                     u3990:
  4236   000EF0                     
  4237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  4238   000EF0  0100               	movlb	0	; () banked
  4239   000EF2  5181               	movf	efgtoa@sign& (0+255),w,b
  4240   000EF4  B4D8               	btfsc	status,2,c
  4241   000EF6  EF7F  F007         	goto	u4001
  4242   000EFA  EF81  F007         	goto	u4000
  4243   000EFE                     u4001:
  4244   000EFE  EF8A  F007         	goto	l3645
  4245   000F02                     u4000:
  4246   000F02                     
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  4249   000F02  C081  F100         	movff	efgtoa@sign,_dbuf
  4250   000F06                     
  4251                           ; BSR set to: 0
  4252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  4253   000F06  0771               	decf	efgtoa@w& (0+255),f,b
  4254   000F08  A0D8               	btfss	status,0,c
  4255   000F0A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4256   000F0C                     
  4257                           ; BSR set to: 0
  4258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  4259   000F0C  0E00               	movlw	0
  4260   000F0E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4261   000F10  0E01               	movlw	1
  4262   000F12  6F86               	movwf	efgtoa@n& (0+255),b
  4263   000F14                     l3645:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  4267   000F14  0E00               	movlw	low _dbuf
  4268   000F16  2586               	addwf	efgtoa@n& (0+255),w,b
  4269   000F18  6E01               	movwf	strcpy@dest^0,c
  4270   000F1A  0E01               	movlw	high _dbuf
  4271   000F1C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4272   000F1E  6E02               	movwf	(strcpy@dest+1)^0,c
  4273   000F20  0E2A               	movlw	low STR_2
  4274   000F22  6E03               	movwf	strcpy@src^0,c
  4275   000F24  0E0E               	movlw	high STR_2
  4276   000F26  6E04               	movwf	(strcpy@src+1)^0,c
  4277   000F28  EC11  F023         	call	_strcpy	;wreg free
  4278   000F2C                     l3647:
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4281   000F2C  0100               	movlb	0	; () banked
  4282   000F2E  0EFD               	movlw	253
  4283   000F30  2771               	addwf	efgtoa@w& (0+255),f,b
  4284   000F32  0EFF               	movlw	255
  4285   000F34  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4286   000F36                     
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4289   000F36  C055  F011         	movff	efgtoa@fp,pad@fp
  4290   000F3A  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  4291   000F3E  0E00               	movlw	low _dbuf
  4292   000F40  6E13               	movwf	pad@buf^0,c
  4293   000F42  0E01               	movlw	high _dbuf
  4294   000F44  6E14               	movwf	(pad@buf+1)^0,c
  4295   000F46  C071  F015         	movff	efgtoa@w,pad@p
  4296   000F4A  C072  F016         	movff	efgtoa@w+1,pad@p+1
  4297   000F4E  ECA2  F020         	call	_pad	;wreg free
  4298   000F52  EF4B  F00C         	goto	l942
  4299   000F56                     l3653:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4302   000F56  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  4303   000F5A  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4304   000F5E  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4305   000F62  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4306   000F66  EC5C  F01F         	call	___fpclassifyf	;wreg free
  4307   000F6A  5001               	movf	?___fpclassifyf^0,w,c
  4308   000F6C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4309   000F6E  A4D8               	btfss	status,2,c
  4310   000F70  EFBC  F007         	goto	u4011
  4311   000F74  EFBE  F007         	goto	u4010
  4312   000F78                     u4011:
  4313   000F78  EFDE  F007         	goto	l3671
  4314   000F7C                     u4010:
  4315   000F7C                     
  4316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  4317   000F7C  0100               	movlb	0	; () banked
  4318   000F7E  5181               	movf	efgtoa@sign& (0+255),w,b
  4319   000F80  B4D8               	btfsc	status,2,c
  4320   000F82  EFC5  F007         	goto	u4021
  4321   000F86  EFC7  F007         	goto	u4020
  4322   000F8A                     u4021:
  4323   000F8A  EFD0  F007         	goto	l3663
  4324   000F8E                     u4020:
  4325   000F8E                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  4328   000F8E  C081  F100         	movff	efgtoa@sign,_dbuf
  4329   000F92                     
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  4332   000F92  0771               	decf	efgtoa@w& (0+255),f,b
  4333   000F94  A0D8               	btfss	status,0,c
  4334   000F96  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4335   000F98                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  4338   000F98  0E00               	movlw	0
  4339   000F9A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4340   000F9C  0E01               	movlw	1
  4341   000F9E  6F86               	movwf	efgtoa@n& (0+255),b
  4342   000FA0                     l3663:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  4346   000FA0  0E00               	movlw	low _dbuf
  4347   000FA2  2586               	addwf	efgtoa@n& (0+255),w,b
  4348   000FA4  6E01               	movwf	strcpy@dest^0,c
  4349   000FA6  0E01               	movlw	high _dbuf
  4350   000FA8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4351   000FAA  6E02               	movwf	(strcpy@dest+1)^0,c
  4352   000FAC  0E2E               	movlw	low STR_5
  4353   000FAE  6E03               	movwf	strcpy@src^0,c
  4354   000FB0  0E0E               	movlw	high STR_5
  4355   000FB2  6E04               	movwf	(strcpy@src+1)^0,c
  4356   000FB4  EC11  F023         	call	_strcpy	;wreg free
  4357   000FB8  EF96  F007         	goto	l3647
  4358   000FBC                     l3671:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  4361   000FBC  0E00               	movlw	0
  4362   000FBE  0100               	movlb	0	; () banked
  4363   000FC0  6F88               	movwf	efgtoa@u& (0+255),b
  4364   000FC2  0E00               	movlw	0
  4365   000FC4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  4366   000FC6  0E80               	movlw	128
  4367   000FC8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  4368   000FCA  0E3F               	movlw	63
  4369   000FCC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  4372   000FCE  0E00               	movlw	0
  4373   000FD0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  4374   000FD2  0E00               	movlw	0
  4375   000FD4  6F6F               	movwf	efgtoa@e& (0+255),b
  4376   000FD6                     
  4377                           ; BSR set to: 0
  4378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  4379   000FD6  C082  F001         	movff	efgtoa@g,___fleq@ff1
  4380   000FDA  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4381   000FDE  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4382   000FE2  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4383   000FE6  0E00               	movlw	0
  4384   000FE8  6E05               	movwf	___fleq@ff2^0,c
  4385   000FEA  0E00               	movlw	0
  4386   000FEC  6E06               	movwf	(___fleq@ff2+1)^0,c
  4387   000FEE  0E00               	movlw	0
  4388   000FF0  6E07               	movwf	(___fleq@ff2+2)^0,c
  4389   000FF2  0E00               	movlw	0
  4390   000FF4  6E08               	movwf	(___fleq@ff2+3)^0,c
  4391   000FF6  ECF9  F020         	call	___fleq	;wreg free
  4392   000FFA  B0D8               	btfsc	status,0,c
  4393   000FFC  EF02  F008         	goto	u4031
  4394   001000  EF04  F008         	goto	u4030
  4395   001004                     u4031:
  4396   001004  EFE3  F008         	goto	l945
  4397   001008                     u4030:
  4398   001008  EF11  F008         	goto	l3679
  4399   00100C                     l947:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  4402   00100C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  4403   001010  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4404   001014  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4405   001018  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4406   00101C                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  4408   00101C  0100               	movlb	0	; () banked
  4409   00101E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4410   001020  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4411   001022                     l3679:
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4414   001022  C088  F02A         	movff	efgtoa@u,___flmul@b
  4415   001026  C089  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4416   00102A  C08A  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4417   00102E  C08B  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4418   001032  0E00               	movlw	0
  4419   001034  6E2E               	movwf	___flmul@a^0,c
  4420   001036  0E00               	movlw	0
  4421   001038  6E2F               	movwf	(___flmul@a+1)^0,c
  4422   00103A  0E20               	movlw	32
  4423   00103C  6E30               	movwf	(___flmul@a+2)^0,c
  4424   00103E  0E41               	movlw	65
  4425   001040  6E31               	movwf	(___flmul@a+3)^0,c
  4426   001042  ECFA  F012         	call	___flmul	;wreg free
  4427   001046  C02A  F073         	movff	?___flmul,efgtoa@ou
  4428   00104A  C02B  F074         	movff	?___flmul+1,efgtoa@ou+1
  4429   00104E  C02C  F075         	movff	?___flmul+2,efgtoa@ou+2
  4430   001052  C02D  F076         	movff	?___flmul+3,efgtoa@ou+3
  4431   001056  0100               	movlb	0	; () banked
  4432   001058  5173               	movf	efgtoa@ou& (0+255),w,b
  4433   00105A  5D82               	subwf	efgtoa@g& (0+255),w,b
  4434   00105C  6E01               	movwf	labs@a^0,c
  4435   00105E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  4436   001060  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4437   001062  6E02               	movwf	(labs@a+1)^0,c
  4438   001064  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  4439   001066  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4440   001068  6E03               	movwf	(labs@a+2)^0,c
  4441   00106A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  4442   00106C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4443   00106E  6E04               	movwf	(labs@a+3)^0,c
  4444   001070  EC4E  F021         	call	_labs	;wreg free
  4445   001074  BE04               	btfsc	(?_labs+3)^0,7,c
  4446   001076  EF48  F008         	goto	u4041
  4447   00107A  5004               	movf	(?_labs+3)^0,w,c
  4448   00107C  1003               	iorwf	(?_labs+2)^0,w,c
  4449   00107E  1002               	iorwf	(?_labs+1)^0,w,c
  4450   001080  E109               	bnz	u4040
  4451   001082  0E02               	movlw	2
  4452   001084  5C01               	subwf	?_labs^0,w,c
  4453   001086  A0D8               	btfss	status,0,c
  4454   001088  EF48  F008         	goto	u4041
  4455   00108C  EF4A  F008         	goto	u4040
  4456   001090                     u4041:
  4457   001090  EF06  F008         	goto	l947
  4458   001094                     u4040:
  4459   001094  C073  F043         	movff	efgtoa@ou,___flge@ff1
  4460   001098  C074  F044         	movff	efgtoa@ou+1,___flge@ff1+1
  4461   00109C  C075  F045         	movff	efgtoa@ou+2,___flge@ff1+2
  4462   0010A0  C076  F046         	movff	efgtoa@ou+3,___flge@ff1+3
  4463   0010A4  C082  F047         	movff	efgtoa@g,___flge@ff2
  4464   0010A8  C083  F048         	movff	efgtoa@g+1,___flge@ff2+1
  4465   0010AC  C084  F049         	movff	efgtoa@g+2,___flge@ff2+2
  4466   0010B0  C085  F04A         	movff	efgtoa@g+3,___flge@ff2+3
  4467   0010B4  ECDA  F01E         	call	___flge	;wreg free
  4468   0010B8  A0D8               	btfss	status,0,c
  4469   0010BA  EF61  F008         	goto	u4051
  4470   0010BE  EF63  F008         	goto	u4050
  4471   0010C2                     u4051:
  4472   0010C2  EF06  F008         	goto	l947
  4473   0010C6                     u4050:
  4474   0010C6                     
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4476   0010C6  0100               	movlb	0	; () banked
  4477   0010C8  5188               	movf	efgtoa@u& (0+255),w,b
  4478   0010CA  5D82               	subwf	efgtoa@g& (0+255),w,b
  4479   0010CC  6E01               	movwf	labs@a^0,c
  4480   0010CE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  4481   0010D0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4482   0010D2  6E02               	movwf	(labs@a+1)^0,c
  4483   0010D4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  4484   0010D6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4485   0010D8  6E03               	movwf	(labs@a+2)^0,c
  4486   0010DA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  4487   0010DC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4488   0010DE  6E04               	movwf	(labs@a+3)^0,c
  4489   0010E0  EC4E  F021         	call	_labs	;wreg free
  4490   0010E4  BE04               	btfsc	(?_labs+3)^0,7,c
  4491   0010E6  EF82  F008         	goto	u4060
  4492   0010EA  5004               	movf	(?_labs+3)^0,w,c
  4493   0010EC  1003               	iorwf	(?_labs+2)^0,w,c
  4494   0010EE  1002               	iorwf	(?_labs+1)^0,w,c
  4495   0010F0  E107               	bnz	u4061
  4496   0010F2  0E02               	movlw	2
  4497   0010F4  5C01               	subwf	?_labs^0,w,c
  4498   0010F6  B0D8               	btfsc	status,0,c
  4499   0010F8  EF80  F008         	goto	u4061
  4500   0010FC  EF82  F008         	goto	u4060
  4501   001100                     u4061:
  4502   001100  EFCA  F008         	goto	l3697
  4503   001104                     u4060:
  4504   001104                     l3687:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4507   001104  C088  F082         	movff	efgtoa@u,efgtoa@g
  4508   001108  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  4509   00110C  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  4510   001110  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4513   001114  EFE3  F008         	goto	l945
  4514   001118                     l3689:
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4517   001118  C088  F011         	movff	efgtoa@u,___fldiv@b
  4518   00111C  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  4519   001120  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  4520   001124  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  4521   001128  0E00               	movlw	0
  4522   00112A  6E15               	movwf	___fldiv@a^0,c
  4523   00112C  0E00               	movlw	0
  4524   00112E  6E16               	movwf	(___fldiv@a+1)^0,c
  4525   001130  0E20               	movlw	32
  4526   001132  6E17               	movwf	(___fldiv@a+2)^0,c
  4527   001134  0E41               	movlw	65
  4528   001136  6E18               	movwf	(___fldiv@a+3)^0,c
  4529   001138  EC0F  F015         	call	___fldiv	;wreg free
  4530   00113C  C011  F088         	movff	?___fldiv,efgtoa@u
  4531   001140  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  4532   001144  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4533   001148  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4534   00114C                     
  4535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4536   00114C  0100               	movlb	0	; () banked
  4537   00114E  076F               	decf	efgtoa@e& (0+255),f,b
  4538   001150  A0D8               	btfss	status,0,c
  4539   001152  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  4540   001154                     
  4541                           ; BSR set to: 0
  4542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4543   001154  5188               	movf	efgtoa@u& (0+255),w,b
  4544   001156  5D82               	subwf	efgtoa@g& (0+255),w,b
  4545   001158  6E01               	movwf	labs@a^0,c
  4546   00115A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  4547   00115C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4548   00115E  6E02               	movwf	(labs@a+1)^0,c
  4549   001160  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  4550   001162  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4551   001164  6E03               	movwf	(labs@a+2)^0,c
  4552   001166  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  4553   001168  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4554   00116A  6E04               	movwf	(labs@a+3)^0,c
  4555   00116C  EC4E  F021         	call	_labs	;wreg free
  4556   001170  BE04               	btfsc	(?_labs+3)^0,7,c
  4557   001172  EFC8  F008         	goto	u4070
  4558   001176  5004               	movf	(?_labs+3)^0,w,c
  4559   001178  1003               	iorwf	(?_labs+2)^0,w,c
  4560   00117A  1002               	iorwf	(?_labs+1)^0,w,c
  4561   00117C  E107               	bnz	u4071
  4562   00117E  0E02               	movlw	2
  4563   001180  5C01               	subwf	?_labs^0,w,c
  4564   001182  B0D8               	btfsc	status,0,c
  4565   001184  EFC6  F008         	goto	u4071
  4566   001188  EFC8  F008         	goto	u4070
  4567   00118C                     u4071:
  4568   00118C  EFCA  F008         	goto	l3697
  4569   001190                     u4070:
  4570   001190  EF82  F008         	goto	l3687
  4571   001194                     l3697:
  4572                           
  4573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4574   001194  C082  F043         	movff	efgtoa@g,___flge@ff1
  4575   001198  C083  F044         	movff	efgtoa@g+1,___flge@ff1+1
  4576   00119C  C084  F045         	movff	efgtoa@g+2,___flge@ff1+2
  4577   0011A0  C085  F046         	movff	efgtoa@g+3,___flge@ff1+3
  4578   0011A4  C088  F047         	movff	efgtoa@u,___flge@ff2
  4579   0011A8  C089  F048         	movff	efgtoa@u+1,___flge@ff2+1
  4580   0011AC  C08A  F049         	movff	efgtoa@u+2,___flge@ff2+2
  4581   0011B0  C08B  F04A         	movff	efgtoa@u+3,___flge@ff2+3
  4582   0011B4  ECDA  F01E         	call	___flge	;wreg free
  4583   0011B8  A0D8               	btfss	status,0,c
  4584   0011BA  EFE1  F008         	goto	u4081
  4585   0011BE  EFE3  F008         	goto	u4080
  4586   0011C2                     u4081:
  4587   0011C2  EF8C  F008         	goto	l3689
  4588   0011C6                     u4080:
  4589   0011C6                     l945:
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4592   0011C6  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4595   0011CA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  4596   0011CE                     
  4597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4598   0011CE  0100               	movlb	0	; () banked
  4599   0011D0  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  4600   0011D2  EFED  F008         	goto	u4091
  4601   0011D6  EFEF  F008         	goto	u4090
  4602   0011DA                     u4091:
  4603   0011DA  EFF5  F008         	goto	l3703
  4604   0011DE                     u4090:
  4605   0011DE                     
  4606                           ; BSR set to: 0
  4607   0011DE  C0DB  F062         	movff	_prec,efgtoa@p
  4608   0011E2  C0DC  F063         	movff	_prec+1,efgtoa@p+1
  4609   0011E6  EFF9  F008         	goto	l3705
  4610   0011EA                     l3703:
  4611                           
  4612                           ; BSR set to: 0
  4613   0011EA  0E00               	movlw	0
  4614   0011EC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  4615   0011EE  0E06               	movlw	6
  4616   0011F0  6F62               	movwf	efgtoa@p& (0+255),b
  4617   0011F2                     l3705:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4621   0011F2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  4622   0011F6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  4623   0011FA                     
  4624                           ; BSR set to: 0
  4625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4626   0011FA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4627   0011FC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4628   0011FE                     
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4631   0011FE  0E66               	movlw	102
  4632   001200  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4633   001202  A4D8               	btfss	status,2,c
  4634   001204  EF06  F009         	goto	u4101
  4635   001208  EF08  F009         	goto	u4100
  4636   00120C                     u4101:
  4637   00120C  EF28  F009         	goto	l3719
  4638   001210                     u4100:
  4639   001210                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4642   001210  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4643   001212  EF0F  F009         	goto	u4110
  4644   001216  EF0D  F009         	goto	u4111
  4645   00121A                     u4111:
  4646   00121A  EF1B  F009         	goto	l3715
  4647   00121E                     u4110:
  4648   00121E                     
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4651   00121E  0E00               	movlw	0
  4652   001220  6F88               	movwf	efgtoa@u& (0+255),b
  4653   001222  0E00               	movlw	0
  4654   001224  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  4655   001226  0E80               	movlw	128
  4656   001228  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  4657   00122A  0E3F               	movlw	63
  4658   00122C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  4659                           
  4660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4661   00122E  0E00               	movlw	0
  4662   001230  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  4663   001232  0E00               	movlw	0
  4664   001234  6F6F               	movwf	efgtoa@e& (0+255),b
  4665   001236                     l3715:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4669   001236  0E67               	movlw	103
  4670   001238  1969               	xorwf	efgtoa@mode& (0+255),w,b
  4671   00123A  B4D8               	btfsc	status,2,c
  4672   00123C  EF22  F009         	goto	u4121
  4673   001240  EF24  F009         	goto	u4120
  4674   001244                     u4121:
  4675   001244  EF28  F009         	goto	l3719
  4676   001248                     u4120:
  4677   001248                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4680   001248  516F               	movf	efgtoa@e& (0+255),w,b
  4681   00124A  276D               	addwf	efgtoa@m& (0+255),f,b
  4682   00124C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  4683   00124E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4684   001250                     l3719:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4688   001250  0E00               	movlw	0
  4689   001252  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4690   001254  0E00               	movlw	0
  4691   001256  6F7F               	movwf	efgtoa@i& (0+255),b
  4692   001258                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4695   001258  C082  F077         	movff	efgtoa@g,efgtoa@h
  4696   00125C  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  4697   001260  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  4698   001264  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  4699   001268                     
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4702   001268  C088  F073         	movff	efgtoa@u,efgtoa@ou
  4703   00126C  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  4704   001270  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  4705   001274  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  4706                           
  4707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4708   001278  EFB9  F009         	goto	l3733
  4709   00127C                     l3725:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4713   00127C  C077  F011         	movff	efgtoa@h,___fldiv@b
  4714   001280  C078  F012         	movff	efgtoa@h+1,___fldiv@b+1
  4715   001284  C079  F013         	movff	efgtoa@h+2,___fldiv@b+2
  4716   001288  C07A  F014         	movff	efgtoa@h+3,___fldiv@b+3
  4717   00128C  C088  F015         	movff	efgtoa@u,___fldiv@a
  4718   001290  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  4719   001294  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  4720   001298  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  4721   00129C  EC0F  F015         	call	___fldiv	;wreg free
  4722   0012A0  C011  F02A         	movff	?___fldiv,floorf@x
  4723   0012A4  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  4724   0012A8  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  4725   0012AC  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  4726   0012B0  ECA7  F019         	call	_floorf	;wreg free
  4727   0012B4  C02A  F07B         	movff	?_floorf,efgtoa@l
  4728   0012B8  C02B  F07C         	movff	?_floorf+1,efgtoa@l+1
  4729   0012BC  C02C  F07D         	movff	?_floorf+2,efgtoa@l+2
  4730   0012C0  C02D  F07E         	movff	?_floorf+3,efgtoa@l+3
  4731                           
  4732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4733   0012C4  C07B  F04B         	movff	efgtoa@l,___fltol@f1
  4734   0012C8  C07C  F04C         	movff	efgtoa@l+1,___fltol@f1+1
  4735   0012CC  C07D  F04D         	movff	efgtoa@l+2,___fltol@f1+2
  4736   0012D0  C07E  F04E         	movff	efgtoa@l+3,___fltol@f1+3
  4737   0012D4  EC57  F01E         	call	___fltol	;wreg free
  4738   0012D8  C04B  F06B         	movff	?___fltol,efgtoa@d
  4739   0012DC  C04C  F06C         	movff	?___fltol+1,efgtoa@d+1
  4740   0012E0                     
  4741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4742   0012E0  C077  F043         	movff	efgtoa@h,___flsub@b
  4743   0012E4  C078  F044         	movff	efgtoa@h+1,___flsub@b+1
  4744   0012E8  C079  F045         	movff	efgtoa@h+2,___flsub@b+2
  4745   0012EC  C07A  F046         	movff	efgtoa@h+3,___flsub@b+3
  4746   0012F0  C07B  F02E         	movff	efgtoa@l,___flmul@a
  4747   0012F4  C07C  F02F         	movff	efgtoa@l+1,___flmul@a+1
  4748   0012F8  C07D  F030         	movff	efgtoa@l+2,___flmul@a+2
  4749   0012FC  C07E  F031         	movff	efgtoa@l+3,___flmul@a+3
  4750   001300  C088  F02A         	movff	efgtoa@u,___flmul@b
  4751   001304  C089  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4752   001308  C08A  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4753   00130C  C08B  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4754   001310  ECFA  F012         	call	___flmul	;wreg free
  4755   001314  C02A  F047         	movff	?___flmul,___flsub@a
  4756   001318  C02B  F048         	movff	?___flmul+1,___flsub@a+1
  4757   00131C  C02C  F049         	movff	?___flmul+2,___flsub@a+2
  4758   001320  C02D  F04A         	movff	?___flmul+3,___flsub@a+3
  4759   001324  ECCB  F022         	call	___flsub	;wreg free
  4760   001328  C043  F077         	movff	?___flsub,efgtoa@h
  4761   00132C  C044  F078         	movff	?___flsub+1,efgtoa@h+1
  4762   001330  C045  F079         	movff	?___flsub+2,efgtoa@h+2
  4763   001334  C046  F07A         	movff	?___flsub+3,efgtoa@h+3
  4764   001338                     
  4765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4766   001338  C088  F011         	movff	efgtoa@u,___fldiv@b
  4767   00133C  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  4768   001340  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  4769   001344  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  4770   001348  0E00               	movlw	0
  4771   00134A  6E15               	movwf	___fldiv@a^0,c
  4772   00134C  0E00               	movlw	0
  4773   00134E  6E16               	movwf	(___fldiv@a+1)^0,c
  4774   001350  0E20               	movlw	32
  4775   001352  6E17               	movwf	(___fldiv@a+2)^0,c
  4776   001354  0E41               	movlw	65
  4777   001356  6E18               	movwf	(___fldiv@a+3)^0,c
  4778   001358  EC0F  F015         	call	___fldiv	;wreg free
  4779   00135C  C011  F088         	movff	?___fldiv,efgtoa@u
  4780   001360  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  4781   001364  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4782   001368  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4783   00136C                     
  4784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4785   00136C  0100               	movlb	0	; () banked
  4786   00136E  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4787   001370  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4788   001372                     l3733:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4792   001372  516D               	movf	efgtoa@m& (0+255),w,b
  4793   001374  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4794   001376  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4795   001378  0A80               	xorlw	128
  4796   00137A  6E5C               	movwf	??_efgtoa^0,c
  4797   00137C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4798   00137E  0A80               	xorlw	128
  4799   001380  585C               	subwfb	??_efgtoa^0,w,c
  4800   001382  A0D8               	btfss	status,0,c
  4801   001384  EFC6  F009         	goto	u4131
  4802   001388  EFC8  F009         	goto	u4130
  4803   00138C                     u4131:
  4804   00138C  EF3E  F009         	goto	l3725
  4805   001390                     u4130:
  4806   001390                     
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4809   001390  C088  F02A         	movff	efgtoa@u,___flmul@b
  4810   001394  C089  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4811   001398  C08A  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4812   00139C  C08B  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4813   0013A0  0E00               	movlw	0
  4814   0013A2  6E2E               	movwf	___flmul@a^0,c
  4815   0013A4  0E00               	movlw	0
  4816   0013A6  6E2F               	movwf	(___flmul@a+1)^0,c
  4817   0013A8  0EA0               	movlw	160
  4818   0013AA  6E30               	movwf	(___flmul@a+2)^0,c
  4819   0013AC  0E40               	movlw	64
  4820   0013AE  6E31               	movwf	(___flmul@a+3)^0,c
  4821   0013B0  ECFA  F012         	call	___flmul	;wreg free
  4822   0013B4  C02A  F07B         	movff	?___flmul,efgtoa@l
  4823   0013B8  C02B  F07C         	movff	?___flmul+1,efgtoa@l+1
  4824   0013BC  C02C  F07D         	movff	?___flmul+2,efgtoa@l+2
  4825   0013C0  C02D  F07E         	movff	?___flmul+3,efgtoa@l+3
  4826   0013C4                     
  4827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4828   0013C4  C077  F043         	movff	efgtoa@h,___flge@ff1
  4829   0013C8  C078  F044         	movff	efgtoa@h+1,___flge@ff1+1
  4830   0013CC  C079  F045         	movff	efgtoa@h+2,___flge@ff1+2
  4831   0013D0  C07A  F046         	movff	efgtoa@h+3,___flge@ff1+3
  4832   0013D4  C07B  F047         	movff	efgtoa@l,___flge@ff2
  4833   0013D8  C07C  F048         	movff	efgtoa@l+1,___flge@ff2+1
  4834   0013DC  C07D  F049         	movff	efgtoa@l+2,___flge@ff2+2
  4835   0013E0  C07E  F04A         	movff	efgtoa@l+3,___flge@ff2+3
  4836   0013E4  ECDA  F01E         	call	___flge	;wreg free
  4837   0013E8  B0D8               	btfsc	status,0,c
  4838   0013EA  EFF9  F009         	goto	u4141
  4839   0013EE  EFFB  F009         	goto	u4140
  4840   0013F2                     u4141:
  4841   0013F2  EF06  F00A         	goto	l3741
  4842   0013F6                     u4140:
  4843   0013F6                     
  4844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4845   0013F6  0E00               	movlw	0
  4846   0013F8  0100               	movlb	0	; () banked
  4847   0013FA  6F7B               	movwf	efgtoa@l& (0+255),b
  4848   0013FC  0E00               	movlw	0
  4849   0013FE  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4850   001400  0E00               	movlw	0
  4851   001402  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4852   001404  0E00               	movlw	0
  4853   001406  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4856   001408  EF2F  F00A         	goto	l3747
  4857   00140C                     l3741:
  4858                           
  4859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4860   00140C  C077  F001         	movff	efgtoa@h,___fleq@ff1
  4861   001410  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4862   001414  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4863   001418  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4864   00141C  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  4865   001420  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4866   001424  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4867   001428  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4868   00142C  ECF9  F020         	call	___fleq	;wreg free
  4869   001430  A0D8               	btfss	status,0,c
  4870   001432  EF1D  F00A         	goto	u4151
  4871   001436  EF1F  F00A         	goto	u4150
  4872   00143A                     u4151:
  4873   00143A  EF2F  F00A         	goto	l3747
  4874   00143E                     u4150:
  4875   00143E  0100               	movlb	0	; () banked
  4876   001440  B16B               	btfsc	efgtoa@d& (0+255),0,b
  4877   001442  EF25  F00A         	goto	u4161
  4878   001446  EF27  F00A         	goto	u4160
  4879   00144A                     u4161:
  4880   00144A  EF2F  F00A         	goto	l3747
  4881   00144E                     u4160:
  4882   00144E                     
  4883                           ; BSR set to: 0
  4884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4885   00144E  0E00               	movlw	0
  4886   001450  6F7B               	movwf	efgtoa@l& (0+255),b
  4887   001452  0E00               	movlw	0
  4888   001454  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4889   001456  0E00               	movlw	0
  4890   001458  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4891   00145A  0E00               	movlw	0
  4892   00145C  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4893   00145E                     l3747:
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4896   00145E  C082  F001         	movff	efgtoa@g,___fladd@b
  4897   001462  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  4898   001466  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  4899   00146A  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  4900   00146E  C07B  F005         	movff	efgtoa@l,___fladd@a
  4901   001472  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  4902   001476  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  4903   00147A  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  4904   00147E  EC4C  F00C         	call	___fladd	;wreg free
  4905   001482  C001  F077         	movff	?___fladd,efgtoa@h
  4906   001486  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  4907   00148A  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  4908   00148E  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  4909   001492                     
  4910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4911   001492  C077  F043         	movff	efgtoa@h,___flge@ff1
  4912   001496  C078  F044         	movff	efgtoa@h+1,___flge@ff1+1
  4913   00149A  C079  F045         	movff	efgtoa@h+2,___flge@ff1+2
  4914   00149E  C07A  F046         	movff	efgtoa@h+3,___flge@ff1+3
  4915   0014A2  0E00               	movlw	0
  4916   0014A4  6E2E               	movwf	___flmul@a^0,c
  4917   0014A6  0E00               	movlw	0
  4918   0014A8  6E2F               	movwf	(___flmul@a+1)^0,c
  4919   0014AA  0E20               	movlw	32
  4920   0014AC  6E30               	movwf	(___flmul@a+2)^0,c
  4921   0014AE  0E41               	movlw	65
  4922   0014B0  6E31               	movwf	(___flmul@a+3)^0,c
  4923   0014B2  C073  F02A         	movff	efgtoa@ou,___flmul@b
  4924   0014B6  C074  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4925   0014BA  C075  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4926   0014BE  C076  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4927   0014C2  ECFA  F012         	call	___flmul	;wreg free
  4928   0014C6  C02A  F047         	movff	?___flmul,___flge@ff2
  4929   0014CA  C02B  F048         	movff	?___flmul+1,___flge@ff2+1
  4930   0014CE  C02C  F049         	movff	?___flmul+2,___flge@ff2+2
  4931   0014D2  C02D  F04A         	movff	?___flmul+3,___flge@ff2+3
  4932   0014D6  ECDA  F01E         	call	___flge	;wreg free
  4933   0014DA  A0D8               	btfss	status,0,c
  4934   0014DC  EF72  F00A         	goto	u4171
  4935   0014E0  EF74  F00A         	goto	u4170
  4936   0014E4                     u4171:
  4937   0014E4  EF9D  F00A         	goto	l3759
  4938   0014E8                     u4170:
  4939   0014E8                     
  4940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4941   0014E8  0100               	movlb	0	; () banked
  4942   0014EA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4943   0014EC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4944   0014EE                     
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4947   0014EE  C073  F02A         	movff	efgtoa@ou,___flmul@b
  4948   0014F2  C074  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4949   0014F6  C075  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4950   0014FA  C076  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4951   0014FE  0E00               	movlw	0
  4952   001500  6E2E               	movwf	___flmul@a^0,c
  4953   001502  0E00               	movlw	0
  4954   001504  6E2F               	movwf	(___flmul@a+1)^0,c
  4955   001506  0E20               	movlw	32
  4956   001508  6E30               	movwf	(___flmul@a+2)^0,c
  4957   00150A  0E41               	movlw	65
  4958   00150C  6E31               	movwf	(___flmul@a+3)^0,c
  4959   00150E  ECFA  F012         	call	___flmul	;wreg free
  4960   001512  C02A  F073         	movff	?___flmul,efgtoa@ou
  4961   001516  C02B  F074         	movff	?___flmul+1,efgtoa@ou+1
  4962   00151A  C02C  F075         	movff	?___flmul+2,efgtoa@ou+2
  4963   00151E  C02D  F076         	movff	?___flmul+3,efgtoa@ou+3
  4964   001522                     
  4965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4966   001522  0E66               	movlw	102
  4967   001524  0100               	movlb	0	; () banked
  4968   001526  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4969   001528  A4D8               	btfss	status,2,c
  4970   00152A  EF99  F00A         	goto	u4181
  4971   00152E  EF9B  F00A         	goto	u4180
  4972   001532                     u4181:
  4973   001532  EF9D  F00A         	goto	l3759
  4974   001536                     u4180:
  4975   001536                     
  4976                           ; BSR set to: 0
  4977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4978   001536  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4979   001538  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4980   00153A                     l3759:
  4981                           
  4982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4983   00153A  C073  F088         	movff	efgtoa@ou,efgtoa@u
  4984   00153E  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4985   001542  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4986   001546  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4987   00154A                     
  4988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4989   00154A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4990   00154E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4991   001552                     
  4992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4993   001552  0E00               	movlw	0
  4994   001554  0100               	movlb	0	; () banked
  4995   001556  6F68               	movwf	efgtoa@pp& (0+255),b
  4996   001558                     
  4997                           ; BSR set to: 0
  4998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4999   001558  0E00               	movlw	0
  5000   00155A  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  5001   00155C  0E00               	movlw	0
  5002   00155E  6F64               	movwf	efgtoa@t& (0+255),b
  5003   001560                     
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  5006   001560  0E00               	movlw	0
  5007   001562  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  5008   001564  0E00               	movlw	0
  5009   001566  6F7F               	movwf	efgtoa@i& (0+255),b
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5012   001568  EF9B  F00B         	goto	l3809
  5013   00156C                     l3769:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  5017   00156C  C077  F011         	movff	efgtoa@h,___fldiv@b
  5018   001570  C078  F012         	movff	efgtoa@h+1,___fldiv@b+1
  5019   001574  C079  F013         	movff	efgtoa@h+2,___fldiv@b+2
  5020   001578  C07A  F014         	movff	efgtoa@h+3,___fldiv@b+3
  5021   00157C  C088  F015         	movff	efgtoa@u,___fldiv@a
  5022   001580  C089  F016         	movff	efgtoa@u+1,___fldiv@a+1
  5023   001584  C08A  F017         	movff	efgtoa@u+2,___fldiv@a+2
  5024   001588  C08B  F018         	movff	efgtoa@u+3,___fldiv@a+3
  5025   00158C  EC0F  F015         	call	___fldiv	;wreg free
  5026   001590  C011  F02A         	movff	?___fldiv,floorf@x
  5027   001594  C012  F02B         	movff	?___fldiv+1,floorf@x+1
  5028   001598  C013  F02C         	movff	?___fldiv+2,floorf@x+2
  5029   00159C  C014  F02D         	movff	?___fldiv+3,floorf@x+3
  5030   0015A0  ECA7  F019         	call	_floorf	;wreg free
  5031   0015A4  C02A  F07B         	movff	?_floorf,efgtoa@l
  5032   0015A8  C02B  F07C         	movff	?_floorf+1,efgtoa@l+1
  5033   0015AC  C02C  F07D         	movff	?_floorf+2,efgtoa@l+2
  5034   0015B0  C02D  F07E         	movff	?_floorf+3,efgtoa@l+3
  5035                           
  5036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5037   0015B4  C07B  F04B         	movff	efgtoa@l,___fltol@f1
  5038   0015B8  C07C  F04C         	movff	efgtoa@l+1,___fltol@f1+1
  5039   0015BC  C07D  F04D         	movff	efgtoa@l+2,___fltol@f1+2
  5040   0015C0  C07E  F04E         	movff	efgtoa@l+3,___fltol@f1+3
  5041   0015C4  EC57  F01E         	call	___fltol	;wreg free
  5042   0015C8  BE4C               	btfsc	(?___fltol+1)^0,7,c
  5043   0015CA  EFF2  F00A         	goto	u4190
  5044   0015CE  504C               	movf	(?___fltol+1)^0,w,c
  5045   0015D0  E107               	bnz	u4191
  5046   0015D2  0E0A               	movlw	10
  5047   0015D4  5C4B               	subwf	?___fltol^0,w,c
  5048   0015D6  B0D8               	btfsc	status,0,c
  5049   0015D8  EFF0  F00A         	goto	u4191
  5050   0015DC  EFF2  F00A         	goto	u4190
  5051   0015E0                     u4191:
  5052   0015E0  EF02  F00B         	goto	l3773
  5053   0015E4                     u4190:
  5054   0015E4  C07B  F04B         	movff	efgtoa@l,___fltol@f1
  5055   0015E8  C07C  F04C         	movff	efgtoa@l+1,___fltol@f1+1
  5056   0015EC  C07D  F04D         	movff	efgtoa@l+2,___fltol@f1+2
  5057   0015F0  C07E  F04E         	movff	efgtoa@l+3,___fltol@f1+3
  5058   0015F4  EC57  F01E         	call	___fltol	;wreg free
  5059   0015F8  C04B  F06B         	movff	?___fltol,efgtoa@d
  5060   0015FC  C04C  F06C         	movff	?___fltol+1,efgtoa@d+1
  5061   001600  EF07  F00B         	goto	l975
  5062   001604                     l3773:
  5063   001604  0E00               	movlw	0
  5064   001606  0100               	movlb	0	; () banked
  5065   001608  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  5066   00160A  0E09               	movlw	9
  5067   00160C  6F6B               	movwf	efgtoa@d& (0+255),b
  5068   00160E                     l975:
  5069                           
  5070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  5071   00160E  0100               	movlb	0	; () banked
  5072   001610  5168               	movf	efgtoa@pp& (0+255),w,b
  5073   001612  A4D8               	btfss	status,2,c
  5074   001614  EF0E  F00B         	goto	u4201
  5075   001618  EF10  F00B         	goto	u4200
  5076   00161C                     u4201:
  5077   00161C  EF38  F00B         	goto	l3793
  5078   001620                     u4200:
  5079   001620                     
  5080                           ; BSR set to: 0
  5081   001620  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5082   001622  EF17  F00B         	goto	u4210
  5083   001626  EF15  F00B         	goto	u4211
  5084   00162A                     u4211:
  5085   00162A  EF38  F00B         	goto	l3793
  5086   00162E                     u4210:
  5087   00162E                     
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  5090   00162E  0E00               	movlw	low _dbuf
  5091   001630  2586               	addwf	efgtoa@n& (0+255),w,b
  5092   001632  6ED9               	movwf	fsr2l,c
  5093   001634  0E01               	movlw	high _dbuf
  5094   001636  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5095   001638  6EDA               	movwf	fsr2h,c
  5096   00163A  0E2E               	movlw	46
  5097   00163C  6EDF               	movwf	indf2,c
  5098   00163E                     
  5099                           ; BSR set to: 0
  5100   00163E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  5101   001640  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  5102   001642                     
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  5105   001642  0771               	decf	efgtoa@w& (0+255),f,b
  5106   001644  A0D8               	btfss	status,0,c
  5107   001646  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  5108   001648                     
  5109                           ; BSR set to: 0
  5110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  5111   001648  0E01               	movlw	1
  5112   00164A  6F68               	movwf	efgtoa@pp& (0+255),b
  5113   00164C  EF38  F00B         	goto	l3793
  5114   001650                     l3785:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  5118   001650  0E00               	movlw	low _dbuf
  5119   001652  2586               	addwf	efgtoa@n& (0+255),w,b
  5120   001654  6ED9               	movwf	fsr2l,c
  5121   001656  0E01               	movlw	high _dbuf
  5122   001658  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5123   00165A  6EDA               	movwf	fsr2h,c
  5124   00165C  0E30               	movlw	48
  5125   00165E  6EDF               	movwf	indf2,c
  5126   001660                     
  5127                           ; BSR set to: 0
  5128   001660  4B86               	infsnz	efgtoa@n& (0+255),f,b
  5129   001662  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  5130   001664                     
  5131                           ; BSR set to: 0
  5132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  5133   001664  0771               	decf	efgtoa@w& (0+255),f,b
  5134   001666  A0D8               	btfss	status,0,c
  5135   001668  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  5136   00166A                     
  5137                           ; BSR set to: 0
  5138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  5139   00166A  0764               	decf	efgtoa@t& (0+255),f,b
  5140   00166C  A0D8               	btfss	status,0,c
  5141   00166E  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  5142   001670                     l3793:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  5146   001670  5164               	movf	efgtoa@t& (0+255),w,b
  5147   001672  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5148   001674  A4D8               	btfss	status,2,c
  5149   001676  EF3F  F00B         	goto	u4221
  5150   00167A  EF41  F00B         	goto	u4220
  5151   00167E                     u4221:
  5152   00167E  EF28  F00B         	goto	l3785
  5153   001682                     u4220:
  5154   001682                     
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5157   001682  0E00               	movlw	low _dbuf
  5158   001684  2586               	addwf	efgtoa@n& (0+255),w,b
  5159   001686  6ED9               	movwf	fsr2l,c
  5160   001688  0E01               	movlw	high _dbuf
  5161   00168A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5162   00168C  6EDA               	movwf	fsr2h,c
  5163   00168E  516B               	movf	efgtoa@d& (0+255),w,b
  5164   001690  0F30               	addlw	48
  5165   001692  6EDF               	movwf	indf2,c
  5166   001694                     
  5167                           ; BSR set to: 0
  5168   001694  4B86               	infsnz	efgtoa@n& (0+255),f,b
  5169   001696  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  5170   001698                     
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  5173   001698  0771               	decf	efgtoa@w& (0+255),f,b
  5174   00169A  A0D8               	btfss	status,0,c
  5175   00169C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  5176   00169E                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  5179   00169E  C077  F043         	movff	efgtoa@h,___flsub@b
  5180   0016A2  C078  F044         	movff	efgtoa@h+1,___flsub@b+1
  5181   0016A6  C079  F045         	movff	efgtoa@h+2,___flsub@b+2
  5182   0016AA  C07A  F046         	movff	efgtoa@h+3,___flsub@b+3
  5183   0016AE  C07B  F02E         	movff	efgtoa@l,___flmul@a
  5184   0016B2  C07C  F02F         	movff	efgtoa@l+1,___flmul@a+1
  5185   0016B6  C07D  F030         	movff	efgtoa@l+2,___flmul@a+2
  5186   0016BA  C07E  F031         	movff	efgtoa@l+3,___flmul@a+3
  5187   0016BE  C088  F02A         	movff	efgtoa@u,___flmul@b
  5188   0016C2  C089  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5189   0016C6  C08A  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5190   0016CA  C08B  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5191   0016CE  ECFA  F012         	call	___flmul	;wreg free
  5192   0016D2  C02A  F047         	movff	?___flmul,___flsub@a
  5193   0016D6  C02B  F048         	movff	?___flmul+1,___flsub@a+1
  5194   0016DA  C02C  F049         	movff	?___flmul+2,___flsub@a+2
  5195   0016DE  C02D  F04A         	movff	?___flmul+3,___flsub@a+3
  5196   0016E2  ECCB  F022         	call	___flsub	;wreg free
  5197   0016E6  C043  F077         	movff	?___flsub,efgtoa@h
  5198   0016EA  C044  F078         	movff	?___flsub+1,efgtoa@h+1
  5199   0016EE  C045  F079         	movff	?___flsub+2,efgtoa@h+2
  5200   0016F2  C046  F07A         	movff	?___flsub+3,efgtoa@h+3
  5201   0016F6                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  5203   0016F6  C088  F011         	movff	efgtoa@u,___fldiv@b
  5204   0016FA  C089  F012         	movff	efgtoa@u+1,___fldiv@b+1
  5205   0016FE  C08A  F013         	movff	efgtoa@u+2,___fldiv@b+2
  5206   001702  C08B  F014         	movff	efgtoa@u+3,___fldiv@b+3
  5207   001706  0E00               	movlw	0
  5208   001708  6E15               	movwf	___fldiv@a^0,c
  5209   00170A  0E00               	movlw	0
  5210   00170C  6E16               	movwf	(___fldiv@a+1)^0,c
  5211   00170E  0E20               	movlw	32
  5212   001710  6E17               	movwf	(___fldiv@a+2)^0,c
  5213   001712  0E41               	movlw	65
  5214   001714  6E18               	movwf	(___fldiv@a+3)^0,c
  5215   001716  EC0F  F015         	call	___fldiv	;wreg free
  5216   00171A  C011  F088         	movff	?___fldiv,efgtoa@u
  5217   00171E  C012  F089         	movff	?___fldiv+1,efgtoa@u+1
  5218   001722  C013  F08A         	movff	?___fldiv+2,efgtoa@u+2
  5219   001726  C014  F08B         	movff	?___fldiv+3,efgtoa@u+3
  5220   00172A                     
  5221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  5222   00172A  0100               	movlb	0	; () banked
  5223   00172C  0760               	decf	efgtoa@ne& (0+255),f,b
  5224   00172E  A0D8               	btfss	status,0,c
  5225   001730  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  5226   001732                     
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  5229   001732  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  5230   001734  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  5231   001736                     l3809:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5235   001736  516D               	movf	efgtoa@m& (0+255),w,b
  5236   001738  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5237   00173A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5238   00173C  0A80               	xorlw	128
  5239   00173E  6E5C               	movwf	??_efgtoa^0,c
  5240   001740  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  5241   001742  0A80               	xorlw	128
  5242   001744  585C               	subwfb	??_efgtoa^0,w,c
  5243   001746  B0D8               	btfsc	status,0,c
  5244   001748  EFA8  F00B         	goto	u4231
  5245   00174C  EFAA  F00B         	goto	u4230
  5246   001750                     u4231:
  5247   001750  EFB8  F00B         	goto	l3813
  5248   001754                     u4230:
  5249   001754                     
  5250                           ; BSR set to: 0
  5251   001754  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5252   001756  EFB6  F00B         	goto	u4241
  5253   00175A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  5254   00175C  E109               	bnz	u4240
  5255   00175E  0E4B               	movlw	75
  5256   001760  5D86               	subwf	efgtoa@n& (0+255),w,b
  5257   001762  A0D8               	btfss	status,0,c
  5258   001764  EFB6  F00B         	goto	u4241
  5259   001768  EFB8  F00B         	goto	u4240
  5260   00176C                     u4241:
  5261   00176C  EFB6  F00A         	goto	l3769
  5262   001770                     u4240:
  5263   001770                     l3813:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  5267   001770  0E00               	movlw	0
  5268   001772  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  5269   001774  0E4F               	movlw	79
  5270   001776  6F7F               	movwf	efgtoa@i& (0+255),b
  5271   001778                     
  5272                           ; BSR set to: 0
  5273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  5274   001778  0E00               	movlw	low _dbuf
  5275   00177A  257F               	addwf	efgtoa@i& (0+255),w,b
  5276   00177C  6ED9               	movwf	fsr2l,c
  5277   00177E  0E01               	movlw	high _dbuf
  5278   001780  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5279   001782  6EDA               	movwf	fsr2h,c
  5280   001784  0E00               	movlw	0
  5281   001786  6EDF               	movwf	indf2,c
  5282   001788                     
  5283                           ; BSR set to: 0
  5284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5285   001788  0E00               	movlw	low _dbuf
  5286   00178A  6E5C               	movwf	??_efgtoa^0,c
  5287   00178C  0E01               	movlw	high _dbuf
  5288   00178E  6E5D               	movwf	(??_efgtoa+1)^0,c
  5289   001790  5186               	movf	efgtoa@n& (0+255),w,b
  5290   001792  5E5C               	subwf	??_efgtoa^0,f,c
  5291   001794  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  5292   001796  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  5293   001798  517F               	movf	efgtoa@i& (0+255),w,b
  5294   00179A  245C               	addwf	??_efgtoa^0,w,c
  5295   00179C  6E01               	movwf	memcpy@d1^0,c
  5296   00179E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5297   0017A0  205D               	addwfc	(??_efgtoa+1)^0,w,c
  5298   0017A2  6E02               	movwf	(memcpy@d1+1)^0,c
  5299   0017A4  0E00               	movlw	low _dbuf
  5300   0017A6  6E03               	movwf	memcpy@s1^0,c
  5301   0017A8  0E01               	movlw	high _dbuf
  5302   0017AA  6E04               	movwf	(memcpy@s1+1)^0,c
  5303   0017AC  C086  F005         	movff	efgtoa@n,memcpy@n
  5304   0017B0  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  5305   0017B4  ECA3  F022         	call	_memcpy	;wreg free
  5306   0017B8                     
  5307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  5308   0017B8  0100               	movlb	0	; () banked
  5309   0017BA  5186               	movf	efgtoa@n& (0+255),w,b
  5310   0017BC  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5311   0017BE  6F86               	movwf	efgtoa@n& (0+255),b
  5312   0017C0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  5313   0017C2  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5314   0017C4  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  5315   0017C6                     
  5316                           ; BSR set to: 0
  5317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  5318   0017C6  5181               	movf	efgtoa@sign& (0+255),w,b
  5319   0017C8  A4D8               	btfss	status,2,c
  5320   0017CA  EFE9  F00B         	goto	u4251
  5321   0017CE  EFEC  F00B         	goto	u4250
  5322   0017D2                     u4251:
  5323   0017D2  0E01               	movlw	1
  5324   0017D4  EFED  F00B         	goto	u4260
  5325   0017D8                     u4250:
  5326   0017D8  0E00               	movlw	0
  5327   0017DA                     u4260:
  5328   0017DA  6F7F               	movwf	efgtoa@i& (0+255),b
  5329   0017DC  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  5330   0017DE                     
  5331                           ; BSR set to: 0
  5332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  5333   0017DE  A3DD               	btfss	_flags& (0+255),1,b
  5334   0017E0  EFF4  F00B         	goto	u4271
  5335   0017E4  EFF6  F00B         	goto	u4270
  5336   0017E8                     u4271:
  5337   0017E8  EF24  F00C         	goto	l3835
  5338   0017EC                     u4270:
  5339   0017EC  EF06  F00C         	goto	l3831
  5340   0017F0                     l3827:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  5344   0017F0  0786               	decf	efgtoa@n& (0+255),f,b
  5345   0017F2  A0D8               	btfss	status,0,c
  5346   0017F4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  5347   0017F6  0E00               	movlw	low _dbuf
  5348   0017F8  2586               	addwf	efgtoa@n& (0+255),w,b
  5349   0017FA  6ED9               	movwf	fsr2l,c
  5350   0017FC  0E01               	movlw	high _dbuf
  5351   0017FE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5352   001800  6EDA               	movwf	fsr2h,c
  5353   001802  0E30               	movlw	48
  5354   001804  6EDF               	movwf	indf2,c
  5355   001806                     
  5356                           ; BSR set to: 0
  5357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  5358   001806  0771               	decf	efgtoa@w& (0+255),f,b
  5359   001808  A0D8               	btfss	status,0,c
  5360   00180A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  5361   00180C                     l3831:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  5365   00180C  5171               	movf	efgtoa@w& (0+255),w,b
  5366   00180E  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5367   001810  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5368   001812  0A80               	xorlw	128
  5369   001814  6E5C               	movwf	??_efgtoa^0,c
  5370   001816  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  5371   001818  0A80               	xorlw	128
  5372   00181A  585C               	subwfb	??_efgtoa^0,w,c
  5373   00181C  B0D8               	btfsc	status,0,c
  5374   00181E  EF13  F00C         	goto	u4281
  5375   001822  EF15  F00C         	goto	u4280
  5376   001826                     u4281:
  5377   001826  EF24  F00C         	goto	l3835
  5378   00182A                     u4280:
  5379   00182A                     
  5380                           ; BSR set to: 0
  5381   00182A  5186               	movf	efgtoa@n& (0+255),w,b
  5382   00182C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  5383   00182E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5384   001830  0A80               	xorlw	128
  5385   001832  6E5C               	movwf	??_efgtoa^0,c
  5386   001834  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  5387   001836  0A80               	xorlw	128
  5388   001838  585C               	subwfb	??_efgtoa^0,w,c
  5389   00183A  A0D8               	btfss	status,0,c
  5390   00183C  EF22  F00C         	goto	u4291
  5391   001840  EF24  F00C         	goto	u4290
  5392   001844                     u4291:
  5393   001844  EFF8  F00B         	goto	l3827
  5394   001848                     u4290:
  5395   001848                     l3835:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  5399   001848  5181               	movf	efgtoa@sign& (0+255),w,b
  5400   00184A  B4D8               	btfsc	status,2,c
  5401   00184C  EF2A  F00C         	goto	u4301
  5402   001850  EF2C  F00C         	goto	u4300
  5403   001854                     u4301:
  5404   001854  EF37  F00C         	goto	l3839
  5405   001858                     u4300:
  5406   001858                     
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  5409   001858  0786               	decf	efgtoa@n& (0+255),f,b
  5410   00185A  A0D8               	btfss	status,0,c
  5411   00185C  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  5412   00185E  0E00               	movlw	low _dbuf
  5413   001860  2586               	addwf	efgtoa@n& (0+255),w,b
  5414   001862  6ED9               	movwf	fsr2l,c
  5415   001864  0E01               	movlw	high _dbuf
  5416   001866  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5417   001868  6EDA               	movwf	fsr2h,c
  5418   00186A  C081  FFDF         	movff	efgtoa@sign,indf2
  5419   00186E                     l3839:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  5423   00186E  517F               	movf	efgtoa@i& (0+255),w,b
  5424   001870  5F71               	subwf	efgtoa@w& (0+255),f,b
  5425   001872  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  5426   001874  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5427   001876                     
  5428                           ; BSR set to: 0
  5429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5430   001876  C055  F011         	movff	efgtoa@fp,pad@fp
  5431   00187A  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  5432   00187E  0E00               	movlw	low _dbuf
  5433   001880  2586               	addwf	efgtoa@n& (0+255),w,b
  5434   001882  6E13               	movwf	pad@buf^0,c
  5435   001884  0E01               	movlw	high _dbuf
  5436   001886  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5437   001888  6E14               	movwf	(pad@buf+1)^0,c
  5438   00188A  C071  F015         	movff	efgtoa@w,pad@p
  5439   00188E  C072  F016         	movff	efgtoa@w+1,pad@p+1
  5440   001892  ECA2  F020         	call	_pad	;wreg free
  5441   001896                     l942:
  5442   001896  0012               	return		;funcret
  5443   001898                     __end_of_efgtoa:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _strcpy *****************
  5447 ;; Defined at:
  5448 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5451 ;;		 -> dbuf(80), 
  5452 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5453 ;;		 -> STR_5(4), STR_2(4), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  d               2    6[COMRAM] PTR unsigned char 
  5456 ;;		 -> dbuf(80), 
  5457 ;;  s               2    4[COMRAM] PTR const unsigned char 
  5458 ;;		 -> STR_5(4), STR_2(4), 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    0[COMRAM] PTR unsigned char 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;Total ram usage:        8 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_efgtoa
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text23
  5482   004622                     __ptext23:
  5483                           	callstack 0
  5484   004622                     _strcpy:
  5485                           	callstack 25
  5486   004622  C003  F005         	movff	strcpy@src,strcpy@s
  5487   004626  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  5488   00462A  C001  F007         	movff	strcpy@dest,strcpy@d
  5489   00462E  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  5490   004632                     l3489:
  5491   004632  C005  FFF6         	movff	strcpy@s,tblptrl
  5492   004636  C006  FFF7         	movff	strcpy@s+1,tblptrh
  5493   00463A  4A05               	infsnz	strcpy@s^0,f,c
  5494   00463C  2A06               	incf	(strcpy@s+1)^0,f,c
  5495   00463E                     	if	0	;tblptru may be non-zero
  5496   00463E                     	endif
  5497   00463E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5498   00463E  0E00               	movlw	low (__mediumconst shr (0+16))
  5499   004640  6EF8               	movwf	tblptru,c
  5500   004642                     	endif
  5501   004642  C007  FFD9         	movff	strcpy@d,fsr2l
  5502   004646  C008  FFDA         	movff	strcpy@d+1,fsr2h
  5503   00464A  4A07               	infsnz	strcpy@d^0,f,c
  5504   00464C  2A08               	incf	(strcpy@d+1)^0,f,c
  5505   00464E  0008               	tblrd		*
  5506   004650  CFF5 FFDF          	movff	tablat,indf2
  5507   004654  50DF               	movf	indf2,w,c
  5508   004656  A4D8               	btfss	status,2,c
  5509   004658  EF30  F023         	goto	u3661
  5510   00465C  EF32  F023         	goto	u3660
  5511   004660                     u3661:
  5512   004660  EF19  F023         	goto	l3489
  5513   004664                     u3660:
  5514   004664  0012               	return		;funcret
  5515   004666                     __end_of_strcpy:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _memcpy *****************
  5519 ;; Defined at:
  5520 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  d1              2    0[COMRAM] PTR void 
  5523 ;;		 -> dbuf(80), 
  5524 ;;  s1              2    2[COMRAM] PTR const void 
  5525 ;;		 -> dbuf(80), 
  5526 ;;  n               2    4[COMRAM] unsigned int 
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5529 ;;		 -> dbuf(80), 
  5530 ;;  d               2    6[COMRAM] PTR unsigned char 
  5531 ;;		 -> dbuf(80), 
  5532 ;;  tmp             1   10[COMRAM] unsigned char 
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  2    0[COMRAM] PTR void 
  5535 ;; Registers used:
  5536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5542 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5546 ;;Total ram usage:       11 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_efgtoa
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text24
  5556   004546                     __ptext24:
  5557                           	callstack 0
  5558   004546                     _memcpy:
  5559                           	callstack 25
  5560   004546  C003  F009         	movff	memcpy@s1,memcpy@s
  5561   00454A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  5562   00454E  C001  F007         	movff	memcpy@d1,memcpy@d
  5563   004552  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  5564   004556  EFBD  F022         	goto	l3533
  5565   00455A                     l3525:
  5566   00455A  C009  FFD9         	movff	memcpy@s,fsr2l
  5567   00455E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  5568   004562  50DF               	movf	indf2,w,c
  5569   004564  6E0B               	movwf	memcpy@tmp^0,c
  5570   004566  4A09               	infsnz	memcpy@s^0,f,c
  5571   004568  2A0A               	incf	(memcpy@s+1)^0,f,c
  5572   00456A  C007  FFD9         	movff	memcpy@d,fsr2l
  5573   00456E  C008  FFDA         	movff	memcpy@d+1,fsr2h
  5574   004572  C00B  FFDF         	movff	memcpy@tmp,indf2
  5575   004576  4A07               	infsnz	memcpy@d^0,f,c
  5576   004578  2A08               	incf	(memcpy@d+1)^0,f,c
  5577   00457A                     l3533:
  5578   00457A  0605               	decf	memcpy@n^0,f,c
  5579   00457C  A0D8               	btfss	status,0,c
  5580   00457E  0606               	decf	(memcpy@n+1)^0,f,c
  5581   004580  2805               	incf	memcpy@n^0,w,c
  5582   004582  E106               	bnz	u3781
  5583   004584  2806               	incf	(memcpy@n+1)^0,w,c
  5584   004586  A4D8               	btfss	status,2,c
  5585   004588  EFC8  F022         	goto	u3781
  5586   00458C  EFCA  F022         	goto	u3780
  5587   004590                     u3781:
  5588   004590  EFAD  F022         	goto	l3525
  5589   004594                     u3780:
  5590   004594  0012               	return		;funcret
  5591   004596                     __end_of_memcpy:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function _labs *****************
  5595 ;; Defined at:
  5596 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  a               4    0[COMRAM] long 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  4    0[COMRAM] long 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5613 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5614 ;;Total ram usage:        8 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_efgtoa
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text25
  5624   00429C                     __ptext25:
  5625                           	callstack 0
  5626   00429C                     _labs:
  5627                           	callstack 25
  5628   00429C  BE04               	btfsc	(labs@a+3)^0,7,c
  5629   00429E  EF5D  F021         	goto	u3670
  5630   0042A2  5004               	movf	(labs@a+3)^0,w,c
  5631   0042A4  1003               	iorwf	(labs@a+2)^0,w,c
  5632   0042A6  1002               	iorwf	(labs@a+1)^0,w,c
  5633   0042A8  E106               	bnz	u3671
  5634   0042AA  0401               	decf	labs@a^0,w,c
  5635   0042AC  B0D8               	btfsc	status,0,c
  5636   0042AE  EF5B  F021         	goto	u3671
  5637   0042B2  EF5D  F021         	goto	u3670
  5638   0042B6                     u3671:
  5639   0042B6  EF78  F021         	goto	l1107
  5640   0042BA                     u3670:
  5641   0042BA  C001  F005         	movff	labs@a,??_labs
  5642   0042BE  C002  F006         	movff	labs@a+1,??_labs+1
  5643   0042C2  C003  F007         	movff	labs@a+2,??_labs+2
  5644   0042C6  C004  F008         	movff	labs@a+3,??_labs+3
  5645   0042CA  1E05               	comf	??_labs^0,f,c
  5646   0042CC  1E06               	comf	(??_labs+1)^0,f,c
  5647   0042CE  1E07               	comf	(??_labs+2)^0,f,c
  5648   0042D0  1E08               	comf	(??_labs+3)^0,f,c
  5649   0042D2  2A05               	incf	??_labs^0,f,c
  5650   0042D4  0E00               	movlw	0
  5651   0042D6  2206               	addwfc	(??_labs+1)^0,f,c
  5652   0042D8  2207               	addwfc	(??_labs+2)^0,f,c
  5653   0042DA  2208               	addwfc	(??_labs+3)^0,f,c
  5654   0042DC  C005  F001         	movff	??_labs,?_labs
  5655   0042E0  C006  F002         	movff	??_labs+1,?_labs+1
  5656   0042E4  C007  F003         	movff	??_labs+2,?_labs+2
  5657   0042E8  C008  F004         	movff	??_labs+3,?_labs+3
  5658   0042EC  EF80  F021         	goto	l1110
  5659   0042F0                     l1107:
  5660   0042F0  C001  F001         	movff	labs@a,?_labs
  5661   0042F4  C002  F002         	movff	labs@a+1,?_labs+1
  5662   0042F8  C003  F003         	movff	labs@a+2,?_labs+2
  5663   0042FC  C004  F004         	movff	labs@a+3,?_labs+3
  5664   004300                     l1110:
  5665   004300  0012               	return		;funcret
  5666   004302                     __end_of_labs:
  5667                           	callstack 0
  5668                           
  5669 ;; *************** function _floorf *****************
  5670 ;; Defined at:
  5671 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  x               4   41[COMRAM] float 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  u               4   57[COMRAM] struct .
  5676 ;;  m               4   51[COMRAM] unsigned long 
  5677 ;;  e               2   55[COMRAM] int 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  4   41[COMRAM] float 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5688 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;Total ram usage:       20 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_efgtoa
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text26
  5701   00334E                     __ptext26:
  5702                           	callstack 0
  5703   00334E                     _floorf:
  5704                           	callstack 25
  5705   00334E  C0D1  F03A         	movff	floorf@F526,floorf@u
  5706   003352  C0D2  F03B         	movff	floorf@F526+1,floorf@u+1
  5707   003356  C0D3  F03C         	movff	floorf@F526+2,floorf@u+2
  5708   00335A  C0D4  F03D         	movff	floorf@F526+3,floorf@u+3
  5709   00335E  C02A  F03A         	movff	floorf@x,floorf@u
  5710   003362  C02B  F03B         	movff	floorf@x+1,floorf@u+1
  5711   003366  C02C  F03C         	movff	floorf@x+2,floorf@u+2
  5712   00336A  C02D  F03D         	movff	floorf@x+3,floorf@u+3
  5713   00336E  0E81               	movlw	129
  5714   003370  6E2E               	movwf	??_floorf^0,c
  5715   003372  0EFF               	movlw	255
  5716   003374  6E2F               	movwf	(??_floorf+1)^0,c
  5717   003376  C03A  F030         	movff	floorf@u,??_floorf+2
  5718   00337A  C03B  F031         	movff	floorf@u+1,??_floorf+3
  5719   00337E  C03C  F032         	movff	floorf@u+2,??_floorf+4
  5720   003382  C03D  F033         	movff	floorf@u+3,??_floorf+5
  5721   003386  0E18               	movlw	24
  5722   003388  EFCB  F019         	goto	u3680
  5723   00338C                     u3685:
  5724   00338C  90D8               	bcf	status,0,c
  5725   00338E  3233               	rrcf	(??_floorf+5)^0,f,c
  5726   003390  3232               	rrcf	(??_floorf+4)^0,f,c
  5727   003392  3231               	rrcf	(??_floorf+3)^0,f,c
  5728   003394  3230               	rrcf	(??_floorf+2)^0,f,c
  5729   003396                     u3680:
  5730   003396  2EE8               	decfsz	wreg,f,c
  5731   003398  EFC6  F019         	goto	u3685
  5732   00339C  5030               	movf	(??_floorf+2)^0,w,c
  5733   00339E  242E               	addwf	??_floorf^0,w,c
  5734   0033A0  6E38               	movwf	floorf@e^0,c
  5735   0033A2  0E00               	movlw	0
  5736   0033A4  202F               	addwfc	(??_floorf+1)^0,w,c
  5737   0033A6  6E39               	movwf	(floorf@e+1)^0,c
  5738   0033A8  BE39               	btfsc	(floorf@e+1)^0,7,c
  5739   0033AA  EFE0  F019         	goto	u3691
  5740   0033AE  5039               	movf	(floorf@e+1)^0,w,c
  5741   0033B0  E109               	bnz	u3690
  5742   0033B2  0E17               	movlw	23
  5743   0033B4  5C38               	subwf	floorf@e^0,w,c
  5744   0033B6  A0D8               	btfss	status,0,c
  5745   0033B8  EFE0  F019         	goto	u3691
  5746   0033BC  EFE2  F019         	goto	u3690
  5747   0033C0                     u3691:
  5748   0033C0  EFEC  F019         	goto	l3501
  5749   0033C4                     u3690:
  5750   0033C4                     l3499:
  5751   0033C4  C02A  F02A         	movff	floorf@x,?_floorf
  5752   0033C8  C02B  F02B         	movff	floorf@x+1,?_floorf+1
  5753   0033CC  C02C  F02C         	movff	floorf@x+2,?_floorf+2
  5754   0033D0  C02D  F02D         	movff	floorf@x+3,?_floorf+3
  5755   0033D4  EFAF  F01A         	goto	l1082
  5756   0033D8                     l3501:
  5757   0033D8  BE39               	btfsc	(floorf@e+1)^0,7,c
  5758   0033DA  EFF1  F019         	goto	u3701
  5759   0033DE  EFF3  F019         	goto	u3700
  5760   0033E2                     u3701:
  5761   0033E2  EF63  F01A         	goto	l3511
  5762   0033E6                     u3700:
  5763   0033E6  C038  F02E         	movff	floorf@e,??_floorf
  5764   0033EA  0EFF               	movlw	255
  5765   0033EC  6E2F               	movwf	(??_floorf+1)^0,c
  5766   0033EE  0EFF               	movlw	255
  5767   0033F0  6E30               	movwf	(??_floorf+2)^0,c
  5768   0033F2  0E7F               	movlw	127
  5769   0033F4  6E31               	movwf	(??_floorf+3)^0,c
  5770   0033F6  0E00               	movlw	0
  5771   0033F8  6E32               	movwf	(??_floorf+4)^0,c
  5772   0033FA                     u3715:
  5773   0033FA  662E               	tstfsz	??_floorf^0,c
  5774   0033FC  EF02  F01A         	goto	u3716
  5775   003400  EF0A  F01A         	goto	u3717
  5776   003404                     u3716:
  5777   003404  3432               	rlcf	(??_floorf+4)^0,w,c
  5778   003406  3232               	rrcf	(??_floorf+4)^0,f,c
  5779   003408  3231               	rrcf	(??_floorf+3)^0,f,c
  5780   00340A  3230               	rrcf	(??_floorf+2)^0,f,c
  5781   00340C  322F               	rrcf	(??_floorf+1)^0,f,c
  5782   00340E  2E2E               	decfsz	??_floorf^0,f,c
  5783   003410  EFFD  F019         	goto	u3715
  5784   003414                     u3717:
  5785   003414  C02F  F034         	movff	??_floorf+1,floorf@m
  5786   003418  C030  F035         	movff	??_floorf+2,floorf@m+1
  5787   00341C  C031  F036         	movff	??_floorf+3,floorf@m+2
  5788   003420  C032  F037         	movff	??_floorf+4,floorf@m+3
  5789   003424  5034               	movf	floorf@m^0,w,c
  5790   003426  143A               	andwf	floorf@u^0,w,c
  5791   003428  6E2E               	movwf	??_floorf^0,c
  5792   00342A  5035               	movf	(floorf@m+1)^0,w,c
  5793   00342C  143B               	andwf	(floorf@u+1)^0,w,c
  5794   00342E  6E2F               	movwf	(??_floorf+1)^0,c
  5795   003430  5036               	movf	(floorf@m+2)^0,w,c
  5796   003432  143C               	andwf	(floorf@u+2)^0,w,c
  5797   003434  6E30               	movwf	(??_floorf+2)^0,c
  5798   003436  5037               	movf	(floorf@m+3)^0,w,c
  5799   003438  143D               	andwf	(floorf@u+3)^0,w,c
  5800   00343A  6E31               	movwf	(??_floorf+3)^0,c
  5801   00343C  502E               	movf	??_floorf^0,w,c
  5802   00343E  102F               	iorwf	(??_floorf+1)^0,w,c
  5803   003440  1030               	iorwf	(??_floorf+2)^0,w,c
  5804   003442  1031               	iorwf	(??_floorf+3)^0,w,c
  5805   003444  A4D8               	btfss	status,2,c
  5806   003446  EF27  F01A         	goto	u3721
  5807   00344A  EF29  F01A         	goto	u3720
  5808   00344E                     u3721:
  5809   00344E  EF2B  F01A         	goto	l3507
  5810   003452                     u3720:
  5811   003452  EFE2  F019         	goto	l3499
  5812   003456                     l3507:
  5813   003456  C03A  F02E         	movff	floorf@u,??_floorf
  5814   00345A  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  5815   00345E  C03C  F030         	movff	floorf@u+2,??_floorf+2
  5816   003462  C03D  F031         	movff	floorf@u+3,??_floorf+3
  5817   003466  0E20               	movlw	32
  5818   003468  EF3B  F01A         	goto	u3730
  5819   00346C                     u3735:
  5820   00346C  90D8               	bcf	status,0,c
  5821   00346E  3231               	rrcf	(??_floorf+3)^0,f,c
  5822   003470  3230               	rrcf	(??_floorf+2)^0,f,c
  5823   003472  322F               	rrcf	(??_floorf+1)^0,f,c
  5824   003474  322E               	rrcf	??_floorf^0,f,c
  5825   003476                     u3730:
  5826   003476  2EE8               	decfsz	wreg,f,c
  5827   003478  EF36  F01A         	goto	u3735
  5828   00347C  502E               	movf	??_floorf^0,w,c
  5829   00347E  102F               	iorwf	(??_floorf+1)^0,w,c
  5830   003480  1030               	iorwf	(??_floorf+2)^0,w,c
  5831   003482  1031               	iorwf	(??_floorf+3)^0,w,c
  5832   003484  B4D8               	btfsc	status,2,c
  5833   003486  EF47  F01A         	goto	u3741
  5834   00348A  EF49  F01A         	goto	u3740
  5835   00348E                     u3741:
  5836   00348E  EF51  F01A         	goto	l1085
  5837   003492                     u3740:
  5838   003492  5034               	movf	floorf@m^0,w,c
  5839   003494  263A               	addwf	floorf@u^0,f,c
  5840   003496  5035               	movf	(floorf@m+1)^0,w,c
  5841   003498  223B               	addwfc	(floorf@u+1)^0,f,c
  5842   00349A  5036               	movf	(floorf@m+2)^0,w,c
  5843   00349C  223C               	addwfc	(floorf@u+2)^0,f,c
  5844   00349E  5037               	movf	(floorf@m+3)^0,w,c
  5845   0034A0  223D               	addwfc	(floorf@u+3)^0,f,c
  5846   0034A2                     l1085:
  5847   0034A2  1C34               	comf	floorf@m^0,w,c
  5848   0034A4  6E2E               	movwf	??_floorf^0,c
  5849   0034A6  1C35               	comf	(floorf@m+1)^0,w,c
  5850   0034A8  6E2F               	movwf	(??_floorf+1)^0,c
  5851   0034AA  1C36               	comf	(floorf@m+2)^0,w,c
  5852   0034AC  6E30               	movwf	(??_floorf+2)^0,c
  5853   0034AE  1C37               	comf	(floorf@m+3)^0,w,c
  5854   0034B0  6E31               	movwf	(??_floorf+3)^0,c
  5855   0034B2  502E               	movf	??_floorf^0,w,c
  5856   0034B4  163A               	andwf	floorf@u^0,f,c
  5857   0034B6  502F               	movf	(??_floorf+1)^0,w,c
  5858   0034B8  163B               	andwf	(floorf@u+1)^0,f,c
  5859   0034BA  5030               	movf	(??_floorf+2)^0,w,c
  5860   0034BC  163C               	andwf	(floorf@u+2)^0,f,c
  5861   0034BE  5031               	movf	(??_floorf+3)^0,w,c
  5862   0034C0  163D               	andwf	(floorf@u+3)^0,f,c
  5863   0034C2  EFA7  F01A         	goto	l3519
  5864   0034C6                     l3511:
  5865   0034C6  C03A  F02E         	movff	floorf@u,??_floorf
  5866   0034CA  C03B  F02F         	movff	floorf@u+1,??_floorf+1
  5867   0034CE  C03C  F030         	movff	floorf@u+2,??_floorf+2
  5868   0034D2  C03D  F031         	movff	floorf@u+3,??_floorf+3
  5869   0034D6  0E20               	movlw	32
  5870   0034D8  EF73  F01A         	goto	u3750
  5871   0034DC                     u3755:
  5872   0034DC  90D8               	bcf	status,0,c
  5873   0034DE  3231               	rrcf	(??_floorf+3)^0,f,c
  5874   0034E0  3230               	rrcf	(??_floorf+2)^0,f,c
  5875   0034E2  322F               	rrcf	(??_floorf+1)^0,f,c
  5876   0034E4  322E               	rrcf	??_floorf^0,f,c
  5877   0034E6                     u3750:
  5878   0034E6  2EE8               	decfsz	wreg,f,c
  5879   0034E8  EF6E  F01A         	goto	u3755
  5880   0034EC  502E               	movf	??_floorf^0,w,c
  5881   0034EE  102F               	iorwf	(??_floorf+1)^0,w,c
  5882   0034F0  1030               	iorwf	(??_floorf+2)^0,w,c
  5883   0034F2  1031               	iorwf	(??_floorf+3)^0,w,c
  5884   0034F4  A4D8               	btfss	status,2,c
  5885   0034F6  EF7F  F01A         	goto	u3761
  5886   0034FA  EF81  F01A         	goto	u3760
  5887   0034FE                     u3761:
  5888   0034FE  EF8B  F01A         	goto	l3515
  5889   003502                     u3760:
  5890   003502  0E00               	movlw	0
  5891   003504  6E3A               	movwf	floorf@u^0,c
  5892   003506  0E00               	movlw	0
  5893   003508  6E3B               	movwf	(floorf@u+1)^0,c
  5894   00350A  0E00               	movlw	0
  5895   00350C  6E3C               	movwf	(floorf@u+2)^0,c
  5896   00350E  0E00               	movlw	0
  5897   003510  6E3D               	movwf	(floorf@u+3)^0,c
  5898   003512  EFA7  F01A         	goto	l3519
  5899   003516                     l3515:
  5900   003516  90D8               	bcf	status,0,c
  5901   003518  343A               	rlcf	floorf@u^0,w,c
  5902   00351A  6E2E               	movwf	??_floorf^0,c
  5903   00351C  343B               	rlcf	(floorf@u+1)^0,w,c
  5904   00351E  6E2F               	movwf	(??_floorf+1)^0,c
  5905   003520  343C               	rlcf	(floorf@u+2)^0,w,c
  5906   003522  6E30               	movwf	(??_floorf+2)^0,c
  5907   003524  343D               	rlcf	(floorf@u+3)^0,w,c
  5908   003526  6E31               	movwf	(??_floorf+3)^0,c
  5909   003528  502E               	movf	??_floorf^0,w,c
  5910   00352A  102F               	iorwf	(??_floorf+1)^0,w,c
  5911   00352C  1030               	iorwf	(??_floorf+2)^0,w,c
  5912   00352E  1031               	iorwf	(??_floorf+3)^0,w,c
  5913   003530  B4D8               	btfsc	status,2,c
  5914   003532  EF9D  F01A         	goto	u3771
  5915   003536  EF9F  F01A         	goto	u3770
  5916   00353A                     u3771:
  5917   00353A  EFA7  F01A         	goto	l3519
  5918   00353E                     u3770:
  5919   00353E  0E00               	movlw	0
  5920   003540  6E3A               	movwf	floorf@u^0,c
  5921   003542  0E00               	movlw	0
  5922   003544  6E3B               	movwf	(floorf@u+1)^0,c
  5923   003546  0E80               	movlw	128
  5924   003548  6E3C               	movwf	(floorf@u+2)^0,c
  5925   00354A  0EBF               	movlw	191
  5926   00354C  6E3D               	movwf	(floorf@u+3)^0,c
  5927   00354E                     l3519:
  5928   00354E  C03A  F02A         	movff	floorf@u,?_floorf
  5929   003552  C03B  F02B         	movff	floorf@u+1,?_floorf+1
  5930   003556  C03C  F02C         	movff	floorf@u+2,?_floorf+2
  5931   00355A  C03D  F02D         	movff	floorf@u+3,?_floorf+3
  5932   00355E                     l1082:
  5933   00355E  0012               	return		;funcret
  5934   003560                     __end_of_floorf:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function ___fpclassifyf *****************
  5938 ;; Defined at:
  5939 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  x               4    0[COMRAM] float 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  u               4   10[COMRAM] struct .
  5944 ;;  e               2    8[COMRAM] int 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  2    0[COMRAM] int 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;Total ram usage:       14 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_efgtoa
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text27
  5968   003EB8                     __ptext27:
  5969                           	callstack 0
  5970   003EB8                     ___fpclassifyf:
  5971                           	callstack 25
  5972   003EB8  C0D5  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5973   003EBC  C0D6  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5974   003EC0  C0D7  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5975   003EC4  C0D8  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5976   003EC8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5977   003ECC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5978   003ED0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5979   003ED4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5980   003ED8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5981   003EDC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5982   003EE0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5983   003EE4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5984   003EE8  0E18               	movlw	24
  5985   003EEA  EF7C  F01F         	goto	u3590
  5986   003EEE                     u3595:
  5987   003EEE  90D8               	bcf	status,0,c
  5988   003EF0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5989   003EF2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5990   003EF4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5991   003EF6  3205               	rrcf	??___fpclassifyf^0,f,c
  5992   003EF8                     u3590:
  5993   003EF8  2EE8               	decfsz	wreg,f,c
  5994   003EFA  EF77  F01F         	goto	u3595
  5995   003EFE  5005               	movf	??___fpclassifyf^0,w,c
  5996   003F00  6E09               	movwf	___fpclassifyf@e^0,c
  5997   003F02  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5998   003F04  5009               	movf	___fpclassifyf@e^0,w,c
  5999   003F06  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6000   003F08  A4D8               	btfss	status,2,c
  6001   003F0A  EF89  F01F         	goto	u3601
  6002   003F0E  EF8B  F01F         	goto	u3600
  6003   003F12                     u3601:
  6004   003F12  EFAB  F01F         	goto	l3477
  6005   003F16                     u3600:
  6006   003F16  90D8               	bcf	status,0,c
  6007   003F18  340B               	rlcf	___fpclassifyf@u^0,w,c
  6008   003F1A  6E05               	movwf	??___fpclassifyf^0,c
  6009   003F1C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6010   003F1E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6011   003F20  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6012   003F22  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6013   003F24  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6014   003F26  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6015   003F28  5005               	movf	??___fpclassifyf^0,w,c
  6016   003F2A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6017   003F2C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6018   003F2E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6019   003F30  A4D8               	btfss	status,2,c
  6020   003F32  EF9D  F01F         	goto	u3611
  6021   003F36  EF9F  F01F         	goto	u3610
  6022   003F3A                     u3611:
  6023   003F3A  EFA5  F01F         	goto	l3473
  6024   003F3E                     u3610:
  6025   003F3E  0E00               	movlw	0
  6026   003F40  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6027   003F42  0E02               	movlw	2
  6028   003F44  6E01               	movwf	?___fpclassifyf^0,c
  6029   003F46  EFDA  F01F         	goto	l1043
  6030   003F4A                     l3473:
  6031   003F4A  0E00               	movlw	0
  6032   003F4C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6033   003F4E  0E03               	movlw	3
  6034   003F50  6E01               	movwf	?___fpclassifyf^0,c
  6035   003F52  EFDA  F01F         	goto	l1043
  6036   003F56                     l3477:
  6037   003F56  2809               	incf	___fpclassifyf@e^0,w,c
  6038   003F58  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6039   003F5A  A4D8               	btfss	status,2,c
  6040   003F5C  EFB2  F01F         	goto	u3621
  6041   003F60  EFB4  F01F         	goto	u3620
  6042   003F64                     u3621:
  6043   003F64  EFD6  F01F         	goto	l3483
  6044   003F68                     u3620:
  6045   003F68  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6046   003F6C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6047   003F70  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6048   003F74  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6049   003F78  0E09               	movlw	9
  6050   003F7A                     u3635:
  6051   003F7A  90D8               	bcf	status,0,c
  6052   003F7C  3605               	rlcf	??___fpclassifyf^0,f,c
  6053   003F7E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6054   003F80  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6055   003F82  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6056   003F84  2EE8               	decfsz	wreg,f,c
  6057   003F86  EFBD  F01F         	goto	u3635
  6058   003F8A  5005               	movf	??___fpclassifyf^0,w,c
  6059   003F8C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6060   003F8E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6061   003F90  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6062   003F92  B4D8               	btfsc	status,2,c
  6063   003F94  EFCE  F01F         	goto	u3641
  6064   003F98  EFD1  F01F         	goto	u3640
  6065   003F9C                     u3641:
  6066   003F9C  0E01               	movlw	1
  6067   003F9E  EFD2  F01F         	goto	u3650
  6068   003FA2                     u3640:
  6069   003FA2  0E00               	movlw	0
  6070   003FA4                     u3650:
  6071   003FA4  6E01               	movwf	?___fpclassifyf^0,c
  6072   003FA6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6073   003FA8  EFDA  F01F         	goto	l1043
  6074   003FAC                     l3483:
  6075   003FAC  0E00               	movlw	0
  6076   003FAE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6077   003FB0  0E04               	movlw	4
  6078   003FB2  6E01               	movwf	?___fpclassifyf^0,c
  6079   003FB4                     l1043:
  6080   003FB4  0012               	return		;funcret
  6081   003FB6                     __end_of___fpclassifyf:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function ___fltol *****************
  6085 ;; Defined at:
  6086 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  f1              4   74[COMRAM] int 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  exp1            1   83[COMRAM] unsigned char 
  6091 ;;  sign1           1   82[COMRAM] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  4   74[COMRAM] long 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6104 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;Total ram usage:       10 bytes
  6106 ;; Hardware stack levels used: 1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_colour_read_all
  6111 ;;		_Color2String
  6112 ;;		_efgtoa
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text28
  6117   003CAE                     __ptext28:
  6118                           	callstack 0
  6119   003CAE                     ___fltol:
  6120                           	callstack 29
  6121   003CAE  344D               	rlcf	(___fltol@f1+2)^0,w,c
  6122   003CB0  344E               	rlcf	(___fltol@f1+3)^0,w,c
  6123   003CB2  6E54               	movwf	___fltol@exp1^0,c
  6124   003CB4  5054               	movf	___fltol@exp1^0,w,c
  6125   003CB6  A4D8               	btfss	status,2,c
  6126   003CB8  EF60  F01E         	goto	u3471
  6127   003CBC  EF62  F01E         	goto	u3470
  6128   003CC0                     u3471:
  6129   003CC0  EF6C  F01E         	goto	l3405
  6130   003CC4                     u3470:
  6131   003CC4                     l3401:
  6132   003CC4  0E00               	movlw	0
  6133   003CC6  6E4B               	movwf	?___fltol^0,c
  6134   003CC8  0E00               	movlw	0
  6135   003CCA  6E4C               	movwf	(?___fltol+1)^0,c
  6136   003CCC  0E00               	movlw	0
  6137   003CCE  6E4D               	movwf	(?___fltol+2)^0,c
  6138   003CD0  0E00               	movlw	0
  6139   003CD2  6E4E               	movwf	(?___fltol+3)^0,c
  6140   003CD4  EFD9  F01E         	goto	l486
  6141   003CD8                     l3405:
  6142   003CD8  C04B  F04F         	movff	___fltol@f1,??___fltol
  6143   003CDC  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  6144   003CE0  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  6145   003CE4  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  6146   003CE8  0E20               	movlw	32
  6147   003CEA  EF7C  F01E         	goto	u3480
  6148   003CEE                     u3485:
  6149   003CEE  90D8               	bcf	status,0,c
  6150   003CF0  3252               	rrcf	(??___fltol+3)^0,f,c
  6151   003CF2  3251               	rrcf	(??___fltol+2)^0,f,c
  6152   003CF4  3250               	rrcf	(??___fltol+1)^0,f,c
  6153   003CF6  324F               	rrcf	??___fltol^0,f,c
  6154   003CF8                     u3480:
  6155   003CF8  2EE8               	decfsz	wreg,f,c
  6156   003CFA  EF77  F01E         	goto	u3485
  6157   003CFE  504F               	movf	??___fltol^0,w,c
  6158   003D00  6E53               	movwf	___fltol@sign1^0,c
  6159   003D02  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  6160   003D04  0EFF               	movlw	255
  6161   003D06  164B               	andwf	___fltol@f1^0,f,c
  6162   003D08  0EFF               	movlw	255
  6163   003D0A  164C               	andwf	(___fltol@f1+1)^0,f,c
  6164   003D0C  0EFF               	movlw	255
  6165   003D0E  164D               	andwf	(___fltol@f1+2)^0,f,c
  6166   003D10  0E00               	movlw	0
  6167   003D12  164E               	andwf	(___fltol@f1+3)^0,f,c
  6168   003D14  0E96               	movlw	150
  6169   003D16  5E54               	subwf	___fltol@exp1^0,f,c
  6170   003D18  BE54               	btfsc	___fltol@exp1^0,7,c
  6171   003D1A  EF93  F01E         	goto	u3490
  6172   003D1E  EF91  F01E         	goto	u3491
  6173   003D22                     u3491:
  6174   003D22  EFA9  F01E         	goto	l3425
  6175   003D26                     u3490:
  6176   003D26  5054               	movf	___fltol@exp1^0,w,c
  6177   003D28  0A80               	xorlw	128
  6178   003D2A  0F97               	addlw	151
  6179   003D2C  B0D8               	btfsc	status,0,c
  6180   003D2E  EF9B  F01E         	goto	u3501
  6181   003D32  EF9D  F01E         	goto	u3500
  6182   003D36                     u3501:
  6183   003D36  EF9F  F01E         	goto	l3421
  6184   003D3A                     u3500:
  6185   003D3A  EF62  F01E         	goto	l3401
  6186   003D3E                     l3421:
  6187   003D3E  90D8               	bcf	status,0,c
  6188   003D40  324E               	rrcf	(___fltol@f1+3)^0,f,c
  6189   003D42  324D               	rrcf	(___fltol@f1+2)^0,f,c
  6190   003D44  324C               	rrcf	(___fltol@f1+1)^0,f,c
  6191   003D46  324B               	rrcf	___fltol@f1^0,f,c
  6192   003D48  3E54               	incfsz	___fltol@exp1^0,f,c
  6193   003D4A  EF9F  F01E         	goto	l3421
  6194   003D4E  EFC1  F01E         	goto	l3435
  6195   003D52                     l3425:
  6196   003D52  0E1F               	movlw	31
  6197   003D54  6454               	cpfsgt	___fltol@exp1^0,c
  6198   003D56  EFAF  F01E         	goto	u3511
  6199   003D5A  EFB1  F01E         	goto	u3510
  6200   003D5E                     u3511:
  6201   003D5E  EFB9  F01E         	goto	l3433
  6202   003D62                     u3510:
  6203   003D62  EF62  F01E         	goto	l3401
  6204   003D66                     l3431:
  6205   003D66  90D8               	bcf	status,0,c
  6206   003D68  364B               	rlcf	___fltol@f1^0,f,c
  6207   003D6A  364C               	rlcf	(___fltol@f1+1)^0,f,c
  6208   003D6C  364D               	rlcf	(___fltol@f1+2)^0,f,c
  6209   003D6E  364E               	rlcf	(___fltol@f1+3)^0,f,c
  6210   003D70  0654               	decf	___fltol@exp1^0,f,c
  6211   003D72                     l3433:
  6212   003D72  5054               	movf	___fltol@exp1^0,w,c
  6213   003D74  A4D8               	btfss	status,2,c
  6214   003D76  EFBF  F01E         	goto	u3521
  6215   003D7A  EFC1  F01E         	goto	u3520
  6216   003D7E                     u3521:
  6217   003D7E  EFB3  F01E         	goto	l3431
  6218   003D82                     u3520:
  6219   003D82                     l3435:
  6220   003D82  5053               	movf	___fltol@sign1^0,w,c
  6221   003D84  B4D8               	btfsc	status,2,c
  6222   003D86  EFC7  F01E         	goto	u3531
  6223   003D8A  EFC9  F01E         	goto	u3530
  6224   003D8E                     u3531:
  6225   003D8E  EFD1  F01E         	goto	l3439
  6226   003D92                     u3530:
  6227   003D92  1E4E               	comf	(___fltol@f1+3)^0,f,c
  6228   003D94  1E4D               	comf	(___fltol@f1+2)^0,f,c
  6229   003D96  1E4C               	comf	(___fltol@f1+1)^0,f,c
  6230   003D98  6C4B               	negf	___fltol@f1^0,c
  6231   003D9A  0E00               	movlw	0
  6232   003D9C  224C               	addwfc	(___fltol@f1+1)^0,f,c
  6233   003D9E  224D               	addwfc	(___fltol@f1+2)^0,f,c
  6234   003DA0  224E               	addwfc	(___fltol@f1+3)^0,f,c
  6235   003DA2                     l3439:
  6236   003DA2  C04B  F04B         	movff	___fltol@f1,?___fltol
  6237   003DA6  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  6238   003DAA  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  6239   003DAE  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  6240   003DB2                     l486:
  6241   003DB2  0012               	return		;funcret
  6242   003DB4                     __end_of___fltol:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function ___flsub *****************
  6246 ;; Defined at:
  6247 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  b               4   66[COMRAM] long 
  6250 ;;  a               4   70[COMRAM] long 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  4   66[COMRAM] long 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6262 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;Total ram usage:        8 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 1
  6269 ;; This function calls:
  6270 ;;		___fladd
  6271 ;; This function is called by:
  6272 ;;		_Color2String
  6273 ;;		_efgtoa
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text29
  6278   004596                     __ptext29:
  6279                           	callstack 0
  6280   004596                     ___flsub:
  6281                           	callstack 24
  6282   004596  0E00               	movlw	0
  6283   004598  1A47               	xorwf	___flsub@a^0,f,c
  6284   00459A  0E00               	movlw	0
  6285   00459C  1A48               	xorwf	(___flsub@a+1)^0,f,c
  6286   00459E  0E00               	movlw	0
  6287   0045A0  1A49               	xorwf	(___flsub@a+2)^0,f,c
  6288   0045A2  0E80               	movlw	128
  6289   0045A4  1A4A               	xorwf	(___flsub@a+3)^0,f,c
  6290   0045A6  C043  F001         	movff	___flsub@b,___fladd@b
  6291   0045AA  C044  F002         	movff	___flsub@b+1,___fladd@b+1
  6292   0045AE  C045  F003         	movff	___flsub@b+2,___fladd@b+2
  6293   0045B2  C046  F004         	movff	___flsub@b+3,___fladd@b+3
  6294   0045B6  C047  F005         	movff	___flsub@a,___fladd@a
  6295   0045BA  C048  F006         	movff	___flsub@a+1,___fladd@a+1
  6296   0045BE  C049  F007         	movff	___flsub@a+2,___fladd@a+2
  6297   0045C2  C04A  F008         	movff	___flsub@a+3,___fladd@a+3
  6298   0045C6  EC4C  F00C         	call	___fladd	;wreg free
  6299   0045CA  C001  F043         	movff	?___fladd,?___flsub
  6300   0045CE  C002  F044         	movff	?___fladd+1,?___flsub+1
  6301   0045D2  C003  F045         	movff	?___fladd+2,?___flsub+2
  6302   0045D6  C004  F046         	movff	?___fladd+3,?___flsub+3
  6303   0045DA  0012               	return		;funcret
  6304   0045DC                     __end_of___flsub:
  6305                           	callstack 0
  6306                           
  6307 ;; *************** function ___fladd *****************
  6308 ;; Defined at:
  6309 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  b               4    0[COMRAM] long 
  6312 ;;  a               4    4[COMRAM] long 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  grs             1   15[COMRAM] unsigned char 
  6315 ;;  bexp            1   14[COMRAM] unsigned char 
  6316 ;;  aexp            1   13[COMRAM] unsigned char 
  6317 ;;  signs           1   12[COMRAM] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  4    0[COMRAM] unsigned char 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6327 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;Total ram usage:       16 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_colour_read_all
  6337 ;;		___flsub
  6338 ;;		_efgtoa
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text30
  6343   001898                     __ptext30:
  6344                           	callstack 0
  6345   001898                     ___fladd:
  6346                           	callstack 29
  6347   001898  5004               	movf	(___fladd@b+3)^0,w,c
  6348   00189A  0B80               	andlw	128
  6349   00189C  6E0D               	movwf	___fladd@signs^0,c
  6350   00189E  5004               	movf	(___fladd@b+3)^0,w,c
  6351   0018A0  2404               	addwf	(___fladd@b+3)^0,w,c
  6352   0018A2  6E0F               	movwf	___fladd@bexp^0,c
  6353   0018A4  AE03               	btfss	(___fladd@b+2)^0,7,c
  6354   0018A6  EF57  F00C         	goto	u2431
  6355   0018AA  EF59  F00C         	goto	u2430
  6356   0018AE                     u2431:
  6357   0018AE  EF5A  F00C         	goto	l2789
  6358   0018B2                     u2430:
  6359   0018B2  800F               	bsf	___fladd@bexp^0,0,c
  6360   0018B4                     l2789:
  6361   0018B4  500F               	movf	___fladd@bexp^0,w,c
  6362   0018B6  B4D8               	btfsc	status,2,c
  6363   0018B8  EF60  F00C         	goto	u2441
  6364   0018BC  EF62  F00C         	goto	u2440
  6365   0018C0                     u2441:
  6366   0018C0  EF77  F00C         	goto	l2799
  6367   0018C4                     u2440:
  6368   0018C4  280F               	incf	___fladd@bexp^0,w,c
  6369   0018C6  A4D8               	btfss	status,2,c
  6370   0018C8  EF68  F00C         	goto	u2451
  6371   0018CC  EF6A  F00C         	goto	u2450
  6372   0018D0                     u2451:
  6373   0018D0  EF72  F00C         	goto	l2795
  6374   0018D4                     u2450:
  6375   0018D4  0E00               	movlw	0
  6376   0018D6  6E01               	movwf	___fladd@b^0,c
  6377   0018D8  0E00               	movlw	0
  6378   0018DA  6E02               	movwf	(___fladd@b+1)^0,c
  6379   0018DC  0E00               	movlw	0
  6380   0018DE  6E03               	movwf	(___fladd@b+2)^0,c
  6381   0018E0  0E00               	movlw	0
  6382   0018E2  6E04               	movwf	(___fladd@b+3)^0,c
  6383   0018E4                     l2795:
  6384   0018E4  8E03               	bsf	(___fladd@b+2)^0,7,c
  6385   0018E6  0E00               	movlw	0
  6386   0018E8  6E04               	movwf	(___fladd@b+3)^0,c
  6387   0018EA  EF7F  F00C         	goto	l2801
  6388   0018EE                     l2799:
  6389   0018EE  0E00               	movlw	0
  6390   0018F0  6E01               	movwf	___fladd@b^0,c
  6391   0018F2  0E00               	movlw	0
  6392   0018F4  6E02               	movwf	(___fladd@b+1)^0,c
  6393   0018F6  0E00               	movlw	0
  6394   0018F8  6E03               	movwf	(___fladd@b+2)^0,c
  6395   0018FA  0E00               	movlw	0
  6396   0018FC  6E04               	movwf	(___fladd@b+3)^0,c
  6397   0018FE                     l2801:
  6398   0018FE  5008               	movf	(___fladd@a+3)^0,w,c
  6399   001900  0B80               	andlw	128
  6400   001902  6E0E               	movwf	___fladd@aexp^0,c
  6401   001904  500D               	movf	___fladd@signs^0,w,c
  6402   001906  180E               	xorwf	___fladd@aexp^0,w,c
  6403   001908  B4D8               	btfsc	status,2,c
  6404   00190A  EF89  F00C         	goto	u2461
  6405   00190E  EF8B  F00C         	goto	u2460
  6406   001912                     u2461:
  6407   001912  EF8C  F00C         	goto	l2807
  6408   001916                     u2460:
  6409   001916  8C0D               	bsf	___fladd@signs^0,6,c
  6410   001918                     l2807:
  6411   001918  5008               	movf	(___fladd@a+3)^0,w,c
  6412   00191A  2408               	addwf	(___fladd@a+3)^0,w,c
  6413   00191C  6E0E               	movwf	___fladd@aexp^0,c
  6414   00191E  AE07               	btfss	(___fladd@a+2)^0,7,c
  6415   001920  EF94  F00C         	goto	u2471
  6416   001924  EF96  F00C         	goto	u2470
  6417   001928                     u2471:
  6418   001928  EF97  F00C         	goto	l2813
  6419   00192C                     u2470:
  6420   00192C  800E               	bsf	___fladd@aexp^0,0,c
  6421   00192E                     l2813:
  6422   00192E  500E               	movf	___fladd@aexp^0,w,c
  6423   001930  B4D8               	btfsc	status,2,c
  6424   001932  EF9D  F00C         	goto	u2481
  6425   001936  EF9F  F00C         	goto	u2480
  6426   00193A                     u2481:
  6427   00193A  EFB4  F00C         	goto	l2823
  6428   00193E                     u2480:
  6429   00193E  280E               	incf	___fladd@aexp^0,w,c
  6430   001940  A4D8               	btfss	status,2,c
  6431   001942  EFA5  F00C         	goto	u2491
  6432   001946  EFA7  F00C         	goto	u2490
  6433   00194A                     u2491:
  6434   00194A  EFAF  F00C         	goto	l2819
  6435   00194E                     u2490:
  6436   00194E  0E00               	movlw	0
  6437   001950  6E05               	movwf	___fladd@a^0,c
  6438   001952  0E00               	movlw	0
  6439   001954  6E06               	movwf	(___fladd@a+1)^0,c
  6440   001956  0E00               	movlw	0
  6441   001958  6E07               	movwf	(___fladd@a+2)^0,c
  6442   00195A  0E00               	movlw	0
  6443   00195C  6E08               	movwf	(___fladd@a+3)^0,c
  6444   00195E                     l2819:
  6445   00195E  8E07               	bsf	(___fladd@a+2)^0,7,c
  6446   001960  0E00               	movlw	0
  6447   001962  6E08               	movwf	(___fladd@a+3)^0,c
  6448   001964  EFBC  F00C         	goto	l2825
  6449   001968                     l2823:
  6450   001968  0E00               	movlw	0
  6451   00196A  6E05               	movwf	___fladd@a^0,c
  6452   00196C  0E00               	movlw	0
  6453   00196E  6E06               	movwf	(___fladd@a+1)^0,c
  6454   001970  0E00               	movlw	0
  6455   001972  6E07               	movwf	(___fladd@a+2)^0,c
  6456   001974  0E00               	movlw	0
  6457   001976  6E08               	movwf	(___fladd@a+3)^0,c
  6458   001978                     l2825:
  6459   001978  500F               	movf	___fladd@bexp^0,w,c
  6460   00197A  5C0E               	subwf	___fladd@aexp^0,w,c
  6461   00197C  B0D8               	btfsc	status,0,c
  6462   00197E  EFC3  F00C         	goto	u2501
  6463   001982  EFC5  F00C         	goto	u2500
  6464   001986                     u2501:
  6465   001986  EFEC  F00C         	goto	l2861
  6466   00198A                     u2500:
  6467   00198A  AC0D               	btfss	___fladd@signs^0,6,c
  6468   00198C  EFCA  F00C         	goto	u2511
  6469   001990  EFCC  F00C         	goto	u2510
  6470   001994                     u2511:
  6471   001994  EFCE  F00C         	goto	l2831
  6472   001998                     u2510:
  6473   001998  0E80               	movlw	128
  6474   00199A  1A0D               	xorwf	___fladd@signs^0,f,c
  6475   00199C                     l2831:
  6476   00199C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6477   0019A0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6478   0019A4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6479   0019A8  C001  F010         	movff	___fladd@b,___fladd@grs
  6480   0019AC  C005  F001         	movff	___fladd@a,___fladd@b
  6481   0019B0  C010  F005         	movff	___fladd@grs,___fladd@a
  6482   0019B4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6483   0019B8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6484   0019BC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6485   0019C0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6486   0019C4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6487   0019C8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6488   0019CC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6489   0019D0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6490   0019D4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6491   0019D8                     l2861:
  6492   0019D8  0E00               	movlw	0
  6493   0019DA  6E10               	movwf	___fladd@grs^0,c
  6494   0019DC  500F               	movf	___fladd@bexp^0,w,c
  6495   0019DE  C00E  F009         	movff	___fladd@aexp,??___fladd
  6496   0019E2  6A0A               	clrf	(??___fladd+1)^0,c
  6497   0019E4  5E09               	subwf	??___fladd^0,f,c
  6498   0019E6  0E00               	movlw	0
  6499   0019E8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6500   0019EA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6501   0019EC  EF01  F00D         	goto	u2521
  6502   0019F0  500A               	movf	(??___fladd+1)^0,w,c
  6503   0019F2  E109               	bnz	u2520
  6504   0019F4  0E1A               	movlw	26
  6505   0019F6  5C09               	subwf	??___fladd^0,w,c
  6506   0019F8  A0D8               	btfss	status,0,c
  6507   0019FA  EF01  F00D         	goto	u2521
  6508   0019FE  EF03  F00D         	goto	u2520
  6509   001A02                     u2521:
  6510   001A02  EF3A  F00D         	goto	l718
  6511   001A06                     u2520:
  6512   001A06  5001               	movf	___fladd@b^0,w,c
  6513   001A08  1002               	iorwf	(___fladd@b+1)^0,w,c
  6514   001A0A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6515   001A0C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6516   001A0E  A4D8               	btfss	status,2,c
  6517   001A10  EF0C  F00D         	goto	u2531
  6518   001A14  EF0F  F00D         	goto	u2530
  6519   001A18                     u2531:
  6520   001A18  0E01               	movlw	1
  6521   001A1A  EF10  F00D         	goto	u2540
  6522   001A1E                     u2530:
  6523   001A1E  0E00               	movlw	0
  6524   001A20                     u2540:
  6525   001A20  6E10               	movwf	___fladd@grs^0,c
  6526   001A22  0E00               	movlw	0
  6527   001A24  6E01               	movwf	___fladd@b^0,c
  6528   001A26  0E00               	movlw	0
  6529   001A28  6E02               	movwf	(___fladd@b+1)^0,c
  6530   001A2A  0E00               	movlw	0
  6531   001A2C  6E03               	movwf	(___fladd@b+2)^0,c
  6532   001A2E  0E00               	movlw	0
  6533   001A30  6E04               	movwf	(___fladd@b+3)^0,c
  6534   001A32  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6535   001A36  EF43  F00D         	goto	l717
  6536   001A3A                     l719:
  6537   001A3A  A010               	btfss	___fladd@grs^0,0,c
  6538   001A3C  EF22  F00D         	goto	u2551
  6539   001A40  EF24  F00D         	goto	u2550
  6540   001A44                     u2551:
  6541   001A44  EF2A  F00D         	goto	l2873
  6542   001A48                     u2550:
  6543   001A48  90D8               	bcf	status,0,c
  6544   001A4A  3010               	rrcf	___fladd@grs^0,w,c
  6545   001A4C  0901               	iorlw	1
  6546   001A4E  6E10               	movwf	___fladd@grs^0,c
  6547   001A50  EF2C  F00D         	goto	l2875
  6548   001A54                     l2873:
  6549   001A54  90D8               	bcf	status,0,c
  6550   001A56  3210               	rrcf	___fladd@grs^0,f,c
  6551   001A58                     l2875:
  6552   001A58  A001               	btfss	___fladd@b^0,0,c
  6553   001A5A  EF31  F00D         	goto	u2561
  6554   001A5E  EF33  F00D         	goto	u2560
  6555   001A62                     u2561:
  6556   001A62  EF34  F00D         	goto	l2879
  6557   001A66                     u2560:
  6558   001A66  8E10               	bsf	___fladd@grs^0,7,c
  6559   001A68                     l2879:
  6560   001A68  3404               	rlcf	(___fladd@b+3)^0,w,c
  6561   001A6A  3204               	rrcf	(___fladd@b+3)^0,f,c
  6562   001A6C  3203               	rrcf	(___fladd@b+2)^0,f,c
  6563   001A6E  3202               	rrcf	(___fladd@b+1)^0,f,c
  6564   001A70  3201               	rrcf	___fladd@b^0,f,c
  6565   001A72  2A0F               	incf	___fladd@bexp^0,f,c
  6566   001A74                     l718:
  6567   001A74  500E               	movf	___fladd@aexp^0,w,c
  6568   001A76  5C0F               	subwf	___fladd@bexp^0,w,c
  6569   001A78  A0D8               	btfss	status,0,c
  6570   001A7A  EF41  F00D         	goto	u2571
  6571   001A7E  EF43  F00D         	goto	u2570
  6572   001A82                     u2571:
  6573   001A82  EF1D  F00D         	goto	l719
  6574   001A86                     u2570:
  6575   001A86                     l717:
  6576   001A86  BC0D               	btfsc	___fladd@signs^0,6,c
  6577   001A88  EF48  F00D         	goto	u2581
  6578   001A8C  EF4A  F00D         	goto	u2580
  6579   001A90                     u2581:
  6580   001A90  EF8A  F00D         	goto	l2907
  6581   001A94                     u2580:
  6582   001A94  500F               	movf	___fladd@bexp^0,w,c
  6583   001A96  A4D8               	btfss	status,2,c
  6584   001A98  EF50  F00D         	goto	u2591
  6585   001A9C  EF52  F00D         	goto	u2590
  6586   001AA0                     u2591:
  6587   001AA0  EF5C  F00D         	goto	l2889
  6588   001AA4                     u2590:
  6589   001AA4  0E00               	movlw	0
  6590   001AA6  6E01               	movwf	?___fladd^0,c
  6591   001AA8  0E00               	movlw	0
  6592   001AAA  6E02               	movwf	(?___fladd+1)^0,c
  6593   001AAC  0E00               	movlw	0
  6594   001AAE  6E03               	movwf	(?___fladd+2)^0,c
  6595   001AB0  0E00               	movlw	0
  6596   001AB2  6E04               	movwf	(?___fladd+3)^0,c
  6597   001AB4  EFAB  F00E         	goto	l726
  6598   001AB8                     l2889:
  6599   001AB8  5005               	movf	___fladd@a^0,w,c
  6600   001ABA  2601               	addwf	___fladd@b^0,f,c
  6601   001ABC  5006               	movf	(___fladd@a+1)^0,w,c
  6602   001ABE  2202               	addwfc	(___fladd@b+1)^0,f,c
  6603   001AC0  5007               	movf	(___fladd@a+2)^0,w,c
  6604   001AC2  2203               	addwfc	(___fladd@b+2)^0,f,c
  6605   001AC4  5008               	movf	(___fladd@a+3)^0,w,c
  6606   001AC6  2204               	addwfc	(___fladd@b+3)^0,f,c
  6607   001AC8  A004               	btfss	(___fladd@b+3)^0,0,c
  6608   001ACA  EF69  F00D         	goto	u2601
  6609   001ACE  EF6B  F00D         	goto	u2600
  6610   001AD2                     u2601:
  6611   001AD2  EF17  F00E         	goto	l2943
  6612   001AD6                     u2600:
  6613   001AD6  A010               	btfss	___fladd@grs^0,0,c
  6614   001AD8  EF70  F00D         	goto	u2611
  6615   001ADC  EF72  F00D         	goto	u2610
  6616   001AE0                     u2611:
  6617   001AE0  EF78  F00D         	goto	l2897
  6618   001AE4                     u2610:
  6619   001AE4  90D8               	bcf	status,0,c
  6620   001AE6  3010               	rrcf	___fladd@grs^0,w,c
  6621   001AE8  0901               	iorlw	1
  6622   001AEA  6E10               	movwf	___fladd@grs^0,c
  6623   001AEC  EF7A  F00D         	goto	l2899
  6624   001AF0                     l2897:
  6625   001AF0  90D8               	bcf	status,0,c
  6626   001AF2  3210               	rrcf	___fladd@grs^0,f,c
  6627   001AF4                     l2899:
  6628   001AF4  A001               	btfss	___fladd@b^0,0,c
  6629   001AF6  EF7F  F00D         	goto	u2621
  6630   001AFA  EF81  F00D         	goto	u2620
  6631   001AFE                     u2621:
  6632   001AFE  EF82  F00D         	goto	l2903
  6633   001B02                     u2620:
  6634   001B02  8E10               	bsf	___fladd@grs^0,7,c
  6635   001B04                     l2903:
  6636   001B04  3404               	rlcf	(___fladd@b+3)^0,w,c
  6637   001B06  3204               	rrcf	(___fladd@b+3)^0,f,c
  6638   001B08  3203               	rrcf	(___fladd@b+2)^0,f,c
  6639   001B0A  3202               	rrcf	(___fladd@b+1)^0,f,c
  6640   001B0C  3201               	rrcf	___fladd@b^0,f,c
  6641   001B0E  2A0F               	incf	___fladd@bexp^0,f,c
  6642   001B10  EF17  F00E         	goto	l2943
  6643   001B14                     l2907:
  6644   001B14  5005               	movf	___fladd@a^0,w,c
  6645   001B16  5C01               	subwf	___fladd@b^0,w,c
  6646   001B18  5006               	movf	(___fladd@a+1)^0,w,c
  6647   001B1A  5802               	subwfb	(___fladd@b+1)^0,w,c
  6648   001B1C  5007               	movf	(___fladd@a+2)^0,w,c
  6649   001B1E  5803               	subwfb	(___fladd@b+2)^0,w,c
  6650   001B20  5004               	movf	(___fladd@b+3)^0,w,c
  6651   001B22  0A80               	xorlw	128
  6652   001B24  6E09               	movwf	??___fladd^0,c
  6653   001B26  5008               	movf	(___fladd@a+3)^0,w,c
  6654   001B28  0A80               	xorlw	128
  6655   001B2A  5809               	subwfb	??___fladd^0,w,c
  6656   001B2C  B0D8               	btfsc	status,0,c
  6657   001B2E  EF9B  F00D         	goto	u2631
  6658   001B32  EF9D  F00D         	goto	u2630
  6659   001B36                     u2631:
  6660   001B36  EFC8  F00D         	goto	l2917
  6661   001B3A                     u2630:
  6662   001B3A  5001               	movf	___fladd@b^0,w,c
  6663   001B3C  5C05               	subwf	___fladd@a^0,w,c
  6664   001B3E  6E09               	movwf	??___fladd^0,c
  6665   001B40  5002               	movf	(___fladd@b+1)^0,w,c
  6666   001B42  5806               	subwfb	(___fladd@a+1)^0,w,c
  6667   001B44  6E0A               	movwf	(??___fladd+1)^0,c
  6668   001B46  5003               	movf	(___fladd@b+2)^0,w,c
  6669   001B48  5807               	subwfb	(___fladd@a+2)^0,w,c
  6670   001B4A  6E0B               	movwf	(??___fladd+2)^0,c
  6671   001B4C  5004               	movf	(___fladd@b+3)^0,w,c
  6672   001B4E  5808               	subwfb	(___fladd@a+3)^0,w,c
  6673   001B50  6E0C               	movwf	(??___fladd+3)^0,c
  6674   001B52  0EFF               	movlw	255
  6675   001B54  2409               	addwf	??___fladd^0,w,c
  6676   001B56  6E01               	movwf	___fladd@b^0,c
  6677   001B58  0EFF               	movlw	255
  6678   001B5A  200A               	addwfc	(??___fladd+1)^0,w,c
  6679   001B5C  6E02               	movwf	(___fladd@b+1)^0,c
  6680   001B5E  0EFF               	movlw	255
  6681   001B60  200B               	addwfc	(??___fladd+2)^0,w,c
  6682   001B62  6E03               	movwf	(___fladd@b+2)^0,c
  6683   001B64  0EFF               	movlw	255
  6684   001B66  200C               	addwfc	(??___fladd+3)^0,w,c
  6685   001B68  6E04               	movwf	(___fladd@b+3)^0,c
  6686   001B6A  0E80               	movlw	128
  6687   001B6C  1A0D               	xorwf	___fladd@signs^0,f,c
  6688   001B6E  6C10               	negf	___fladd@grs^0,c
  6689   001B70  5010               	movf	___fladd@grs^0,w,c
  6690   001B72  A4D8               	btfss	status,2,c
  6691   001B74  EFBE  F00D         	goto	u2641
  6692   001B78  EFC0  F00D         	goto	u2640
  6693   001B7C                     u2641:
  6694   001B7C  EFD0  F00D         	goto	l734
  6695   001B80                     u2640:
  6696   001B80  0E01               	movlw	1
  6697   001B82  2601               	addwf	___fladd@b^0,f,c
  6698   001B84  0E00               	movlw	0
  6699   001B86  2202               	addwfc	(___fladd@b+1)^0,f,c
  6700   001B88  2203               	addwfc	(___fladd@b+2)^0,f,c
  6701   001B8A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6702   001B8C  EFD0  F00D         	goto	l734
  6703   001B90                     l2917:
  6704   001B90  5005               	movf	___fladd@a^0,w,c
  6705   001B92  5E01               	subwf	___fladd@b^0,f,c
  6706   001B94  5006               	movf	(___fladd@a+1)^0,w,c
  6707   001B96  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6708   001B98  5007               	movf	(___fladd@a+2)^0,w,c
  6709   001B9A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6710   001B9C  5008               	movf	(___fladd@a+3)^0,w,c
  6711   001B9E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6712   001BA0                     l734:
  6713   001BA0  5001               	movf	___fladd@b^0,w,c
  6714   001BA2  1002               	iorwf	(___fladd@b+1)^0,w,c
  6715   001BA4  1003               	iorwf	(___fladd@b+2)^0,w,c
  6716   001BA6  1004               	iorwf	(___fladd@b+3)^0,w,c
  6717   001BA8  A4D8               	btfss	status,2,c
  6718   001BAA  EFD9  F00D         	goto	u2651
  6719   001BAE  EFDB  F00D         	goto	u2650
  6720   001BB2                     u2651:
  6721   001BB2  EF10  F00E         	goto	l2941
  6722   001BB6                     u2650:
  6723   001BB6  5010               	movf	___fladd@grs^0,w,c
  6724   001BB8  A4D8               	btfss	status,2,c
  6725   001BBA  EFE1  F00D         	goto	u2661
  6726   001BBE  EFE3  F00D         	goto	u2660
  6727   001BC2                     u2661:
  6728   001BC2  EF10  F00E         	goto	l2941
  6729   001BC6                     u2660:
  6730   001BC6  0E00               	movlw	0
  6731   001BC8  6E01               	movwf	?___fladd^0,c
  6732   001BCA  0E00               	movlw	0
  6733   001BCC  6E02               	movwf	(?___fladd+1)^0,c
  6734   001BCE  0E00               	movlw	0
  6735   001BD0  6E03               	movwf	(?___fladd+2)^0,c
  6736   001BD2  0E00               	movlw	0
  6737   001BD4  6E04               	movwf	(?___fladd+3)^0,c
  6738   001BD6  EFAB  F00E         	goto	l726
  6739   001BDA                     l2925:
  6740   001BDA  90D8               	bcf	status,0,c
  6741   001BDC  3601               	rlcf	___fladd@b^0,f,c
  6742   001BDE  3602               	rlcf	(___fladd@b+1)^0,f,c
  6743   001BE0  3603               	rlcf	(___fladd@b+2)^0,f,c
  6744   001BE2  3604               	rlcf	(___fladd@b+3)^0,f,c
  6745   001BE4  AE10               	btfss	___fladd@grs^0,7,c
  6746   001BE6  EFF7  F00D         	goto	u2671
  6747   001BEA  EFF9  F00D         	goto	u2670
  6748   001BEE                     u2671:
  6749   001BEE  EFFA  F00D         	goto	l2931
  6750   001BF2                     u2670:
  6751   001BF2  8001               	bsf	___fladd@b^0,0,c
  6752   001BF4                     l2931:
  6753   001BF4  A010               	btfss	___fladd@grs^0,0,c
  6754   001BF6  EFFF  F00D         	goto	u2681
  6755   001BFA  EF01  F00E         	goto	u2680
  6756   001BFE                     u2681:
  6757   001BFE  EF05  F00E         	goto	l2935
  6758   001C02                     u2680:
  6759   001C02  80D8               	bsf	status,0,c
  6760   001C04  3610               	rlcf	___fladd@grs^0,f,c
  6761   001C06  EF07  F00E         	goto	l2937
  6762   001C0A                     l2935:
  6763   001C0A  90D8               	bcf	status,0,c
  6764   001C0C  3610               	rlcf	___fladd@grs^0,f,c
  6765   001C0E                     l2937:
  6766   001C0E  500F               	movf	___fladd@bexp^0,w,c
  6767   001C10  B4D8               	btfsc	status,2,c
  6768   001C12  EF0D  F00E         	goto	u2691
  6769   001C16  EF0F  F00E         	goto	u2690
  6770   001C1A                     u2691:
  6771   001C1A  EF10  F00E         	goto	l2941
  6772   001C1E                     u2690:
  6773   001C1E  060F               	decf	___fladd@bexp^0,f,c
  6774   001C20                     l2941:
  6775   001C20  AE03               	btfss	(___fladd@b+2)^0,7,c
  6776   001C22  EF15  F00E         	goto	u2701
  6777   001C26  EF17  F00E         	goto	u2700
  6778   001C2A                     u2701:
  6779   001C2A  EFED  F00D         	goto	l2925
  6780   001C2E                     u2700:
  6781   001C2E                     l2943:
  6782   001C2E  0E00               	movlw	0
  6783   001C30  6E0E               	movwf	___fladd@aexp^0,c
  6784   001C32  AE10               	btfss	___fladd@grs^0,7,c
  6785   001C34  EF1E  F00E         	goto	u2711
  6786   001C38  EF20  F00E         	goto	u2710
  6787   001C3C                     u2711:
  6788   001C3C  EF38  F00E         	goto	l743
  6789   001C40                     u2710:
  6790   001C40  C010  F009         	movff	___fladd@grs,??___fladd
  6791   001C44  0E7F               	movlw	127
  6792   001C46  1609               	andwf	??___fladd^0,f,c
  6793   001C48  B4D8               	btfsc	status,2,c
  6794   001C4A  EF29  F00E         	goto	u2721
  6795   001C4E  EF2B  F00E         	goto	u2720
  6796   001C52                     u2721:
  6797   001C52  EF2F  F00E         	goto	l744
  6798   001C56                     u2720:
  6799   001C56                     l2949:
  6800   001C56  0E01               	movlw	1
  6801   001C58  6E0E               	movwf	___fladd@aexp^0,c
  6802   001C5A  EF38  F00E         	goto	l743
  6803   001C5E                     l744:
  6804   001C5E  A001               	btfss	___fladd@b^0,0,c
  6805   001C60  EF34  F00E         	goto	u2731
  6806   001C64  EF36  F00E         	goto	u2730
  6807   001C68                     u2731:
  6808   001C68  EF38  F00E         	goto	l743
  6809   001C6C                     u2730:
  6810   001C6C  EF2B  F00E         	goto	l2949
  6811   001C70                     l743:
  6812   001C70  500E               	movf	___fladd@aexp^0,w,c
  6813   001C72  B4D8               	btfsc	status,2,c
  6814   001C74  EF3E  F00E         	goto	u2741
  6815   001C78  EF40  F00E         	goto	u2740
  6816   001C7C                     u2741:
  6817   001C7C  EF6B  F00E         	goto	l2961
  6818   001C80                     u2740:
  6819   001C80  0E01               	movlw	1
  6820   001C82  2601               	addwf	___fladd@b^0,f,c
  6821   001C84  0E00               	movlw	0
  6822   001C86  2202               	addwfc	(___fladd@b+1)^0,f,c
  6823   001C88  2203               	addwfc	(___fladd@b+2)^0,f,c
  6824   001C8A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6825   001C8C  A004               	btfss	(___fladd@b+3)^0,0,c
  6826   001C8E  EF4B  F00E         	goto	u2751
  6827   001C92  EF4D  F00E         	goto	u2750
  6828   001C96                     u2751:
  6829   001C96  EF6B  F00E         	goto	l2961
  6830   001C9A                     u2750:
  6831   001C9A  C001  F009         	movff	___fladd@b,??___fladd
  6832   001C9E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6833   001CA2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6834   001CA6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6835   001CAA  340C               	rlcf	(??___fladd+3)^0,w,c
  6836   001CAC  320C               	rrcf	(??___fladd+3)^0,f,c
  6837   001CAE  320B               	rrcf	(??___fladd+2)^0,f,c
  6838   001CB0  320A               	rrcf	(??___fladd+1)^0,f,c
  6839   001CB2  3209               	rrcf	??___fladd^0,f,c
  6840   001CB4  C009  F001         	movff	??___fladd,___fladd@b
  6841   001CB8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6842   001CBC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6843   001CC0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6844   001CC4  280F               	incf	___fladd@bexp^0,w,c
  6845   001CC6  B4D8               	btfsc	status,2,c
  6846   001CC8  EF68  F00E         	goto	u2761
  6847   001CCC  EF6A  F00E         	goto	u2760
  6848   001CD0                     u2761:
  6849   001CD0  EF6B  F00E         	goto	l2961
  6850   001CD4                     u2760:
  6851   001CD4  2A0F               	incf	___fladd@bexp^0,f,c
  6852   001CD6                     l2961:
  6853   001CD6  280F               	incf	___fladd@bexp^0,w,c
  6854   001CD8  B4D8               	btfsc	status,2,c
  6855   001CDA  EF71  F00E         	goto	u2771
  6856   001CDE  EF73  F00E         	goto	u2770
  6857   001CE2                     u2771:
  6858   001CE2  EF7B  F00E         	goto	l2965
  6859   001CE6                     u2770:
  6860   001CE6  500F               	movf	___fladd@bexp^0,w,c
  6861   001CE8  A4D8               	btfss	status,2,c
  6862   001CEA  EF79  F00E         	goto	u2781
  6863   001CEE  EF7B  F00E         	goto	u2780
  6864   001CF2                     u2781:
  6865   001CF2  EF8D  F00E         	goto	l2969
  6866   001CF6                     u2780:
  6867   001CF6                     l2965:
  6868   001CF6  0E00               	movlw	0
  6869   001CF8  6E01               	movwf	___fladd@b^0,c
  6870   001CFA  0E00               	movlw	0
  6871   001CFC  6E02               	movwf	(___fladd@b+1)^0,c
  6872   001CFE  0E00               	movlw	0
  6873   001D00  6E03               	movwf	(___fladd@b+2)^0,c
  6874   001D02  0E00               	movlw	0
  6875   001D04  6E04               	movwf	(___fladd@b+3)^0,c
  6876   001D06  500F               	movf	___fladd@bexp^0,w,c
  6877   001D08  A4D8               	btfss	status,2,c
  6878   001D0A  EF89  F00E         	goto	u2791
  6879   001D0E  EF8B  F00E         	goto	u2790
  6880   001D12                     u2791:
  6881   001D12  EF8D  F00E         	goto	l2969
  6882   001D16                     u2790:
  6883   001D16  0E00               	movlw	0
  6884   001D18  6E0D               	movwf	___fladd@signs^0,c
  6885   001D1A                     l2969:
  6886   001D1A  A00F               	btfss	___fladd@bexp^0,0,c
  6887   001D1C  EF92  F00E         	goto	u2801
  6888   001D20  EF94  F00E         	goto	u2800
  6889   001D24                     u2801:
  6890   001D24  EF97  F00E         	goto	l2973
  6891   001D28                     u2800:
  6892   001D28  8E03               	bsf	(___fladd@b+2)^0,7,c
  6893   001D2A  EF98  F00E         	goto	l2975
  6894   001D2E                     l2973:
  6895   001D2E  9E03               	bcf	(___fladd@b+2)^0,7,c
  6896   001D30                     l2975:
  6897   001D30  90D8               	bcf	status,0,c
  6898   001D32  300F               	rrcf	___fladd@bexp^0,w,c
  6899   001D34  6E04               	movwf	(___fladd@b+3)^0,c
  6900   001D36  AE0D               	btfss	___fladd@signs^0,7,c
  6901   001D38  EFA0  F00E         	goto	u2811
  6902   001D3C  EFA2  F00E         	goto	u2810
  6903   001D40                     u2811:
  6904   001D40  EFA3  F00E         	goto	l2981
  6905   001D44                     u2810:
  6906   001D44  8E04               	bsf	(___fladd@b+3)^0,7,c
  6907   001D46                     l2981:
  6908   001D46  C001  F001         	movff	___fladd@b,?___fladd
  6909   001D4A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6910   001D4E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6911   001D52  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6912   001D56                     l726:
  6913   001D56  0012               	return		;funcret
  6914   001D58                     __end_of___fladd:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function ___flneg *****************
  6918 ;; Defined at:
  6919 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  f1              4    0[COMRAM] unsigned char 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;		None
  6924 ;; Return value:  Size  Location     Type
  6925 ;;                  4    0[COMRAM] unsigned char 
  6926 ;; Registers used:
  6927 ;;		wreg, status,2, status,0
  6928 ;; Tracked objects:
  6929 ;;		On entry : 0/0
  6930 ;;		On exit  : 0/0
  6931 ;;		Unchanged: 0/0
  6932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;Total ram usage:        4 bytes
  6938 ;; Hardware stack levels used: 1
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_efgtoa
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text31
  6947   00476A                     __ptext31:
  6948                           	callstack 0
  6949   00476A                     ___flneg:
  6950                           	callstack 25
  6951   00476A  5001               	movf	___flneg@f1^0,w,c
  6952   00476C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6953   00476E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6954   004770  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6955   004772  B4D8               	btfsc	status,2,c
  6956   004774  EFBE  F023         	goto	u3461
  6957   004778  EFC0  F023         	goto	u3460
  6958   00477C                     u3461:
  6959   00477C  EFC8  F023         	goto	l3395
  6960   004780                     u3460:
  6961   004780  0E00               	movlw	0
  6962   004782  1A01               	xorwf	___flneg@f1^0,f,c
  6963   004784  0E00               	movlw	0
  6964   004786  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6965   004788  0E00               	movlw	0
  6966   00478A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6967   00478C  0E80               	movlw	128
  6968   00478E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6969   004790                     l3395:
  6970   004790  C001  F001         	movff	___flneg@f1,?___flneg
  6971   004794  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6972   004798  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6973   00479C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6974   0047A0  0012               	return		;funcret
  6975   0047A2                     __end_of___flneg:
  6976                           	callstack 0
  6977                           
  6978 ;; *************** function ___flmul *****************
  6979 ;; Defined at:
  6980 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;  b               4   41[COMRAM] unsigned char 
  6983 ;;  a               4   45[COMRAM] unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  prod            4   60[COMRAM] struct .
  6986 ;;  grs             4   54[COMRAM] unsigned long 
  6987 ;;  temp            2   64[COMRAM] struct .
  6988 ;;  bexp            1   59[COMRAM] unsigned char 
  6989 ;;  aexp            1   58[COMRAM] unsigned char 
  6990 ;;  sign            1   53[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4   41[COMRAM] unsigned char 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, prodl, prodh
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:       25 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_colour_read_all
  7010 ;;		_Color2String
  7011 ;;		_efgtoa
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text32
  7016   0025F4                     __ptext32:
  7017                           	callstack 0
  7018   0025F4                     ___flmul:
  7019                           	callstack 29
  7020   0025F4  502D               	movf	(___flmul@b+3)^0,w,c
  7021   0025F6  0B80               	andlw	128
  7022   0025F8  6E36               	movwf	___flmul@sign^0,c
  7023   0025FA  502D               	movf	(___flmul@b+3)^0,w,c
  7024   0025FC  242D               	addwf	(___flmul@b+3)^0,w,c
  7025   0025FE  6E3C               	movwf	___flmul@bexp^0,c
  7026   002600  AE2C               	btfss	(___flmul@b+2)^0,7,c
  7027   002602  EF05  F013         	goto	u3191
  7028   002606  EF07  F013         	goto	u3190
  7029   00260A                     u3191:
  7030   00260A  EF08  F013         	goto	l3223
  7031   00260E                     u3190:
  7032   00260E  803C               	bsf	___flmul@bexp^0,0,c
  7033   002610                     l3223:
  7034   002610  503C               	movf	___flmul@bexp^0,w,c
  7035   002612  B4D8               	btfsc	status,2,c
  7036   002614  EF0E  F013         	goto	u3201
  7037   002618  EF10  F013         	goto	u3200
  7038   00261C                     u3201:
  7039   00261C  EF23  F013         	goto	l3231
  7040   002620                     u3200:
  7041   002620  283C               	incf	___flmul@bexp^0,w,c
  7042   002622  A4D8               	btfss	status,2,c
  7043   002624  EF16  F013         	goto	u3211
  7044   002628  EF18  F013         	goto	u3210
  7045   00262C                     u3211:
  7046   00262C  EF20  F013         	goto	l3229
  7047   002630                     u3210:
  7048   002630  0E00               	movlw	0
  7049   002632  6E2A               	movwf	___flmul@b^0,c
  7050   002634  0E00               	movlw	0
  7051   002636  6E2B               	movwf	(___flmul@b+1)^0,c
  7052   002638  0E00               	movlw	0
  7053   00263A  6E2C               	movwf	(___flmul@b+2)^0,c
  7054   00263C  0E00               	movlw	0
  7055   00263E  6E2D               	movwf	(___flmul@b+3)^0,c
  7056   002640                     l3229:
  7057   002640  8E2C               	bsf	(___flmul@b+2)^0,7,c
  7058   002642  EF2B  F013         	goto	l3233
  7059   002646                     l3231:
  7060   002646  0E00               	movlw	0
  7061   002648  6E2A               	movwf	___flmul@b^0,c
  7062   00264A  0E00               	movlw	0
  7063   00264C  6E2B               	movwf	(___flmul@b+1)^0,c
  7064   00264E  0E00               	movlw	0
  7065   002650  6E2C               	movwf	(___flmul@b+2)^0,c
  7066   002652  0E00               	movlw	0
  7067   002654  6E2D               	movwf	(___flmul@b+3)^0,c
  7068   002656                     l3233:
  7069   002656  5031               	movf	(___flmul@a+3)^0,w,c
  7070   002658  0B80               	andlw	128
  7071   00265A  1A36               	xorwf	___flmul@sign^0,f,c
  7072   00265C  5031               	movf	(___flmul@a+3)^0,w,c
  7073   00265E  2431               	addwf	(___flmul@a+3)^0,w,c
  7074   002660  6E3B               	movwf	___flmul@aexp^0,c
  7075   002662  AE30               	btfss	(___flmul@a+2)^0,7,c
  7076   002664  EF36  F013         	goto	u3221
  7077   002668  EF38  F013         	goto	u3220
  7078   00266C                     u3221:
  7079   00266C  EF39  F013         	goto	l3241
  7080   002670                     u3220:
  7081   002670  803B               	bsf	___flmul@aexp^0,0,c
  7082   002672                     l3241:
  7083   002672  503B               	movf	___flmul@aexp^0,w,c
  7084   002674  B4D8               	btfsc	status,2,c
  7085   002676  EF3F  F013         	goto	u3231
  7086   00267A  EF41  F013         	goto	u3230
  7087   00267E                     u3231:
  7088   00267E  EF54  F013         	goto	l3249
  7089   002682                     u3230:
  7090   002682  283B               	incf	___flmul@aexp^0,w,c
  7091   002684  A4D8               	btfss	status,2,c
  7092   002686  EF47  F013         	goto	u3241
  7093   00268A  EF49  F013         	goto	u3240
  7094   00268E                     u3241:
  7095   00268E  EF51  F013         	goto	l3247
  7096   002692                     u3240:
  7097   002692  0E00               	movlw	0
  7098   002694  6E2E               	movwf	___flmul@a^0,c
  7099   002696  0E00               	movlw	0
  7100   002698  6E2F               	movwf	(___flmul@a+1)^0,c
  7101   00269A  0E00               	movlw	0
  7102   00269C  6E30               	movwf	(___flmul@a+2)^0,c
  7103   00269E  0E00               	movlw	0
  7104   0026A0  6E31               	movwf	(___flmul@a+3)^0,c
  7105   0026A2                     l3247:
  7106   0026A2  8E30               	bsf	(___flmul@a+2)^0,7,c
  7107   0026A4  EF5C  F013         	goto	l803
  7108   0026A8                     l3249:
  7109   0026A8  0E00               	movlw	0
  7110   0026AA  6E2E               	movwf	___flmul@a^0,c
  7111   0026AC  0E00               	movlw	0
  7112   0026AE  6E2F               	movwf	(___flmul@a+1)^0,c
  7113   0026B0  0E00               	movlw	0
  7114   0026B2  6E30               	movwf	(___flmul@a+2)^0,c
  7115   0026B4  0E00               	movlw	0
  7116   0026B6  6E31               	movwf	(___flmul@a+3)^0,c
  7117   0026B8                     l803:
  7118   0026B8  503B               	movf	___flmul@aexp^0,w,c
  7119   0026BA  B4D8               	btfsc	status,2,c
  7120   0026BC  EF62  F013         	goto	u3251
  7121   0026C0  EF64  F013         	goto	u3250
  7122   0026C4                     u3251:
  7123   0026C4  EF6C  F013         	goto	l3253
  7124   0026C8                     u3250:
  7125   0026C8  503C               	movf	___flmul@bexp^0,w,c
  7126   0026CA  A4D8               	btfss	status,2,c
  7127   0026CC  EF6A  F013         	goto	u3261
  7128   0026D0  EF6C  F013         	goto	u3260
  7129   0026D4                     u3261:
  7130   0026D4  EF76  F013         	goto	l3257
  7131   0026D8                     u3260:
  7132   0026D8                     l3253:
  7133   0026D8  0E00               	movlw	0
  7134   0026DA  6E2A               	movwf	?___flmul^0,c
  7135   0026DC  0E00               	movlw	0
  7136   0026DE  6E2B               	movwf	(?___flmul+1)^0,c
  7137   0026E0  0E00               	movlw	0
  7138   0026E2  6E2C               	movwf	(?___flmul+2)^0,c
  7139   0026E4  0E00               	movlw	0
  7140   0026E6  6E2D               	movwf	(?___flmul+3)^0,c
  7141   0026E8  EF0E  F015         	goto	l807
  7142   0026EC                     l3257:
  7143   0026EC  5030               	movf	(___flmul@a+2)^0,w,c
  7144   0026EE  022A               	mulwf	___flmul@b^0,c
  7145   0026F0  CFF3 F041          	movff	prodl,___flmul@temp
  7146   0026F4  CFF4 F042          	movff	prodh,___flmul@temp+1
  7147   0026F8  5041               	movf	___flmul@temp^0,w,c
  7148   0026FA  6E37               	movwf	___flmul@grs^0,c
  7149   0026FC  6A38               	clrf	(___flmul@grs+1)^0,c
  7150   0026FE  6A39               	clrf	(___flmul@grs+2)^0,c
  7151   002700  6A3A               	clrf	(___flmul@grs+3)^0,c
  7152   002702  5042               	movf	(___flmul@temp+1)^0,w,c
  7153   002704  6E3D               	movwf	___flmul@prod^0,c
  7154   002706  6A3E               	clrf	(___flmul@prod+1)^0,c
  7155   002708  6A3F               	clrf	(___flmul@prod+2)^0,c
  7156   00270A  6A40               	clrf	(___flmul@prod+3)^0,c
  7157   00270C  502F               	movf	(___flmul@a+1)^0,w,c
  7158   00270E  022B               	mulwf	(___flmul@b+1)^0,c
  7159   002710  CFF3 F041          	movff	prodl,___flmul@temp
  7160   002714  CFF4 F042          	movff	prodh,___flmul@temp+1
  7161   002718  5041               	movf	___flmul@temp^0,w,c
  7162   00271A  2637               	addwf	___flmul@grs^0,f,c
  7163   00271C  0E00               	movlw	0
  7164   00271E  2238               	addwfc	(___flmul@grs+1)^0,f,c
  7165   002720  2239               	addwfc	(___flmul@grs+2)^0,f,c
  7166   002722  223A               	addwfc	(___flmul@grs+3)^0,f,c
  7167   002724  5042               	movf	(___flmul@temp+1)^0,w,c
  7168   002726  263D               	addwf	___flmul@prod^0,f,c
  7169   002728  0E00               	movlw	0
  7170   00272A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7171   00272C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7172   00272E  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7173   002730  502E               	movf	___flmul@a^0,w,c
  7174   002732  022C               	mulwf	(___flmul@b+2)^0,c
  7175   002734  CFF3 F041          	movff	prodl,___flmul@temp
  7176   002738  CFF4 F042          	movff	prodh,___flmul@temp+1
  7177   00273C  5041               	movf	___flmul@temp^0,w,c
  7178   00273E  2637               	addwf	___flmul@grs^0,f,c
  7179   002740  0E00               	movlw	0
  7180   002742  2238               	addwfc	(___flmul@grs+1)^0,f,c
  7181   002744  2239               	addwfc	(___flmul@grs+2)^0,f,c
  7182   002746  223A               	addwfc	(___flmul@grs+3)^0,f,c
  7183   002748  5042               	movf	(___flmul@temp+1)^0,w,c
  7184   00274A  263D               	addwf	___flmul@prod^0,f,c
  7185   00274C  0E00               	movlw	0
  7186   00274E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7187   002750  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7188   002752  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7189   002754  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
  7190   002758  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
  7191   00275C  C037  F038         	movff	___flmul@grs,___flmul@grs+1
  7192   002760  6A37               	clrf	___flmul@grs^0,c
  7193   002762  502E               	movf	___flmul@a^0,w,c
  7194   002764  022B               	mulwf	(___flmul@b+1)^0,c
  7195   002766  CFF3 F041          	movff	prodl,___flmul@temp
  7196   00276A  CFF4 F042          	movff	prodh,___flmul@temp+1
  7197   00276E  5041               	movf	___flmul@temp^0,w,c
  7198   002770  2637               	addwf	___flmul@grs^0,f,c
  7199   002772  5042               	movf	(___flmul@temp+1)^0,w,c
  7200   002774  2238               	addwfc	(___flmul@grs+1)^0,f,c
  7201   002776  0E00               	movlw	0
  7202   002778  2239               	addwfc	(___flmul@grs+2)^0,f,c
  7203   00277A  0E00               	movlw	0
  7204   00277C  223A               	addwfc	(___flmul@grs+3)^0,f,c
  7205   00277E  502F               	movf	(___flmul@a+1)^0,w,c
  7206   002780  022A               	mulwf	___flmul@b^0,c
  7207   002782  CFF3 F041          	movff	prodl,___flmul@temp
  7208   002786  CFF4 F042          	movff	prodh,___flmul@temp+1
  7209   00278A  5041               	movf	___flmul@temp^0,w,c
  7210   00278C  2637               	addwf	___flmul@grs^0,f,c
  7211   00278E  5042               	movf	(___flmul@temp+1)^0,w,c
  7212   002790  2238               	addwfc	(___flmul@grs+1)^0,f,c
  7213   002792  0E00               	movlw	0
  7214   002794  2239               	addwfc	(___flmul@grs+2)^0,f,c
  7215   002796  0E00               	movlw	0
  7216   002798  223A               	addwfc	(___flmul@grs+3)^0,f,c
  7217   00279A  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
  7218   00279E  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
  7219   0027A2  C037  F038         	movff	___flmul@grs,___flmul@grs+1
  7220   0027A6  6A37               	clrf	___flmul@grs^0,c
  7221   0027A8  502E               	movf	___flmul@a^0,w,c
  7222   0027AA  022A               	mulwf	___flmul@b^0,c
  7223   0027AC  CFF3 F041          	movff	prodl,___flmul@temp
  7224   0027B0  CFF4 F042          	movff	prodh,___flmul@temp+1
  7225   0027B4  5041               	movf	___flmul@temp^0,w,c
  7226   0027B6  2637               	addwf	___flmul@grs^0,f,c
  7227   0027B8  5042               	movf	(___flmul@temp+1)^0,w,c
  7228   0027BA  2238               	addwfc	(___flmul@grs+1)^0,f,c
  7229   0027BC  0E00               	movlw	0
  7230   0027BE  2239               	addwfc	(___flmul@grs+2)^0,f,c
  7231   0027C0  0E00               	movlw	0
  7232   0027C2  223A               	addwfc	(___flmul@grs+3)^0,f,c
  7233   0027C4  5030               	movf	(___flmul@a+2)^0,w,c
  7234   0027C6  022B               	mulwf	(___flmul@b+1)^0,c
  7235   0027C8  CFF3 F041          	movff	prodl,___flmul@temp
  7236   0027CC  CFF4 F042          	movff	prodh,___flmul@temp+1
  7237   0027D0  5041               	movf	___flmul@temp^0,w,c
  7238   0027D2  263D               	addwf	___flmul@prod^0,f,c
  7239   0027D4  5042               	movf	(___flmul@temp+1)^0,w,c
  7240   0027D6  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7241   0027D8  0E00               	movlw	0
  7242   0027DA  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7243   0027DC  0E00               	movlw	0
  7244   0027DE  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7245   0027E0  502F               	movf	(___flmul@a+1)^0,w,c
  7246   0027E2  022C               	mulwf	(___flmul@b+2)^0,c
  7247   0027E4  CFF3 F041          	movff	prodl,___flmul@temp
  7248   0027E8  CFF4 F042          	movff	prodh,___flmul@temp+1
  7249   0027EC  5041               	movf	___flmul@temp^0,w,c
  7250   0027EE  263D               	addwf	___flmul@prod^0,f,c
  7251   0027F0  5042               	movf	(___flmul@temp+1)^0,w,c
  7252   0027F2  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7253   0027F4  0E00               	movlw	0
  7254   0027F6  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7255   0027F8  0E00               	movlw	0
  7256   0027FA  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7257   0027FC  5030               	movf	(___flmul@a+2)^0,w,c
  7258   0027FE  022C               	mulwf	(___flmul@b+2)^0,c
  7259   002800  CFF3 F041          	movff	prodl,___flmul@temp
  7260   002804  CFF4 F042          	movff	prodh,___flmul@temp+1
  7261   002808  5041               	movf	___flmul@temp^0,w,c
  7262   00280A  6E32               	movwf	??___flmul^0,c
  7263   00280C  5042               	movf	(___flmul@temp+1)^0,w,c
  7264   00280E  6E33               	movwf	(??___flmul+1)^0,c
  7265   002810  6A34               	clrf	(??___flmul+2)^0,c
  7266   002812  6A35               	clrf	(??___flmul+3)^0,c
  7267   002814  C034  F035         	movff	??___flmul+2,??___flmul+3
  7268   002818  C033  F034         	movff	??___flmul+1,??___flmul+2
  7269   00281C  C032  F033         	movff	??___flmul,??___flmul+1
  7270   002820  6A32               	clrf	??___flmul^0,c
  7271   002822  5032               	movf	??___flmul^0,w,c
  7272   002824  263D               	addwf	___flmul@prod^0,f,c
  7273   002826  5033               	movf	(??___flmul+1)^0,w,c
  7274   002828  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7275   00282A  5034               	movf	(??___flmul+2)^0,w,c
  7276   00282C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7277   00282E  5035               	movf	(??___flmul+3)^0,w,c
  7278   002830  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7279   002832  C037  F032         	movff	___flmul@grs,??___flmul
  7280   002836  C038  F033         	movff	___flmul@grs+1,??___flmul+1
  7281   00283A  C039  F034         	movff	___flmul@grs+2,??___flmul+2
  7282   00283E  C03A  F035         	movff	___flmul@grs+3,??___flmul+3
  7283   002842  0E19               	movlw	25
  7284   002844  EF29  F014         	goto	u3270
  7285   002848                     u3275:
  7286   002848  90D8               	bcf	status,0,c
  7287   00284A  3235               	rrcf	(??___flmul+3)^0,f,c
  7288   00284C  3234               	rrcf	(??___flmul+2)^0,f,c
  7289   00284E  3233               	rrcf	(??___flmul+1)^0,f,c
  7290   002850  3232               	rrcf	??___flmul^0,f,c
  7291   002852                     u3270:
  7292   002852  2EE8               	decfsz	wreg,f,c
  7293   002854  EF24  F014         	goto	u3275
  7294   002858  5032               	movf	??___flmul^0,w,c
  7295   00285A  263D               	addwf	___flmul@prod^0,f,c
  7296   00285C  5033               	movf	(??___flmul+1)^0,w,c
  7297   00285E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7298   002860  5034               	movf	(??___flmul+2)^0,w,c
  7299   002862  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7300   002864  5035               	movf	(??___flmul+3)^0,w,c
  7301   002866  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7302   002868  C039  F03A         	movff	___flmul@grs+2,___flmul@grs+3
  7303   00286C  C038  F039         	movff	___flmul@grs+1,___flmul@grs+2
  7304   002870  C037  F038         	movff	___flmul@grs,___flmul@grs+1
  7305   002874  6A37               	clrf	___flmul@grs^0,c
  7306   002876  503B               	movf	___flmul@aexp^0,w,c
  7307   002878  C03C  F032         	movff	___flmul@bexp,??___flmul
  7308   00287C  6A33               	clrf	(??___flmul+1)^0,c
  7309   00287E  2632               	addwf	??___flmul^0,f,c
  7310   002880  0E00               	movlw	0
  7311   002882  2233               	addwfc	(??___flmul+1)^0,f,c
  7312   002884  0E82               	movlw	130
  7313   002886  2432               	addwf	??___flmul^0,w,c
  7314   002888  6E41               	movwf	___flmul@temp^0,c
  7315   00288A  0EFF               	movlw	255
  7316   00288C  2033               	addwfc	(??___flmul+1)^0,w,c
  7317   00288E  6E42               	movwf	(___flmul@temp+1)^0,c
  7318   002890  EF5F  F014         	goto	l3305
  7319   002894                     l3299:
  7320   002894  90D8               	bcf	status,0,c
  7321   002896  363D               	rlcf	___flmul@prod^0,f,c
  7322   002898  363E               	rlcf	(___flmul@prod+1)^0,f,c
  7323   00289A  363F               	rlcf	(___flmul@prod+2)^0,f,c
  7324   00289C  3640               	rlcf	(___flmul@prod+3)^0,f,c
  7325   00289E  AE3A               	btfss	(___flmul@grs+3)^0,7,c
  7326   0028A0  EF54  F014         	goto	u3281
  7327   0028A4  EF56  F014         	goto	u3280
  7328   0028A8                     u3281:
  7329   0028A8  EF57  F014         	goto	l810
  7330   0028AC                     u3280:
  7331   0028AC  803D               	bsf	___flmul@prod^0,0,c
  7332   0028AE                     l810:
  7333   0028AE  90D8               	bcf	status,0,c
  7334   0028B0  3637               	rlcf	___flmul@grs^0,f,c
  7335   0028B2  3638               	rlcf	(___flmul@grs+1)^0,f,c
  7336   0028B4  3639               	rlcf	(___flmul@grs+2)^0,f,c
  7337   0028B6  363A               	rlcf	(___flmul@grs+3)^0,f,c
  7338   0028B8  0641               	decf	___flmul@temp^0,f,c
  7339   0028BA  A0D8               	btfss	status,0,c
  7340   0028BC  0642               	decf	(___flmul@temp+1)^0,f,c
  7341   0028BE                     l3305:
  7342   0028BE  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  7343   0028C0  EF64  F014         	goto	u3291
  7344   0028C4  EF66  F014         	goto	u3290
  7345   0028C8                     u3291:
  7346   0028C8  EF4A  F014         	goto	l3299
  7347   0028CC                     u3290:
  7348   0028CC  0E00               	movlw	0
  7349   0028CE  6E3B               	movwf	___flmul@aexp^0,c
  7350   0028D0  AE3A               	btfss	(___flmul@grs+3)^0,7,c
  7351   0028D2  EF6D  F014         	goto	u3301
  7352   0028D6  EF6F  F014         	goto	u3300
  7353   0028DA                     u3301:
  7354   0028DA  EF93  F014         	goto	l812
  7355   0028DE                     u3300:
  7356   0028DE  0EFF               	movlw	255
  7357   0028E0  1437               	andwf	___flmul@grs^0,w,c
  7358   0028E2  6E32               	movwf	??___flmul^0,c
  7359   0028E4  0EFF               	movlw	255
  7360   0028E6  1438               	andwf	(___flmul@grs+1)^0,w,c
  7361   0028E8  6E33               	movwf	(??___flmul+1)^0,c
  7362   0028EA  0EFF               	movlw	255
  7363   0028EC  1439               	andwf	(___flmul@grs+2)^0,w,c
  7364   0028EE  6E34               	movwf	(??___flmul+2)^0,c
  7365   0028F0  0E7F               	movlw	127
  7366   0028F2  143A               	andwf	(___flmul@grs+3)^0,w,c
  7367   0028F4  6E35               	movwf	(??___flmul+3)^0,c
  7368   0028F6  5032               	movf	??___flmul^0,w,c
  7369   0028F8  1033               	iorwf	(??___flmul+1)^0,w,c
  7370   0028FA  1034               	iorwf	(??___flmul+2)^0,w,c
  7371   0028FC  1035               	iorwf	(??___flmul+3)^0,w,c
  7372   0028FE  B4D8               	btfsc	status,2,c
  7373   002900  EF84  F014         	goto	u3311
  7374   002904  EF86  F014         	goto	u3310
  7375   002908                     u3311:
  7376   002908  EF8A  F014         	goto	l813
  7377   00290C                     u3310:
  7378   00290C                     l3313:
  7379   00290C  0E01               	movlw	1
  7380   00290E  6E3B               	movwf	___flmul@aexp^0,c
  7381   002910  EF93  F014         	goto	l812
  7382   002914                     l813:
  7383   002914  A03D               	btfss	___flmul@prod^0,0,c
  7384   002916  EF8F  F014         	goto	u3321
  7385   00291A  EF91  F014         	goto	u3320
  7386   00291E                     u3321:
  7387   00291E  EF93  F014         	goto	l812
  7388   002922                     u3320:
  7389   002922  EF86  F014         	goto	l3313
  7390   002926                     l812:
  7391   002926  503B               	movf	___flmul@aexp^0,w,c
  7392   002928  B4D8               	btfsc	status,2,c
  7393   00292A  EF99  F014         	goto	u3331
  7394   00292E  EF9B  F014         	goto	u3330
  7395   002932                     u3331:
  7396   002932  EFBF  F014         	goto	l3325
  7397   002936                     u3330:
  7398   002936  0E01               	movlw	1
  7399   002938  263D               	addwf	___flmul@prod^0,f,c
  7400   00293A  0E00               	movlw	0
  7401   00293C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  7402   00293E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  7403   002940  2240               	addwfc	(___flmul@prod+3)^0,f,c
  7404   002942  A040               	btfss	(___flmul@prod+3)^0,0,c
  7405   002944  EFA6  F014         	goto	u3341
  7406   002948  EFA8  F014         	goto	u3340
  7407   00294C                     u3341:
  7408   00294C  EFBF  F014         	goto	l3325
  7409   002950                     u3340:
  7410   002950  C03D  F032         	movff	___flmul@prod,??___flmul
  7411   002954  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  7412   002958  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  7413   00295C  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  7414   002960  3435               	rlcf	(??___flmul+3)^0,w,c
  7415   002962  3235               	rrcf	(??___flmul+3)^0,f,c
  7416   002964  3234               	rrcf	(??___flmul+2)^0,f,c
  7417   002966  3233               	rrcf	(??___flmul+1)^0,f,c
  7418   002968  3232               	rrcf	??___flmul^0,f,c
  7419   00296A  C032  F03D         	movff	??___flmul,___flmul@prod
  7420   00296E  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  7421   002972  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  7422   002976  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  7423   00297A  4A41               	infsnz	___flmul@temp^0,f,c
  7424   00297C  2A42               	incf	(___flmul@temp+1)^0,f,c
  7425   00297E                     l3325:
  7426   00297E  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  7427   002980  EFCA  F014         	goto	u3351
  7428   002984  5042               	movf	(___flmul@temp+1)^0,w,c
  7429   002986  E108               	bnz	u3350
  7430   002988  2841               	incf	___flmul@temp^0,w,c
  7431   00298A  A0D8               	btfss	status,0,c
  7432   00298C  EFCA  F014         	goto	u3351
  7433   002990  EFCC  F014         	goto	u3350
  7434   002994                     u3351:
  7435   002994  EFD6  F014         	goto	l3329
  7436   002998                     u3350:
  7437   002998  0E00               	movlw	0
  7438   00299A  6E3D               	movwf	___flmul@prod^0,c
  7439   00299C  0E00               	movlw	0
  7440   00299E  6E3E               	movwf	(___flmul@prod+1)^0,c
  7441   0029A0  0E80               	movlw	128
  7442   0029A2  6E3F               	movwf	(___flmul@prod+2)^0,c
  7443   0029A4  0E7F               	movlw	127
  7444   0029A6  6E40               	movwf	(___flmul@prod+3)^0,c
  7445   0029A8  EF04  F015         	goto	l3341
  7446   0029AC                     l3329:
  7447   0029AC  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  7448   0029AE  EFE3  F014         	goto	u3360
  7449   0029B2  5042               	movf	(___flmul@temp+1)^0,w,c
  7450   0029B4  E106               	bnz	u3361
  7451   0029B6  0441               	decf	___flmul@temp^0,w,c
  7452   0029B8  B0D8               	btfsc	status,0,c
  7453   0029BA  EFE1  F014         	goto	u3361
  7454   0029BE  EFE3  F014         	goto	u3360
  7455   0029C2                     u3361:
  7456   0029C2  EFEF  F014         	goto	l820
  7457   0029C6                     u3360:
  7458   0029C6  0E00               	movlw	0
  7459   0029C8  6E3D               	movwf	___flmul@prod^0,c
  7460   0029CA  0E00               	movlw	0
  7461   0029CC  6E3E               	movwf	(___flmul@prod+1)^0,c
  7462   0029CE  0E00               	movlw	0
  7463   0029D0  6E3F               	movwf	(___flmul@prod+2)^0,c
  7464   0029D2  0E00               	movlw	0
  7465   0029D4  6E40               	movwf	(___flmul@prod+3)^0,c
  7466   0029D6  0E00               	movlw	0
  7467   0029D8  6E36               	movwf	___flmul@sign^0,c
  7468   0029DA  EF04  F015         	goto	l3341
  7469   0029DE                     l820:
  7470   0029DE  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  7471   0029E2  0EFF               	movlw	255
  7472   0029E4  163D               	andwf	___flmul@prod^0,f,c
  7473   0029E6  0EFF               	movlw	255
  7474   0029E8  163E               	andwf	(___flmul@prod+1)^0,f,c
  7475   0029EA  0E7F               	movlw	127
  7476   0029EC  163F               	andwf	(___flmul@prod+2)^0,f,c
  7477   0029EE  0E00               	movlw	0
  7478   0029F0  1640               	andwf	(___flmul@prod+3)^0,f,c
  7479   0029F2  A03C               	btfss	___flmul@bexp^0,0,c
  7480   0029F4  EFFE  F014         	goto	u3371
  7481   0029F8  EF00  F015         	goto	u3370
  7482   0029FC                     u3371:
  7483   0029FC  EF01  F015         	goto	l3339
  7484   002A00                     u3370:
  7485   002A00  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  7486   002A02                     l3339:
  7487   002A02  90D8               	bcf	status,0,c
  7488   002A04  303C               	rrcf	___flmul@bexp^0,w,c
  7489   002A06  6E40               	movwf	(___flmul@prod+3)^0,c
  7490   002A08                     l3341:
  7491   002A08  5036               	movf	___flmul@sign^0,w,c
  7492   002A0A  1240               	iorwf	(___flmul@prod+3)^0,f,c
  7493   002A0C  C03D  F02A         	movff	___flmul@prod,?___flmul
  7494   002A10  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  7495   002A14  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  7496   002A18  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  7497   002A1C                     l807:
  7498   002A1C  0012               	return		;funcret
  7499   002A1E                     __end_of___flmul:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function ___flge *****************
  7503 ;; Defined at:
  7504 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  ff1             4   66[COMRAM] unsigned char 
  7507 ;;  ff2             4   70[COMRAM] unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;		None               void
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7519 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;Total ram usage:       12 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_efgtoa
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text33
  7533   003DB4                     __ptext33:
  7534                           	callstack 0
  7535   003DB4                     ___flge:
  7536                           	callstack 25
  7537   003DB4  0E00               	movlw	0
  7538   003DB6  1443               	andwf	___flge@ff1^0,w,c
  7539   003DB8  6E4B               	movwf	??___flge^0,c
  7540   003DBA  0E00               	movlw	0
  7541   003DBC  1444               	andwf	(___flge@ff1+1)^0,w,c
  7542   003DBE  6E4C               	movwf	(??___flge+1)^0,c
  7543   003DC0  0E80               	movlw	128
  7544   003DC2  1445               	andwf	(___flge@ff1+2)^0,w,c
  7545   003DC4  6E4D               	movwf	(??___flge+2)^0,c
  7546   003DC6  0E7F               	movlw	127
  7547   003DC8  1446               	andwf	(___flge@ff1+3)^0,w,c
  7548   003DCA  6E4E               	movwf	(??___flge+3)^0,c
  7549   003DCC  504B               	movf	??___flge^0,w,c
  7550   003DCE  104C               	iorwf	(??___flge+1)^0,w,c
  7551   003DD0  104D               	iorwf	(??___flge+2)^0,w,c
  7552   003DD2  104E               	iorwf	(??___flge+3)^0,w,c
  7553   003DD4  A4D8               	btfss	status,2,c
  7554   003DD6  EFEF  F01E         	goto	u3411
  7555   003DDA  EFF1  F01E         	goto	u3410
  7556   003DDE                     u3411:
  7557   003DDE  EFF9  F01E         	goto	l3373
  7558   003DE2                     u3410:
  7559   003DE2  0E00               	movlw	0
  7560   003DE4  6E43               	movwf	___flge@ff1^0,c
  7561   003DE6  0E00               	movlw	0
  7562   003DE8  6E44               	movwf	(___flge@ff1+1)^0,c
  7563   003DEA  0E00               	movlw	0
  7564   003DEC  6E45               	movwf	(___flge@ff1+2)^0,c
  7565   003DEE  0E00               	movlw	0
  7566   003DF0  6E46               	movwf	(___flge@ff1+3)^0,c
  7567   003DF2                     l3373:
  7568   003DF2  0E00               	movlw	0
  7569   003DF4  1447               	andwf	___flge@ff2^0,w,c
  7570   003DF6  6E4B               	movwf	??___flge^0,c
  7571   003DF8  0E00               	movlw	0
  7572   003DFA  1448               	andwf	(___flge@ff2+1)^0,w,c
  7573   003DFC  6E4C               	movwf	(??___flge+1)^0,c
  7574   003DFE  0E80               	movlw	128
  7575   003E00  1449               	andwf	(___flge@ff2+2)^0,w,c
  7576   003E02  6E4D               	movwf	(??___flge+2)^0,c
  7577   003E04  0E7F               	movlw	127
  7578   003E06  144A               	andwf	(___flge@ff2+3)^0,w,c
  7579   003E08  6E4E               	movwf	(??___flge+3)^0,c
  7580   003E0A  504B               	movf	??___flge^0,w,c
  7581   003E0C  104C               	iorwf	(??___flge+1)^0,w,c
  7582   003E0E  104D               	iorwf	(??___flge+2)^0,w,c
  7583   003E10  104E               	iorwf	(??___flge+3)^0,w,c
  7584   003E12  A4D8               	btfss	status,2,c
  7585   003E14  EF0E  F01F         	goto	u3421
  7586   003E18  EF10  F01F         	goto	u3420
  7587   003E1C                     u3421:
  7588   003E1C  EF18  F01F         	goto	l3377
  7589   003E20                     u3420:
  7590   003E20  0E00               	movlw	0
  7591   003E22  6E47               	movwf	___flge@ff2^0,c
  7592   003E24  0E00               	movlw	0
  7593   003E26  6E48               	movwf	(___flge@ff2+1)^0,c
  7594   003E28  0E00               	movlw	0
  7595   003E2A  6E49               	movwf	(___flge@ff2+2)^0,c
  7596   003E2C  0E00               	movlw	0
  7597   003E2E  6E4A               	movwf	(___flge@ff2+3)^0,c
  7598   003E30                     l3377:
  7599   003E30  AE46               	btfss	(___flge@ff1+3)^0,7,c
  7600   003E32  EF1D  F01F         	goto	u3431
  7601   003E36  EF1F  F01F         	goto	u3430
  7602   003E3A                     u3431:
  7603   003E3A  EF28  F01F         	goto	l3381
  7604   003E3E                     u3430:
  7605   003E3E  6C43               	negf	___flge@ff1^0,c
  7606   003E40  1E44               	comf	(___flge@ff1+1)^0,f,c
  7607   003E42  B0D8               	btfsc	status,0,c
  7608   003E44  2A44               	incf	(___flge@ff1+1)^0,f,c
  7609   003E46  1E45               	comf	(___flge@ff1+2)^0,f,c
  7610   003E48  B0D8               	btfsc	status,0,c
  7611   003E4A  2A45               	incf	(___flge@ff1+2)^0,f,c
  7612   003E4C  0E80               	movlw	128
  7613   003E4E  5646               	subfwb	(___flge@ff1+3)^0,f,c
  7614   003E50                     l3381:
  7615   003E50  AE4A               	btfss	(___flge@ff2+3)^0,7,c
  7616   003E52  EF2D  F01F         	goto	u3441
  7617   003E56  EF2F  F01F         	goto	u3440
  7618   003E5A                     u3441:
  7619   003E5A  EF38  F01F         	goto	l454
  7620   003E5E                     u3440:
  7621   003E5E  6C47               	negf	___flge@ff2^0,c
  7622   003E60  1E48               	comf	(___flge@ff2+1)^0,f,c
  7623   003E62  B0D8               	btfsc	status,0,c
  7624   003E64  2A48               	incf	(___flge@ff2+1)^0,f,c
  7625   003E66  1E49               	comf	(___flge@ff2+2)^0,f,c
  7626   003E68  B0D8               	btfsc	status,0,c
  7627   003E6A  2A49               	incf	(___flge@ff2+2)^0,f,c
  7628   003E6C  0E80               	movlw	128
  7629   003E6E  564A               	subfwb	(___flge@ff2+3)^0,f,c
  7630   003E70                     l454:
  7631   003E70  0E00               	movlw	0
  7632   003E72  1A43               	xorwf	___flge@ff1^0,f,c
  7633   003E74  0E00               	movlw	0
  7634   003E76  1A44               	xorwf	(___flge@ff1+1)^0,f,c
  7635   003E78  0E00               	movlw	0
  7636   003E7A  1A45               	xorwf	(___flge@ff1+2)^0,f,c
  7637   003E7C  0E80               	movlw	128
  7638   003E7E  1A46               	xorwf	(___flge@ff1+3)^0,f,c
  7639   003E80  0E00               	movlw	0
  7640   003E82  1A47               	xorwf	___flge@ff2^0,f,c
  7641   003E84  0E00               	movlw	0
  7642   003E86  1A48               	xorwf	(___flge@ff2+1)^0,f,c
  7643   003E88  0E00               	movlw	0
  7644   003E8A  1A49               	xorwf	(___flge@ff2+2)^0,f,c
  7645   003E8C  0E80               	movlw	128
  7646   003E8E  1A4A               	xorwf	(___flge@ff2+3)^0,f,c
  7647   003E90  5047               	movf	___flge@ff2^0,w,c
  7648   003E92  5C43               	subwf	___flge@ff1^0,w,c
  7649   003E94  5048               	movf	(___flge@ff2+1)^0,w,c
  7650   003E96  5844               	subwfb	(___flge@ff1+1)^0,w,c
  7651   003E98  5049               	movf	(___flge@ff2+2)^0,w,c
  7652   003E9A  5845               	subwfb	(___flge@ff1+2)^0,w,c
  7653   003E9C  504A               	movf	(___flge@ff2+3)^0,w,c
  7654   003E9E  5846               	subwfb	(___flge@ff1+3)^0,w,c
  7655   003EA0  B0D8               	btfsc	status,0,c
  7656   003EA2  EF55  F01F         	goto	u3451
  7657   003EA6  EF57  F01F         	goto	u3450
  7658   003EAA                     u3451:
  7659   003EAA  EF5A  F01F         	goto	l3387
  7660   003EAE                     u3450:
  7661   003EAE  90D8               	bcf	status,0,c
  7662   003EB0  EF5B  F01F         	goto	l459
  7663   003EB4                     l3387:
  7664   003EB4  80D8               	bsf	status,0,c
  7665   003EB6                     l459:
  7666   003EB6  0012               	return		;funcret
  7667   003EB8                     __end_of___flge:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function ___fleq *****************
  7671 ;; Defined at:
  7672 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  ff1             4    0[COMRAM] unsigned char 
  7675 ;;  ff2             4    4[COMRAM] unsigned char 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;		None               void
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7687 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7690 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;Total ram usage:       12 bytes
  7692 ;; Hardware stack levels used: 1
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_efgtoa
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text34
  7701   0041F2                     __ptext34:
  7702                           	callstack 0
  7703   0041F2                     ___fleq:
  7704                           	callstack 25
  7705   0041F2  0E00               	movlw	0
  7706   0041F4  1401               	andwf	___fleq@ff1^0,w,c
  7707   0041F6  6E09               	movwf	??___fleq^0,c
  7708   0041F8  0E00               	movlw	0
  7709   0041FA  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7710   0041FC  6E0A               	movwf	(??___fleq+1)^0,c
  7711   0041FE  0E80               	movlw	128
  7712   004200  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7713   004202  6E0B               	movwf	(??___fleq+2)^0,c
  7714   004204  0E7F               	movlw	127
  7715   004206  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7716   004208  6E0C               	movwf	(??___fleq+3)^0,c
  7717   00420A  5009               	movf	??___fleq^0,w,c
  7718   00420C  100A               	iorwf	(??___fleq+1)^0,w,c
  7719   00420E  100B               	iorwf	(??___fleq+2)^0,w,c
  7720   004210  100C               	iorwf	(??___fleq+3)^0,w,c
  7721   004212  A4D8               	btfss	status,2,c
  7722   004214  EF0E  F021         	goto	u3381
  7723   004218  EF10  F021         	goto	u3380
  7724   00421C                     u3381:
  7725   00421C  EF18  F021         	goto	l3357
  7726   004220                     u3380:
  7727   004220  0E00               	movlw	0
  7728   004222  6E01               	movwf	___fleq@ff1^0,c
  7729   004224  0E00               	movlw	0
  7730   004226  6E02               	movwf	(___fleq@ff1+1)^0,c
  7731   004228  0E00               	movlw	0
  7732   00422A  6E03               	movwf	(___fleq@ff1+2)^0,c
  7733   00422C  0E00               	movlw	0
  7734   00422E  6E04               	movwf	(___fleq@ff1+3)^0,c
  7735   004230                     l3357:
  7736   004230  0E00               	movlw	0
  7737   004232  1405               	andwf	___fleq@ff2^0,w,c
  7738   004234  6E09               	movwf	??___fleq^0,c
  7739   004236  0E00               	movlw	0
  7740   004238  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7741   00423A  6E0A               	movwf	(??___fleq+1)^0,c
  7742   00423C  0E80               	movlw	128
  7743   00423E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7744   004240  6E0B               	movwf	(??___fleq+2)^0,c
  7745   004242  0E7F               	movlw	127
  7746   004244  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7747   004246  6E0C               	movwf	(??___fleq+3)^0,c
  7748   004248  5009               	movf	??___fleq^0,w,c
  7749   00424A  100A               	iorwf	(??___fleq+1)^0,w,c
  7750   00424C  100B               	iorwf	(??___fleq+2)^0,w,c
  7751   00424E  100C               	iorwf	(??___fleq+3)^0,w,c
  7752   004250  A4D8               	btfss	status,2,c
  7753   004252  EF2D  F021         	goto	u3391
  7754   004256  EF2F  F021         	goto	u3390
  7755   00425A                     u3391:
  7756   00425A  EF37  F021         	goto	l3361
  7757   00425E                     u3390:
  7758   00425E  0E00               	movlw	0
  7759   004260  6E05               	movwf	___fleq@ff2^0,c
  7760   004262  0E00               	movlw	0
  7761   004264  6E06               	movwf	(___fleq@ff2+1)^0,c
  7762   004266  0E00               	movlw	0
  7763   004268  6E07               	movwf	(___fleq@ff2+2)^0,c
  7764   00426A  0E00               	movlw	0
  7765   00426C  6E08               	movwf	(___fleq@ff2+3)^0,c
  7766   00426E                     l3361:
  7767   00426E  5005               	movf	___fleq@ff2^0,w,c
  7768   004270  1801               	xorwf	___fleq@ff1^0,w,c
  7769   004272  E10F               	bnz	u3400
  7770   004274  5006               	movf	(___fleq@ff2+1)^0,w,c
  7771   004276  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7772   004278  E10C               	bnz	u3400
  7773   00427A  5007               	movf	(___fleq@ff2+2)^0,w,c
  7774   00427C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7775   00427E  E109               	bnz	u3400
  7776   004280  5008               	movf	(___fleq@ff2+3)^0,w,c
  7777   004282  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7778   004284  B4D8               	btfsc	status,2,c
  7779   004286  EF47  F021         	goto	u3401
  7780   00428A  EF49  F021         	goto	u3400
  7781   00428E                     u3401:
  7782   00428E  EF4C  F021         	goto	l3365
  7783   004292                     u3400:
  7784   004292  90D8               	bcf	status,0,c
  7785   004294  EF4D  F021         	goto	l448
  7786   004298                     l3365:
  7787   004298  80D8               	bsf	status,0,c
  7788   00429A                     l448:
  7789   00429A  0012               	return		;funcret
  7790   00429C                     __end_of___fleq:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function ___fldiv *****************
  7794 ;; Defined at:
  7795 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  b               4   16[COMRAM] unsigned char 
  7798 ;;  a               4   20[COMRAM] unsigned char 
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  grs             4   35[COMRAM] unsigned long 
  7801 ;;  rem             4   28[COMRAM] unsigned long 
  7802 ;;  new_exp         2   33[COMRAM] short 
  7803 ;;  aexp            1   40[COMRAM] unsigned char 
  7804 ;;  bexp            1   39[COMRAM] unsigned char 
  7805 ;;  sign            1   32[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  4   16[COMRAM] unsigned char 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7815 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;Total ram usage:       25 bytes
  7820 ;; Hardware stack levels used: 1
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_colour_read_all
  7825 ;;		_efgtoa
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text35
  7830   002A1E                     __ptext35:
  7831                           	callstack 0
  7832   002A1E                     ___fldiv:
  7833                           	callstack 29
  7834   002A1E  5014               	movf	(___fldiv@b+3)^0,w,c
  7835   002A20  0B80               	andlw	128
  7836   002A22  6E21               	movwf	___fldiv@sign^0,c
  7837   002A24  5014               	movf	(___fldiv@b+3)^0,w,c
  7838   002A26  2414               	addwf	(___fldiv@b+3)^0,w,c
  7839   002A28  6E28               	movwf	___fldiv@bexp^0,c
  7840   002A2A  AE13               	btfss	(___fldiv@b+2)^0,7,c
  7841   002A2C  EF1A  F015         	goto	u2961
  7842   002A30  EF1C  F015         	goto	u2960
  7843   002A34                     u2961:
  7844   002A34  EF1D  F015         	goto	l3085
  7845   002A38                     u2960:
  7846   002A38  8028               	bsf	___fldiv@bexp^0,0,c
  7847   002A3A                     l3085:
  7848   002A3A  5028               	movf	___fldiv@bexp^0,w,c
  7849   002A3C  B4D8               	btfsc	status,2,c
  7850   002A3E  EF23  F015         	goto	u2971
  7851   002A42  EF25  F015         	goto	u2970
  7852   002A46                     u2971:
  7853   002A46  EF3A  F015         	goto	l3095
  7854   002A4A                     u2970:
  7855   002A4A  2828               	incf	___fldiv@bexp^0,w,c
  7856   002A4C  A4D8               	btfss	status,2,c
  7857   002A4E  EF2B  F015         	goto	u2981
  7858   002A52  EF2D  F015         	goto	u2980
  7859   002A56                     u2981:
  7860   002A56  EF35  F015         	goto	l3091
  7861   002A5A                     u2980:
  7862   002A5A  0E00               	movlw	0
  7863   002A5C  6E11               	movwf	___fldiv@b^0,c
  7864   002A5E  0E00               	movlw	0
  7865   002A60  6E12               	movwf	(___fldiv@b+1)^0,c
  7866   002A62  0E00               	movlw	0
  7867   002A64  6E13               	movwf	(___fldiv@b+2)^0,c
  7868   002A66  0E00               	movlw	0
  7869   002A68  6E14               	movwf	(___fldiv@b+3)^0,c
  7870   002A6A                     l3091:
  7871   002A6A  8E13               	bsf	(___fldiv@b+2)^0,7,c
  7872   002A6C  0E00               	movlw	0
  7873   002A6E  6E14               	movwf	(___fldiv@b+3)^0,c
  7874   002A70  EF42  F015         	goto	l3097
  7875   002A74                     l3095:
  7876   002A74  0E00               	movlw	0
  7877   002A76  6E11               	movwf	___fldiv@b^0,c
  7878   002A78  0E00               	movlw	0
  7879   002A7A  6E12               	movwf	(___fldiv@b+1)^0,c
  7880   002A7C  0E00               	movlw	0
  7881   002A7E  6E13               	movwf	(___fldiv@b+2)^0,c
  7882   002A80  0E00               	movlw	0
  7883   002A82  6E14               	movwf	(___fldiv@b+3)^0,c
  7884   002A84                     l3097:
  7885   002A84  5018               	movf	(___fldiv@a+3)^0,w,c
  7886   002A86  0B80               	andlw	128
  7887   002A88  1A21               	xorwf	___fldiv@sign^0,f,c
  7888   002A8A  5018               	movf	(___fldiv@a+3)^0,w,c
  7889   002A8C  2418               	addwf	(___fldiv@a+3)^0,w,c
  7890   002A8E  6E29               	movwf	___fldiv@aexp^0,c
  7891   002A90  AE17               	btfss	(___fldiv@a+2)^0,7,c
  7892   002A92  EF4D  F015         	goto	u2991
  7893   002A96  EF4F  F015         	goto	u2990
  7894   002A9A                     u2991:
  7895   002A9A  EF50  F015         	goto	l3105
  7896   002A9E                     u2990:
  7897   002A9E  8029               	bsf	___fldiv@aexp^0,0,c
  7898   002AA0                     l3105:
  7899   002AA0  5029               	movf	___fldiv@aexp^0,w,c
  7900   002AA2  B4D8               	btfsc	status,2,c
  7901   002AA4  EF56  F015         	goto	u3001
  7902   002AA8  EF58  F015         	goto	u3000
  7903   002AAC                     u3001:
  7904   002AAC  EF6D  F015         	goto	l3115
  7905   002AB0                     u3000:
  7906   002AB0  2829               	incf	___fldiv@aexp^0,w,c
  7907   002AB2  A4D8               	btfss	status,2,c
  7908   002AB4  EF5E  F015         	goto	u3011
  7909   002AB8  EF60  F015         	goto	u3010
  7910   002ABC                     u3011:
  7911   002ABC  EF68  F015         	goto	l3111
  7912   002AC0                     u3010:
  7913   002AC0  0E00               	movlw	0
  7914   002AC2  6E15               	movwf	___fldiv@a^0,c
  7915   002AC4  0E00               	movlw	0
  7916   002AC6  6E16               	movwf	(___fldiv@a+1)^0,c
  7917   002AC8  0E00               	movlw	0
  7918   002ACA  6E17               	movwf	(___fldiv@a+2)^0,c
  7919   002ACC  0E00               	movlw	0
  7920   002ACE  6E18               	movwf	(___fldiv@a+3)^0,c
  7921   002AD0                     l3111:
  7922   002AD0  8E17               	bsf	(___fldiv@a+2)^0,7,c
  7923   002AD2  0E00               	movlw	0
  7924   002AD4  6E18               	movwf	(___fldiv@a+3)^0,c
  7925   002AD6  EF75  F015         	goto	l3117
  7926   002ADA                     l3115:
  7927   002ADA  0E00               	movlw	0
  7928   002ADC  6E15               	movwf	___fldiv@a^0,c
  7929   002ADE  0E00               	movlw	0
  7930   002AE0  6E16               	movwf	(___fldiv@a+1)^0,c
  7931   002AE2  0E00               	movlw	0
  7932   002AE4  6E17               	movwf	(___fldiv@a+2)^0,c
  7933   002AE6  0E00               	movlw	0
  7934   002AE8  6E18               	movwf	(___fldiv@a+3)^0,c
  7935   002AEA                     l3117:
  7936   002AEA  5015               	movf	___fldiv@a^0,w,c
  7937   002AEC  1016               	iorwf	(___fldiv@a+1)^0,w,c
  7938   002AEE  1017               	iorwf	(___fldiv@a+2)^0,w,c
  7939   002AF0  1018               	iorwf	(___fldiv@a+3)^0,w,c
  7940   002AF2  A4D8               	btfss	status,2,c
  7941   002AF4  EF7E  F015         	goto	u3021
  7942   002AF8  EF80  F015         	goto	u3020
  7943   002AFC                     u3021:
  7944   002AFC  EF98  F015         	goto	l3129
  7945   002B00                     u3020:
  7946   002B00  0E00               	movlw	0
  7947   002B02  6E11               	movwf	___fldiv@b^0,c
  7948   002B04  0E00               	movlw	0
  7949   002B06  6E12               	movwf	(___fldiv@b+1)^0,c
  7950   002B08  0E00               	movlw	0
  7951   002B0A  6E13               	movwf	(___fldiv@b+2)^0,c
  7952   002B0C  0E00               	movlw	0
  7953   002B0E  6E14               	movwf	(___fldiv@b+3)^0,c
  7954   002B10  0E80               	movlw	128
  7955   002B12  1213               	iorwf	(___fldiv@b+2)^0,f,c
  7956   002B14  0E7F               	movlw	127
  7957   002B16  1214               	iorwf	(___fldiv@b+3)^0,f,c
  7958   002B18                     l3123:
  7959   002B18  5021               	movf	___fldiv@sign^0,w,c
  7960   002B1A  1214               	iorwf	(___fldiv@b+3)^0,f,c
  7961   002B1C  C011  F011         	movff	___fldiv@b,?___fldiv
  7962   002B20  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  7963   002B24  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  7964   002B28  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  7965   002B2C  EFDB  F016         	goto	l771
  7966   002B30                     l3129:
  7967   002B30  5028               	movf	___fldiv@bexp^0,w,c
  7968   002B32  A4D8               	btfss	status,2,c
  7969   002B34  EF9E  F015         	goto	u3031
  7970   002B38  EFA0  F015         	goto	u3030
  7971   002B3C                     u3031:
  7972   002B3C  EFAA  F015         	goto	l3137
  7973   002B40                     u3030:
  7974   002B40  0E00               	movlw	0
  7975   002B42  6E11               	movwf	?___fldiv^0,c
  7976   002B44  0E00               	movlw	0
  7977   002B46  6E12               	movwf	(?___fldiv+1)^0,c
  7978   002B48  0E00               	movlw	0
  7979   002B4A  6E13               	movwf	(?___fldiv+2)^0,c
  7980   002B4C  0E00               	movlw	0
  7981   002B4E  6E14               	movwf	(?___fldiv+3)^0,c
  7982   002B50  EFDB  F016         	goto	l771
  7983   002B54                     l3137:
  7984   002B54  5029               	movf	___fldiv@aexp^0,w,c
  7985   002B56  C028  F019         	movff	___fldiv@bexp,??___fldiv
  7986   002B5A  6A1A               	clrf	(??___fldiv+1)^0,c
  7987   002B5C  5E19               	subwf	??___fldiv^0,f,c
  7988   002B5E  0E00               	movlw	0
  7989   002B60  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  7990   002B62  0E7F               	movlw	127
  7991   002B64  2419               	addwf	??___fldiv^0,w,c
  7992   002B66  6E22               	movwf	___fldiv@new_exp^0,c
  7993   002B68  0E00               	movlw	0
  7994   002B6A  201A               	addwfc	(??___fldiv+1)^0,w,c
  7995   002B6C  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  7996   002B6E  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  7997   002B72  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  7998   002B76  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  7999   002B7A  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  8000   002B7E  0E00               	movlw	0
  8001   002B80  6E11               	movwf	___fldiv@b^0,c
  8002   002B82  0E00               	movlw	0
  8003   002B84  6E12               	movwf	(___fldiv@b+1)^0,c
  8004   002B86  0E00               	movlw	0
  8005   002B88  6E13               	movwf	(___fldiv@b+2)^0,c
  8006   002B8A  0E00               	movlw	0
  8007   002B8C  6E14               	movwf	(___fldiv@b+3)^0,c
  8008   002B8E  0E00               	movlw	0
  8009   002B90  6E24               	movwf	___fldiv@grs^0,c
  8010   002B92  0E00               	movlw	0
  8011   002B94  6E25               	movwf	(___fldiv@grs+1)^0,c
  8012   002B96  0E00               	movlw	0
  8013   002B98  6E26               	movwf	(___fldiv@grs+2)^0,c
  8014   002B9A  0E00               	movlw	0
  8015   002B9C  6E27               	movwf	(___fldiv@grs+3)^0,c
  8016   002B9E  0E00               	movlw	0
  8017   002BA0  6E29               	movwf	___fldiv@aexp^0,c
  8018   002BA2  EF0B  F016         	goto	l773
  8019   002BA6                     l3147:
  8020   002BA6  5029               	movf	___fldiv@aexp^0,w,c
  8021   002BA8  B4D8               	btfsc	status,2,c
  8022   002BAA  EFD9  F015         	goto	u3041
  8023   002BAE  EFDB  F015         	goto	u3040
  8024   002BB2                     u3041:
  8025   002BB2  EFF2  F015         	goto	l3155
  8026   002BB6                     u3040:
  8027   002BB6  90D8               	bcf	status,0,c
  8028   002BB8  361D               	rlcf	___fldiv@rem^0,f,c
  8029   002BBA  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  8030   002BBC  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  8031   002BBE  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  8032   002BC0  90D8               	bcf	status,0,c
  8033   002BC2  3611               	rlcf	___fldiv@b^0,f,c
  8034   002BC4  3612               	rlcf	(___fldiv@b+1)^0,f,c
  8035   002BC6  3613               	rlcf	(___fldiv@b+2)^0,f,c
  8036   002BC8  3614               	rlcf	(___fldiv@b+3)^0,f,c
  8037   002BCA  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  8038   002BCC  EFEA  F015         	goto	u3051
  8039   002BD0  EFEC  F015         	goto	u3050
  8040   002BD4                     u3051:
  8041   002BD4  EFED  F015         	goto	l776
  8042   002BD8                     u3050:
  8043   002BD8  8011               	bsf	___fldiv@b^0,0,c
  8044   002BDA                     l776:
  8045   002BDA  90D8               	bcf	status,0,c
  8046   002BDC  3624               	rlcf	___fldiv@grs^0,f,c
  8047   002BDE  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  8048   002BE0  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  8049   002BE2  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  8050   002BE4                     l3155:
  8051   002BE4  5015               	movf	___fldiv@a^0,w,c
  8052   002BE6  5C1D               	subwf	___fldiv@rem^0,w,c
  8053   002BE8  5016               	movf	(___fldiv@a+1)^0,w,c
  8054   002BEA  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  8055   002BEC  5017               	movf	(___fldiv@a+2)^0,w,c
  8056   002BEE  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  8057   002BF0  5018               	movf	(___fldiv@a+3)^0,w,c
  8058   002BF2  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  8059   002BF4  A0D8               	btfss	status,0,c
  8060   002BF6  EFFF  F015         	goto	u3061
  8061   002BFA  EF01  F016         	goto	u3060
  8062   002BFE                     u3061:
  8063   002BFE  EF0A  F016         	goto	l3161
  8064   002C02                     u3060:
  8065   002C02  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  8066   002C04  5015               	movf	___fldiv@a^0,w,c
  8067   002C06  5E1D               	subwf	___fldiv@rem^0,f,c
  8068   002C08  5016               	movf	(___fldiv@a+1)^0,w,c
  8069   002C0A  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  8070   002C0C  5017               	movf	(___fldiv@a+2)^0,w,c
  8071   002C0E  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  8072   002C10  5018               	movf	(___fldiv@a+3)^0,w,c
  8073   002C12  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  8074   002C14                     l3161:
  8075   002C14  2A29               	incf	___fldiv@aexp^0,f,c
  8076   002C16                     l773:
  8077   002C16  0E19               	movlw	25
  8078   002C18  6429               	cpfsgt	___fldiv@aexp^0,c
  8079   002C1A  EF11  F016         	goto	u3071
  8080   002C1E  EF13  F016         	goto	u3070
  8081   002C22                     u3071:
  8082   002C22  EFD3  F015         	goto	l3147
  8083   002C26                     u3070:
  8084   002C26  501D               	movf	___fldiv@rem^0,w,c
  8085   002C28  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  8086   002C2A  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  8087   002C2C  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  8088   002C2E  B4D8               	btfsc	status,2,c
  8089   002C30  EF1C  F016         	goto	u3081
  8090   002C34  EF1E  F016         	goto	u3080
  8091   002C38                     u3081:
  8092   002C38  EF36  F016         	goto	l3173
  8093   002C3C                     u3080:
  8094   002C3C  8024               	bsf	___fldiv@grs^0,0,c
  8095   002C3E  EF36  F016         	goto	l3173
  8096   002C42                     l3167:
  8097   002C42  90D8               	bcf	status,0,c
  8098   002C44  3611               	rlcf	___fldiv@b^0,f,c
  8099   002C46  3612               	rlcf	(___fldiv@b+1)^0,f,c
  8100   002C48  3613               	rlcf	(___fldiv@b+2)^0,f,c
  8101   002C4A  3614               	rlcf	(___fldiv@b+3)^0,f,c
  8102   002C4C  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  8103   002C4E  EF2B  F016         	goto	u3091
  8104   002C52  EF2D  F016         	goto	u3090
  8105   002C56                     u3091:
  8106   002C56  EF2E  F016         	goto	l782
  8107   002C5A                     u3090:
  8108   002C5A  8011               	bsf	___fldiv@b^0,0,c
  8109   002C5C                     l782:
  8110   002C5C  90D8               	bcf	status,0,c
  8111   002C5E  3624               	rlcf	___fldiv@grs^0,f,c
  8112   002C60  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  8113   002C62  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  8114   002C64  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  8115   002C66  0622               	decf	___fldiv@new_exp^0,f,c
  8116   002C68  A0D8               	btfss	status,0,c
  8117   002C6A  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  8118   002C6C                     l3173:
  8119   002C6C  AE13               	btfss	(___fldiv@b+2)^0,7,c
  8120   002C6E  EF3B  F016         	goto	u3101
  8121   002C72  EF3D  F016         	goto	u3100
  8122   002C76                     u3101:
  8123   002C76  EF21  F016         	goto	l3167
  8124   002C7A                     u3100:
  8125   002C7A  0E00               	movlw	0
  8126   002C7C  6E29               	movwf	___fldiv@aexp^0,c
  8127   002C7E  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  8128   002C80  EF44  F016         	goto	u3111
  8129   002C84  EF46  F016         	goto	u3110
  8130   002C88                     u3111:
  8131   002C88  EF6A  F016         	goto	l784
  8132   002C8C                     u3110:
  8133   002C8C  0EFF               	movlw	255
  8134   002C8E  1424               	andwf	___fldiv@grs^0,w,c
  8135   002C90  6E19               	movwf	??___fldiv^0,c
  8136   002C92  0EFF               	movlw	255
  8137   002C94  1425               	andwf	(___fldiv@grs+1)^0,w,c
  8138   002C96  6E1A               	movwf	(??___fldiv+1)^0,c
  8139   002C98  0EFF               	movlw	255
  8140   002C9A  1426               	andwf	(___fldiv@grs+2)^0,w,c
  8141   002C9C  6E1B               	movwf	(??___fldiv+2)^0,c
  8142   002C9E  0E7F               	movlw	127
  8143   002CA0  1427               	andwf	(___fldiv@grs+3)^0,w,c
  8144   002CA2  6E1C               	movwf	(??___fldiv+3)^0,c
  8145   002CA4  5019               	movf	??___fldiv^0,w,c
  8146   002CA6  101A               	iorwf	(??___fldiv+1)^0,w,c
  8147   002CA8  101B               	iorwf	(??___fldiv+2)^0,w,c
  8148   002CAA  101C               	iorwf	(??___fldiv+3)^0,w,c
  8149   002CAC  B4D8               	btfsc	status,2,c
  8150   002CAE  EF5B  F016         	goto	u3121
  8151   002CB2  EF5D  F016         	goto	u3120
  8152   002CB6                     u3121:
  8153   002CB6  EF61  F016         	goto	l785
  8154   002CBA                     u3120:
  8155   002CBA                     l3181:
  8156   002CBA  0E01               	movlw	1
  8157   002CBC  6E29               	movwf	___fldiv@aexp^0,c
  8158   002CBE  EF6A  F016         	goto	l784
  8159   002CC2                     l785:
  8160   002CC2  A011               	btfss	___fldiv@b^0,0,c
  8161   002CC4  EF66  F016         	goto	u3131
  8162   002CC8  EF68  F016         	goto	u3130
  8163   002CCC                     u3131:
  8164   002CCC  EF6A  F016         	goto	l784
  8165   002CD0                     u3130:
  8166   002CD0  EF5D  F016         	goto	l3181
  8167   002CD4                     l784:
  8168   002CD4  5029               	movf	___fldiv@aexp^0,w,c
  8169   002CD6  B4D8               	btfsc	status,2,c
  8170   002CD8  EF70  F016         	goto	u3141
  8171   002CDC  EF72  F016         	goto	u3140
  8172   002CE0                     u3141:
  8173   002CE0  EF96  F016         	goto	l3193
  8174   002CE4                     u3140:
  8175   002CE4  0E01               	movlw	1
  8176   002CE6  2611               	addwf	___fldiv@b^0,f,c
  8177   002CE8  0E00               	movlw	0
  8178   002CEA  2212               	addwfc	(___fldiv@b+1)^0,f,c
  8179   002CEC  2213               	addwfc	(___fldiv@b+2)^0,f,c
  8180   002CEE  2214               	addwfc	(___fldiv@b+3)^0,f,c
  8181   002CF0  A014               	btfss	(___fldiv@b+3)^0,0,c
  8182   002CF2  EF7D  F016         	goto	u3151
  8183   002CF6  EF7F  F016         	goto	u3150
  8184   002CFA                     u3151:
  8185   002CFA  EF96  F016         	goto	l3193
  8186   002CFE                     u3150:
  8187   002CFE  C011  F019         	movff	___fldiv@b,??___fldiv
  8188   002D02  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  8189   002D06  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  8190   002D0A  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  8191   002D0E  341C               	rlcf	(??___fldiv+3)^0,w,c
  8192   002D10  321C               	rrcf	(??___fldiv+3)^0,f,c
  8193   002D12  321B               	rrcf	(??___fldiv+2)^0,f,c
  8194   002D14  321A               	rrcf	(??___fldiv+1)^0,f,c
  8195   002D16  3219               	rrcf	??___fldiv^0,f,c
  8196   002D18  C019  F011         	movff	??___fldiv,___fldiv@b
  8197   002D1C  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  8198   002D20  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  8199   002D24  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  8200   002D28  4A22               	infsnz	___fldiv@new_exp^0,f,c
  8201   002D2A  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  8202   002D2C                     l3193:
  8203   002D2C  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8204   002D2E  EFA1  F016         	goto	u3161
  8205   002D32  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  8206   002D34  E108               	bnz	u3160
  8207   002D36  2822               	incf	___fldiv@new_exp^0,w,c
  8208   002D38  A0D8               	btfss	status,0,c
  8209   002D3A  EFA1  F016         	goto	u3161
  8210   002D3E  EFA3  F016         	goto	u3160
  8211   002D42                     u3161:
  8212   002D42  EFAE  F016         	goto	l3197
  8213   002D46                     u3160:
  8214   002D46  0E00               	movlw	0
  8215   002D48  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  8216   002D4A  6822               	setf	___fldiv@new_exp^0,c
  8217   002D4C  0E00               	movlw	0
  8218   002D4E  6E11               	movwf	___fldiv@b^0,c
  8219   002D50  0E00               	movlw	0
  8220   002D52  6E12               	movwf	(___fldiv@b+1)^0,c
  8221   002D54  0E00               	movlw	0
  8222   002D56  6E13               	movwf	(___fldiv@b+2)^0,c
  8223   002D58  0E00               	movlw	0
  8224   002D5A  6E14               	movwf	(___fldiv@b+3)^0,c
  8225   002D5C                     l3197:
  8226   002D5C  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8227   002D5E  EFBB  F016         	goto	u3170
  8228   002D62  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  8229   002D64  E106               	bnz	u3171
  8230   002D66  0422               	decf	___fldiv@new_exp^0,w,c
  8231   002D68  B0D8               	btfsc	status,0,c
  8232   002D6A  EFB9  F016         	goto	u3171
  8233   002D6E  EFBB  F016         	goto	u3170
  8234   002D72                     u3171:
  8235   002D72  EFC9  F016         	goto	l3201
  8236   002D76                     u3170:
  8237   002D76  0E00               	movlw	0
  8238   002D78  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  8239   002D7A  0E00               	movlw	0
  8240   002D7C  6E22               	movwf	___fldiv@new_exp^0,c
  8241   002D7E  0E00               	movlw	0
  8242   002D80  6E11               	movwf	___fldiv@b^0,c
  8243   002D82  0E00               	movlw	0
  8244   002D84  6E12               	movwf	(___fldiv@b+1)^0,c
  8245   002D86  0E00               	movlw	0
  8246   002D88  6E13               	movwf	(___fldiv@b+2)^0,c
  8247   002D8A  0E00               	movlw	0
  8248   002D8C  6E14               	movwf	(___fldiv@b+3)^0,c
  8249   002D8E  0E00               	movlw	0
  8250   002D90  6E21               	movwf	___fldiv@sign^0,c
  8251   002D92                     l3201:
  8252   002D92  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  8253   002D96  A028               	btfss	___fldiv@bexp^0,0,c
  8254   002D98  EFD0  F016         	goto	u3181
  8255   002D9C  EFD2  F016         	goto	u3180
  8256   002DA0                     u3181:
  8257   002DA0  EFD5  F016         	goto	l3207
  8258   002DA4                     u3180:
  8259   002DA4  8E13               	bsf	(___fldiv@b+2)^0,7,c
  8260   002DA6  EFD6  F016         	goto	l3209
  8261   002DAA                     l3207:
  8262   002DAA  9E13               	bcf	(___fldiv@b+2)^0,7,c
  8263   002DAC                     l3209:
  8264   002DAC  90D8               	bcf	status,0,c
  8265   002DAE  3028               	rrcf	___fldiv@bexp^0,w,c
  8266   002DB0  6E14               	movwf	(___fldiv@b+3)^0,c
  8267   002DB2  EF8C  F015         	goto	l3123
  8268   002DB6                     l771:
  8269   002DB6  0012               	return		;funcret
  8270   002DB8                     __end_of___fldiv:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function _dtoa *****************
  8274 ;; Defined at:
  8275 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8278 ;;		 -> sprintf@f(11), 
  8279 ;;  d               8   29[COMRAM] long long 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;  n               8   51[COMRAM] long long 
  8282 ;;  i               2   59[COMRAM] int 
  8283 ;;  w               2   49[COMRAM] int 
  8284 ;;  p               2   47[COMRAM] int 
  8285 ;;  s               1   61[COMRAM] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8295 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8299 ;;Total ram usage:       35 bytes
  8300 ;; Hardware stack levels used: 1
  8301 ;; Hardware stack levels required when called: 4
  8302 ;; This function calls:
  8303 ;;		___aodiv
  8304 ;;		___aomod
  8305 ;;		_abs
  8306 ;;		_pad
  8307 ;; This function is called by:
  8308 ;;		_vfpfcnvrt
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text36
  8313   003096                     __ptext36:
  8314                           	callstack 0
  8315   003096                     _dtoa:
  8316                           	callstack 22
  8317   003096                     
  8318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  8319   003096  C01E  F034         	movff	dtoa@d,dtoa@n
  8320   00309A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  8321   00309E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  8322   0030A2  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  8323   0030A6  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  8324   0030AA  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  8325   0030AE  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  8326   0030B2  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  8327   0030B6                     
  8328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  8329   0030B6  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  8330   0030B8  EF60  F018         	goto	u3831
  8331   0030BC  EF63  F018         	goto	u3830
  8332   0030C0                     u3831:
  8333   0030C0  0E01               	movlw	1
  8334   0030C2  EF64  F018         	goto	u3840
  8335   0030C6                     u3830:
  8336   0030C6  0E00               	movlw	0
  8337   0030C8                     u3840:
  8338   0030C8  6E3E               	movwf	dtoa@s^0,c
  8339   0030CA                     
  8340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  8341   0030CA  503E               	movf	dtoa@s^0,w,c
  8342   0030CC  B4D8               	btfsc	status,2,c
  8343   0030CE  EF6B  F018         	goto	u3851
  8344   0030D2  EF6D  F018         	goto	u3850
  8345   0030D6                     u3851:
  8346   0030D6  EF7D  F018         	goto	l3559
  8347   0030DA                     u3850:
  8348   0030DA                     
  8349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  8350   0030DA  1E3B               	comf	(dtoa@n+7)^0,f,c
  8351   0030DC  1E3A               	comf	(dtoa@n+6)^0,f,c
  8352   0030DE  1E39               	comf	(dtoa@n+5)^0,f,c
  8353   0030E0  1E38               	comf	(dtoa@n+4)^0,f,c
  8354   0030E2  1E37               	comf	(dtoa@n+3)^0,f,c
  8355   0030E4  1E36               	comf	(dtoa@n+2)^0,f,c
  8356   0030E6  1E35               	comf	(dtoa@n+1)^0,f,c
  8357   0030E8  6C34               	negf	dtoa@n^0,c
  8358   0030EA  0E00               	movlw	0
  8359   0030EC  2235               	addwfc	(dtoa@n+1)^0,f,c
  8360   0030EE  2236               	addwfc	(dtoa@n+2)^0,f,c
  8361   0030F0  2237               	addwfc	(dtoa@n+3)^0,f,c
  8362   0030F2  2238               	addwfc	(dtoa@n+4)^0,f,c
  8363   0030F4  2239               	addwfc	(dtoa@n+5)^0,f,c
  8364   0030F6  223A               	addwfc	(dtoa@n+6)^0,f,c
  8365   0030F8  223B               	addwfc	(dtoa@n+7)^0,f,c
  8366   0030FA                     l3559:
  8367                           
  8368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  8369   0030FA  0100               	movlb	0	; () banked
  8370   0030FC  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  8371   0030FE  EF83  F018         	goto	u3861
  8372   003102  EF85  F018         	goto	u3860
  8373   003106                     u3861:
  8374   003106  EF86  F018         	goto	l3563
  8375   00310A                     u3860:
  8376   00310A                     
  8377                           ; BSR set to: 0
  8378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  8379   00310A  93DD               	bcf	_flags& (0+255),1,b
  8380   00310C                     l3563:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  8384   00310C  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  8385   00310E  EF93  F018         	goto	u3870
  8386   003112  51DC               	movf	(_prec+1)& (0+255),w,b
  8387   003114  E106               	bnz	u3871
  8388   003116  05DB               	decf	_prec& (0+255),w,b
  8389   003118  B0D8               	btfsc	status,0,c
  8390   00311A  EF91  F018         	goto	u3871
  8391   00311E  EF93  F018         	goto	u3870
  8392   003122                     u3871:
  8393   003122  EF99  F018         	goto	l915
  8394   003126                     u3870:
  8395   003126                     
  8396                           ; BSR set to: 0
  8397   003126  0E00               	movlw	0
  8398   003128  6E31               	movwf	(dtoa@p+1)^0,c
  8399   00312A  0E01               	movlw	1
  8400   00312C  6E30               	movwf	dtoa@p^0,c
  8401   00312E  EF9D  F018         	goto	l917
  8402   003132                     l915:
  8403                           
  8404                           ; BSR set to: 0
  8405   003132  C0DB  F030         	movff	_prec,dtoa@p
  8406   003136  C0DC  F031         	movff	_prec+1,dtoa@p+1
  8407   00313A                     l917:
  8408                           
  8409                           ; BSR set to: 0
  8410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  8411   00313A  C0D9  F032         	movff	_width,dtoa@w
  8412   00313E  C0DA  F033         	movff	_width+1,dtoa@w+1
  8413   003142                     
  8414                           ; BSR set to: 0
  8415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  8416   003142  503E               	movf	dtoa@s^0,w,c
  8417   003144  B4D8               	btfsc	status,2,c
  8418   003146  EFA7  F018         	goto	u3881
  8419   00314A  EFA9  F018         	goto	u3880
  8420   00314E                     u3881:
  8421   00314E  EFC0  F018         	goto	l918
  8422   003152                     u3880:
  8423   003152                     
  8424                           ; BSR set to: 0
  8425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  8426   003152  0632               	decf	dtoa@w^0,f,c
  8427   003154  A0D8               	btfss	status,0,c
  8428   003156  0633               	decf	(dtoa@w+1)^0,f,c
  8429   003158                     
  8430                           ; BSR set to: 0
  8431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  8432   003158  503E               	movf	dtoa@s^0,w,c
  8433   00315A  A4D8               	btfss	status,2,c
  8434   00315C  EFB2  F018         	goto	u3891
  8435   003160  EFB4  F018         	goto	u3890
  8436   003164                     u3891:
  8437   003164  EFBA  F018         	goto	l3575
  8438   003168                     u3890:
  8439   003168                     
  8440                           ; BSR set to: 0
  8441   003168  0E00               	movlw	0
  8442   00316A  6E2F               	movwf	(_dtoa$1100+1)^0,c
  8443   00316C  0E2B               	movlw	43
  8444   00316E  6E2E               	movwf	_dtoa$1100^0,c
  8445   003170  EFBE  F018         	goto	l3577
  8446   003174                     l3575:
  8447                           
  8448                           ; BSR set to: 0
  8449   003174  0E00               	movlw	0
  8450   003176  6E2F               	movwf	(_dtoa$1100+1)^0,c
  8451   003178  0E2D               	movlw	45
  8452   00317A  6E2E               	movwf	_dtoa$1100^0,c
  8453   00317C                     l3577:
  8454                           
  8455                           ; BSR set to: 0
  8456   00317C  C02E  F03E         	movff	_dtoa$1100,dtoa@s
  8457   003180                     l918:
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  8461   003180  0E00               	movlw	0
  8462   003182  6E3D               	movwf	(dtoa@i+1)^0,c
  8463   003184  0E4F               	movlw	79
  8464   003186  6E3C               	movwf	dtoa@i^0,c
  8465   003188                     
  8466                           ; BSR set to: 0
  8467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  8468   003188  0E00               	movlw	0
  8469   00318A  0101               	movlb	1	; () banked
  8470   00318C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8471                           
  8472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8473   00318E  EF45  F019         	goto	l3591
  8474   003192                     l3581:
  8475                           
  8476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  8477   003192  063C               	decf	dtoa@i^0,f,c
  8478   003194  A0D8               	btfss	status,0,c
  8479   003196  063D               	decf	(dtoa@i+1)^0,f,c
  8480   003198                     
  8481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8482   003198  0E00               	movlw	low _dbuf
  8483   00319A  243C               	addwf	dtoa@i^0,w,c
  8484   00319C  6ED9               	movwf	fsr2l,c
  8485   00319E  0E01               	movlw	high _dbuf
  8486   0031A0  203D               	addwfc	(dtoa@i+1)^0,w,c
  8487   0031A2  6EDA               	movwf	fsr2h,c
  8488   0031A4  C034  F001         	movff	dtoa@n,___aomod@dividend
  8489   0031A8  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8490   0031AC  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8491   0031B0  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8492   0031B4  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8493   0031B8  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8494   0031BC  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8495   0031C0  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8496   0031C4  0E0A               	movlw	10
  8497   0031C6  6E09               	movwf	___aomod@divisor^0,c
  8498   0031C8  0E00               	movlw	0
  8499   0031CA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8500   0031CC  0E00               	movlw	0
  8501   0031CE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8502   0031D0  0E00               	movlw	0
  8503   0031D2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8504   0031D4  0E00               	movlw	0
  8505   0031D6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8506   0031D8  0E00               	movlw	0
  8507   0031DA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8508   0031DC  0E00               	movlw	0
  8509   0031DE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8510   0031E0  0E00               	movlw	0
  8511   0031E2  6E10               	movwf	(___aomod@divisor+7)^0,c
  8512   0031E4  EC4E  F01C         	call	___aomod	;wreg free
  8513   0031E8  C001  F026         	movff	?___aomod,??_dtoa
  8514   0031EC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8515   0031F0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8516   0031F4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8517   0031F8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8518   0031FC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8519   003200  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8520   003204  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8521   003208  C026  F013         	movff	??_dtoa,abs@a
  8522   00320C  C027  F014         	movff	??_dtoa+1,abs@a+1
  8523   003210  EC76  F023         	call	_abs	;wreg free
  8524   003214  5013               	movf	?_abs^0,w,c
  8525   003216  0F30               	addlw	48
  8526   003218  6EDF               	movwf	indf2,c
  8527   00321A                     
  8528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  8529   00321A  0630               	decf	dtoa@p^0,f,c
  8530   00321C  A0D8               	btfss	status,0,c
  8531   00321E  0631               	decf	(dtoa@p+1)^0,f,c
  8532   003220                     
  8533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  8534   003220  0632               	decf	dtoa@w^0,f,c
  8535   003222  A0D8               	btfss	status,0,c
  8536   003224  0633               	decf	(dtoa@w+1)^0,f,c
  8537   003226                     
  8538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  8539   003226  C034  F001         	movff	dtoa@n,___aodiv@dividend
  8540   00322A  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8541   00322E  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8542   003232  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8543   003236  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8544   00323A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8545   00323E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8546   003242  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8547   003246  0E0A               	movlw	10
  8548   003248  6E09               	movwf	___aodiv@divisor^0,c
  8549   00324A  0E00               	movlw	0
  8550   00324C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8551   00324E  0E00               	movlw	0
  8552   003250  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8553   003252  0E00               	movlw	0
  8554   003254  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8555   003256  0E00               	movlw	0
  8556   003258  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8557   00325A  0E00               	movlw	0
  8558   00325C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8559   00325E  0E00               	movlw	0
  8560   003260  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8561   003262  0E00               	movlw	0
  8562   003264  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8563   003266  EC8A  F01B         	call	___aodiv	;wreg free
  8564   00326A  C001  F034         	movff	?___aodiv,dtoa@n
  8565   00326E  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  8566   003272  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  8567   003276  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  8568   00327A  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  8569   00327E  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  8570   003282  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  8571   003286  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  8572   00328A                     l3591:
  8573                           
  8574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  8575   00328A  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  8576   00328C  EF50  F019         	goto	u3901
  8577   003290  503D               	movf	(dtoa@i+1)^0,w,c
  8578   003292  E108               	bnz	u3900
  8579   003294  043C               	decf	dtoa@i^0,w,c
  8580   003296  A0D8               	btfss	status,0,c
  8581   003298  EF50  F019         	goto	u3901
  8582   00329C  EF52  F019         	goto	u3900
  8583   0032A0                     u3901:
  8584   0032A0  EF83  F019         	goto	l3601
  8585   0032A4                     u3900:
  8586   0032A4  5034               	movf	dtoa@n^0,w,c
  8587   0032A6  1035               	iorwf	(dtoa@n+1)^0,w,c
  8588   0032A8  1036               	iorwf	(dtoa@n+2)^0,w,c
  8589   0032AA  1037               	iorwf	(dtoa@n+3)^0,w,c
  8590   0032AC  1038               	iorwf	(dtoa@n+4)^0,w,c
  8591   0032AE  1039               	iorwf	(dtoa@n+5)^0,w,c
  8592   0032B0  103A               	iorwf	(dtoa@n+6)^0,w,c
  8593   0032B2  103B               	iorwf	(dtoa@n+7)^0,w,c
  8594   0032B4  A4D8               	btfss	status,2,c
  8595   0032B6  EF5F  F019         	goto	u3911
  8596   0032BA  EF61  F019         	goto	u3910
  8597   0032BE                     u3911:
  8598   0032BE  EFC9  F018         	goto	l3581
  8599   0032C2                     u3910:
  8600   0032C2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8601   0032C4  EF6E  F019         	goto	u3920
  8602   0032C8  5031               	movf	(dtoa@p+1)^0,w,c
  8603   0032CA  E106               	bnz	u3921
  8604   0032CC  0430               	decf	dtoa@p^0,w,c
  8605   0032CE  B0D8               	btfsc	status,0,c
  8606   0032D0  EF6C  F019         	goto	u3921
  8607   0032D4  EF6E  F019         	goto	u3920
  8608   0032D8                     u3921:
  8609   0032D8  EFC9  F018         	goto	l3581
  8610   0032DC                     u3920:
  8611   0032DC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8612   0032DE  EF79  F019         	goto	u3931
  8613   0032E2  5033               	movf	(dtoa@w+1)^0,w,c
  8614   0032E4  E108               	bnz	u3930
  8615   0032E6  0432               	decf	dtoa@w^0,w,c
  8616   0032E8  A0D8               	btfss	status,0,c
  8617   0032EA  EF79  F019         	goto	u3931
  8618   0032EE  EF7B  F019         	goto	u3930
  8619   0032F2                     u3931:
  8620   0032F2  EF83  F019         	goto	l3601
  8621   0032F6                     u3930:
  8622   0032F6  0100               	movlb	0	; () banked
  8623   0032F8  B3DD               	btfsc	_flags& (0+255),1,b
  8624   0032FA  EF81  F019         	goto	u3941
  8625   0032FE  EF83  F019         	goto	u3940
  8626   003302                     u3941:
  8627   003302  EFC9  F018         	goto	l3581
  8628   003306                     u3940:
  8629   003306                     l3601:
  8630                           
  8631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  8632   003306  503E               	movf	dtoa@s^0,w,c
  8633   003308  B4D8               	btfsc	status,2,c
  8634   00330A  EF89  F019         	goto	u3951
  8635   00330E  EF8B  F019         	goto	u3950
  8636   003312                     u3951:
  8637   003312  EF96  F019         	goto	l3607
  8638   003316                     u3950:
  8639   003316                     
  8640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  8641   003316  063C               	decf	dtoa@i^0,f,c
  8642   003318  A0D8               	btfss	status,0,c
  8643   00331A  063D               	decf	(dtoa@i+1)^0,f,c
  8644   00331C                     
  8645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  8646   00331C  0E00               	movlw	low _dbuf
  8647   00331E  243C               	addwf	dtoa@i^0,w,c
  8648   003320  6ED9               	movwf	fsr2l,c
  8649   003322  0E01               	movlw	high _dbuf
  8650   003324  203D               	addwfc	(dtoa@i+1)^0,w,c
  8651   003326  6EDA               	movwf	fsr2h,c
  8652   003328  C03E  FFDF         	movff	dtoa@s,indf2
  8653   00332C                     l3607:
  8654                           
  8655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8656   00332C  C01C  F011         	movff	dtoa@fp,pad@fp
  8657   003330  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8658   003334  0E00               	movlw	low _dbuf
  8659   003336  243C               	addwf	dtoa@i^0,w,c
  8660   003338  6E13               	movwf	pad@buf^0,c
  8661   00333A  0E01               	movlw	high _dbuf
  8662   00333C  203D               	addwfc	(dtoa@i+1)^0,w,c
  8663   00333E  6E14               	movwf	(pad@buf+1)^0,c
  8664   003340  C032  F015         	movff	dtoa@w,pad@p
  8665   003344  C033  F016         	movff	dtoa@w+1,pad@p+1
  8666   003348  ECA2  F020         	call	_pad	;wreg free
  8667   00334C  0012               	return		;funcret
  8668   00334E                     __end_of_dtoa:
  8669                           	callstack 0
  8670                           
  8671 ;; *************** function _pad *****************
  8672 ;; Defined at:
  8673 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8676 ;;		 -> sprintf@f(11), 
  8677 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8678 ;;		 -> dbuf(80), 
  8679 ;;  p               2   20[COMRAM] int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  w               2   25[COMRAM] int 
  8682 ;;  i               2   23[COMRAM] int 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8692 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;Total ram usage:       11 bytes
  8697 ;; Hardware stack levels used: 1
  8698 ;; Hardware stack levels required when called: 3
  8699 ;; This function calls:
  8700 ;;		_fputc
  8701 ;;		_fputs
  8702 ;; This function is called by:
  8703 ;;		_dtoa
  8704 ;;		_efgtoa
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text37
  8709   004144                     __ptext37:
  8710                           	callstack 0
  8711   004144                     _pad:
  8712                           	callstack 22
  8713   004144                     
  8714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  8715   004144  0100               	movlb	0	; () banked
  8716   004146  A1DD               	btfss	_flags& (0+255),0,b
  8717   004148  EFA8  F020         	goto	u3541
  8718   00414C  EFAA  F020         	goto	u3540
  8719   004150                     u3541:
  8720   004150  EFB4  F020         	goto	l3447
  8721   004154                     u3540:
  8722   004154                     
  8723                           ; BSR set to: 0
  8724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  8725   004154  C013  F00A         	movff	pad@buf,fputs@s
  8726   004158  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8727   00415C  C011  F00C         	movff	pad@fp,fputs@fp
  8728   004160  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8729   004164  EC33  F023         	call	_fputs	;wreg free
  8730   004168                     l3447:
  8731                           
  8732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  8733   004168  BE16               	btfsc	(pad@p+1)^0,7,c
  8734   00416A  EFB9  F020         	goto	u3551
  8735   00416E  EFBB  F020         	goto	u3550
  8736   004172                     u3551:
  8737   004172  EFC1  F020         	goto	l3451
  8738   004176                     u3550:
  8739   004176  C015  F01A         	movff	pad@p,pad@w
  8740   00417A  C016  F01B         	movff	pad@p+1,pad@w+1
  8741   00417E  EFC5  F020         	goto	l904
  8742   004182                     l3451:
  8743   004182  0E00               	movlw	0
  8744   004184  6E1B               	movwf	(pad@w+1)^0,c
  8745   004186  0E00               	movlw	0
  8746   004188  6E1A               	movwf	pad@w^0,c
  8747   00418A                     l904:
  8748                           
  8749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8750   00418A  0E00               	movlw	0
  8751   00418C  6E19               	movwf	(pad@i+1)^0,c
  8752   00418E  0E00               	movlw	0
  8753   004190  6E18               	movwf	pad@i^0,c
  8754                           
  8755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8756   004192  EFD7  F020         	goto	l3457
  8757   004196                     l3453:
  8758                           
  8759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8760   004196  0E00               	movlw	0
  8761   004198  6E02               	movwf	(fputc@c+1)^0,c
  8762   00419A  0E20               	movlw	32
  8763   00419C  6E01               	movwf	fputc@c^0,c
  8764   00419E  C011  F003         	movff	pad@fp,fputc@fp
  8765   0041A2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8766   0041A6  ECDB  F01F         	call	_fputc	;wreg free
  8767   0041AA                     
  8768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8769   0041AA  4A18               	infsnz	pad@i^0,f,c
  8770   0041AC  2A19               	incf	(pad@i+1)^0,f,c
  8771   0041AE                     l3457:
  8772                           
  8773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8774   0041AE  501A               	movf	pad@w^0,w,c
  8775   0041B0  5C18               	subwf	pad@i^0,w,c
  8776   0041B2  5019               	movf	(pad@i+1)^0,w,c
  8777   0041B4  0A80               	xorlw	128
  8778   0041B6  6E17               	movwf	??_pad^0,c
  8779   0041B8  501B               	movf	(pad@w+1)^0,w,c
  8780   0041BA  0A80               	xorlw	128
  8781   0041BC  5817               	subwfb	??_pad^0,w,c
  8782   0041BE  A0D8               	btfss	status,0,c
  8783   0041C0  EFE4  F020         	goto	u3561
  8784   0041C4  EFE6  F020         	goto	u3560
  8785   0041C8                     u3561:
  8786   0041C8  EFCB  F020         	goto	l3453
  8787   0041CC                     u3560:
  8788   0041CC                     
  8789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  8790   0041CC  0100               	movlb	0	; () banked
  8791   0041CE  B1DD               	btfsc	_flags& (0+255),0,b
  8792   0041D0  EFEC  F020         	goto	u3571
  8793   0041D4  EFEE  F020         	goto	u3570
  8794   0041D8                     u3571:
  8795   0041D8  EFF8  F020         	goto	l909
  8796   0041DC                     u3570:
  8797   0041DC                     
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8800   0041DC  C013  F00A         	movff	pad@buf,fputs@s
  8801   0041E0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8802   0041E4  C011  F00C         	movff	pad@fp,fputs@fp
  8803   0041E8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8804   0041EC  EC33  F023         	call	_fputs	;wreg free
  8805   0041F0                     l909:
  8806   0041F0  0012               	return		;funcret
  8807   0041F2                     __end_of_pad:
  8808                           	callstack 0
  8809                           
  8810 ;; *************** function _fputs *****************
  8811 ;; Defined at:
  8812 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8815 ;;		 -> dbuf(80), 
  8816 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8817 ;;		 -> sprintf@f(11), 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  i               2   14[COMRAM] int 
  8820 ;;  c               1   13[COMRAM] unsigned char 
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  2    9[COMRAM] int 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;Total ram usage:        7 bytes
  8835 ;; Hardware stack levels used: 1
  8836 ;; Hardware stack levels required when called: 2
  8837 ;; This function calls:
  8838 ;;		_fputc
  8839 ;; This function is called by:
  8840 ;;		_pad
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text38
  8845   004666                     __ptext38:
  8846                           	callstack 0
  8847   004666                     _fputs:
  8848                           	callstack 22
  8849   004666  0E00               	movlw	0
  8850   004668  6E10               	movwf	(fputs@i+1)^0,c
  8851   00466A  0E00               	movlw	0
  8852   00466C  6E0F               	movwf	fputs@i^0,c
  8853   00466E  EF44  F023         	goto	l2991
  8854   004672                     l2987:
  8855   004672  C00E  F001         	movff	fputs@c,fputc@c
  8856   004676  6A02               	clrf	(fputc@c+1)^0,c
  8857   004678  C00C  F003         	movff	fputs@fp,fputc@fp
  8858   00467C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8859   004680  ECDB  F01F         	call	_fputc	;wreg free
  8860   004684  4A0F               	infsnz	fputs@i^0,f,c
  8861   004686  2A10               	incf	(fputs@i+1)^0,f,c
  8862   004688                     l2991:
  8863   004688  500F               	movf	fputs@i^0,w,c
  8864   00468A  240A               	addwf	fputs@s^0,w,c
  8865   00468C  6ED9               	movwf	fsr2l,c
  8866   00468E  5010               	movf	(fputs@i+1)^0,w,c
  8867   004690  200B               	addwfc	(fputs@s+1)^0,w,c
  8868   004692  6EDA               	movwf	fsr2h,c
  8869   004694  50DF               	movf	indf2,w,c
  8870   004696  6E0E               	movwf	fputs@c^0,c
  8871   004698  500E               	movf	fputs@c^0,w,c
  8872   00469A  A4D8               	btfss	status,2,c
  8873   00469C  EF52  F023         	goto	u2821
  8874   0046A0  EF54  F023         	goto	u2820
  8875   0046A4                     u2821:
  8876   0046A4  EF39  F023         	goto	l2987
  8877   0046A8                     u2820:
  8878   0046A8  0012               	return		;funcret
  8879   0046AA                     __end_of_fputs:
  8880                           	callstack 0
  8881                           
  8882 ;; *************** function _fputc *****************
  8883 ;; Defined at:
  8884 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  c               2    0[COMRAM] int 
  8887 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8888 ;;		 -> sprintf@f(11), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  2    0[COMRAM] int 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;Total ram usage:        9 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; Hardware stack levels required when called: 1
  8907 ;; This function calls:
  8908 ;;		_putch
  8909 ;; This function is called by:
  8910 ;;		_pad
  8911 ;;		_vfpfcnvrt
  8912 ;;		_fputs
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           	psect	text39
  8917   003FB6                     __ptext39:
  8918                           	callstack 0
  8919   003FB6                     _fputc:
  8920                           	callstack 25
  8921   003FB6  5003               	movf	fputc@fp^0,w,c
  8922   003FB8  1004               	iorwf	(fputc@fp+1)^0,w,c
  8923   003FBA  B4D8               	btfsc	status,2,c
  8924   003FBC  EFE2  F01F         	goto	u2391
  8925   003FC0  EFE4  F01F         	goto	u2390
  8926   003FC4                     u2391:
  8927   003FC4  EFED  F01F         	goto	l2773
  8928   003FC8                     u2390:
  8929   003FC8  5003               	movf	fputc@fp^0,w,c
  8930   003FCA  1004               	iorwf	(fputc@fp+1)^0,w,c
  8931   003FCC  A4D8               	btfss	status,2,c
  8932   003FCE  EFEB  F01F         	goto	u2401
  8933   003FD2  EFED  F01F         	goto	u2400
  8934   003FD6                     u2401:
  8935   003FD6  EFF2  F01F         	goto	l2775
  8936   003FDA                     u2400:
  8937   003FDA                     l2773:
  8938   003FDA  5001               	movf	fputc@c^0,w,c
  8939   003FDC  EC90  F024         	call	_putch
  8940   003FE0  EF3F  F020         	goto	l1128
  8941   003FE4                     l2775:
  8942   003FE4  EE20 F009          	lfsr	2,9
  8943   003FE8  5003               	movf	fputc@fp^0,w,c
  8944   003FEA  26D9               	addwf	fsr2l,f,c
  8945   003FEC  5004               	movf	(fputc@fp+1)^0,w,c
  8946   003FEE  22DA               	addwfc	fsr2h,f,c
  8947   003FF0  50DE               	movf	postinc2,w,c
  8948   003FF2  10DE               	iorwf	postinc2,w,c
  8949   003FF4  B4D8               	btfsc	status,2,c
  8950   003FF6  EFFF  F01F         	goto	u2411
  8951   003FFA  EF01  F020         	goto	u2410
  8952   003FFE                     u2411:
  8953   003FFE  EF1C  F020         	goto	l2779
  8954   004002                     u2410:
  8955   004002  EE20 F009          	lfsr	2,9
  8956   004006  5003               	movf	fputc@fp^0,w,c
  8957   004008  26D9               	addwf	fsr2l,f,c
  8958   00400A  5004               	movf	(fputc@fp+1)^0,w,c
  8959   00400C  22DA               	addwfc	fsr2h,f,c
  8960   00400E  EE10 F003          	lfsr	1,3
  8961   004012  5003               	movf	fputc@fp^0,w,c
  8962   004014  26E1               	addwf	fsr1l,f,c
  8963   004016  5004               	movf	(fputc@fp+1)^0,w,c
  8964   004018  22E2               	addwfc	fsr1h,f,c
  8965   00401A  50DE               	movf	postinc2,w,c
  8966   00401C  5CE6               	subwf	postinc1,w,c
  8967   00401E  50E6               	movf	postinc1,w,c
  8968   004020  0A80               	xorlw	128
  8969   004022  6E09               	movwf	(??_fputc+4)^0,c
  8970   004024  50DE               	movf	postinc2,w,c
  8971   004026  0A80               	xorlw	128
  8972   004028  5809               	subwfb	(??_fputc+4)^0,w,c
  8973   00402A  B0D8               	btfsc	status,0,c
  8974   00402C  EF1A  F020         	goto	u2421
  8975   004030  EF1C  F020         	goto	u2420
  8976   004034                     u2421:
  8977   004034  EF3F  F020         	goto	l1128
  8978   004038                     u2420:
  8979   004038                     l2779:
  8980   004038  EE20 F003          	lfsr	2,3
  8981   00403C  5003               	movf	fputc@fp^0,w,c
  8982   00403E  26D9               	addwf	fsr2l,f,c
  8983   004040  5004               	movf	(fputc@fp+1)^0,w,c
  8984   004042  22DA               	addwfc	fsr2h,f,c
  8985   004044  CFDE F005          	movff	postinc2,??_fputc
  8986   004048  CFDD F006          	movff	postdec2,??_fputc+1
  8987   00404C  C003  FFD9         	movff	fputc@fp,fsr2l
  8988   004050  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8989   004054  CFDE F007          	movff	postinc2,??_fputc+2
  8990   004058  CFDD F008          	movff	postdec2,??_fputc+3
  8991   00405C  5005               	movf	??_fputc^0,w,c
  8992   00405E  2407               	addwf	(??_fputc+2)^0,w,c
  8993   004060  6ED9               	movwf	fsr2l,c
  8994   004062  5006               	movf	(??_fputc+1)^0,w,c
  8995   004064  2008               	addwfc	(??_fputc+3)^0,w,c
  8996   004066  6EDA               	movwf	fsr2h,c
  8997   004068  C001  FFDF         	movff	fputc@c,indf2
  8998   00406C  EE20 F003          	lfsr	2,3
  8999   004070  5003               	movf	fputc@fp^0,w,c
  9000   004072  26D9               	addwf	fsr2l,f,c
  9001   004074  5004               	movf	(fputc@fp+1)^0,w,c
  9002   004076  22DA               	addwfc	fsr2h,f,c
  9003   004078  2ADE               	incf	postinc2,f,c
  9004   00407A  0E00               	movlw	0
  9005   00407C  22DD               	addwfc	postdec2,f,c
  9006   00407E                     l1128:
  9007   00407E  0012               	return		;funcret
  9008   004080                     __end_of_fputc:
  9009                           	callstack 0
  9010                           
  9011 ;; *************** function _putch *****************
  9012 ;; Defined at:
  9013 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  9014 ;; Parameters:    Size  Location     Type
  9015 ;;  c               1    wreg     unsigned char 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;  c               1    0[COMRAM] unsigned char 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;Total ram usage:        0 bytes
  9032 ;; Hardware stack levels used: 1
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_fputc
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text40
  9041   004920                     __ptext40:
  9042                           	callstack 0
  9043   004920                     _putch:
  9044                           	callstack 25
  9045   004920  0012               	return		;funcret
  9046   004922                     __end_of_putch:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _abs *****************
  9050 ;; Defined at:
  9051 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  a               2   18[COMRAM] int 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  2   18[COMRAM] int 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;Total ram usage:        4 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_dtoa
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           	psect	text41
  9079   0046EC                     __ptext41:
  9080                           	callstack 0
  9081   0046EC                     _abs:
  9082                           	callstack 25
  9083   0046EC  BE14               	btfsc	(abs@a+1)^0,7,c
  9084   0046EE  EF83  F023         	goto	u3580
  9085   0046F2  5014               	movf	(abs@a+1)^0,w,c
  9086   0046F4  E106               	bnz	u3581
  9087   0046F6  0413               	decf	abs@a^0,w,c
  9088   0046F8  B0D8               	btfsc	status,0,c
  9089   0046FA  EF81  F023         	goto	u3581
  9090   0046FE  EF83  F023         	goto	u3580
  9091   004702                     u3581:
  9092   004702  EF91  F023         	goto	l1048
  9093   004706                     u3580:
  9094   004706  C013  F015         	movff	abs@a,??_abs
  9095   00470A  C014  F016         	movff	abs@a+1,??_abs+1
  9096   00470E  1E15               	comf	??_abs^0,f,c
  9097   004710  1E16               	comf	(??_abs+1)^0,f,c
  9098   004712  4A15               	infsnz	??_abs^0,f,c
  9099   004714  2A16               	incf	(??_abs+1)^0,f,c
  9100   004716  C015  F013         	movff	??_abs,?_abs
  9101   00471A  C016  F014         	movff	??_abs+1,?_abs+1
  9102   00471E  EF95  F023         	goto	l1051
  9103   004722                     l1048:
  9104   004722  C013  F013         	movff	abs@a,?_abs
  9105   004726  C014  F014         	movff	abs@a+1,?_abs+1
  9106   00472A                     l1051:
  9107   00472A  0012               	return		;funcret
  9108   00472C                     __end_of_abs:
  9109                           	callstack 0
  9110                           
  9111 ;; *************** function ___aomod *****************
  9112 ;; Defined at:
  9113 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;  dividend        8    0[COMRAM] long long 
  9116 ;;  divisor         8    8[COMRAM] long long 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  sign            1   17[COMRAM] unsigned char 
  9119 ;;  counter         1   16[COMRAM] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  8    0[COMRAM] long long 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9129 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;Total ram usage:       18 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_dtoa
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text42
  9143   00389C                     __ptext42:
  9144                           	callstack 0
  9145   00389C                     ___aomod:
  9146                           	callstack 25
  9147   00389C  0E00               	movlw	0
  9148   00389E  6E12               	movwf	___aomod@sign^0,c
  9149   0038A0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9150   0038A2  EF57  F01C         	goto	u2900
  9151   0038A6  EF55  F01C         	goto	u2901
  9152   0038AA                     u2901:
  9153   0038AA  EF69  F01C         	goto	l3051
  9154   0038AE                     u2900:
  9155   0038AE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9156   0038B0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9157   0038B2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9158   0038B4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9159   0038B6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9160   0038B8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9161   0038BA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9162   0038BC  6C01               	negf	___aomod@dividend^0,c
  9163   0038BE  0E00               	movlw	0
  9164   0038C0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9165   0038C2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9166   0038C4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9167   0038C6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9168   0038C8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9169   0038CA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9170   0038CC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9171   0038CE  0E01               	movlw	1
  9172   0038D0  6E12               	movwf	___aomod@sign^0,c
  9173   0038D2                     l3051:
  9174   0038D2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9175   0038D4  EF70  F01C         	goto	u2910
  9176   0038D8  EF6E  F01C         	goto	u2911
  9177   0038DC                     u2911:
  9178   0038DC  EF80  F01C         	goto	l3055
  9179   0038E0                     u2910:
  9180   0038E0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9181   0038E2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9182   0038E4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9183   0038E6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9184   0038E8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9185   0038EA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9186   0038EC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9187   0038EE  6C09               	negf	___aomod@divisor^0,c
  9188   0038F0  0E00               	movlw	0
  9189   0038F2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9190   0038F4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9191   0038F6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9192   0038F8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9193   0038FA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9194   0038FC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9195   0038FE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9196   003900                     l3055:
  9197   003900  5009               	movf	___aomod@divisor^0,w,c
  9198   003902  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9199   003904  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9200   003906  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9201   003908  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9202   00390A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9203   00390C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9204   00390E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9205   003910  B4D8               	btfsc	status,2,c
  9206   003912  EF8D  F01C         	goto	u2921
  9207   003916  EF8F  F01C         	goto	u2920
  9208   00391A                     u2921:
  9209   00391A  EFD7  F01C         	goto	l3071
  9210   00391E                     u2920:
  9211   00391E  0E01               	movlw	1
  9212   003920  6E11               	movwf	___aomod@counter^0,c
  9213   003922  EF9D  F01C         	goto	l3061
  9214   003926                     l3059:
  9215   003926  90D8               	bcf	status,0,c
  9216   003928  3609               	rlcf	___aomod@divisor^0,f,c
  9217   00392A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9218   00392C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9219   00392E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9220   003930  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9221   003932  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9222   003934  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9223   003936  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9224   003938  2A11               	incf	___aomod@counter^0,f,c
  9225   00393A                     l3061:
  9226   00393A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9227   00393C  EFA2  F01C         	goto	u2931
  9228   003940  EFA4  F01C         	goto	u2930
  9229   003944                     u2931:
  9230   003944  EF93  F01C         	goto	l3059
  9231   003948                     u2930:
  9232   003948                     l3063:
  9233   003948  5009               	movf	___aomod@divisor^0,w,c
  9234   00394A  5C01               	subwf	___aomod@dividend^0,w,c
  9235   00394C  500A               	movf	(___aomod@divisor+1)^0,w,c
  9236   00394E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9237   003950  500B               	movf	(___aomod@divisor+2)^0,w,c
  9238   003952  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9239   003954  500C               	movf	(___aomod@divisor+3)^0,w,c
  9240   003956  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9241   003958  500D               	movf	(___aomod@divisor+4)^0,w,c
  9242   00395A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9243   00395C  500E               	movf	(___aomod@divisor+5)^0,w,c
  9244   00395E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9245   003960  500F               	movf	(___aomod@divisor+6)^0,w,c
  9246   003962  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9247   003964  5010               	movf	(___aomod@divisor+7)^0,w,c
  9248   003966  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9249   003968  A0D8               	btfss	status,0,c
  9250   00396A  EFB9  F01C         	goto	u2941
  9251   00396E  EFBB  F01C         	goto	u2940
  9252   003972                     u2941:
  9253   003972  EFCB  F01C         	goto	l3067
  9254   003976                     u2940:
  9255   003976  5009               	movf	___aomod@divisor^0,w,c
  9256   003978  5E01               	subwf	___aomod@dividend^0,f,c
  9257   00397A  500A               	movf	(___aomod@divisor+1)^0,w,c
  9258   00397C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9259   00397E  500B               	movf	(___aomod@divisor+2)^0,w,c
  9260   003980  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9261   003982  500C               	movf	(___aomod@divisor+3)^0,w,c
  9262   003984  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9263   003986  500D               	movf	(___aomod@divisor+4)^0,w,c
  9264   003988  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9265   00398A  500E               	movf	(___aomod@divisor+5)^0,w,c
  9266   00398C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9267   00398E  500F               	movf	(___aomod@divisor+6)^0,w,c
  9268   003990  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9269   003992  5010               	movf	(___aomod@divisor+7)^0,w,c
  9270   003994  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9271   003996                     l3067:
  9272   003996  90D8               	bcf	status,0,c
  9273   003998  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9274   00399A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9275   00399C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9276   00399E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9277   0039A0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9278   0039A2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9279   0039A4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9280   0039A6  3209               	rrcf	___aomod@divisor^0,f,c
  9281   0039A8  2E11               	decfsz	___aomod@counter^0,f,c
  9282   0039AA  EFA4  F01C         	goto	l3063
  9283   0039AE                     l3071:
  9284   0039AE  5012               	movf	___aomod@sign^0,w,c
  9285   0039B0  B4D8               	btfsc	status,2,c
  9286   0039B2  EFDD  F01C         	goto	u2951
  9287   0039B6  EFDF  F01C         	goto	u2950
  9288   0039BA                     u2951:
  9289   0039BA  EFEF  F01C         	goto	l3075
  9290   0039BE                     u2950:
  9291   0039BE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9292   0039C0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9293   0039C2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9294   0039C4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9295   0039C6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9296   0039C8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9297   0039CA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9298   0039CC  6C01               	negf	___aomod@dividend^0,c
  9299   0039CE  0E00               	movlw	0
  9300   0039D0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9301   0039D2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9302   0039D4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9303   0039D6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9304   0039D8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9305   0039DA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9306   0039DC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9307   0039DE                     l3075:
  9308   0039DE  C001  F001         	movff	___aomod@dividend,?___aomod
  9309   0039E2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9310   0039E6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9311   0039EA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9312   0039EE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9313   0039F2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9314   0039F6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9315   0039FA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9316   0039FE  0012               	return		;funcret
  9317   003A00                     __end_of___aomod:
  9318                           	callstack 0
  9319                           
  9320 ;; *************** function ___aodiv *****************
  9321 ;; Defined at:
  9322 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  dividend        8    0[COMRAM] long long 
  9325 ;;  divisor         8    8[COMRAM] long long 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  quotient        8   18[COMRAM] long long 
  9328 ;;  sign            1   17[COMRAM] unsigned char 
  9329 ;;  counter         1   16[COMRAM] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  8    0[COMRAM] long long 
  9332 ;; Registers used:
  9333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9339 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9340 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;Total ram usage:       26 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_dtoa
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text43
  9353   003714                     __ptext43:
  9354                           	callstack 0
  9355   003714                     ___aodiv:
  9356                           	callstack 25
  9357   003714  0E00               	movlw	0
  9358   003716  6E12               	movwf	___aodiv@sign^0,c
  9359   003718  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9360   00371A  EF93  F01B         	goto	u2830
  9361   00371E  EF91  F01B         	goto	u2831
  9362   003722                     u2831:
  9363   003722  EFA5  F01B         	goto	l3007
  9364   003726                     u2830:
  9365   003726  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9366   003728  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9367   00372A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9368   00372C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9369   00372E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9370   003730  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9371   003732  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9372   003734  6C09               	negf	___aodiv@divisor^0,c
  9373   003736  0E00               	movlw	0
  9374   003738  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9375   00373A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9376   00373C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9377   00373E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9378   003740  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9379   003742  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9380   003744  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9381   003746  0E01               	movlw	1
  9382   003748  6E12               	movwf	___aodiv@sign^0,c
  9383   00374A                     l3007:
  9384   00374A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9385   00374C  EFAC  F01B         	goto	u2840
  9386   003750  EFAA  F01B         	goto	u2841
  9387   003754                     u2841:
  9388   003754  EFBE  F01B         	goto	l3013
  9389   003758                     u2840:
  9390   003758  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9391   00375A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9392   00375C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9393   00375E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9394   003760  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9395   003762  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9396   003764  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9397   003766  6C01               	negf	___aodiv@dividend^0,c
  9398   003768  0E00               	movlw	0
  9399   00376A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9400   00376C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9401   00376E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9402   003770  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9403   003772  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9404   003774  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9405   003776  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9406   003778  0E01               	movlw	1
  9407   00377A  1A12               	xorwf	___aodiv@sign^0,f,c
  9408   00377C                     l3013:
  9409   00377C  EE20  F013         	lfsr	2,___aodiv@quotient
  9410   003780  0E07               	movlw	7
  9411   003782                     u2851:
  9412   003782  6ADE               	clrf	postinc2,c
  9413   003784  06E8               	decf	wreg,f,c
  9414   003786  E2FD               	bc	u2851
  9415   003788  5009               	movf	___aodiv@divisor^0,w,c
  9416   00378A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9417   00378C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9418   00378E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9419   003790  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9420   003792  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9421   003794  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9422   003796  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9423   003798  B4D8               	btfsc	status,2,c
  9424   00379A  EFD1  F01B         	goto	u2861
  9425   00379E  EFD3  F01B         	goto	u2860
  9426   0037A2                     u2861:
  9427   0037A2  EF25  F01C         	goto	l3035
  9428   0037A6                     u2860:
  9429   0037A6  0E01               	movlw	1
  9430   0037A8  6E11               	movwf	___aodiv@counter^0,c
  9431   0037AA  EFE1  F01B         	goto	l3021
  9432   0037AE                     l3019:
  9433   0037AE  90D8               	bcf	status,0,c
  9434   0037B0  3609               	rlcf	___aodiv@divisor^0,f,c
  9435   0037B2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9436   0037B4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9437   0037B6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9438   0037B8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9439   0037BA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9440   0037BC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9441   0037BE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9442   0037C0  2A11               	incf	___aodiv@counter^0,f,c
  9443   0037C2                     l3021:
  9444   0037C2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9445   0037C4  EFE6  F01B         	goto	u2871
  9446   0037C8  EFE8  F01B         	goto	u2870
  9447   0037CC                     u2871:
  9448   0037CC  EFD7  F01B         	goto	l3019
  9449   0037D0                     u2870:
  9450   0037D0                     l3023:
  9451   0037D0  90D8               	bcf	status,0,c
  9452   0037D2  3613               	rlcf	___aodiv@quotient^0,f,c
  9453   0037D4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9454   0037D6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9455   0037D8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9456   0037DA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9457   0037DC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9458   0037DE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9459   0037E0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9460   0037E2  5009               	movf	___aodiv@divisor^0,w,c
  9461   0037E4  5C01               	subwf	___aodiv@dividend^0,w,c
  9462   0037E6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9463   0037E8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9464   0037EA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9465   0037EC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9466   0037EE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9467   0037F0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9468   0037F2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9469   0037F4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9470   0037F6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9471   0037F8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9472   0037FA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9473   0037FC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9474   0037FE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9475   003800  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9476   003802  A0D8               	btfss	status,0,c
  9477   003804  EF06  F01C         	goto	u2881
  9478   003808  EF08  F01C         	goto	u2880
  9479   00380C                     u2881:
  9480   00380C  EF19  F01C         	goto	l3031
  9481   003810                     u2880:
  9482   003810  5009               	movf	___aodiv@divisor^0,w,c
  9483   003812  5E01               	subwf	___aodiv@dividend^0,f,c
  9484   003814  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9485   003816  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9486   003818  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9487   00381A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9488   00381C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9489   00381E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9490   003820  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9491   003822  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9492   003824  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9493   003826  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9494   003828  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9495   00382A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9496   00382C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9497   00382E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9498   003830  8013               	bsf	___aodiv@quotient^0,0,c
  9499   003832                     l3031:
  9500   003832  90D8               	bcf	status,0,c
  9501   003834  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9502   003836  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9503   003838  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9504   00383A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9505   00383C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9506   00383E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9507   003840  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9508   003842  3209               	rrcf	___aodiv@divisor^0,f,c
  9509   003844  2E11               	decfsz	___aodiv@counter^0,f,c
  9510   003846  EFE8  F01B         	goto	l3023
  9511   00384A                     l3035:
  9512   00384A  5012               	movf	___aodiv@sign^0,w,c
  9513   00384C  B4D8               	btfsc	status,2,c
  9514   00384E  EF2B  F01C         	goto	u2891
  9515   003852  EF2D  F01C         	goto	u2890
  9516   003856                     u2891:
  9517   003856  EF3D  F01C         	goto	l3039
  9518   00385A                     u2890:
  9519   00385A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9520   00385C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9521   00385E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9522   003860  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9523   003862  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9524   003864  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9525   003866  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9526   003868  6C13               	negf	___aodiv@quotient^0,c
  9527   00386A  0E00               	movlw	0
  9528   00386C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9529   00386E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9530   003870  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9531   003872  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9532   003874  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9533   003876  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9534   003878  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9535   00387A                     l3039:
  9536   00387A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9537   00387E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9538   003882  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9539   003886  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9540   00388A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9541   00388E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9542   003892  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9543   003896  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9544   00389A  0012               	return		;funcret
  9545   00389C                     __end_of___aodiv:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _atoi *****************
  9549 ;; Defined at:
  9550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  s               2   14[COMRAM] PTR const unsigned char 
  9553 ;;		 -> STR_1(41), 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  n               2   21[COMRAM] int 
  9556 ;;  neg             2   19[COMRAM] int 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2   14[COMRAM] int 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9569 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9570 ;;Total ram usage:        9 bytes
  9571 ;; Hardware stack levels used: 1
  9572 ;; Hardware stack levels required when called: 1
  9573 ;; This function calls:
  9574 ;;		___wmul
  9575 ;;		_isdigit
  9576 ;;		_isspace
  9577 ;; This function is called by:
  9578 ;;		_vfpfcnvrt
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text44
  9583   003A00                     __ptext44:
  9584                           	callstack 0
  9585   003A00                     _atoi:
  9586                           	callstack 25
  9587   003A00  0E00               	movlw	0
  9588   003A02  6E17               	movwf	(atoi@n+1)^0,c
  9589   003A04  0E00               	movlw	0
  9590   003A06  6E16               	movwf	atoi@n^0,c
  9591   003A08  0E00               	movlw	0
  9592   003A0A  6E15               	movwf	(atoi@neg+1)^0,c
  9593   003A0C  0E00               	movlw	0
  9594   003A0E  6E14               	movwf	atoi@neg^0,c
  9595   003A10  EF0C  F01D         	goto	l3851
  9596   003A14                     l3847:
  9597   003A14  4A0F               	infsnz	atoi@s^0,f,c
  9598   003A16  2A10               	incf	(atoi@s+1)^0,f,c
  9599   003A18                     l3851:
  9600   003A18  C00F  FFF6         	movff	atoi@s,tblptrl
  9601   003A1C  C010  FFF7         	movff	atoi@s+1,tblptrh
  9602   003A20                     	if	0	;tblptru may be non-zero
  9603   003A20                     	endif
  9604   003A20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9605   003A20  0E00               	movlw	low (__mediumconst shr (0+16))
  9606   003A22  6EF8               	movwf	tblptru,c
  9607   003A24                     	endif
  9608   003A24  0008               	tblrd		*
  9609   003A26  50F5               	movf	tablat,w,c
  9610   003A28  0A20               	xorlw	32
  9611   003A2A  B4D8               	btfsc	status,2,c
  9612   003A2C  EF1A  F01D         	goto	u4311
  9613   003A30  EF1C  F01D         	goto	u4310
  9614   003A34                     u4311:
  9615   003A34  EF0A  F01D         	goto	l3847
  9616   003A38                     u4310:
  9617   003A38  C00F  FFF6         	movff	atoi@s,tblptrl
  9618   003A3C  C010  FFF7         	movff	atoi@s+1,tblptrh
  9619   003A40                     	if	0	;tblptru may be non-zero
  9620   003A40                     	endif
  9621   003A40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9622   003A40  0E00               	movlw	low (__mediumconst shr (0+16))
  9623   003A42  6EF8               	movwf	tblptru,c
  9624   003A44                     	endif
  9625   003A44  0008               	tblrd		*
  9626   003A46  CFF5 F011          	movff	tablat,??_atoi
  9627   003A4A  0EF7               	movlw	247
  9628   003A4C  2411               	addwf	??_atoi^0,w,c
  9629   003A4E  6E12               	movwf	(??_atoi+1)^0,c
  9630   003A50  6A13               	clrf	(??_atoi+2)^0,c
  9631   003A52  0EFF               	movlw	255
  9632   003A54  2213               	addwfc	(??_atoi+2)^0,f,c
  9633   003A56  5013               	movf	(??_atoi+2)^0,w,c
  9634   003A58  E109               	bnz	u4320
  9635   003A5A  0E05               	movlw	5
  9636   003A5C  5C12               	subwf	(??_atoi+1)^0,w,c
  9637   003A5E  A0D8               	btfss	status,0,c
  9638   003A60  EF34  F01D         	goto	u4321
  9639   003A64  EF36  F01D         	goto	u4320
  9640   003A68                     u4321:
  9641   003A68  EF0A  F01D         	goto	l3847
  9642   003A6C                     u4320:
  9643   003A6C  EF40  F01D         	goto	l3859
  9644   003A70                     l3855:
  9645   003A70  0E00               	movlw	0
  9646   003A72  6E15               	movwf	(atoi@neg+1)^0,c
  9647   003A74  0E01               	movlw	1
  9648   003A76  6E14               	movwf	atoi@neg^0,c
  9649   003A78                     l3857:
  9650   003A78  4A0F               	infsnz	atoi@s^0,f,c
  9651   003A7A  2A10               	incf	(atoi@s+1)^0,f,c
  9652   003A7C  EF79  F01D         	goto	l3867
  9653   003A80                     l3859:
  9654   003A80  C00F  FFF6         	movff	atoi@s,tblptrl
  9655   003A84  C010  FFF7         	movff	atoi@s+1,tblptrh
  9656   003A88                     	if	0	;tblptru may be non-zero
  9657   003A88                     	endif
  9658   003A88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9659   003A88  0E00               	movlw	low (__mediumconst shr (0+16))
  9660   003A8A  6EF8               	movwf	tblptru,c
  9661   003A8C                     	endif
  9662   003A8C  0008               	tblrd		*
  9663   003A8E  50F5               	movf	tablat,w,c
  9664   003A90  6E11               	movwf	??_atoi^0,c
  9665   003A92  6A12               	clrf	(??_atoi+1)^0,c
  9666                           
  9667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9668                           ; Switch size 1, requested type "simple"
  9669                           ; Number of cases is 1, Range of values is 0 to 0
  9670                           ; switch strategies available:
  9671                           ; Name         Instructions Cycles
  9672                           ; simple_byte            4     3 (average)
  9673                           ;	Chosen strategy is simple_byte
  9674   003A94  5012               	movf	(??_atoi+1)^0,w,c
  9675   003A96  0A00               	xorlw	0	; case 0
  9676   003A98  B4D8               	btfsc	status,2,c
  9677   003A9A  EF51  F01D         	goto	l4441
  9678   003A9E  EF79  F01D         	goto	l3867
  9679   003AA2                     l4441:
  9680                           
  9681                           ; Switch size 1, requested type "simple"
  9682                           ; Number of cases is 2, Range of values is 43 to 45
  9683                           ; switch strategies available:
  9684                           ; Name         Instructions Cycles
  9685                           ; simple_byte            7     4 (average)
  9686                           ;	Chosen strategy is simple_byte
  9687   003AA2  5011               	movf	??_atoi^0,w,c
  9688   003AA4  0A2B               	xorlw	43	; case 43
  9689   003AA6  B4D8               	btfsc	status,2,c
  9690   003AA8  EF3C  F01D         	goto	l3857
  9691   003AAC  0A06               	xorlw	6	; case 45
  9692   003AAE  B4D8               	btfsc	status,2,c
  9693   003AB0  EF38  F01D         	goto	l3855
  9694   003AB4  EF79  F01D         	goto	l3867
  9695   003AB8                     l3861:
  9696   003AB8  C016  F009         	movff	atoi@n,___wmul@multiplier
  9697   003ABC  C017  F00A         	movff	atoi@n+1,___wmul@multiplier+1
  9698   003AC0  0E00               	movlw	0
  9699   003AC2  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  9700   003AC4  0E0A               	movlw	10
  9701   003AC6  6E0B               	movwf	___wmul@multiplicand^0,c
  9702   003AC8  EC2C  F024         	call	___wmul	;wreg free
  9703   003ACC  C00F  FFF6         	movff	atoi@s,tblptrl
  9704   003AD0  C010  FFF7         	movff	atoi@s+1,tblptrh
  9705   003AD4                     	if	0	;tblptru may be non-zero
  9706   003AD4                     	endif
  9707   003AD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9708   003AD4  0E00               	movlw	low (__mediumconst shr (0+16))
  9709   003AD6  6EF8               	movwf	tblptru,c
  9710   003AD8                     	endif
  9711   003AD8  0008               	tblrd		*
  9712   003ADA  50F5               	movf	tablat,w,c
  9713   003ADC  5E09               	subwf	?___wmul^0,f,c
  9714   003ADE  0E00               	movlw	0
  9715   003AE0  5A0A               	subwfb	(?___wmul+1)^0,f,c
  9716   003AE2  0E30               	movlw	48
  9717   003AE4  2409               	addwf	?___wmul^0,w,c
  9718   003AE6  6E16               	movwf	atoi@n^0,c
  9719   003AE8  0E00               	movlw	0
  9720   003AEA  200A               	addwfc	(?___wmul+1)^0,w,c
  9721   003AEC  6E17               	movwf	(atoi@n+1)^0,c
  9722   003AEE  EF3C  F01D         	goto	l3857
  9723   003AF2                     l3867:
  9724   003AF2  C00F  FFF6         	movff	atoi@s,tblptrl
  9725   003AF6  C010  FFF7         	movff	atoi@s+1,tblptrh
  9726   003AFA                     	if	0	;tblptru may be non-zero
  9727   003AFA                     	endif
  9728   003AFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9729   003AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  9730   003AFC  6EF8               	movwf	tblptru,c
  9731   003AFE                     	endif
  9732   003AFE  0008               	tblrd		*
  9733   003B00  CFF5 F011          	movff	tablat,??_atoi
  9734   003B04  0ED0               	movlw	208
  9735   003B06  2411               	addwf	??_atoi^0,w,c
  9736   003B08  6E12               	movwf	(??_atoi+1)^0,c
  9737   003B0A  6A13               	clrf	(??_atoi+2)^0,c
  9738   003B0C  0EFF               	movlw	255
  9739   003B0E  2213               	addwfc	(??_atoi+2)^0,f,c
  9740   003B10  5013               	movf	(??_atoi+2)^0,w,c
  9741   003B12  E109               	bnz	u4330
  9742   003B14  0E0A               	movlw	10
  9743   003B16  5C12               	subwf	(??_atoi+1)^0,w,c
  9744   003B18  A0D8               	btfss	status,0,c
  9745   003B1A  EF91  F01D         	goto	u4331
  9746   003B1E  EF93  F01D         	goto	u4330
  9747   003B22                     u4331:
  9748   003B22  EF5C  F01D         	goto	l3861
  9749   003B26                     u4330:
  9750   003B26  5014               	movf	atoi@neg^0,w,c
  9751   003B28  1015               	iorwf	(atoi@neg+1)^0,w,c
  9752   003B2A  A4D8               	btfss	status,2,c
  9753   003B2C  EF9A  F01D         	goto	u4341
  9754   003B30  EF9C  F01D         	goto	u4340
  9755   003B34                     u4341:
  9756   003B34  EFAA  F01D         	goto	l1073
  9757   003B38                     u4340:
  9758   003B38  C016  F011         	movff	atoi@n,??_atoi
  9759   003B3C  C017  F012         	movff	atoi@n+1,??_atoi+1
  9760   003B40  1E11               	comf	??_atoi^0,f,c
  9761   003B42  1E12               	comf	(??_atoi+1)^0,f,c
  9762   003B44  4A11               	infsnz	??_atoi^0,f,c
  9763   003B46  2A12               	incf	(??_atoi+1)^0,f,c
  9764   003B48  C011  F00F         	movff	??_atoi,?_atoi
  9765   003B4C  C012  F010         	movff	??_atoi+1,?_atoi+1
  9766   003B50  EFAE  F01D         	goto	l1076
  9767   003B54                     l1073:
  9768   003B54  C016  F00F         	movff	atoi@n,?_atoi
  9769   003B58  C017  F010         	movff	atoi@n+1,?_atoi+1
  9770   003B5C                     l1076:
  9771   003B5C  0012               	return		;funcret
  9772   003B5E                     __end_of_atoi:
  9773                           	callstack 0
  9774                           
  9775 ;; *************** function _isspace *****************
  9776 ;; Defined at:
  9777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  c               2    0[COMRAM] int 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  2    0[COMRAM] int 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;Total ram usage:        5 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_atoi
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text45
  9805   0045DC                     __ptext45:
  9806                           	callstack 0
  9807   0045DC                     _isspace:
  9808                           	callstack 25
  9809   0045DC  0E01               	movlw	1
  9810   0045DE  6E05               	movwf	_isspace$1211^0,c
  9811   0045E0  0E20               	movlw	32
  9812   0045E2  1801               	xorwf	isspace@c^0,w,c
  9813   0045E4  1002               	iorwf	(isspace@c+1)^0,w,c
  9814   0045E6  B4D8               	btfsc	status,2,c
  9815   0045E8  EFF8  F022         	goto	u3811
  9816   0045EC  EFFA  F022         	goto	u3810
  9817   0045F0                     u3811:
  9818   0045F0  EF0D  F023         	goto	l3547
  9819   0045F4                     u3810:
  9820   0045F4  0EF7               	movlw	247
  9821   0045F6  2401               	addwf	isspace@c^0,w,c
  9822   0045F8  6E03               	movwf	??_isspace^0,c
  9823   0045FA  0EFF               	movlw	255
  9824   0045FC  2002               	addwfc	(isspace@c+1)^0,w,c
  9825   0045FE  6E04               	movwf	(??_isspace+1)^0,c
  9826   004600  5004               	movf	(??_isspace+1)^0,w,c
  9827   004602  E109               	bnz	u3820
  9828   004604  0E05               	movlw	5
  9829   004606  5C03               	subwf	??_isspace^0,w,c
  9830   004608  A0D8               	btfss	status,0,c
  9831   00460A  EF09  F023         	goto	u3821
  9832   00460E  EF0B  F023         	goto	u3820
  9833   004612                     u3821:
  9834   004612  EF0D  F023         	goto	l3547
  9835   004616                     u3820:
  9836   004616  0E00               	movlw	0
  9837   004618  6E05               	movwf	_isspace$1211^0,c
  9838   00461A                     l3547:
  9839   00461A  C005  F001         	movff	_isspace$1211,?_isspace
  9840   00461E  6A02               	clrf	(?_isspace+1)^0,c
  9841   004620  0012               	return		;funcret
  9842   004622                     __end_of_isspace:
  9843                           	callstack 0
  9844                           
  9845 ;; *************** function _isdigit *****************
  9846 ;; Defined at:
  9847 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9848 ;; Parameters:    Size  Location     Type
  9849 ;;  c               2    0[COMRAM] int 
  9850 ;; Auto vars:     Size  Location     Type
  9851 ;;		None
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  2    0[COMRAM] int 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9865 ;;Total ram usage:        4 bytes
  9866 ;; Hardware stack levels used: 1
  9867 ;; This function calls:
  9868 ;;		Nothing
  9869 ;; This function is called by:
  9870 ;;		_vfpfcnvrt
  9871 ;;		_atoi
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text46
  9876   0047DA                     __ptext46:
  9877                           	callstack 0
  9878   0047DA                     _isdigit:
  9879                           	callstack 26
  9880   0047DA  0ED0               	movlw	208
  9881   0047DC  2401               	addwf	isdigit@c^0,w,c
  9882   0047DE  6E03               	movwf	??_isdigit^0,c
  9883   0047E0  0EFF               	movlw	255
  9884   0047E2  2002               	addwfc	(isdigit@c+1)^0,w,c
  9885   0047E4  6E04               	movwf	(??_isdigit+1)^0,c
  9886   0047E6  5004               	movf	(??_isdigit+1)^0,w,c
  9887   0047E8  E10A               	bnz	u3790
  9888   0047EA  0E0A               	movlw	10
  9889   0047EC  5C03               	subwf	??_isdigit^0,w,c
  9890   0047EE  A0D8               	btfss	status,0,c
  9891   0047F0  EFFC  F023         	goto	u3791
  9892   0047F4  EFFF  F023         	goto	u3790
  9893   0047F8                     u3791:
  9894   0047F8  0E01               	movlw	1
  9895   0047FA  EF00  F024         	goto	u3800
  9896   0047FE                     u3790:
  9897   0047FE  0E00               	movlw	0
  9898   004800                     u3800:
  9899   004800  6E01               	movwf	?_isdigit^0,c
  9900   004802  6A02               	clrf	(?_isdigit+1)^0,c
  9901   004804  0012               	return		;funcret
  9902   004806                     __end_of_isdigit:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function ___wmul *****************
  9906 ;; Defined at:
  9907 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  multiplier      2    8[COMRAM] unsigned int 
  9910 ;;  multiplicand    2   10[COMRAM] unsigned int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  product         2   12[COMRAM] unsigned int 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  2    8[COMRAM] unsigned int 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0, prodl, prodh
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9926 ;;Total ram usage:        6 bytes
  9927 ;; Hardware stack levels used: 1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_RGB2Hue
  9932 ;;		_Color2String
  9933 ;;		_atoi
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           	psect	text47
  9938   004858                     __ptext47:
  9939                           	callstack 0
  9940   004858                     ___wmul:
  9941                           	callstack 29
  9942   004858  5009               	movf	___wmul@multiplier^0,w,c
  9943   00485A  020B               	mulwf	___wmul@multiplicand^0,c
  9944   00485C  CFF3 F00D          	movff	prodl,___wmul@product
  9945   004860  CFF4 F00E          	movff	prodh,___wmul@product+1
  9946   004864  5009               	movf	___wmul@multiplier^0,w,c
  9947   004866  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  9948   004868  50F3               	movf	243,w,c
  9949   00486A  260E               	addwf	(___wmul@product+1)^0,f,c
  9950   00486C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  9951   00486E  020B               	mulwf	___wmul@multiplicand^0,c
  9952   004870  50F3               	movf	243,w,c
  9953   004872  260E               	addwf	(___wmul@product+1)^0,f,c
  9954   004874  C00D  F009         	movff	___wmul@product,?___wmul
  9955   004878  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  9956   00487C  0012               	return		;funcret
  9957   00487E                     __end_of___wmul:
  9958                           	callstack 0
  9959                           
  9960 ;; *************** function _sendStringSerial4 *****************
  9961 ;; Defined at:
  9962 ;;		line 49 in file "serial.c"
  9963 ;; Parameters:    Size  Location     Type
  9964 ;;  string          2    1[COMRAM] PTR unsigned char 
  9965 ;;		 -> main@data(60), 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;		None
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  1    wreg      void 
  9970 ;; Registers used:
  9971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9981 ;;Total ram usage:        2 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; Hardware stack levels required when called: 1
  9984 ;; This function calls:
  9985 ;;		_sendCharSerial4
  9986 ;; This function is called by:
  9987 ;;		_Color2String
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text48
  9992   0047A2                     __ptext48:
  9993                           	callstack 0
  9994   0047A2                     _sendStringSerial4:
  9995                           	callstack 28
  9996   0047A2                     
  9997                           ;serial.c: 52:     while(*string != 0){
  9998   0047A2  EFE0  F023         	goto	l4101
  9999   0047A6                     l4095:
 10000                           
 10001                           ;serial.c: 54:   sendCharSerial4(*string++);
 10002   0047A6  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10003   0047AA  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10004   0047AE  50DF               	movf	indf2,w,c
 10005   0047B0  EC6F  F024         	call	_sendCharSerial4
 10006   0047B4  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10007   0047B6  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10008   0047B8                     
 10009                           ;serial.c: 55:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10010   0047B8  0E6A               	movlw	106
 10011   0047BA                     u4787:
 10012   0047BA  2EE8               	decfsz	wreg,f,c
 10013   0047BC  D7FE               	bra	u4787
 10014   0047BE  D000               	nop2	
 10015   0047C0                     l4101:
 10016                           
 10017                           ;serial.c: 52:     while(*string != 0){
 10018   0047C0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10019   0047C4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10020   0047C8  50DF               	movf	indf2,w,c
 10021   0047CA  A4D8               	btfss	status,2,c
 10022   0047CC  EFEA  F023         	goto	u4491
 10023   0047D0  EFEC  F023         	goto	u4490
 10024   0047D4                     u4491:
 10025   0047D4  EFD3  F023         	goto	l4095
 10026   0047D8                     u4490:
 10027   0047D8  0012               	return		;funcret
 10028   0047DA                     __end_of_sendStringSerial4:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function _sendCharSerial4 *****************
 10032 ;; Defined at:
 10033 ;;		line 33 in file "serial.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  charToSend      1    wreg     unsigned char 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  charToSend      1    0[COMRAM] unsigned char 
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10051 ;;Total ram usage:        1 bytes
 10052 ;; Hardware stack levels used: 1
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_sendStringSerial4
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text49
 10061   0048DE                     __ptext49:
 10062                           	callstack 0
 10063   0048DE                     _sendCharSerial4:
 10064                           	callstack 28
 10065                           
 10066                           ;incstack = 0
 10067                           ;sendCharSerial4@charToSend stored from wreg
 10068   0048DE  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10069   0048E0                     l174:
 10070   0048E0  010E               	movlb	14	; () banked
 10071   0048E2  A537               	btfss	55,2,b	;volatile
 10072   0048E4  EF76  F024         	goto	u4471
 10073   0048E8  EF78  F024         	goto	u4470
 10074   0048EC                     u4471:
 10075   0048EC  EF70  F024         	goto	l174
 10076   0048F0                     u4470:
 10077   0048F0                     
 10078                           ; BSR set to: 14
 10079                           ;serial.c: 35:     TX4REG = charToSend;
 10080   0048F0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10081   0048F4                     
 10082                           ; BSR set to: 14
 10083   0048F4  0012               	return		;funcret
 10084   0048F6                     __end_of_sendCharSerial4:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function ___xxtofl *****************
 10088 ;; Defined at:
 10089 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  sign            1    wreg     unsigned char 
 10092 ;;  val             4   14[COMRAM] long 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;  sign            1   22[COMRAM] unsigned char 
 10095 ;;  arg             4   24[COMRAM] unsigned long 
 10096 ;;  exp             1   23[COMRAM] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  4   14[COMRAM] unsigned char 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;Total ram usage:       14 bytes
 10111 ;; Hardware stack levels used: 1
 10112 ;; This function calls:
 10113 ;;		Nothing
 10114 ;; This function is called by:
 10115 ;;		_colour_read_all
 10116 ;;		_RGB2Hue
 10117 ;;		_Color2String
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text50
 10122   003560                     __ptext50:
 10123                           	callstack 0
 10124   003560                     ___xxtofl:
 10125                           	callstack 29
 10126                           
 10127                           ; BSR set to: 14
 10128                           ;incstack = 0
 10129                           ;___xxtofl@sign stored from wreg
 10130   003560  6E17               	movwf	___xxtofl@sign^0,c
 10131   003562  5017               	movf	___xxtofl@sign^0,w,c
 10132   003564  B4D8               	btfsc	status,2,c
 10133   003566  EFB7  F01A         	goto	u4561
 10134   00356A  EFB9  F01A         	goto	u4560
 10135   00356E                     u4561:
 10136   00356E  EFDB  F01A         	goto	l844
 10137   003572                     u4560:
 10138   003572  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
 10139   003574  EFC0  F01A         	goto	u4570
 10140   003578  EFBE  F01A         	goto	u4571
 10141   00357C                     u4571:
 10142   00357C  EFDB  F01A         	goto	l844
 10143   003580                     u4570:
 10144   003580  C00F  F013         	movff	___xxtofl@val,??___xxtofl
 10145   003584  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
 10146   003588  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
 10147   00358C  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
 10148   003590  1E13               	comf	??___xxtofl^0,f,c
 10149   003592  1E14               	comf	(??___xxtofl+1)^0,f,c
 10150   003594  1E15               	comf	(??___xxtofl+2)^0,f,c
 10151   003596  1E16               	comf	(??___xxtofl+3)^0,f,c
 10152   003598  2A13               	incf	??___xxtofl^0,f,c
 10153   00359A  0E00               	movlw	0
 10154   00359C  2214               	addwfc	(??___xxtofl+1)^0,f,c
 10155   00359E  2215               	addwfc	(??___xxtofl+2)^0,f,c
 10156   0035A0  2216               	addwfc	(??___xxtofl+3)^0,f,c
 10157   0035A2  C013  F019         	movff	??___xxtofl,___xxtofl@arg
 10158   0035A6  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
 10159   0035AA  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
 10160   0035AE  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
 10161   0035B2  EFE3  F01A         	goto	l4153
 10162   0035B6                     l844:
 10163   0035B6  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
 10164   0035BA  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10165   0035BE  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10166   0035C2  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10167   0035C6                     l4153:
 10168   0035C6  500F               	movf	___xxtofl@val^0,w,c
 10169   0035C8  1010               	iorwf	(___xxtofl@val+1)^0,w,c
 10170   0035CA  1011               	iorwf	(___xxtofl@val+2)^0,w,c
 10171   0035CC  1012               	iorwf	(___xxtofl@val+3)^0,w,c
 10172   0035CE  A4D8               	btfss	status,2,c
 10173   0035D0  EFEC  F01A         	goto	u4581
 10174   0035D4  EFEE  F01A         	goto	u4580
 10175   0035D8                     u4581:
 10176   0035D8  EFF8  F01A         	goto	l4159
 10177   0035DC                     u4580:
 10178   0035DC  0E00               	movlw	0
 10179   0035DE  6E0F               	movwf	?___xxtofl^0,c
 10180   0035E0  0E00               	movlw	0
 10181   0035E2  6E10               	movwf	(?___xxtofl+1)^0,c
 10182   0035E4  0E00               	movlw	0
 10183   0035E6  6E11               	movwf	(?___xxtofl+2)^0,c
 10184   0035E8  0E00               	movlw	0
 10185   0035EA  6E12               	movwf	(?___xxtofl+3)^0,c
 10186   0035EC  EF89  F01B         	goto	l847
 10187   0035F0                     l4159:
 10188   0035F0  0E96               	movlw	150
 10189   0035F2  6E18               	movwf	___xxtofl@exp^0,c
 10190   0035F4  EF02  F01B         	goto	l4163
 10191   0035F8                     l4161:
 10192   0035F8  2A18               	incf	___xxtofl@exp^0,f,c
 10193   0035FA  90D8               	bcf	status,0,c
 10194   0035FC  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 10195   0035FE  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 10196   003600  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 10197   003602  3219               	rrcf	___xxtofl@arg^0,f,c
 10198   003604                     l4163:
 10199   003604  0E00               	movlw	0
 10200   003606  1419               	andwf	___xxtofl@arg^0,w,c
 10201   003608  6E13               	movwf	??___xxtofl^0,c
 10202   00360A  0E00               	movlw	0
 10203   00360C  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 10204   00360E  6E14               	movwf	(??___xxtofl+1)^0,c
 10205   003610  0E00               	movlw	0
 10206   003612  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 10207   003614  6E15               	movwf	(??___xxtofl+2)^0,c
 10208   003616  0EFE               	movlw	254
 10209   003618  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 10210   00361A  6E16               	movwf	(??___xxtofl+3)^0,c
 10211   00361C  5013               	movf	??___xxtofl^0,w,c
 10212   00361E  1014               	iorwf	(??___xxtofl+1)^0,w,c
 10213   003620  1015               	iorwf	(??___xxtofl+2)^0,w,c
 10214   003622  1016               	iorwf	(??___xxtofl+3)^0,w,c
 10215   003624  A4D8               	btfss	status,2,c
 10216   003626  EF17  F01B         	goto	u4591
 10217   00362A  EF19  F01B         	goto	u4590
 10218   00362E                     u4591:
 10219   00362E  EFFC  F01A         	goto	l4161
 10220   003632                     u4590:
 10221   003632  EF27  F01B         	goto	l851
 10222   003636                     l4165:
 10223   003636  2A18               	incf	___xxtofl@exp^0,f,c
 10224   003638  0E01               	movlw	1
 10225   00363A  2619               	addwf	___xxtofl@arg^0,f,c
 10226   00363C  0E00               	movlw	0
 10227   00363E  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
 10228   003640  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
 10229   003642  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
 10230   003644  90D8               	bcf	status,0,c
 10231   003646  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
 10232   003648  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
 10233   00364A  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
 10234   00364C  3219               	rrcf	___xxtofl@arg^0,f,c
 10235   00364E                     l851:
 10236   00364E  0E00               	movlw	0
 10237   003650  1419               	andwf	___xxtofl@arg^0,w,c
 10238   003652  6E13               	movwf	??___xxtofl^0,c
 10239   003654  0E00               	movlw	0
 10240   003656  141A               	andwf	(___xxtofl@arg+1)^0,w,c
 10241   003658  6E14               	movwf	(??___xxtofl+1)^0,c
 10242   00365A  0E00               	movlw	0
 10243   00365C  141B               	andwf	(___xxtofl@arg+2)^0,w,c
 10244   00365E  6E15               	movwf	(??___xxtofl+2)^0,c
 10245   003660  0EFF               	movlw	255
 10246   003662  141C               	andwf	(___xxtofl@arg+3)^0,w,c
 10247   003664  6E16               	movwf	(??___xxtofl+3)^0,c
 10248   003666  5013               	movf	??___xxtofl^0,w,c
 10249   003668  1014               	iorwf	(??___xxtofl+1)^0,w,c
 10250   00366A  1015               	iorwf	(??___xxtofl+2)^0,w,c
 10251   00366C  1016               	iorwf	(??___xxtofl+3)^0,w,c
 10252   00366E  A4D8               	btfss	status,2,c
 10253   003670  EF3C  F01B         	goto	u4601
 10254   003674  EF3E  F01B         	goto	u4600
 10255   003678                     u4601:
 10256   003678  EF1B  F01B         	goto	l4165
 10257   00367C                     u4600:
 10258   00367C  EF46  F01B         	goto	l4173
 10259   003680                     l4171:
 10260   003680  0618               	decf	___xxtofl@exp^0,f,c
 10261   003682  90D8               	bcf	status,0,c
 10262   003684  3619               	rlcf	___xxtofl@arg^0,f,c
 10263   003686  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
 10264   003688  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
 10265   00368A  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
 10266   00368C                     l4173:
 10267   00368C  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
 10268   00368E  EF4B  F01B         	goto	u4611
 10269   003692  EF4D  F01B         	goto	u4610
 10270   003696                     u4611:
 10271   003696  EF55  F01B         	goto	l858
 10272   00369A                     u4610:
 10273   00369A  0E02               	movlw	2
 10274   00369C  6018               	cpfslt	___xxtofl@exp^0,c
 10275   00369E  EF53  F01B         	goto	u4621
 10276   0036A2  EF55  F01B         	goto	u4620
 10277   0036A6                     u4621:
 10278   0036A6  EF40  F01B         	goto	l4171
 10279   0036AA                     u4620:
 10280   0036AA                     l858:
 10281   0036AA  B018               	btfsc	___xxtofl@exp^0,0,c
 10282   0036AC  EF5A  F01B         	goto	u4631
 10283   0036B0  EF5C  F01B         	goto	u4630
 10284   0036B4                     u4631:
 10285   0036B4  EF5D  F01B         	goto	l4179
 10286   0036B8                     u4630:
 10287   0036B8  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
 10288   0036BA                     l4179:
 10289   0036BA  90D8               	bcf	status,0,c
 10290   0036BC  3218               	rrcf	___xxtofl@exp^0,f,c
 10291   0036BE  C018  F013         	movff	___xxtofl@exp,??___xxtofl
 10292   0036C2  6A14               	clrf	(??___xxtofl+1)^0,c
 10293   0036C4  6A15               	clrf	(??___xxtofl+2)^0,c
 10294   0036C6  6A16               	clrf	(??___xxtofl+3)^0,c
 10295   0036C8  C013  F016         	movff	??___xxtofl,??___xxtofl+3
 10296   0036CC  6A15               	clrf	(??___xxtofl+2)^0,c
 10297   0036CE  6A14               	clrf	(??___xxtofl+1)^0,c
 10298   0036D0  6A13               	clrf	??___xxtofl^0,c
 10299   0036D2  5013               	movf	??___xxtofl^0,w,c
 10300   0036D4  1219               	iorwf	___xxtofl@arg^0,f,c
 10301   0036D6  5014               	movf	(??___xxtofl+1)^0,w,c
 10302   0036D8  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
 10303   0036DA  5015               	movf	(??___xxtofl+2)^0,w,c
 10304   0036DC  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
 10305   0036DE  5016               	movf	(??___xxtofl+3)^0,w,c
 10306   0036E0  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
 10307   0036E2  5017               	movf	___xxtofl@sign^0,w,c
 10308   0036E4  B4D8               	btfsc	status,2,c
 10309   0036E6  EF77  F01B         	goto	u4641
 10310   0036EA  EF79  F01B         	goto	u4640
 10311   0036EE                     u4641:
 10312   0036EE  EF81  F01B         	goto	l4189
 10313   0036F2                     u4640:
 10314   0036F2  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
 10315   0036F4  EF80  F01B         	goto	u4650
 10316   0036F8  EF7E  F01B         	goto	u4651
 10317   0036FC                     u4651:
 10318   0036FC  EF81  F01B         	goto	l4189
 10319   003700                     u4650:
 10320   003700  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
 10321   003702                     l4189:
 10322   003702  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
 10323   003706  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
 10324   00370A  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
 10325   00370E  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
 10326   003712                     l847:
 10327   003712  0012               	return		;funcret
 10328   003714                     __end_of___xxtofl:
 10329                           	callstack 0
 10330                           
 10331                           	psect	rparam
 10332   000000                     
 10333                           	psect	idloc
 10334                           
 10335                           ;Config register IDLOC0 @ 0x200000
 10336                           ;	unspecified, using default values
 10337   200000                     	org	2097152
 10338   200000  0FFF               	dw	4095
 10339                           
 10340                           ;Config register IDLOC1 @ 0x200002
 10341                           ;	unspecified, using default values
 10342   200002                     	org	2097154
 10343   200002  0FFF               	dw	4095
 10344                           
 10345                           ;Config register IDLOC2 @ 0x200004
 10346                           ;	unspecified, using default values
 10347   200004                     	org	2097156
 10348   200004  0FFF               	dw	4095
 10349                           
 10350                           ;Config register IDLOC3 @ 0x200006
 10351                           ;	unspecified, using default values
 10352   200006                     	org	2097158
 10353   200006  0FFF               	dw	4095
 10354                           
 10355                           ;Config register IDLOC4 @ 0x200008
 10356                           ;	unspecified, using default values
 10357   200008                     	org	2097160
 10358   200008  0FFF               	dw	4095
 10359                           
 10360                           ;Config register IDLOC5 @ 0x20000A
 10361                           ;	unspecified, using default values
 10362   20000A                     	org	2097162
 10363   20000A  0FFF               	dw	4095
 10364                           
 10365                           ;Config register IDLOC6 @ 0x20000C
 10366                           ;	unspecified, using default values
 10367   20000C                     	org	2097164
 10368   20000C  0FFF               	dw	4095
 10369                           
 10370                           ;Config register IDLOC7 @ 0x20000E
 10371                           ;	unspecified, using default values
 10372   20000E                     	org	2097166
 10373   20000E  0FFF               	dw	4095
 10374                           
 10375                           	psect	config
 10376                           
 10377                           ;Config register CONFIG1L @ 0x300000
 10378                           ;	External Oscillator mode Selection bits
 10379                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 10380                           ;	Power-up default value for COSC bits
 10381                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 10382   300000                     	org	3145728
 10383   300000  AA                 	db	170
 10384                           
 10385                           ;Config register CONFIG1H @ 0x300001
 10386                           ;	unspecified, using default values
 10387                           ;	Clock Out Enable bit
 10388                           ;	CLKOUTEN = 0x1, unprogrammed default
 10389                           ;	Clock Switch Enable bit
 10390                           ;	CSWEN = 0x1, unprogrammed default
 10391                           ;	Fail-Safe Clock Monitor Enable bit
 10392                           ;	FCMEN = 0x1, unprogrammed default
 10393   300001                     	org	3145729
 10394   300001  FF                 	db	255
 10395                           
 10396                           ;Config register CONFIG2L @ 0x300002
 10397                           ;	unspecified, using default values
 10398                           ;	Master Clear Enable bit
 10399                           ;	MCLRE = 0x1, unprogrammed default
 10400                           ;	Power-up Timer Enable bit
 10401                           ;	PWRTE = 0x1, unprogrammed default
 10402                           ;	Low-power BOR enable bit
 10403                           ;	LPBOREN = 0x1, unprogrammed default
 10404                           ;	Brown-out Reset Enable bits
 10405                           ;	BOREN = 0x3, unprogrammed default
 10406   300002                     	org	3145730
 10407   300002  FF                 	db	255
 10408                           
 10409                           ;Config register CONFIG2H @ 0x300003
 10410                           ;	unspecified, using default values
 10411                           ;	Brown Out Reset Voltage selection bits
 10412                           ;	BORV = 0x3, unprogrammed default
 10413                           ;	ZCD Disable bit
 10414                           ;	ZCD = 0x1, unprogrammed default
 10415                           ;	PPSLOCK bit One-Way Set Enable bit
 10416                           ;	PPS1WAY = 0x1, unprogrammed default
 10417                           ;	Stack Full/Underflow Reset Enable bit
 10418                           ;	STVREN = 0x1, unprogrammed default
 10419                           ;	Debugger Enable bit
 10420                           ;	DEBUG = 0x1, unprogrammed default
 10421                           ;	Extended Instruction Set Enable bit
 10422                           ;	XINST = 0x1, unprogrammed default
 10423   300003                     	org	3145731
 10424   300003  FF                 	db	255
 10425                           
 10426                           ;Config register CONFIG3L @ 0x300004
 10427                           ;	WDT Period Select bits
 10428                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10429                           ;	WDT operating mode
 10430                           ;	WDTE = OFF, WDT Disabled
 10431   300004                     	org	3145732
 10432   300004  9F                 	db	159
 10433                           
 10434                           ;Config register CONFIG3H @ 0x300005
 10435                           ;	unspecified, using default values
 10436                           ;	WDT Window Select bits
 10437                           ;	WDTCWS = 0x7, unprogrammed default
 10438                           ;	WDT input clock selector
 10439                           ;	WDTCCS = 0x7, unprogrammed default
 10440   300005                     	org	3145733
 10441   300005  FF                 	db	255
 10442                           
 10443                           ;Config register CONFIG4L @ 0x300006
 10444                           ;	unspecified, using default values
 10445                           ;	Write Protection Block 0
 10446                           ;	WRT0 = 0x1, unprogrammed default
 10447                           ;	Write Protection Block 1
 10448                           ;	WRT1 = 0x1, unprogrammed default
 10449                           ;	Write Protection Block 2
 10450                           ;	WRT2 = 0x1, unprogrammed default
 10451                           ;	Write Protection Block 3
 10452                           ;	WRT3 = 0x1, unprogrammed default
 10453                           ;	Write Protection Block 3
 10454                           ;	WRT4 = 0x1, unprogrammed default
 10455                           ;	Write Protection Block 3
 10456                           ;	WRT5 = 0x1, unprogrammed default
 10457                           ;	Write Protection Block 3
 10458                           ;	WRT6 = 0x1, unprogrammed default
 10459                           ;	Write Protection Block 3
 10460                           ;	WRT7 = 0x1, unprogrammed default
 10461   300006                     	org	3145734
 10462   300006  FF                 	db	255
 10463                           
 10464                           ;Config register CONFIG4H @ 0x300007
 10465                           ;	unspecified, using default values
 10466                           ;	Configuration Register Write Protection bit
 10467                           ;	WRTC = 0x1, unprogrammed default
 10468                           ;	Boot Block Write Protection bit
 10469                           ;	WRTB = 0x1, unprogrammed default
 10470                           ;	Data EEPROM Write Protection bit
 10471                           ;	WRTD = 0x1, unprogrammed default
 10472                           ;	Scanner Enable bit
 10473                           ;	SCANE = 0x1, unprogrammed default
 10474                           ;	Low Voltage Programming Enable bit
 10475                           ;	LVP = 0x1, unprogrammed default
 10476   300007                     	org	3145735
 10477   300007  FF                 	db	255
 10478                           
 10479                           ;Config register CONFIG5L @ 0x300008
 10480                           ;	unspecified, using default values
 10481                           ;	UserNVM Program Memory Code Protection bit
 10482                           ;	CP = 0x1, unprogrammed default
 10483                           ;	DataNVM Memory Code Protection bit
 10484                           ;	CPD = 0x1, unprogrammed default
 10485   300008                     	org	3145736
 10486   300008  FF                 	db	255
 10487                           
 10488                           ;Config register CONFIG5H @ 0x300009
 10489                           ;	unspecified, using default values
 10490   300009                     	org	3145737
 10491   300009  FF                 	db	255
 10492                           
 10493                           ;Config register CONFIG6L @ 0x30000A
 10494                           ;	unspecified, using default values
 10495                           ;	Table Read Protection Block 0
 10496                           ;	EBTR0 = 0x1, unprogrammed default
 10497                           ;	Table Read Protection Block 1
 10498                           ;	EBTR1 = 0x1, unprogrammed default
 10499                           ;	Table Read Protection Block 2
 10500                           ;	EBTR2 = 0x1, unprogrammed default
 10501                           ;	Table Read Protection Block 3
 10502                           ;	EBTR3 = 0x1, unprogrammed default
 10503                           ;	Table Read Protection Block 4
 10504                           ;	EBTR4 = 0x1, unprogrammed default
 10505                           ;	Table Read Protection Block 5
 10506                           ;	EBTR5 = 0x1, unprogrammed default
 10507                           ;	Table Read Protection Block 6
 10508                           ;	EBTR6 = 0x1, unprogrammed default
 10509                           ;	Table Read Protection Block 7
 10510                           ;	EBTR7 = 0x1, unprogrammed default
 10511   30000A                     	org	3145738
 10512   30000A  FF                 	db	255
 10513                           
 10514                           ;Config register CONFIG6H @ 0x30000B
 10515                           ;	unspecified, using default values
 10516                           ;	Boot Block Table Read Protection bit
 10517                           ;	EBTRB = 0x1, unprogrammed default
 10518   30000B                     	org	3145739
 10519   30000B  FF                 	db	255
 10520                           tosu	equ	0xFFF
 10521                           tosh	equ	0xFFE
 10522                           tosl	equ	0xFFD
 10523                           stkptr	equ	0xFFC
 10524                           pclatu	equ	0xFFB
 10525                           pclath	equ	0xFFA
 10526                           pcl	equ	0xFF9
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           indf0	equ	0xFEF
 10534                           postinc0	equ	0xFEE
 10535                           postdec0	equ	0xFED
 10536                           preinc0	equ	0xFEC
 10537                           plusw0	equ	0xFEB
 10538                           fsr0h	equ	0xFEA
 10539                           fsr0l	equ	0xFE9
 10540                           wreg	equ	0xFE8
 10541                           indf1	equ	0xFE7
 10542                           postinc1	equ	0xFE6
 10543                           postdec1	equ	0xFE5
 10544                           preinc1	equ	0xFE4
 10545                           plusw1	equ	0xFE3
 10546                           fsr1h	equ	0xFE2
 10547                           fsr1l	equ	0xFE1
 10548                           bsr	equ	0xFE0
 10549                           indf2	equ	0xFDF
 10550                           postinc2	equ	0xFDE
 10551                           postdec2	equ	0xFDD
 10552                           preinc2	equ	0xFDC
 10553                           plusw2	equ	0xFDB
 10554                           fsr2h	equ	0xFDA
 10555                           fsr2l	equ	0xFD9
 10556                           status	equ	0xFD8

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    113     126
    BANK1           256     60     152
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 41
		 -> STR_1(CODE[41]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1062$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_1(CODE[41]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S978$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S978$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 60
		 -> main@data(BANK1[60]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 12
		 -> colorf(BANK1[12]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 12
		 -> colorf(BANK1[12]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 12
		 -> colorf(BANK1[12]), 


Critical Paths under _main in COMRAM

    _colour_read_all->___fltol
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___xxtofl
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___flsub
    ___flsub->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->___awdiv
    _sendStringSerial4->_sendCharSerial4
    ___xxtofl->___wmul

Critical Paths under _main in BANK0

    _main->_Color2String
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   56045
                                            111 BANK0      2     2      0
                                              0 BANK1     60    60      0
                       _Color2String
                  _I2C_2_Master_Init
                            _RGB2Hue
                   _color_click_init
                    _colour_read_all
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     22    20      2   11410
                                             84 COMRAM     2     0      2
                                              0 BANK0     16    16      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             11     9      2    3208
                                             28 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     594
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         8     4      4   41029
                                            103 BANK0      8     4      4
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    15     18   31144
                                             72 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30787
                                             93 COMRAM     2     2      0
                                             66 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   30423
                                             44 BANK0     22    16      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   22374
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             41 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     783
                                             74 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3899
                                             66 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3058
                                             41 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             66 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2463
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4551
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2879
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1526
                                             14 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     757
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     849
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color2String
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
         ___wmul (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
             _I2C_2_Master_Idle
           _I2C_2_Master_Stop
             _I2C_2_Master_Idle
           _I2C_2_Master_Write
             _I2C_2_Master_Idle
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   _I2C_2_Master_Init
   _RGB2Hue
     ___awdiv
     ___wmul
     ___xxtofl
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      98       7       59.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      7E       5       78.8%
BITBIGSFRhlh        99      0       0      33        0.0%
BITBIGSFRhh         7B      0       0      32        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllhh      36      0       0      37        0.0%
BITBIGSFRllh        2D      0       0      36        0.0%
BITBIGSFRlllhll     2A      0       0      39        0.0%
BITBIGSFRlllll      26      0       0      42        0.0%
BITBIGSFRlllhll     19      0       0      40        0.0%
BITBIGSFRlllhlh      C      0       0      38        0.0%
BITBIGSFRhllll       8      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      41        0.0%
BITBIGSFRlh          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     175      43        0.0%
DATA                 0      0     175       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 16:17:26 2023

               _color_read_Red 4406                   ___fldiv@aexp 0029                   ___fldiv@bexp 0028  
                 ___fldiv@sign 0021                _color_read_Blue 44F6                             l22 48BE  
                           l31 4544                             l25 4454                             l34 44F4  
                           l19 4768                             l60 25F2                             l28 44A4  
                           l47 3094                             l90 4830                             l93 4856  
                           l87 482E                             l96 491E                             l99 490A  
                 ___awdiv@sign 0006            ___wmul@multiplicand 000B               _color_read_Clear 44A6  
             _color_read_Green 4456                            l102 4914                            l105 4900  
                          l108 46EA                            l303 389A                            l316 39FE  
                          l180 3CAC                            l420 4142                            l165 489E  
                          l174 48E0                            l177 48F4                            l186 47D8  
                          l189 487C                            l454 3E70                            l463 47A0  
                          l448 429A                            l810 28AE                            l459 3EB6  
                          l803 26B8                            l820 29DE                            l812 2926  
                          l813 2914                            l717 1A86                            l734 1BA0  
                          l726 1D56                            l718 1A74                            l486 3DB2  
                          l807 2A1C                            l743 1C70                            l719 1A3A  
                          l904 418A                            l744 1C5E                            l851 364E  
                          l907 41CC                            l931 334C                            l915 3132  
                          l771 2DB6                            l844 35B6                            l909 41F0  
                          l917 313A                            l773 2C16                            l918 3180  
                          l782 2C5C                            l942 1896                            l847 3712  
                          l759 45DA                            l784 2CD4                            l776 2BDA  
                          l785 2CC2                            l945 11C6                            l858 36AA  
                          l947 100C                            l867 4404                            l975 160E  
                          _abs 46EC                            _pad 4144                            wreg 000FE8  
                 ___flmul@aexp 003B                   ___flmul@bexp 003C                   ___flmul@sign 0036  
                 ___flmul@temp 0041                   ___flmul@prod 003D                __end_of_RGB2Hue 25F4  
                 ___fltol@exp1 0054                           l1011 21B8                           l1100 4620  
                         l1110 4300                           l1033 43B2                           l1051 472A  
                         l1043 3FB4                           l1107 42F0                           ?_abs 0013  
                         l1116 4594                           l1048 4722                           l1128 407E  
                         l1136 46A8                           l1073 3B54                           l3001 3718  
                         l1145 4664                           l1082 355E                           l3011 3778  
                         l3003 3726                           l1139 4920                           l1092 4804  
                         l1076 3B5C                           l3021 37C2                           l3013 377C  
                         l3005 3746                           l3101 2A90                           l1085 34A2  
                         l3031 3832                           l3023 37D0                           l3015 3788  
                         l3007 374A                           l3111 2AD0                           l3103 2A9E  
                         l3033 3844                           l3025 37E2                           l3017 37A6  
                         l3009 3758                           l3201 2D92                           l3121 2B10  
                         l3113 2AD2                           l3105 2AA0                           l4001 491A  
                         l3027 3810                           l3019 37AE                           l3035 384A  
                         l3051 38D2                           l3043 389C                           l3203 2D96  
                         l3131 2B40                           l3123 2B18                           l3107 2AB0  
                         l3115 2ADA                           l4003 48F8                           l4011 4902  
                         l4101 47C0                           l3037 385A                           l3029 3830  
                         l3061 393A                           l3053 38E0                           l3045 38A0  
                         l3205 2DA4                           l3141 2B7E                           l3133 2B40  
                         l3125 2B1C                           l3117 2AEA                           l3109 2AC0  
                         l3301 289E                           l3221 260E                           l4005 48FC  
                         l4021 46C0                           l4013 4906                           l4031 48F0  
                         l3039 387A                           l3063 3948                           l3071 39AE  
                         l3055 3900                           l3047 38AE                           l3207 2DAA  
                         l3151 2BCA                           l3143 2B8E                           l3119 2B00  
                         l3311 28DE                           l3303 28AC                           l3231 2646  
                         l3223 2610                           l4111 409E                           l4103 4080  
                         l4007 490C                           l4023 46E6                           l4015 46AC  
                         l3073 39BE                           l3065 3976                           l3057 391E  
                         l3049 38CE                           l3209 2DAC                           l3161 2C14  
                         l3153 2BD8                           l3145 2B9E                           l3137 2B54  
                         l3129 2B30                           l3081 2A2A                           l3321 2950  
                         l3313 290C                           l3305 28BE                           l3241 2672  
                         l3233 2656                           l3225 2620                           l3217 25F4  
                         l3401 3CC4                           l4033 435E                           l4121 40D2  
                         l4113 40AC                           l4105 4084                           l4009 4910  
                         l4201 4754                           l4025 46E8                           l4017 46B0  
                         l3075 39DE                           l3067 3996                           l3059 3926  
                         l3171 2C5A                           l3163 2C26                           l3155 2BE4  
                         l3147 2BA6                           l3139 2B6E                           l3091 2A6A  
                         l3083 2A38                           l3331 29C6                           l3323 297A  
                         l3307 28CC                           l3251 26C8                           l3243 2682  
                         l3235 265C                           l3227 2630                           l3219 2600  
                         l3411 3D14                           l4035 436A                           l4131 410C  
                         l4123 40DA                           l4115 40B4                           l4107 4092  
                         l4051 481A                           l4043 4806                           l4203 475E  
                         l4019 46B8                           l4211 2FCC                           l4029 48E0  
                         l3069 39A8                           l3181 2CBA                           l3165 2C3C  
                         l3173 2C6C                           l3157 2C02                           l3149 2BB6  
                         l3093 2A6C                           l3085 2A3A                           l3333 29E2  
                         l3341 2A08                           l3317 2936                           l3325 297E  
                         l3309 28D0                           l3261 2702                           l3253 26D8  
                         l3245 2692                           l3237 2662                           l3229 2640  
                         l3421 3D3E                           l3413 3D18                           l3405 3CD8  
                         l3501 33D8                           l4037 4388                           l4141 4132  
                         l4133 4114                           l4125 40E2                           l4117 40B8  
                         l4109 409A                           l4221 2232                           l4053 481C  
                         l4045 4810                           l4213 3000                           l4205 2DB8  
                         l4151 3580                           l3191 2D28                           l3175 2C7A  
                         l3167 2C42                           l3159 2C04                           l3087 2A4A  
                         l3095 2A74                           l3079 2A1E                           l3343 2A0C  
                         l3335 29F2                           l3327 2998                           l3319 2942  
                         l3271 2754                           l3263 2718                           l3247 26A2  
                         l3239 2670                           l3431 3D66                           l3423 3D48  
                         l3415 3D26                           l3407 3D02                           l3503 33E6  
                         l3511 34C6                           l4039 43A8                           l4143 413A  
                         l4135 4116                           l4127 40F0                           l4119 40C0  
                         l4231 22E4                           l4223 223A                           l4215 21BA  
                         l4047 4816                           l4055 48A2                           l4071 453C  
                         l4063 4456                           l4207 2E74                           l4161 35F8  
                         l4153 35C6                           l3601 3306                           l3185 2CE4  
                         l3193 2D2C                           l3177 2C7E                           l3169 2C4C  
                         l3097 2A84                           l3089 2A5A                           l3361 426E  
                         l3353 41F2                           l3337 2A00                           l3329 29AC  
                         l3281 279A                           l3273 2762                           l3265 2724  
                         l3257 26EC                           l3249 26A8                           l2801 18FE  
                         l3433 3D72                           l3425 3D52                           l3409 3D04  
                         l3513 3502                           l4081 43B4                           l4137 411C  
                         l4129 40F6                           l4241 23AA                           l4233 231A  
                         l4225 226C                           l4217 21E6                           l4049 4818  
                         l4065 449C                           l4057 4406                           l4209 2F04  
                         l4171 3680                           l4163 3604                           l4155 35DC  
                         l4147 3562                           l3451 4182                           l3443 4144  
                         l3603 3316                           l3195 2D46                           l3187 2CF0  
                         l3179 2C8C                           l3099 2A8A                           l3363 4292  
                         l3355 4220                           l3371 3DE2                           l3339 2A02  
                         l3291 2808                           l3283 27B4                           l3275 276E  
                         l3267 273C                           l3259 26F8                           l2811 192C  
                         l2803 1904                           l3347 4596                           l3435 3D82  
                         l3515 3516                           l3507 3456                           l3531 4576  
                         l3523 4546                           l3611 0E34                           l4083 43C6  
                         l4139 4122                           l4251 24C6                           l4243 23BA  
                         l4235 2332                           l4227 229E                           l4219 2212  
                         l4075 44A6                           l4059 444C                           l4181 36BE  
                         l4173 368C                           l4165 3636                           l4149 3572  
                         l4093 47A2                           l3541 45E0                           l3461 46EC  
                         l3453 4196                           l3445 4154                           l3605 331C  
                         l3197 2D5C                           l3189 2CFE                           l3365 4298  
                         l3357 4230                           l3381 3E50                           l3373 3DF2  
                         l3293 2832                           l3285 27C4                           l3277 277E  
                         l3269 2748                           l2901 1B02                           l2821 1960  
                         l2813 192E                           l2805 1916                           l3349 45A6  
                         l3437 3D92                           l3517 353E                           l3509 3492  
                         l3525 455A                           l3533 457A                           l3701 11DE  
                         l3621 0E80                           l3613 0E3A                           l4085 43CE  
                         l4253 2552                           l4245 244A                           l4237 2346  
                         l4229 22B2                           l4069 44F6                           l4077 44EC  
                         l4261 488C                           l4183 36E2                           l4175 369A  
                         l4167 3638                           l4159 35F0                           l4095 47A6  
                         l3535 47DA                           l3543 45F4                           l3463 4706  
                         l3455 41AA                           l3447 4168                           l3607 332C  
                         l3551 3096                           l3199 2D76                           l3359 425E  
                         l3383 3E5E                           l3375 3E20                           l3295 2868  
                         l3287 27E0                           l3279 278A                           l3391 476A  
                         l2911 1B6E                           l2903 1B04                           l2831 199C  
                         l2815 193E                           l2823 1968                           l2807 1918  
                         l3439 3DA2                           l3471 3F3E                           l3519 354E  
                         l3527 4566                           l3711 1210                           l3703 11EA  
                         l3631 0EBE                           l3623 0E8A                           l3615 0E4A  
                         l4087 43D6                           l4271 3B5E                           l4255 2566  
                         l4247 247C                           l4239 2378                           l4263 488E  
                         l4185 36F2                           l4177 36B8                           l4169 3644  
                         l4097 47B4                           l3545 4616                           l4441 3AA2  
                         l3457 41AE                           l3449 4176                           l3561 310A  
                         l3553 30B6                           l3385 3EAE                           l3377 3E30  
                         l3369 3DB4                           l3297 2876                           l3289 27EC  
                         l3393 4780                           l2921 1BC6                           l2913 1B70  
                         l2905 1B0E                           l2841 19B0                           l2833 19A0  
                         l2825 1978                           l2817 194E                           l2809 191E  
                         l3473 3F4A                           l3465 3EB8                           l3529 456A  
                         l3801 169E                           l3721 1258                           l3713 121E  
                         l3705 11F2                           l3641 0F06                           l3633 0EC6  
                         l3625 0E92                           l3617 0E58                           l4433 1DF6  
                         l4089 43F2                           l4273 3B88                           l4249 24B2  
                         l4193 472C                           l4265 4898                           l4257 487E  
                         l4281 4306                           l4187 3700                           l4179 36BA  
                         l4099 47B8                           l3547 461A                           l3539 45DC  
                         l2771 3FC8                           l3459 41DC                           l3571 3158  
                         l3563 310C                           l3555 30CA                           l3387 3EB4  
                         l3379 3E3E                           l3299 2894                           l3395 4790  
                         l2931 1BF4                           l2915 1B80                           l2907 1B14  
                         l2851 19C4                           l2843 19B4                           l2835 19A4  
                         l2827 198A                           l2819 195E                           l3483 3FAC  
                         l3467 3ED8                           l3491 429C                           l3811 1754  
                         l3803 16F6                           l3731 136C                           l3723 1268  
                         l3715 1236                           l3707 11FA                           l3643 0F0C  
                         l3627 0EA2                           l3635 0ECA                           l3619 0E5C  
                         l4435 2024                           l4275 3C26                           l4195 4730  
                         l4267 489A                           l4259 4882                           l4291 433C  
                         l4283 430A                           l4189 3702                           l2773 3FDA  
                         l3581 3192                           l3573 3168                           l3565 3126  
                         l3557 30DA                           l2933 1C02                           l2925 1BDA  
                         l2941 1C20                           l2909 1B3A                           l2917 1B90  
                         l2853 19C8                           l2845 19B8                           l2837 19A8  
                         l2829 1998                           l2861 19D8                           l3469 3F16  
                         l3477 3F56                           l3493 42BA                           l3821 17C6  
                         l3813 1770                           l3805 172A                           l3741 140C  
                         l3725 127C                           l3733 1372                           l3717 1248  
                         l3709 11FE                           l3661 0F98                           l3645 0F14  
                         l3637 0EF0                           l3653 0F56                           l3629 0EB2  
                         l4437 20E2                           l3901 1E04                           l4277 3CA0  
                         l4197 473A                           l4269 489C                           l4285 430E  
                         ?_pad 0011                           l2775 3FE4                           l3583 3198  
                         l3591 328A                           l3575 3174                           l3567 3142  
                         l3559 30FA                           l2935 1C0A                           l2927 1BE4  
                         l2919 1BB6                           l2943 1C2E                           l2871 1A48  
                         l2863 19DC                           l2855 19CC                           l2847 19BC  
                         l2839 19AC                           l2791 18C4                           l2783 1898  
                         l3399 3CAE                           l3479 3F68                           l3495 334E  
                         l3487 4622                           l3831 180C                           l3823 17DE  
                         l3815 1778                           l3807 1732                           l3751 14E8  
                         l3743 143E                           l3735 1390                           l3727 12E0  
                         l3719 1250                           l3663 0FA0                           l3655 0F7C  
                         l3671 0FBC                           l3647 0F2C                           l3639 0F02  
                         l4439 216C                           l3911 1E90                           l3903 1E16  
                         l4199 474A                           l4287 431A                           l4279 4302  
                         l2777 4002                           l2769 3FB6                           l3593 32A4  
                         l3585 321A                           l3577 317C                           l3569 3152  
                         l2953 1C80                           l2961 1CD6                           l2945 1C32  
                         l2937 1C0E                           l2929 1BF2                           l2881 1A72  
                         l2873 1A54                           l2865 1A06                           l2857 19D0  
                         l2849 19C0                           l2793 18D4                           l2785 18A4  
                         l3497 336E                           l3489 4632                           l3841 1876  
                         l3833 182A                           l3817 1788                           l3809 1736  
                         l3761 154A                           l3753 14EE                           l3745 144E  
                         l3737 13C4                           l3729 1338                           l3681 1056  
                         l3673 0FD6                           l3657 0F8E                           l3649 0F36  
                         l3921 1F0C                           l3913 1EB0                           l3905 1E3E  
                         l4289 4326                           l3851 3A18                           l2779 4038  
                         l3595 32C2                           l3587 3220                           l3579 3188  
                         l2971 1D28                           l2963 1CE6                           l2955 1C8C  
                         l2947 1C40                           l2939 1C1E                           l2891 1AC8  
                         l2883 1A94                           l2875 1A58                           l2867 1A22  
                         l2859 19D4                           l2795 18E4                           l2787 18B2  
                         l3499 33C4                           l3827 17F0                           l3835 1848  
                         l3819 17B8                           l3771 15E4                           l3763 1552  
                         l3755 1522                           l3747 145E                           l3739 13F6  
                         l3691 114C                           l3683 1094                           l3659 0F92  
                         l3931 1FD2                           l3923 1F2C                           l3907 1E74  
                         l3861 3AB8                           l3853 3A38                           l3845 3A00  
                         l3597 32DC                           l3589 3226                           l2981 1D46  
                         l2973 1D2E                           l2965 1CF6                           l2957 1C9A  
                         l2949 1C56                           l2893 1AD6                           l2885 1AA4  
                         l2877 1A66                           l2869 1A32                           l2797 18E6  
                         l2789 18B4                           l3837 1858                           l3829 1806  
                         l3781 1642                           l3773 1604                           l3765 1558  
                         l3757 1536                           l3749 1492                           l3693 1154  
                         l3685 10C6                           l3677 101C                           l3933 1FE2  
                         l3925 1F4C                           l3917 1EBE                           l3909 1E82  
                         l3871 3B38                           l3855 3A70                           l3847 3A14  
                         l2991 4688                           l3599 32F6                           l2975 1D30  
                         l2967 1D16                           l2959 1CD4                           l2895 1AE4  
                         l2879 1A68                           l2799 18EE                           l3839 186E  
                         l3791 166A                           l3783 1648                           l3775 1620  
                         l3767 1560                           l3759 153A                           l3687 1104  
                         l3679 1022                           l3935 1FF8                           l3943 2010  
                         l3927 1FA2                           l3919 1EFC                           l2993 4858  
                         l3857 3A78                           l2985 4666                           l2977 1D36  
                         l2969 1D1A                           l2897 1AF0                           l2889 1AB8  
                         l3785 1650                           l3777 162E                           l3793 1670  
                         l3769 156C                           l3689 1118                           l3697 1194  
                         l3953 20CE                           l3937 2000                           l3945 2042  
                         l3881 1D58                           l2995 4874                           l3867 3AF2  
                         l3859 3A80                           l2987 4672                           l2979 1D44  
                         l2899 1AF4                           l3795 1682                           l3787 1660  
                         l3779 163E                           l3699 11CE                           l3963 214A  
                         l3955 20F8                           l3947 2066                           l3939 2008  
                         l3891 1DAC                           l3883 1D80                           l3869 3B26  
                         l2989 4684                           l3797 1694                           l3789 1664  
                         l3957 2118                           l3949 209A                           l3965 217A  
                         l3893 1DAE                           l3885 1D8E                           l3877 4830  
                         l2999 3714                           l3799 1698                           l3895 1DC0  
                         l3887 1D9C                           l3879 4840                           l3889 1DA0  
                         l3969 218C                           l3899 1DCC                           l3999 4916  
                         STR_1 0E01                           STR_2 0E2A                           STR_5 0E2E  
                         u3000 2AB0                           u3001 2AAC                           u3010 2AC0  
                         u3011 2ABC                           u3100 2C7A                           u3020 2B00  
                         u3101 2C76                           u3021 2AFC                           u3110 2C8C  
                         u3030 2B40                           u3111 2C88                           u3031 2B3C  
                         u2400 3FDA                           u3120 2CBA                           u3040 2BB6  
                         u3200 2620                           u4000 0F02                   _BAUD4CONbits 000EE9  
                         u2401 3FD6                           u3121 2CB6                           u3041 2BB2  
                         u3201 261C                           u4001 0EFE                           u2410 4002  
                         u3130 2CD0                           u3050 2BD8                           u3210 2630  
                         u4010 0F7C                           u2411 3FFE                           u3131 2CCC  
                         u3051 2BD4                           u3211 262C                           u4011 0F78  
                         u2420 4038                           u3140 2CE4                           u3060 2C02  
                         u3300 28DE                           u3220 2670                           u2500 198A  
                         u4100 1210                           u4020 0F8E                           u2421 4034  
                         u3141 2CE0                           u3061 2BFE                           u3301 28DA  
                         u3221 266C                           u2501 1986                           u4101 120C  
                         u4021 0F8A                           u3150 2CFE                           u3070 2C26  
                         u3310 290C                           u3230 2682                           u2510 1998  
                         u2430 18B2                           u4110 121E                           u4030 1008  
                         u3151 2CFA                           u3071 2C22                           u3311 2908  
                         u3231 267E                           u2511 1994                           u2431 18AE  
                         u4111 121A                           u4031 1004                           u3160 2D46  
                         u3080 2C3C                           u3400 4292                           u3320 2922  
                         u3240 2692                           u2600 1AD6                           u2520 1A06  
                         u2440 18C4                           u4200 1620                           u4120 1248  
                         u4040 1094                           u3161 2D42                           u3081 2C38  
                         u3401 428E                           u3321 291E                           u3241 268E  
                         u2601 1AD2                           u2521 1A02                           u2441 18C0  
                         u4201 161C                           u4121 1244                           u4041 1090  
                         u3170 2D76                           u3090 2C5A                           u3410 3DE2  
                         u3330 2936                           u3250 26C8                           u2610 1AE4  
                         u2530 1A1E                           u2450 18D4                           u4210 162E  
                         u4130 1390                           u4050 10C6                           u3171 2D72  
                         u3091 2C56                           u3411 3DDE                           u3331 2932  
                         u3251 26C4                           u2611 1AE0                           u2531 1A18  
                         u2451 18D0                           u4211 162A                           u4131 138C  
                         u4051 10C2                           u3180 2DA4                           u3420 3E20  
                         u3340 2950                           u3260 26D8                           u2700 1C2E  
                         u2620 1B02                           u2540 1A20                           u2460 1916  
                         u3500 3D3A                           u4300 1858                           u4220 1682  
                         u4140 13F6                           u4060 1104                           u3181 2DA0  
                         u3421 3E1C                           u3341 294C                           u3261 26D4  
                         u2701 1C2A                           u2621 1AFE                           u2461 1912  
                         u3501 3D36                           u4301 1854                           u4221 167E  
                         u4141 13F2                           u4061 1100                           u4310 3A38  
                         u2390 3FC8                           u3430 3E3E                           u3350 2998  
                         u3270 2852                           u3190 260E                           u2710 1C40  
                         u2630 1B3A                           u2550 1A48                           u2470 192C  
                         u3510 3D62                           u4230 1754                           u4150 143E  
                         u4070 1190                           u4311 3A34                           u2391 3FC4  
                         u3431 3E3A                           u3351 2994                           u3191 260A  
                         u2711 1C3C                           u2631 1B36                           u2551 1A44  
                         u2471 1928                           u3511 3D5E                           u4231 1750  
                         u4151 143A                           u4071 118C                           u4320 3A6C  
                         u3440 3E5E                           u3360 29C6                           u3280 28AC  
                         u2800 1D28                           u2720 1C56                           u2640 1B80  
                         u2560 1A66                           u2480 193E                           u3520 3D82  
                         u3600 3F16                           u4240 1770                           u4160 144E  
                         u4080 11C6                           u4400 1E82                           u4321 3A68  
                         u3441 3E5A                           u3361 29C2                           u3281 28A8  
                         u2801 1D24                           u2721 1C52                           u2641 1B7C  
                         u2561 1A62                           u2481 193A                           u3521 3D7E  
                         u3601 3F12                           u4241 176C                           u4161 144A  
                         u4081 11C2                           u4401 1E7E                           u4330 3B26  
                         u3450 3EAE                           u3370 2A00                           u3290 28CC  
                         u2810 1D44                           u2730 1C6C                           u2650 1BB6  
                         u2570 1A86                           u2490 194E                           u3530 3D92  
                         u3610 3F3E                           u4250 17D8                           u4170 14E8  
                         u4090 11DE                           u4410 1EFC                           u4331 3B22  
                         u3451 3EAA                           u3371 29FC                           u3291 28C8  
                         u3275 2848                           u2811 1D40                           u2731 1C68  
                         u2651 1BB2                           u2571 1A82                           u2491 194A  
                         u3531 3D8E                           u3611 3F3A                           u4251 17D2  
                         u4171 14E4                           u4091 11DA                           u4411 1EF8  
                         u4340 3B38                           u2900 38AE                           u2820 46A8  
                         u3540 4154                           u3380 4220                           u3460 4780  
                         u2740 1C80                           u2660 1BC6                           u2580 1A94  
                         u3620 3F68                           u3700 33E6                           u4260 17DA  
                         u4180 1536                           u4420 1F2C                           u4500 4092  
                         u4341 3B34                           u2901 38AA                           u2821 46A4  
                         u3541 4150                           u3381 421C                           u3461 477C  
                         u2741 1C7C                           u2661 1BC2                           u2581 1A90  
                         u3621 3F64                           u3701 33E2                           u4181 1532  
                         u4421 1F28                           u4501 408E                           u2830 3726  
                         u2910 38E0                           u3550 4176                           u3390 425E  
                         u2750 1C9A                           u2670 1BF2                           u2590 1AA4  
                         u3470 3CC4                           u4270 17EC                           u4190 15E4  
                         u4430 1F4C                           u4510 40AC                           u4350 4840  
                         u2831 3722                           u2911 38DC                           u3551 4172  
                         u3391 425A                           u2751 1C96                           u2671 1BEE  
                         u2591 1AA0                           u3471 3CC0                           u4271 17E8  
                         u4191 15E0                           u4431 1F48                           u4511 40A8  
                         u4351 483C                           u4600 367C                           u3800 4800  
                         u2840 3758                           u2920 391E                           u3560 41CC  
                         u2760 1CD4                           u2680 1C02                           u3480 3CF8  
                         u3640 3FA2                           u3720 3452                           u4280 182A  
                         u4440 2062                           u4520 40D2                           u4360 4856  
                         u4601 3678                           u2841 3754                           u2921 391A  
                         u3561 41C8                           u2761 1CD0                           u2681 1BFE  
                         u3641 3F9C                           u3721 344E                           u4281 1826  
                         u4441 205E                           u4521 40CE                           u4361 4852  
                         u4610 369A                           u3810 45F4                           u2930 3948  
                         u3570 41DC                           u2770 1CE6                           u2690 1C1E  
                         u3490 3D26                           u3650 3FA4                           u3730 3476  
                         u4290 1848                           u4370 1D80                           u4530 40F0  
                         u4450 46D4                           u4611 3696                           u3811 45F0  
                         u2851 3782                           u2931 3944                           u3571 41D8  
                         u2771 1CE2                           u2691 1C1A                           u3491 3D22  
                         u3635 3F7A                           u3715 33FA                           u4291 1844  
                         u4371 1D7C                           u4531 40EC                           u4451 46CC  
                         u4620 36AA                           u3820 4616                           u2860 37A6  
                         u2940 3976                           u3580 4706                           u3900 32A4  
                         u2780 1CF6                           u3740 3492                           u3716 3404  
                         u3660 4664                           u4380 1E16                           u4540 410C  
                         u4700 22E4                           u4621 36A6                           u3821 4612  
                         u2861 37A2                           u2941 3972                           u3581 4702  
                         u3901 32A0                           u2781 1CF2                           u3485 3CEE  
                         u3741 348E                           u3717 3414                           u3661 4660  
                         u4381 1E12                           u4541 4108                           u4701 22E0  
                         u4630 36B8                           u4470 48F0                           u2870 37D0  
                         u2950 39BE                           u3910 32C2                           u3830 30C6  
                         u2790 1D16                           u3590 3EF8                           u3750 34E6  
                         u3670 42BA                           u4390 1E3E                           u4550 4132  
                         u4710 231A                           u4631 36B4                           u4471 48EC  
                         u2871 37CC                           u2951 39BA                           u3911 32BE  
                         u3831 30C0                           u2791 1D12                           u3735 346C  
                         u3671 42B6                           u4391 1E3A                           u4551 412E  
                         u4711 2316                           u4640 36F2                           u4560 3572  
                         u2880 3810                           u3920 32DC                           u3840 30C8  
                         u2960 2A38                           u3760 3502                           u3680 3396  
                         u4480 43A8                           u4720 2378                           u4641 36EE  
                         u4561 356E                           u2881 380C                           u3921 32D8  
                         u2961 2A34                           u3761 34FE                           u4481 43A4  
                         u4721 2374                           u4650 3700                           u4570 3580  
                         u4490 47D8                           u2890 385A                           u3930 32F6  
                         u3850 30DA                           u2970 2A4A                           u3770 353E  
                         u3690 33C4                           u4730 23AA                           u4651 36FC  
                         u4571 357C                           u4491 47D4                           u2891 3856  
                         u3931 32F2                           u3851 30D6                           u2971 2A46  
                         u3595 3EEE                           u3771 353A                           u3755 34DC  
                         u3691 33C0                           u4731 23A6                           u4580 35DC  
                         u3940 3306                           u3860 310A                           u2980 2A5A  
                         u3780 4594                           u4740 247C                           u4660 21E6  
                         u4468 46D6                           u4581 35D8                           u3941 3302  
                         u3861 3106                           u2981 2A56                           u3685 338C  
                         u3781 4590                           u4741 2478                           u4661 21E2  
                         u4590 3632                           u3790 47FE                           u3950 3316  
                         u3870 3126                           u2990 2A9E                           u4750 24B2  
                         u4670 2212                           u4591 362E                           u3791 47F8  
                         u3951 3312                           u3871 3122                           u2991 2A9A  
                         u4751 24AE                           u4671 220E                           u3880 3152  
                         u3960 0E58                           u4680 226C                           u3881 314E  
                         u3961 0E54                           u4681 2268                           u3890 3168  
                         u3970 0EA2                           u4690 229E                           u3891 3164  
                         u3971 0E9E                           u4691 229A                           u3980 0EB2  
                         u3981 0EAE                           u3990 0EF0                           u3991 0EEC  
                         u4767 4348                           u4777 4740                           u4787 47BA  
                         abs@a 0013                           _dbuf 0100                           _labs 429C  
                         _atoi 3A00                           _main 4302                           _dtoa 3096  
                         _prec 00DB                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                ___fpclassifyf 3EB8                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0022         __end_of_color_read_Red 4456  
                 ___param_bank 000000                          ??_abs 0015                          ??_pad 0017  
                ___fltol@sign1 0053                __end_of___aodiv 389C                          ?_labs 0001  
                        ?_atoi 000F                __end_of___fladd 1D58                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 3A00                __end_of___fldiv 2DB8  
              __end_of___awdiv 4144                __end_of___flneg 47A2                __end_of___flmul 2A1E  
              __end_of___flsub 45DC                __end_of___fltol 3DB4                ___awdiv@divisor 0003  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 008E        __end_of_sendCharSerial4 48F6  
   __end_of_I2C_2_Master_Start 4920     __end_of_I2C_2_Master_Write 4902                          _flags 00DD  
                        _fputc 3FB6                          _fputs 4666                __end_of_isdigit 4806  
                        labs@a 0001                          atoi@n 0016                          pad@fp 0011  
                        atoi@s 000F                          _width 00D9                          _putch 4920  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
              __end_of_isspace 4622                          tablat 000FF5                          status 000FD8  
              __end_of_sprintf 4406                 ?___fpclassifyf 0001           __end_of_Color2String 3CAE  
      __end_of_color_read_Blue 4546          _I2C_2_Master_RepStart 4902                ?_color_read_Red 0005  
              __initialization 48C0                   __end_of_labs 4302                   __end_of_atoi 3B5E  
                 __end_of_main 435E                   __end_of_dtoa 334E                         ??_labs 0005  
                       ??_atoi 0011                         ??_main 00CF                         ??_dtoa 0026  
                __activetblptr 000003                      ??_RGB2Hue 001F                         ?_fputc 0001  
                       ?_fputs 000A                _colour_read_all 2DB8               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                  vfpfcnvrt@done 0095  
     __end_of_color_click_init 476A                         _RX4PPS 000E15                         _TX4REG 000EE4  
             __end_of___xxtofl 3714                   vfprintf@cfmt 005E                         ___flge 3DB4  
                       ___fleq 41F2                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 4858                      ??___fldiv 0019  
                    ??___awdiv 0005                      ??___flneg 0005                      ??___flmul 0032  
                    ??___flsub 004B                      ??___fltol 004F                         _efgtoa 0E34  
                       _colorf 0150                         _floorf 334E                         _memcpy 4546  
                       clear_0 48C6                         clear_1 48D2               ___awdiv@quotient 0007  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 4622                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                      ??_isdigit 0003  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                      ??_isspace 0003                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 43B4                      ??_sprintf 0060  
                   ___flge@ff1 0043                     ___flge@ff2 0047                ??___fpclassifyf 0005  
                 ___xxtofl@arg 0019                   ___xxtofl@exp 0018                   ___xxtofl@val 000F  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005                     __accesstop 0060  
      __end_of__initialization 48D8       __end_of_color_read_Clear 44F6                     ___flneg@f1 0001  
     __end_of_color_read_Green 44A6         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 004B               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                __end_of_fputc 4080                  __end_of_fputs 46AA                  __end_of_putch 4922  
                    RGB2Hue@cf 001D        __end_of_colour_read_all 3096                        ??_fputc 0005  
                      ??_fputs 000E                        ??_putch 0001                     __pbssBANK0 00D1  
                   __pbssBANK1 0100              _color_writetoaddr 48A0                        ?___flge 0043  
                      ?___fleq 0001             ?_color_writetoaddr 0003                        ?___wmul 0009  
                      ?_efgtoa 0055                        ?_floorf 002A                        ?_memcpy 0001  
          ??_color_writetoaddr 0004                        ?_strcpy 0001                   _Color2String 3B5E  
                      _RGB2Hue 21BA                      ?___xxtofl 000F                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 48C0  
           _I2C_2_Master_Start 4916                     _initUSART4 487E             _I2C_2_Master_Write 48F6  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___aodiv 3714                        ___fladd 1898  
                      ___aomod 389C                        ___fldiv 2A1E                        ___awdiv 4080  
                      ___flneg 476A                        ___flmul 25F4                        ___flsub 4596  
                      ___fltol 3CAE            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A2                   __psmallconst 0E00                        __pcinit 48C0  
                      __ramtop 0E00                        __ptext0 4302                        __ptext1 487E  
                      __ptext2 2DB8                        __ptext3 4406                        __ptext4 4456  
                      __ptext5 44A6                        __ptext6 44F6                        __ptext7 4902  
                      __ptext8 46AA                        __ptext9 472C           Color2String@int_part 00CD  
             ?_colour_read_all 0055                        _isdigit 47DA                     ??___xxtofl 0013  
               Color2String@cf 00C9                        _isspace 45DC                        efgtoa@c 005B  
                      efgtoa@d 006B                        efgtoa@e 006F                        efgtoa@f 0057  
                      efgtoa@g 0082                        efgtoa@h 0077                        efgtoa@i 007F  
                      efgtoa@l 007B                        efgtoa@m 006D                        efgtoa@n 0086  
                      efgtoa@p 0062                        efgtoa@t 0064                        efgtoa@u 0088  
                      efgtoa@w 0071                        atoi@neg 0014                        _sprintf 43B4  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 48D8  
                      floorf@e 0038                        floorf@m 0034                        floorf@u 003A  
                      floorf@x 002A                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001             ??_color_click_init 0005              __end_of_vfpfcnvrt 21BA  
                   efgtoa@mode 0069                     efgtoa@sign 0081                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0097                     ??_vfprintf 005E                        strcpy@d 0007  
                      strcpy@s 0005                    ___fladd@grs 0010                  ___xxtofl@sign 0017  
                    _TRISCbits 000F83                      _TRISDbits 000F84                    ___fldiv@grs 0024  
                  ___fldiv@rem 001D       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 0037              ?_color_read_Clear 0005              ?_color_read_Green 0005  
                  ?_initUSART4 0001      sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 __end_of___flge 3EB8                 __end_of___fleq 429C  
                  vfpfcnvrt@ap 0090                    vfpfcnvrt@cp 00A0                    vfpfcnvrt@fp 008C  
               __end_of___wmul 487E                 __end_of_efgtoa 1898                 __end_of_floorf 3560  
               __end_of_memcpy 4596                     floorf@F526 00D1                 __end_of_strcpy 4666  
         _colour_read_all$1477 0060                     RGB2Hue@max 0024                     RGB2Hue@min 0026  
          color_read_Clear@tmp 000A            start_initialization 48C0                    __end_of_abs 472C  
                  __end_of_pad 41F2          __end_of___fpclassifyf 3FB6            color_read_Green@tmp 000A  
                  vfprintf@fmt 00A4                       ??___flge 004B                       ??___fleq 0009  
                     ??___wmul 000D                       ??_efgtoa 005C                       ??_floorf 002E  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                      ___fldiv@a 0015                      ___fldiv@b 0011  
                     ?_RGB2Hue 001D                      ___flmul@a 002E                      ___flmul@b 002A  
                    ___flsub@a 0047                      ___flsub@b 0043                  __pcstackBANK0 0060  
                __pcstackBANK1 015C               ___aodiv@dividend 0001                    _efgtoa$1131 0066  
                    _dtoa$1100 002E                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0011                       ?___awdiv 0001  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 002A  
                     ?___flsub 0043                       ?___fltol 004B           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00                       ?_isdigit 0001  
            _I2C_2_Master_Idle 4830              _I2C_2_Master_Init 4806              _I2C_2_Master_Read 46AA  
            _I2C_2_Master_Stop 490C                       ?_isspace 0001             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 00A8              colour_read_all@cf 0055              _sendStringSerial4 47A2  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 000D            ??_I2C_2_Master_Stop 0002             ?_sendStringSerial4 0002  
                     _PIR4bits 000E37              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 1D58  
    __end_of_I2C_2_Master_Idle 4858      __end_of_I2C_2_Master_Init 4830      __end_of_I2C_2_Master_Read 46EC  
            ___wmul@multiplier 0009      __end_of_I2C_2_Master_Stop 4916    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                   _isspace$1211 0005                     vfpfcnvrt@c 009F  
    __end_of_sendStringSerial4 47DA  __end_of_I2C_2_Master_RepStart 490C             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                      memcpy@tmp 000B  
                   vfprintf@ap 00A6                       __Lrparam 0000                     vfprintf@fp 00A2  
                   ?_vfpfcnvrt 008C                ___aodiv@divisor 0009                ___aodiv@counter 0011  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00D5          Color2String@frac_part 00CB  
                   sprintf@fmt 00AA                       ___xxtofl 3560             __end_of_initUSART4 48A0  
                     __ptext10 48A0                       __ptext11 48F6                       __ptext20 435E  
                     __ptext12 490C                       __ptext21 1D58                       __ptext13 4916  
                     __ptext30 1898                       __ptext22 0E34                       __ptext14 4830  
                     __ptext31 476A                       __ptext23 4622                       __ptext15 4806  
                     __ptext40 4920                       __ptext32 25F4                       __ptext24 4546  
                     __ptext16 21BA                       __ptext41 46EC                       __ptext33 3DB4  
                     __ptext25 429C                       __ptext17 4080                       __ptext50 3560  
                     __ptext42 389C                       __ptext34 41F2                       __ptext26 334E  
                     __ptext18 3B5E                       __ptext43 3714                       __ptext35 2A1E  
                     __ptext27 3EB8                       __ptext19 43B4                       __ptext44 3A00  
                     __ptext36 3096                       __ptext28 3CAE                       __ptext45 45DC  
                     __ptext37 4144                       __ptext29 4596                       __ptext46 47DA  
                     __ptext38 4666                       __ptext47 4858                       __ptext39 3FB6  
                     __ptext48 47A2                       __ptext49 48DE                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                Color2String@buf 00C7  
             colour_read_all@B 006C               colour_read_all@G 0068               colour_read_all@R 0064  
                     efgtoa@fp 0055                       efgtoa@ne 0060                       efgtoa@pp 0068  
                     efgtoa@ou 0073                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 435E                       main@data 015C               ___aomod@dividend 0001  
                ?_Color2String 00C7                       memcpy@d1 0001                       memcpy@s1 0003  
                     isdigit@c 0001                      sprintf@ap 00BA                       isspace@c 0001  
                    strcpy@src 0003              ??_colour_read_all 0057                    efgtoa@nmode 006A  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0092                ___aomod@counter 0011  
             _color_click_init 472C                 ??_Color2String 0060                       sprintf@f 00BC  
                     sprintf@s 00A8                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                ___fladd@signs 000D                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 48DE                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
