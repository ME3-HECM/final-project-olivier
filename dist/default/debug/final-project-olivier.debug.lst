

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 12:01:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86   000000                     
    87                           ; Generated 06/04/2022 GMT
    88                           ; 
    89                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F67K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	idataBANK0
   123   00492A                     __pidataBANK0:
   124                           	callstack 0
   125                           
   126                           ;initializer for _ForwardFlag
   127   00492A  01                 	db	1
   128                           
   129                           	psect	idataBANK1
   130   0048D6                     __pidataBANK1:
   131                           	callstack 0
   132                           
   133                           ;initializer for stoa@F1144
   134   0048D6  28                 	db	40
   135   0048D7  6E                 	db	110
   136   0048D8  75                 	db	117
   137   0048D9  6C                 	db	108
   138   0048DA  6C                 	db	108
   139   0048DB  29                 	db	41
   140   0048DC  00                 	db	0
   141                           
   142                           ;initializer for __halfsquare
   143   0048DD  015E               	dw	350
   144                           
   145                           ;initializer for __1square
   146   0048DF  02BC               	dw	700
   147                           
   148                           ;initializer for __45drightdelay
   149   0048E1  0095               	dw	149
   150                           
   151                           ;initializer for __45dleftdelay
   152   0048E3  0092               	dw	146
   153   000000                     _LATEbits	set	3965
   154   000000                     _TRISEbits	set	3973
   155   000000                     _LATHbits	set	3968
   156   000000                     _TX4REG	set	3812
   157   000000                     _RC4STAbits	set	3815
   158   000000                     _SP4BRGH	set	3814
   159   000000                     _TRISAbits	set	3969
   160   000000                     _TRISGbits	set	3975
   161   000000                     _SSP2CON2bits	set	3802
   162   000000                     _RX4PPS	set	3605
   163   000000                     _SSP2CLKPPS	set	3612
   164   000000                     _SSP2DATPPS	set	3613
   165   000000                     _ANSELDbits	set	3751
   166   000000                     _SSP2ADD	set	3798
   167   000000                     _SSP2CON1bits	set	3801
   168   000000                     _LATAbits	set	3961
   169   000000                     _LATGbits	set	3967
   170   000000                     _TRISHbits	set	3976
   171   000000                     _PORTFbits	set	3982
   172   000000                     _CCPR2H	set	4006
   173   000000                     _CCPR1H	set	4010
   174   000000                     _LATCbits	set	3963
   175   000000                     _LATDbits	set	3964
   176   000000                     _LATFbits	set	3966
   177   000000                     _TRISCbits	set	3971
   178   000000                     _TRISDbits	set	3972
   179   000000                     _TRISFbits	set	3974
   180   000000                     _RC4REG	set	3811
   181   000000                     _SP4BRGL	set	3813
   182   000000                     _TX4STAbits	set	3816
   183   000000                     _BAUD4CONbits	set	3817
   184   000000                     _SSP2CON2	set	3802
   185   000000                     _CCPR4H	set	3873
   186   000000                     _CCPR3H	set	3877
   187   000000                     _SSP2STAT	set	3800
   188   000000                     _ANSELFbits	set	3764
   189   000000                     _SSP2BUF	set	3797
   190   000000                     _PIE0bits	set	3625
   191   000000                     _PIR4bits	set	3639
   192   000000                     _RC0PPS	set	3682
   193   000000                     _RD5PPS	set	3695
   194   000000                     _RE2PPS	set	3700
   195   000000                     _RD6PPS	set	3696
   196   000000                     _CCP1CONbits	set	4011
   197   000000                     _CCPTMRS0bits	set	4013
   198   000000                     _T2PR	set	4028
   199   000000                     _T2CONbits	set	4029
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _RC7PPS	set	3689
   204   000000                     _RE4PPS	set	3702
   205   000000                     _RG6PPS	set	3720
   206   000000                     _TMR0L	set	4051
   207   000000                     _TMR0H	set	4052
   208   000000                     _T0CON0bits	set	4053
   209   000000                     _T0CON1bits	set	4054
   210   000000                     _T2CLKCONbits	set	4031
   211   000000                     _T2HLTbits	set	4030
   212   000000                     _INTCONbits	set	4082
   213   000000                     _PIE4bits	set	3629
   214   000000                     _PIR0bits	set	3635
   215                           
   216                           	psect	smallconst
   217   000E00                     __psmallconst:
   218                           	callstack 0
   219   000E00  00                 	db	0
   220   000E01                     STR_10:
   221                           
   222                           ; BSR set to: 14
   223   000E01  43                 	db	67	;'C'
   224   000E02  6F                 	db	111	;'o'
   225   000E03  6C                 	db	108	;'l'
   226   000E04  6F                 	db	111	;'o'
   227   000E05  75                 	db	117	;'u'
   228   000E06  72                 	db	114	;'r'
   229   000E07  20                 	db	32
   230   000E08  69                 	db	105	;'i'
   231   000E09  73                 	db	115	;'s'
   232   000E0A  20                 	db	32
   233   000E0B  25                 	db	37
   234   000E0C  73                 	db	115	;'s'
   235   000E0D  20                 	db	32
   236   000E0E  20                 	db	32
   237   000E0F  0D                 	db	13
   238   000E10  00                 	db	0
   239   000E11                     STR_8:
   240                           
   241                           ; BSR set to: 14
   242   000E11  4C                 	db	76	;'L'
   243   000E12  69                 	db	105	;'i'
   244   000E13  67                 	db	103	;'g'
   245   000E14  68                 	db	104	;'h'
   246   000E15  74                 	db	116	;'t'
   247   000E16  20                 	db	32
   248   000E17  42                 	db	66	;'B'
   249   000E18  6C                 	db	108	;'l'
   250   000E19  75                 	db	117	;'u'
   251   000E1A  65                 	db	101	;'e'
   252   000E1B  00                 	db	0
   253   000E1C                     STR_4:
   254                           
   255                           ; BSR set to: 14
   256   000E1C  44                 	db	68	;'D'
   257   000E1D  61                 	db	97	;'a'
   258   000E1E  72                 	db	114	;'r'
   259   000E1F  6B                 	db	107	;'k'
   260   000E20  20                 	db	32
   261   000E21  42                 	db	66	;'B'
   262   000E22  6C                 	db	108	;'l'
   263   000E23  75                 	db	117	;'u'
   264   000E24  65                 	db	101	;'e'
   265   000E25  00                 	db	0
   266   000E26                     STR_9:
   267                           
   268                           ; BSR set to: 14
   269   000E26  45                 	db	69	;'E'
   270   000E27  67                 	db	103	;'g'
   271   000E28  67                 	db	103	;'g'
   272   000E29  73                 	db	115	;'s'
   273   000E2A  68                 	db	104	;'h'
   274   000E2B  65                 	db	101	;'e'
   275   000E2C  6C                 	db	108	;'l'
   276   000E2D  6C                 	db	108	;'l'
   277   000E2E  00                 	db	0
   278   000E2F                     STR_7:
   279                           
   280                           ; BSR set to: 14
   281   000E2F  4F                 	db	79	;'O'
   282   000E30  72                 	db	114	;'r'
   283   000E31  61                 	db	97	;'a'
   284   000E32  6E                 	db	110	;'n'
   285   000E33  67                 	db	103	;'g'
   286   000E34  65                 	db	101	;'e'
   287   000E35  00                 	db	0
   288   000E36                     STR_5:
   289                           
   290                           ; BSR set to: 14
   291   000E36  59                 	db	89	;'Y'
   292   000E37  65                 	db	101	;'e'
   293   000E38  6C                 	db	108	;'l'
   294   000E39  6C                 	db	108	;'l'
   295   000E3A  6F                 	db	111	;'o'
   296   000E3B  77                 	db	119	;'w'
   297   000E3C  00                 	db	0
   298   000E3D                     STR_3:
   299                           
   300                           ; BSR set to: 14
   301   000E3D  47                 	db	71	;'G'
   302   000E3E  72                 	db	114	;'r'
   303   000E3F  65                 	db	101	;'e'
   304   000E40  65                 	db	101	;'e'
   305   000E41  6E                 	db	110	;'n'
   306   000E42  00                 	db	0
   307   000E43                     STR_6:
   308                           
   309                           ; BSR set to: 14
   310   000E43  50                 	db	80	;'P'
   311   000E44  69                 	db	105	;'i'
   312   000E45  6E                 	db	110	;'n'
   313   000E46  6B                 	db	107	;'k'
   314   000E47  00                 	db	0
   315   000E48                     STR_11:
   316                           
   317                           ; BSR set to: 14
   318   000E48  6C                 	db	108	;'l'
   319   000E49  6C                 	db	108	;'l'
   320   000E4A  73                 	db	115	;'s'
   321   000E4B  00                 	db	0
   322   000E4C                     STR_2:
   323                           
   324                           ; BSR set to: 14
   325   000E4C  52                 	db	82	;'R'
   326   000E4D  65                 	db	101	;'e'
   327   000E4E  64                 	db	100	;'d'
   328   000E4F  00                 	db	0
   329   000E50  00                 	db	0	; dummy byte at the end
   330   000000                     
   331                           ; #config settings
   332                           
   333                           	psect	cinit
   334   00430A                     __pcinit:
   335                           	callstack 0
   336   00430A                     start_initialization:
   337                           	callstack 0
   338   00430A                     __initialization:
   339                           	callstack 0
   340                           
   341                           ; Initialize objects allocated to BANK1 (15 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343   00430A  0ED6               	movlw	low __pidataBANK1
   344   00430C  6EF6               	movwf	tblptrl,c
   345   00430E  0E48               	movlw	high __pidataBANK1
   346   004310  6EF7               	movwf	tblptrh,c
   347   004312  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348   004314  6EF8               	movwf	tblptru,c
   349   004316  EE01  F095         	lfsr	0,__pdataBANK1
   350   00431A  EE10 F00F          	lfsr	1,15
   351   00431E                     copy_data0:
   352   00431E  0009               	tblrd		*+
   353   004320  CFF5 FFEE          	movff	tablat,postinc0
   354   004324  50E5               	movf	postdec1,w,c
   355   004326  50E1               	movf	fsr1l,w,c
   356   004328  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360   00432A  0E2A               	movlw	low __pidataBANK0
   361   00432C  6EF6               	movwf	tblptrl,c
   362   00432E  0E49               	movlw	high __pidataBANK0
   363   004330  6EF7               	movwf	tblptrh,c
   364   004332  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365   004334  6EF8               	movwf	tblptru,c
   366   004336  0009               	tblrd		*+	;fetch initializer
   367   004338  CFF5 F0FE          	movff	tablat,__pdataBANK0
   368                           
   369                           ; Clear objects allocated to BANK1 (149 bytes)
   370   00433C  EE01  F000         	lfsr	0,__pbssBANK1
   371   004340  0E95               	movlw	149
   372   004342                     clear_0:
   373   004342  6AEE               	clrf	postinc0,c
   374   004344  06E8               	decf	wreg,f,c
   375   004346  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (14 bytes)
   378   004348  EE00  F0F0         	lfsr	0,__pbssBANK0
   379   00434C  0E0E               	movlw	14
   380   00434E                     clear_1:
   381   00434E  6AEE               	clrf	postinc0,c
   382   004350  06E8               	decf	wreg,f,c
   383   004352  E1FD               	bnz	clear_1
   384   004354                     end_of_initialization:
   385                           	callstack 0
   386   004354                     __end_of__initialization:
   387                           	callstack 0
   388   004354  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389   004356  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390   004358  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391   00435A  6EF8               	movwf	tblptru,c
   392   00435C  0100               	movlb	0
   393   00435E  EF16  F015         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	bssBANK0
   396   0000F0                     __pbssBANK0:
   397                           	callstack 0
   398   0000F0                     _retracingDone:
   399                           	callstack 0
   400   0000F0                     	ds	2
   401   0000F2                     _movementCount:
   402                           	callstack 0
   403   0000F2                     	ds	2
   404   0000F4                     _flags:
   405                           	callstack 0
   406   0000F4                     	ds	1
   407   0000F5                     _motorL:
   408                           	callstack 0
   409   0000F5                     	ds	9
   410                           
   411                           	psect	dataBANK0
   412   0000FE                     __pdataBANK0:
   413                           	callstack 0
   414   0000FE                     _ForwardFlag:
   415                           	callstack 0
   416   0000FE                     	ds	1
   417                           
   418                           	psect	bssBANK1
   419   000100                     __pbssBANK1:
   420                           	callstack 0
   421   000100                     	ds	32
   422   000120                     _width:
   423                           	callstack 0
   424   000120                     	ds	2
   425   000122                     _prec:
   426                           	callstack 0
   427   000122                     	ds	2
   428   000124                     _maxTime:
   429                           	callstack 0
   430   000124                     	ds	2
   431   000126                     _timerMemory:
   432                           	callstack 0
   433   000126                     	ds	40
   434   00014E                     _movementMemory:
   435                           	callstack 0
   436   00014E                     	ds	40
   437   000176                     _colorf:
   438                           	callstack 0
   439   000176                     	ds	22
   440   00018C                     _motorR:
   441                           	callstack 0
   442   00018C                     	ds	9
   443                           
   444                           	psect	dataBANK1
   445   000195                     __pdataBANK1:
   446                           	callstack 0
   447   000195                     stoa@F1144:
   448                           	callstack 0
   449   000195                     	ds	7
   450   00019C                     __halfsquare:
   451                           	callstack 0
   452   00019C                     	ds	2
   453   00019E                     __1square:
   454                           	callstack 0
   455   00019E                     	ds	2
   456   0001A0                     __45drightdelay:
   457                           	callstack 0
   458   0001A0                     	ds	2
   459   0001A2                     __45dleftdelay:
   460                           	callstack 0
   461   0001A2                     	ds	2
   462                           
   463                           	psect	cstackBANK0
   464   000060                     __pcstackBANK0:
   465                           	callstack 0
   466   000060                     ___flmul@sign:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x0
   470   000060                     	ds	1
   471   000061                     ___flmul@grs:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x1
   475   000061                     	ds	4
   476   000065                     ___flmul@aexp:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x5
   480   000065                     	ds	1
   481   000066                     ___flmul@bexp:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x6
   485   000066                     	ds	1
   486   000067                     ___flmul@prod:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x7
   490   000067                     	ds	4
   491   00006B                     ___flmul@temp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xB
   495   00006B                     	ds	2
   496   00006D                     ___fltol@sign1:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0xD
   500   00006D                     	ds	1
   501   00006E                     ___fltol@exp1:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xE
   505   00006E                     	ds	1
   506   00006F                     ?_getTimerValue:
   507                           	callstack 0
   508   00006F                     RGB2Hue@cf:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xF
   512   00006F                     	ds	2
   513   000071                     ??_getTimerValue:
   514   000071                     ??_RGB2Hue:
   515                           
   516                           ; 1 bytes @ 0x11
   517   000071                     	ds	2
   518   000073                     getTimerValue@timerCount:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x13
   522   000073                     	ds	2
   523   000075                     White@mL:
   524                           	callstack 0
   525   000075                     memoryUpdateTime@movementCount:
   526                           	callstack 0
   527   000075                     _RGB2Hue$3169:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x15
   531   000075                     	ds	2
   532   000077                     White@mR:
   533                           	callstack 0
   534   000077                     memoryUpdateTime@timerMemory:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x17
   538   000077                     	ds	2
   539   000079                     RGB2Hue@max:
   540                           	callstack 0
   541   000079                     White@movementCount:
   542                           	callstack 0
   543   000079                     memoryUpdateTime@timerVal:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x19
   547   000079                     	ds	2
   548   00007B                     RGB2Hue@min:
   549                           	callstack 0
   550   00007B                     White@movementMemory:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1B
   554   00007B                     	ds	2
   555   00007D                     White@timerMemory:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1D
   559   00007D                     	ds	2
   560   00007F                     ??_White:
   561                           
   562                           ; 1 bytes @ 0x1F
   563   00007F                     	ds	2
   564   000081                     White@tempTimer:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x21
   568   000081                     	ds	2
   569   000083                     White@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x23
   573   000083                     	ds	2
   574   000085                     Colour2Action@cf:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x25
   578   000085                     	ds	2
   579   000087                     
   580                           ; 1 bytes @ 0x27
   581   000087                     	ds	2
   582   000089                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x29
   585   000089                     	ds	2
   586   00008B                     main@data:
   587                           	callstack 0
   588                           
   589                           ; 100 bytes @ 0x2B
   590   00008B                     	ds	100
   591   0000EF                     main@wall:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x8F
   595   0000EF                     	ds	1
   596                           
   597                           	psect	cstackCOMRAM
   598   000001                     __pcstackCOMRAM:
   599                           	callstack 0
   600   000001                     ??_I2C_2_Master_Idle:
   601   000001                     ?_strlen:
   602                           	callstack 0
   603   000001                     ?_strncmp:
   604                           	callstack 0
   605   000001                     ?___wmul:
   606                           	callstack 0
   607   000001                     ClickLEDOn@power:
   608                           	callstack 0
   609   000001                     sendCharSerial4@charToSend:
   610                           	callstack 0
   611   000001                     initDCmotorsPWM@PWMperiod:
   612                           	callstack 0
   613   000001                     memoryUpdateMovement@cf:
   614                           	callstack 0
   615   000001                     ___wmul@multiplier:
   616                           	callstack 0
   617   000001                     fputc@c:
   618                           	callstack 0
   619   000001                     strlen@s:
   620                           	callstack 0
   621   000001                     strncmp@_l:
   622                           	callstack 0
   623   000001                     ___fleq@ff1:
   624                           	callstack 0
   625   000001                     ___flge@ff1:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x0
   629   000001                     	ds	1
   630   000002                     ??_I2C_2_Master_Read:
   631   000002                     I2C_2_Master_Write@data_byte:
   632                           	callstack 0
   633   000002                     sendStringSerial4@string:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x1
   637   000002                     	ds	1
   638   000003                     color_writetoaddr@value:
   639                           	callstack 0
   640   000003                     I2C_2_Master_Read@ack:
   641                           	callstack 0
   642   000003                     memoryUpdateMovement@movementCount:
   643                           	callstack 0
   644   000003                     ___wmul@multiplicand:
   645                           	callstack 0
   646   000003                     fputc@fp:
   647                           	callstack 0
   648   000003                     strlen@a:
   649                           	callstack 0
   650   000003                     strncmp@_r:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2
   654   000003                     	ds	1
   655   000004                     color_writetoaddr@address:
   656                           	callstack 0
   657   000004                     I2C_2_Master_Read@tmp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x3
   661   000004                     	ds	1
   662   000005                     ??_fputc:
   663   000005                     ??_color_click_init:
   664   000005                     ?_color_read_Red:
   665                           	callstack 0
   666   000005                     ?_color_read_Green:
   667                           	callstack 0
   668   000005                     ?_color_read_Blue:
   669                           	callstack 0
   670   000005                     ?_color_read_Clear:
   671                           	callstack 0
   672   000005                     memoryUpdateMovement@movementMemory:
   673                           	callstack 0
   674   000005                     ___wmul@product:
   675                           	callstack 0
   676   000005                     strncmp@n:
   677                           	callstack 0
   678   000005                     ___fleq@ff2:
   679                           	callstack 0
   680   000005                     ___flge@ff2:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x4
   684   000005                     	ds	2
   685   000007                     ??_strncmp:
   686   000007                     ??_color_read_Red:
   687   000007                     ??_color_read_Green:
   688   000007                     ??_color_read_Blue:
   689   000007                     ??_color_read_Clear:
   690   000007                     ?___lwdiv:
   691                           	callstack 0
   692   000007                     memoryUpdateMovement@colourcode:
   693                           	callstack 0
   694   000007                     ___lwdiv@dividend:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x6
   698   000007                     	ds	1
   699   000008                     strncmp@l:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x7
   703   000008                     	ds	1
   704   000009                     ??___fleq:
   705   000009                     ??___flge:
   706   000009                     ___lwdiv@divisor:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x8
   710   000009                     	ds	1
   711   00000A                     color_read_Red@tmp:
   712                           	callstack 0
   713   00000A                     color_read_Green@tmp:
   714                           	callstack 0
   715   00000A                     color_read_Blue@tmp:
   716                           	callstack 0
   717   00000A                     color_read_Clear@tmp:
   718                           	callstack 0
   719   00000A                     stoa@fp:
   720                           	callstack 0
   721   00000A                     strncmp@r:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x9
   725   00000A                     	ds	1
   726   00000B                     ___lwdiv@quotient:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0xA
   730   00000B                     	ds	1
   731   00000C                     ?___xxtofl:
   732                           	callstack 0
   733   00000C                     stoa@s:
   734                           	callstack 0
   735   00000C                     ___xxtofl@val:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0xB
   739   00000C                     	ds	1
   740   00000D                     ?_Hue2Colour:
   741                           	callstack 0
   742   00000D                     ___lwdiv@counter:
   743                           	callstack 0
   744   00000D                     Hue2Colour@cf:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0xC
   748   00000D                     	ds	1
   749   00000E                     ??_stoa:
   750   00000E                     setMotorPWM@m:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0xD
   754   00000E                     	ds	1
   755   00000F                     Hue2Colour@colourname:
   756                           	callstack 0
   757   00000F                     stoa@nuls:
   758                           	callstack 0
   759                           
   760                           ; 7 bytes @ 0xE
   761   00000F                     	ds	1
   762   000010                     ??_setMotorPWM:
   763   000010                     ??___xxtofl:
   764                           
   765                           ; 1 bytes @ 0xF
   766   000010                     	ds	2
   767   000012                     setMotorPWM@posDuty:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x11
   771   000012                     	ds	1
   772   000013                     setMotorPWM@negDuty:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x12
   776   000013                     	ds	1
   777   000014                     ___xxtofl@sign:
   778                           	callstack 0
   779   000014                     stop@mL:
   780                           	callstack 0
   781   000014                     turnLeft@mL:
   782                           	callstack 0
   783   000014                     turnRight@mL:
   784                           	callstack 0
   785   000014                     fullSpeedAhead@mL:
   786                           	callstack 0
   787   000014                     fullSpeedReverse@mL:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x13
   791   000014                     	ds	1
   792   000015                     ___xxtofl@exp:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x14
   796   000015                     	ds	1
   797   000016                     stop@mR:
   798                           	callstack 0
   799   000016                     turnLeft@mR:
   800                           	callstack 0
   801   000016                     turnRight@mR:
   802                           	callstack 0
   803   000016                     fullSpeedAhead@mR:
   804                           	callstack 0
   805   000016                     fullSpeedReverse@mR:
   806                           	callstack 0
   807   000016                     stoa@w:
   808                           	callstack 0
   809   000016                     ___xxtofl@arg:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x15
   813   000016                     	ds	2
   814   000018                     ??_fullSpeedAhead:
   815   000018                     ??_stop:
   816   000018                     ??_fullSpeedReverse:
   817   000018                     turnLeft@i:
   818                           	callstack 0
   819   000018                     turnRight@i:
   820                           	callstack 0
   821   000018                     stoa@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x17
   825   000018                     	ds	1
   826   000019                     fullSpeedAhead@i:
   827                           	callstack 0
   828   000019                     fullSpeedReverse@i:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x18
   832   000019                     	ds	1
   833   00001A                     ?___fladd:
   834                           	callstack 0
   835   00001A                     colour_read_all@cf:
   836                           	callstack 0
   837   00001A                     Left45@mL:
   838                           	callstack 0
   839   00001A                     Right45@mL:
   840                           	callstack 0
   841   00001A                     stoa@cp:
   842                           	callstack 0
   843   00001A                     ___fladd@b:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x19
   847   00001A                     	ds	1
   848   00001B                     reverseHalfSquare@mL:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x1A
   852   00001B                     	ds	1
   853   00001C                     Left45@mR:
   854                           	callstack 0
   855   00001C                     Right45@mR:
   856                           	callstack 0
   857   00001C                     stoa@l:
   858                           	callstack 0
   859   00001C                     colour_read_all@R:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x1B
   863   00001C                     	ds	1
   864   00001D                     reverseHalfSquare@mR:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x1C
   868   00001D                     	ds	1
   869   00001E                     ??_Left45:
   870   00001E                     ??_Right45:
   871   00001E                     stoa@p:
   872                           	callstack 0
   873   00001E                     ___fladd@a:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x1D
   877   00001E                     	ds	1
   878   00001F                     ??_reverseHalfSquare:
   879                           
   880                           ; 1 bytes @ 0x1E
   881   00001F                     	ds	1
   882   000020                     rotate180left@mL:
   883                           	callstack 0
   884   000020                     vfpfcnvrt@fp:
   885                           	callstack 0
   886   000020                     colour_read_all@G:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x1F
   890   000020                     	ds	1
   891   000021                     Red_R90@mL:
   892                           	callstack 0
   893   000021                     Green_L90@mL:
   894                           	callstack 0
   895   000021                     Yellow_rev1_R90@mL:
   896                           	callstack 0
   897   000021                     Pink_rev1_L90@mL:
   898                           	callstack 0
   899   000021                     Orange_R135@mL:
   900                           	callstack 0
   901   000021                     LightBlue_L135@mL:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x20
   905   000021                     	ds	1
   906   000022                     ??___fladd:
   907   000022                     rotate180left@mR:
   908                           	callstack 0
   909   000022                     vfpfcnvrt@fmt:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x21
   913   000022                     	ds	1
   914   000023                     Red_R90@mR:
   915                           	callstack 0
   916   000023                     Green_L90@mR:
   917                           	callstack 0
   918   000023                     Yellow_rev1_R90@mR:
   919                           	callstack 0
   920   000023                     Pink_rev1_L90@mR:
   921                           	callstack 0
   922   000023                     Orange_R135@mR:
   923                           	callstack 0
   924   000023                     LightBlue_L135@mR:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x22
   928   000023                     	ds	1
   929   000024                     Blue_T180@mL:
   930                           	callstack 0
   931   000024                     vfpfcnvrt@ap:
   932                           	callstack 0
   933   000024                     colour_read_all@B:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x23
   937   000024                     	ds	1
   938   000025                     ??_Yellow_rev1_R90:
   939   000025                     ??_Pink_rev1_L90:
   940   000025                     
   941                           ; 1 bytes @ 0x24
   942   000025                     	ds	1
   943   000026                     ??_vfpfcnvrt:
   944   000026                     ___fladd@signs:
   945                           	callstack 0
   946   000026                     Blue_T180@mR:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x25
   950   000026                     	ds	1
   951   000027                     ___fladd@aexp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x26
   955   000027                     	ds	1
   956   000028                     ___fladd@bexp:
   957                           	callstack 0
   958   000028                     _vfpfcnvrt$2880:
   959                           	callstack 0
   960   000028                     colour_read_all@C:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x27
   964   000028                     	ds	1
   965   000029                     ___fladd@grs:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x28
   969   000029                     	ds	1
   970   00002A                     ?_vfprintf:
   971                           	callstack 0
   972   00002A                     ?___flsub:
   973                           	callstack 0
   974   00002A                     vfprintf@fp:
   975                           	callstack 0
   976   00002A                     ___flsub@b:
   977                           	callstack 0
   978                           
   979                           ; 4 bytes @ 0x29
   980   00002A                     	ds	2
   981   00002C                     vfprintf@fmt:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x2B
   985   00002C                     	ds	2
   986   00002E                     vfprintf@ap:
   987                           	callstack 0
   988   00002E                     ___flsub@a:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x2D
   992   00002E                     	ds	2
   993   000030                     vfprintf@cfmt:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x2F
   997   000030                     	ds	2
   998   000032                     ?_sprintf:
   999                           	callstack 0
  1000   000032                     ?___fldiv:
  1001                           	callstack 0
  1002   000032                     sprintf@s:
  1003                           	callstack 0
  1004   000032                     ___fldiv@b:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x31
  1008   000032                     	ds	2
  1009   000034                     sprintf@fmt:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x33
  1013   000034                     	ds	2
  1014   000036                     ___fldiv@a:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x35
  1018   000036                     	ds	2
  1019   000038                     sprintf@ap:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x37
  1023   000038                     	ds	2
  1024   00003A                     ??___fldiv:
  1025   00003A                     sprintf@f:
  1026                           	callstack 0
  1027                           
  1028                           ; 11 bytes @ 0x39
  1029   00003A                     	ds	4
  1030   00003E                     ___fldiv@rem:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x3D
  1034   00003E                     	ds	4
  1035   000042                     ___fldiv@sign:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x41
  1039   000042                     	ds	1
  1040   000043                     ___fldiv@new_exp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x42
  1044   000043                     	ds	2
  1045   000045                     Color2String@buf:
  1046                           	callstack 0
  1047   000045                     ___fldiv@grs:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x44
  1051   000045                     	ds	2
  1052   000047                     Color2String@cf:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x46
  1056   000047                     	ds	2
  1057   000049                     ___fldiv@bexp:
  1058                           	callstack 0
  1059   000049                     Color2String@colourname:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x48
  1063   000049                     	ds	1
  1064   00004A                     ___fldiv@aexp:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x49
  1068   00004A                     	ds	1
  1069   00004B                     ?___flmul:
  1070                           	callstack 0
  1071   00004B                     ___flmul@b:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x4A
  1075   00004B                     	ds	4
  1076   00004F                     ___flmul@a:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x4E
  1080   00004F                     	ds	4
  1081   000053                     ??___flmul:
  1082                           
  1083                           ; 1 bytes @ 0x52
  1084   000053                     	ds	4
  1085   000057                     ?___fltol:
  1086                           	callstack 0
  1087   000057                     ___fltol@f1:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x56
  1091   000057                     	ds	4
  1092   00005B                     ??___fltol:
  1093                           
  1094                           ; 1 bytes @ 0x5A
  1095   00005B                     	ds	4
  1096   00005F                     
  1097                           ; 1 bytes @ 0x5E
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 17 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  data          100   43[BANK0 ] unsigned char [100]
  1108 ;;  buf            20    0        unsigned char [20]
  1109 ;;  PWMcycle        2    0        unsigned int 
  1110 ;;  wall            1  143[BANK0 ] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1121 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Totals:         0     103       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;Total ram usage:      103 bytes
  1125 ;; Hardware stack levels required when called: 9
  1126 ;; This function calls:
  1127 ;;		_ClickLEDOn
  1128 ;;		_Color2String
  1129 ;;		_Colour2Action
  1130 ;;		_Hue2Colour
  1131 ;;		_I2C_2_Master_Init
  1132 ;;		_LED_init
  1133 ;;		_RGB2Hue
  1134 ;;		_TimerReset
  1135 ;;		___flge
  1136 ;;		_color_click_init
  1137 ;;		_colour_read_all
  1138 ;;		_fullSpeedAhead
  1139 ;;		_initDCmotorsPWM
  1140 ;;		_initUSART4
  1141 ;;		_memoryUpdateMovement
  1142 ;;		_memoryUpdateTime
  1143 ;;		_stop
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150   002A2C                     __ptext0:
  1151                           	callstack 0
  1152   002A2C                     _main:
  1153                           	callstack 22
  1154   002A2C                     
  1155                           ;main.c: 18:     char data[100];;main.c: 20:     initUSART4();
  1156   002A2C  EC3E  F024         	call	_initUSART4	;wreg free
  1157   002A30                     
  1158                           ;main.c: 21:     color_click_init();
  1159   002A30  EC5E  F023         	call	_color_click_init	;wreg free
  1160   002A34                     
  1161                           ;main.c: 22:     I2C_2_Master_Init();
  1162   002A34  EC02  F024         	call	_I2C_2_Master_Init	;wreg free
  1163   002A38                     
  1164                           ;main.c: 23:     LED_init();
  1165   002A38  EC73  F024         	call	_LED_init	;wreg free
  1166   002A3C                     
  1167                           ;main.c: 25:     initDCmotorsPWM(PWMcycle);
  1168   002A3C  0E00               	movlw	0
  1169   002A3E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1170   002A40  0E63               	movlw	99
  1171   002A42  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1172   002A44  EC06  F01F         	call	_initDCmotorsPWM	;wreg free
  1173   002A48                     
  1174                           ;main.c: 27:     motorL.power=0;
  1175   002A48  0E00               	movlw	0
  1176   002A4A  0100               	movlb	0	; () banked
  1177   002A4C  6FF5               	movwf	_motorL& (0+255),b
  1178   002A4E                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 28:     motorL.direction=1;
  1181   002A4E  0E01               	movlw	1
  1182   002A50  6FF6               	movwf	(_motorL+1)& (0+255),b
  1183   002A52                     
  1184                           ; BSR set to: 0
  1185                           ;main.c: 29:     motorL.brakemode=1;
  1186   002A52  0E01               	movlw	1
  1187   002A54  6FF7               	movwf	(_motorL+2)& (0+255),b
  1188   002A56                     
  1189                           ; BSR set to: 0
  1190                           ;main.c: 30:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1191   002A56  0EAA               	movlw	170
  1192   002A58  6FFA               	movwf	(_motorL+5)& (0+255),b
  1193   002A5A  0E0F               	movlw	15
  1194   002A5C  6FFB               	movwf	(_motorL+6)& (0+255),b
  1195   002A5E                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 31:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1198   002A5E  0EA6               	movlw	166
  1199   002A60  6FFC               	movwf	(_motorL+7)& (0+255),b
  1200   002A62  0E0F               	movlw	15
  1201   002A64  6FFD               	movwf	(_motorL+8)& (0+255),b
  1202   002A66                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 32:     motorL.PWMperiod=PWMcycle;
  1205   002A66  0E00               	movlw	0
  1206   002A68  6FF9               	movwf	(_motorL+4)& (0+255),b
  1207   002A6A  0E63               	movlw	99
  1208   002A6C  6FF8               	movwf	(_motorL+3)& (0+255),b
  1209   002A6E                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 34:     motorR.power=0;
  1212   002A6E  0E00               	movlw	0
  1213   002A70  0101               	movlb	1	; () banked
  1214   002A72  6F8C               	movwf	_motorR& (0+255),b
  1215   002A74                     
  1216                           ; BSR set to: 1
  1217                           ;main.c: 35:     motorR.direction=1;
  1218   002A74  0E01               	movlw	1
  1219   002A76  6F8D               	movwf	(_motorR+1)& (0+255),b
  1220   002A78                     
  1221                           ; BSR set to: 1
  1222                           ;main.c: 36:     motorR.brakemode=1;
  1223   002A78  0E01               	movlw	1
  1224   002A7A  6F8E               	movwf	(_motorR+2)& (0+255),b
  1225   002A7C                     
  1226                           ; BSR set to: 1
  1227                           ;main.c: 37:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1228   002A7C  0E25               	movlw	37
  1229   002A7E  6F91               	movwf	(_motorR+5)& (0+255),b
  1230   002A80  0E0F               	movlw	15
  1231   002A82  6F92               	movwf	(_motorR+6)& (0+255),b
  1232   002A84                     
  1233                           ; BSR set to: 1
  1234                           ;main.c: 38:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1235   002A84  0E21               	movlw	33
  1236   002A86  6F93               	movwf	(_motorR+7)& (0+255),b
  1237   002A88  0E0F               	movlw	15
  1238   002A8A  6F94               	movwf	(_motorR+8)& (0+255),b
  1239   002A8C                     
  1240                           ; BSR set to: 1
  1241                           ;main.c: 39:     motorR.PWMperiod=PWMcycle;
  1242   002A8C  0E00               	movlw	0
  1243   002A8E  6F90               	movwf	(_motorR+4)& (0+255),b
  1244   002A90  0E63               	movlw	99
  1245   002A92  6F8F               	movwf	(_motorR+3)& (0+255),b
  1246   002A94                     
  1247                           ; BSR set to: 1
  1248                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1249   002A94  8486               	bsf	134,2,c	;volatile
  1250   002A96                     
  1251                           ; BSR set to: 1
  1252                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1253   002A96  010E               	movlb	14	; () banked
  1254   002A98  95B4               	bcf	180,2,b	;volatile
  1255   002A9A                     l283:
  1256                           
  1257                           ;main.c: 43:     while(PORTFbits.RF2){
  1258   002A9A  B48E               	btfsc	142,2,c	;volatile
  1259   002A9C  EF52  F015         	goto	u4151
  1260   002AA0  EF54  F015         	goto	u4150
  1261   002AA4                     u4151:
  1262   002AA4  EF4D  F015         	goto	l283
  1263   002AA8                     u4150:
  1264   002AA8                     
  1265                           ;main.c: 45:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1266   002AA8  0E29               	movlw	41
  1267   002AAA  0100               	movlb	0	; () banked
  1268   002AAC  6F8A               	movwf	(??_main+1)& (0+255),b
  1269   002AAE  0E96               	movlw	150
  1270   002AB0  6F89               	movwf	??_main& (0+255),b
  1271   002AB2  0E7F               	movlw	127
  1272   002AB4                     u4207:
  1273   002AB4  2EE8               	decfsz	wreg,f,c
  1274   002AB6  D7FE               	bra	u4207
  1275   002AB8  2F89               	decfsz	??_main& (0+255),f,b
  1276   002ABA  D7FC               	bra	u4207
  1277   002ABC  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  1278   002ABE  D7FA               	bra	u4207
  1279   002AC0                     
  1280                           ;main.c: 46:     TimerReset();
  1281   002AC0  EC8F  F024         	call	_TimerReset	;wreg free
  1282   002AC4                     
  1283                           ;main.c: 47:     char wall=0;
  1284   002AC4  0E00               	movlw	0
  1285   002AC6  0100               	movlb	0	; () banked
  1286   002AC8  6FEF               	movwf	main@wall& (0+255),b
  1287   002ACA                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 49:     ClickLEDOn(0);
  1290   002ACA  0E00               	movlw	0
  1291   002ACC  ECB9  F023         	call	_ClickLEDOn
  1292                           
  1293                           ;main.c: 51:     char buf[20];;main.c: 52:     while (!retracingDone){
  1294   002AD0  EF03  F016         	goto	l4452
  1295   002AD4                     l4414:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;main.c: 53:         fullSpeedAhead(&motorL,&motorR);
  1299   002AD4  0EF5               	movlw	low _motorL
  1300   002AD6  6E14               	movwf	fullSpeedAhead@mL^0,c
  1301   002AD8  0E00               	movlw	high _motorL
  1302   002ADA  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1303   002ADC  0E8C               	movlw	low _motorR
  1304   002ADE  6E16               	movwf	fullSpeedAhead@mR^0,c
  1305   002AE0  0E01               	movlw	high _motorR
  1306   002AE2  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1307   002AE4  EC1A  F020         	call	_fullSpeedAhead	;wreg free
  1308                           
  1309                           ;main.c: 55:         while (!wall){
  1310   002AE8  EFC7  F015         	goto	l4432
  1311   002AEC                     l4416:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;main.c: 57:             colour_read_all(&colorf);
  1315   002AEC  0E76               	movlw	low _colorf
  1316   002AEE  6E1A               	movwf	colour_read_all@cf^0,c
  1317   002AF0  0E01               	movlw	high _colorf
  1318   002AF2  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1319   002AF4  EC63  F01A         	call	_colour_read_all	;wreg free
  1320   002AF8                     
  1321                           ;main.c: 58:             Color2String(data,&colorf);
  1322   002AF8  0E8B               	movlw	low main@data
  1323   002AFA  6E45               	movwf	Color2String@buf^0,c
  1324   002AFC  0E00               	movlw	high main@data
  1325   002AFE  6E46               	movwf	(Color2String@buf+1)^0,c
  1326   002B00  0E76               	movlw	low _colorf
  1327   002B02  6E47               	movwf	Color2String@cf^0,c
  1328   002B04  0E01               	movlw	high _colorf
  1329   002B06  6E48               	movwf	(Color2String@cf+1)^0,c
  1330   002B08  EC7E  F023         	call	_Color2String	;wreg free
  1331   002B0C                     
  1332                           ;main.c: 61:              if (colorf.Cf<50)
  1333   002B0C  C182  F001         	movff	_colorf+12,___flge@ff1
  1334   002B10  C183  F002         	movff	_colorf+13,___flge@ff1+1
  1335   002B14  C184  F003         	movff	_colorf+14,___flge@ff1+2
  1336   002B18  C185  F004         	movff	_colorf+15,___flge@ff1+3
  1337   002B1C  0E00               	movlw	0
  1338   002B1E  6E05               	movwf	___flge@ff2^0,c
  1339   002B20  0E00               	movlw	0
  1340   002B22  6E06               	movwf	(___flge@ff2+1)^0,c
  1341   002B24  0E48               	movlw	72
  1342   002B26  6E07               	movwf	(___flge@ff2+2)^0,c
  1343   002B28  0E42               	movlw	66
  1344   002B2A  6E08               	movwf	(___flge@ff2+3)^0,c
  1345   002B2C  ECE6  F01A         	call	___flge	;wreg free
  1346   002B30  B0D8               	btfsc	status,0,c
  1347   002B32  EF9D  F015         	goto	u4161
  1348   002B36  EF9F  F015         	goto	u4160
  1349   002B3A                     u4161:
  1350   002B3A  EFC7  F015         	goto	l4432
  1351   002B3E                     u4160:
  1352   002B3E                     
  1353                           ;main.c: 62:              {;main.c: 69:             memoryUpdateTime(movementCount,timer
      +                          Memory);
  1354   002B3E  C0F2  F075         	movff	_movementCount,memoryUpdateTime@movementCount	;volatile
  1355   002B42  C0F3  F076         	movff	_movementCount+1,memoryUpdateTime@movementCount+1	;volatile
  1356   002B46  0E26               	movlw	low _timerMemory
  1357   002B48  0100               	movlb	0	; () banked
  1358   002B4A  6F77               	movwf	memoryUpdateTime@timerMemory& (0+255),b
  1359   002B4C  0E01               	movlw	high _timerMemory
  1360   002B4E  6F78               	movwf	(memoryUpdateTime@timerMemory+1)& (0+255),b
  1361   002B50  ECEB  F023         	call	_memoryUpdateTime	;wreg free
  1362   002B54                     
  1363                           ;main.c: 71:             wall=1;
  1364   002B54  0E01               	movlw	1
  1365   002B56  0100               	movlb	0	; () banked
  1366   002B58  6FEF               	movwf	main@wall& (0+255),b
  1367   002B5A                     
  1368                           ; BSR set to: 0
  1369                           ;main.c: 72:             ClickLEDOn(1);
  1370   002B5A  0E01               	movlw	1
  1371   002B5C  ECB9  F023         	call	_ClickLEDOn
  1372   002B60                     
  1373                           ;main.c: 73:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1374   002B60  0EA3               	movlw	163
  1375   002B62  0100               	movlb	0	; () banked
  1376   002B64  6F8A               	movwf	(??_main+1)& (0+255),b
  1377   002B66  0E57               	movlw	87
  1378   002B68  6F89               	movwf	??_main& (0+255),b
  1379   002B6A  0E02               	movlw	2
  1380   002B6C                     u4217:
  1381   002B6C  2EE8               	decfsz	wreg,f,c
  1382   002B6E  D7FE               	bra	u4217
  1383   002B70  2F89               	decfsz	??_main& (0+255),f,b
  1384   002B72  D7FC               	bra	u4217
  1385   002B74  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  1386   002B76  D7FA               	bra	u4217
  1387   002B78  F000               	nop	
  1388   002B7A                     
  1389                           ;main.c: 74:             stop(&motorL,&motorR);
  1390   002B7A  0EF5               	movlw	low _motorL
  1391   002B7C  6E14               	movwf	stop@mL^0,c
  1392   002B7E  0E00               	movlw	high _motorL
  1393   002B80  6E15               	movwf	(stop@mL+1)^0,c
  1394   002B82  0E8C               	movlw	low _motorR
  1395   002B84  6E16               	movwf	stop@mR^0,c
  1396   002B86  0E01               	movlw	high _motorR
  1397   002B88  6E17               	movwf	(stop@mR+1)^0,c
  1398   002B8A  EC79  F01D         	call	_stop	;wreg free
  1399   002B8E                     l4432:
  1400                           
  1401                           ;main.c: 55:         while (!wall){
  1402   002B8E  0100               	movlb	0	; () banked
  1403   002B90  51EF               	movf	main@wall& (0+255),w,b
  1404   002B92  B4D8               	btfsc	status,2,c
  1405   002B94  EFCE  F015         	goto	u4171
  1406   002B98  EFD0  F015         	goto	u4170
  1407   002B9C                     u4171:
  1408   002B9C  EF76  F015         	goto	l4416
  1409   002BA0                     u4170:
  1410   002BA0                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 77:         colour_read_all(&colorf);
  1413   002BA0  0E76               	movlw	low _colorf
  1414   002BA2  6E1A               	movwf	colour_read_all@cf^0,c
  1415   002BA4  0E01               	movlw	high _colorf
  1416   002BA6  6E1B               	movwf	(colour_read_all@cf+1)^0,c
  1417   002BA8  EC63  F01A         	call	_colour_read_all	;wreg free
  1418   002BAC                     
  1419                           ;main.c: 78:         wall=0;
  1420   002BAC  0E00               	movlw	0
  1421   002BAE  0100               	movlb	0	; () banked
  1422   002BB0  6FEF               	movwf	main@wall& (0+255),b
  1423   002BB2                     
  1424                           ; BSR set to: 0
  1425                           ;main.c: 79:         ClickLEDOn(0);
  1426   002BB2  0E00               	movlw	0
  1427   002BB4  ECB9  F023         	call	_ClickLEDOn
  1428   002BB8                     
  1429                           ;main.c: 80:         RGB2Hue(&colorf);
  1430   002BB8  0E76               	movlw	low _colorf
  1431   002BBA  0100               	movlb	0	; () banked
  1432   002BBC  6F6F               	movwf	RGB2Hue@cf& (0+255),b
  1433   002BBE  0E01               	movlw	high _colorf
  1434   002BC0  6F70               	movwf	(RGB2Hue@cf+1)& (0+255),b
  1435   002BC2  EC29  F007         	call	_RGB2Hue	;wreg free
  1436   002BC6                     
  1437                           ;main.c: 81:         Hue2Colour(&colorf);
  1438   002BC6  0E76               	movlw	low _colorf
  1439   002BC8  6E0D               	movwf	Hue2Colour@cf^0,c
  1440   002BCA  0E01               	movlw	high _colorf
  1441   002BCC  6E0E               	movwf	(Hue2Colour@cf+1)^0,c
  1442   002BCE  ECBF  F00A         	call	_Hue2Colour	;wreg free
  1443   002BD2                     
  1444                           ;main.c: 82:         memoryUpdateMovement(&colorf,movementCount,movementMemory);
  1445   002BD2  0E76               	movlw	low _colorf
  1446   002BD4  6E01               	movwf	memoryUpdateMovement@cf^0,c
  1447   002BD6  0E01               	movlw	high _colorf
  1448   002BD8  6E02               	movwf	(memoryUpdateMovement@cf+1)^0,c
  1449   002BDA  C0F2  F003         	movff	_movementCount,memoryUpdateMovement@movementCount	;volatile
  1450   002BDE  C0F3  F004         	movff	_movementCount+1,memoryUpdateMovement@movementCount+1	;volatile
  1451   002BE2  0E4E               	movlw	low _movementMemory
  1452   002BE4  6E05               	movwf	memoryUpdateMovement@movementMemory^0,c
  1453   002BE6  0E01               	movlw	high _movementMemory
  1454   002BE8  6E06               	movwf	(memoryUpdateMovement@movementMemory+1)^0,c
  1455   002BEA  ECD3  F023         	call	_memoryUpdateMovement	;wreg free
  1456   002BEE                     
  1457                           ;main.c: 83:         Colour2Action(&colorf);
  1458   002BEE  0E76               	movlw	low _colorf
  1459   002BF0  0100               	movlb	0	; () banked
  1460   002BF2  6F85               	movwf	Colour2Action@cf& (0+255),b
  1461   002BF4  0E01               	movlw	high _colorf
  1462   002BF6  6F86               	movwf	(Colour2Action@cf+1)& (0+255),b
  1463   002BF8  EC0F  F016         	call	_Colour2Action	;wreg free
  1464   002BFC                     
  1465                           ;main.c: 84:         TimerReset();
  1466   002BFC  EC8F  F024         	call	_TimerReset	;wreg free
  1467   002C00                     
  1468                           ;main.c: 85:         movementCount++;
  1469   002C00  0100               	movlb	0	; () banked
  1470   002C02  4BF2               	infsnz	_movementCount& (0+255),f,b	;volatile
  1471   002C04  2BF3               	incf	(_movementCount+1)& (0+255),f,b	;volatile
  1472   002C06                     l4452:
  1473                           
  1474                           ;main.c: 52:     while (!retracingDone){
  1475   002C06  0100               	movlb	0	; () banked
  1476   002C08  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  1477   002C0A  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  1478   002C0C  B4D8               	btfsc	status,2,c
  1479   002C0E  EF0B  F016         	goto	u4181
  1480   002C12  EF0D  F016         	goto	u4180
  1481   002C16                     u4181:
  1482   002C16  EF6A  F015         	goto	l4414
  1483   002C1A                     u4180:
  1484   002C1A                     
  1485                           ; BSR set to: 0
  1486   002C1A  EF16  F000         	goto	start
  1487   002C1E                     __end_of_main:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _memoryUpdateTime *****************
  1491 ;; Defined at:
  1492 ;;		line 16 in file "memory.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  movementCoun    2   21[BANK0 ] volatile unsigned int 
  1495 ;;  timerMemory     2   23[BANK0 ] PTR volatile unsigned in
  1496 ;;		 -> timerMemory(40), 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  timerVal        2   25[BANK0 ] unsigned int 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1508 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;Total ram usage:        6 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 3
  1515 ;; This function calls:
  1516 ;;		_getTimerValue
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text1
  1523   0047D6                     __ptext1:
  1524                           	callstack 0
  1525   0047D6                     _memoryUpdateTime:
  1526                           	callstack 27
  1527   0047D6  EC50  F021         	call	_getTimerValue	;wreg free
  1528   0047DA  0E18               	movlw	24
  1529   0047DC  0100               	movlb	0	; () banked
  1530   0047DE  256F               	addwf	?_getTimerValue& (0+255),w,b
  1531   0047E0  6F79               	movwf	memoryUpdateTime@timerVal& (0+255),b
  1532   0047E2  0EFC               	movlw	252
  1533   0047E4  2170               	addwfc	(?_getTimerValue+1)& (0+255),w,b
  1534   0047E6  6F7A               	movwf	(memoryUpdateTime@timerVal+1)& (0+255),b
  1535   0047E8                     
  1536                           ; BSR set to: 0
  1537                           ;memory.c: 19:     timerMemory[movementCount] = timerVal;
  1538   0047E8  90D8               	bcf	status,0,c
  1539   0047EA  3575               	rlcf	memoryUpdateTime@movementCount& (0+255),w,b	;volatile
  1540   0047EC  6ED9               	movwf	fsr2l,c
  1541   0047EE  3576               	rlcf	(memoryUpdateTime@movementCount+1)& (0+255),w,b	;volatile
  1542   0047F0  6EDA               	movwf	fsr2h,c
  1543   0047F2  5177               	movf	memoryUpdateTime@timerMemory& (0+255),w,b
  1544   0047F4  26D9               	addwf	fsr2l,f,c
  1545   0047F6  5178               	movf	(memoryUpdateTime@timerMemory+1)& (0+255),w,b
  1546   0047F8  22DA               	addwfc	fsr2h,f,c
  1547   0047FA  C079  FFDE         	movff	memoryUpdateTime@timerVal,postinc2
  1548   0047FE  C07A  FFDD         	movff	memoryUpdateTime@timerVal+1,postdec2
  1549   004802                     
  1550                           ; BSR set to: 0
  1551   004802  0012               	return		;funcret
  1552   004804                     __end_of_memoryUpdateTime:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _memoryUpdateMovement *****************
  1556 ;; Defined at:
  1557 ;;		line 10 in file "memory.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  cf              2    0[COMRAM] PTR struct RGBC_rel
  1560 ;;		 -> colorf(22), 
  1561 ;;  movementCoun    2    2[COMRAM] volatile unsigned int 
  1562 ;;  movementMemo    2    4[COMRAM] PTR volatile unsigned in
  1563 ;;		 -> movementMemory(40), 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  colourcode      2    6[COMRAM] int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1575 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;Total ram usage:        8 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text2
  1590   0047A6                     __ptext2:
  1591                           	callstack 0
  1592   0047A6                     _memoryUpdateMovement:
  1593                           	callstack 29
  1594   0047A6                     
  1595                           ;memory.c: 10: void memoryUpdateMovement(struct RGBC_rel *cf, volatile unsigned int move
      +                          mentCount, volatile unsigned int *movementMemory);memory.c: 11: {;memory.c: 13:     int 
      +                          colourcode = cf->colourindex;
  1596   0047A6  EE20 F014          	lfsr	2,20
  1597   0047AA  5001               	movf	memoryUpdateMovement@cf^0,w,c
  1598   0047AC  26D9               	addwf	fsr2l,f,c
  1599   0047AE  5002               	movf	(memoryUpdateMovement@cf+1)^0,w,c
  1600   0047B0  22DA               	addwfc	fsr2h,f,c
  1601   0047B2  CFDE F007          	movff	postinc2,memoryUpdateMovement@colourcode
  1602   0047B6  CFDD F008          	movff	postdec2,memoryUpdateMovement@colourcode+1
  1603                           
  1604                           ;memory.c: 14:     movementMemory[movementCount] = colourcode;
  1605   0047BA  90D8               	bcf	status,0,c
  1606   0047BC  3403               	rlcf	memoryUpdateMovement@movementCount^0,w,c	;volatile
  1607   0047BE  6ED9               	movwf	fsr2l,c
  1608   0047C0  3404               	rlcf	(memoryUpdateMovement@movementCount+1)^0,w,c	;volatile
  1609   0047C2  6EDA               	movwf	fsr2h,c
  1610   0047C4  5005               	movf	memoryUpdateMovement@movementMemory^0,w,c
  1611   0047C6  26D9               	addwf	fsr2l,f,c
  1612   0047C8  5006               	movf	(memoryUpdateMovement@movementMemory+1)^0,w,c
  1613   0047CA  22DA               	addwfc	fsr2h,f,c
  1614   0047CC  C007  FFDE         	movff	memoryUpdateMovement@colourcode,postinc2
  1615   0047D0  C008  FFDD         	movff	memoryUpdateMovement@colourcode+1,postdec2
  1616   0047D4  0012               	return		;funcret
  1617   0047D6                     __end_of_memoryUpdateMovement:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _initUSART4 *****************
  1621 ;; Defined at:
  1622 ;;		line 7 in file "serial.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text3
  1651   00487C                     __ptext3:
  1652                           	callstack 0
  1653   00487C                     _initUSART4:
  1654                           	callstack 29
  1655   00487C                     
  1656                           ;serial.c: 8:     TRISCbits.TRISC4=1;
  1657   00487C  8883               	bsf	131,4,c	;volatile
  1658                           
  1659                           ;serial.c: 9:     TRISCbits.TRISC1=1;
  1660   00487E  8283               	bsf	131,1,c	;volatile
  1661   004880                     
  1662                           ;serial.c: 10:     RC0PPS = 0x12;
  1663   004880  0E12               	movlw	18
  1664   004882  010E               	movlb	14	; () banked
  1665   004884  6F62               	movwf	98,b	;volatile
  1666                           
  1667                           ;serial.c: 11:     RX4PPS = 0x11;
  1668   004886  0E11               	movlw	17
  1669   004888  6F15               	movwf	21,b	;volatile
  1670   00488A                     
  1671                           ; BSR set to: 14
  1672                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1673   00488A  97E9               	bcf	233,3,b	;volatile
  1674   00488C                     
  1675                           ; BSR set to: 14
  1676                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1677   00488C  95E8               	bcf	232,2,b	;volatile
  1678                           
  1679                           ;serial.c: 15:     SP4BRGL = 51;
  1680   00488E  0E33               	movlw	51
  1681   004890  6FE5               	movwf	229,b	;volatile
  1682                           
  1683                           ;serial.c: 16:     SP4BRGH = 0;
  1684   004892  0E00               	movlw	0
  1685   004894  6FE6               	movwf	230,b	;volatile
  1686   004896                     
  1687                           ; BSR set to: 14
  1688                           ;serial.c: 18:     RC4STAbits.CREN = 1;
  1689   004896  89E7               	bsf	231,4,b	;volatile
  1690   004898                     
  1691                           ; BSR set to: 14
  1692                           ;serial.c: 19:     TX4STAbits.TXEN = 1;
  1693   004898  8BE8               	bsf	232,5,b	;volatile
  1694   00489A                     
  1695                           ; BSR set to: 14
  1696                           ;serial.c: 20:     RC4STAbits.SPEN = 1;
  1697   00489A  8FE7               	bsf	231,7,b	;volatile
  1698   00489C                     
  1699                           ; BSR set to: 14
  1700   00489C  0012               	return		;funcret
  1701   00489E                     __end_of_initUSART4:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _initDCmotorsPWM *****************
  1705 ;; Defined at:
  1706 ;;		line 11 in file "dc_motor.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;		None
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;Total ram usage:        2 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text4
  1735   003E0C                     __ptext4:
  1736                           	callstack 0
  1737   003E0C                     _initDCmotorsPWM:
  1738                           	callstack 29
  1739   003E0C                     
  1740                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  1741   003E0C  9485               	bcf	133,2,c	;volatile
  1742                           
  1743                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  1744   003E0E  9E83               	bcf	131,7,c	;volatile
  1745                           
  1746                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  1747   003E10  9885               	bcf	133,4,c	;volatile
  1748                           
  1749                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1750   003E12  9C87               	bcf	135,6,c	;volatile
  1751                           
  1752                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1753   003E14  947D               	bcf	125,2,c	;volatile
  1754                           
  1755                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1756   003E16  9E7B               	bcf	123,7,c	;volatile
  1757                           
  1758                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  1759   003E18  987D               	bcf	125,4,c	;volatile
  1760                           
  1761                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1762   003E1A  9C7F               	bcf	127,6,c	;volatile
  1763   003E1C                     
  1764                           ;dc_motor.c: 24:     RE2PPS=0x05;
  1765   003E1C  0E05               	movlw	5
  1766   003E1E  010E               	movlb	14	; () banked
  1767   003E20  6F74               	movwf	116,b	;volatile
  1768                           
  1769                           ;dc_motor.c: 25:     RE4PPS=0x06;
  1770   003E22  0E06               	movlw	6
  1771   003E24  6F76               	movwf	118,b	;volatile
  1772                           
  1773                           ;dc_motor.c: 26:     RC7PPS=0x07;
  1774   003E26  0E07               	movlw	7
  1775   003E28  6F69               	movwf	105,b	;volatile
  1776                           
  1777                           ;dc_motor.c: 27:     RG6PPS=0x08;
  1778   003E2A  0E08               	movlw	8
  1779   003E2C  6F88               	movwf	136,b	;volatile
  1780                           
  1781                           ;dc_motor.c: 30:     T2CONbits.CKPS=0b100;
  1782   003E2E  50BD               	movf	189,w,c	;volatile
  1783   003E30  0B8F               	andlw	-113
  1784   003E32  0940               	iorlw	64
  1785   003E34  6EBD               	movwf	189,c	;volatile
  1786                           
  1787                           ;dc_motor.c: 31:     T2HLTbits.MODE=0b00000;
  1788   003E36  0EE0               	movlw	-32
  1789   003E38  16BE               	andwf	190,f,c	;volatile
  1790                           
  1791                           ;dc_motor.c: 32:     T2CLKCONbits.CS=0b0001;
  1792   003E3A  50BF               	movf	191,w,c	;volatile
  1793   003E3C  0BF0               	andlw	-16
  1794   003E3E  0901               	iorlw	1
  1795   003E40  6EBF               	movwf	191,c	;volatile
  1796   003E42                     
  1797                           ; BSR set to: 14
  1798                           ;dc_motor.c: 35:     T2PR=PWMperiod;
  1799   003E42  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1800   003E46                     
  1801                           ; BSR set to: 14
  1802                           ;dc_motor.c: 36:     T2CONbits.ON=1;
  1803   003E46  8EBD               	bsf	189,7,c	;volatile
  1804                           
  1805                           ;dc_motor.c: 40:     CCPR1H=0;
  1806   003E48  0E00               	movlw	0
  1807   003E4A  6EAA               	movwf	170,c	;volatile
  1808                           
  1809                           ;dc_motor.c: 41:     CCPR2H=0;
  1810   003E4C  0E00               	movlw	0
  1811   003E4E  6EA6               	movwf	166,c	;volatile
  1812                           
  1813                           ;dc_motor.c: 42:     CCPR3H=0;
  1814   003E50  0E00               	movlw	0
  1815   003E52  010F               	movlb	15	; () banked
  1816   003E54  6F25               	movwf	37,b	;volatile
  1817                           
  1818                           ;dc_motor.c: 43:     CCPR4H=0;
  1819   003E56  0E00               	movlw	0
  1820   003E58  6F21               	movwf	33,b	;volatile
  1821                           
  1822                           ;dc_motor.c: 46:     CCPTMRS0bits.C1TSEL=0;
  1823   003E5A  0EFC               	movlw	-4
  1824   003E5C  16AD               	andwf	173,f,c	;volatile
  1825                           
  1826                           ;dc_motor.c: 47:     CCPTMRS0bits.C2TSEL=0;
  1827   003E5E  0EF3               	movlw	-13
  1828   003E60  16AD               	andwf	173,f,c	;volatile
  1829                           
  1830                           ;dc_motor.c: 48:     CCPTMRS0bits.C3TSEL=0;
  1831   003E62  0ECF               	movlw	-49
  1832   003E64  16AD               	andwf	173,f,c	;volatile
  1833                           
  1834                           ;dc_motor.c: 49:     CCPTMRS0bits.C4TSEL=0;
  1835   003E66  0E3F               	movlw	-193
  1836   003E68  16AD               	andwf	173,f,c	;volatile
  1837   003E6A                     
  1838                           ; BSR set to: 15
  1839                           ;dc_motor.c: 52:     CCP1CONbits.FMT=1;
  1840   003E6A  88AB               	bsf	171,4,c	;volatile
  1841                           
  1842                           ;dc_motor.c: 53:     CCP1CONbits.CCP1MODE=0b1100;
  1843   003E6C  50AB               	movf	171,w,c	;volatile
  1844   003E6E  0BF0               	andlw	-16
  1845   003E70  090C               	iorlw	12
  1846   003E72  6EAB               	movwf	171,c	;volatile
  1847   003E74                     
  1848                           ; BSR set to: 15
  1849                           ;dc_motor.c: 54:     CCP1CONbits.EN=1;
  1850   003E74  8EAB               	bsf	171,7,c	;volatile
  1851   003E76                     
  1852                           ; BSR set to: 15
  1853                           ;dc_motor.c: 56:     CCP2CONbits.FMT=1;
  1854   003E76  88A7               	bsf	167,4,c	;volatile
  1855                           
  1856                           ;dc_motor.c: 57:     CCP2CONbits.CCP2MODE=0b1100;
  1857   003E78  50A7               	movf	167,w,c	;volatile
  1858   003E7A  0BF0               	andlw	-16
  1859   003E7C  090C               	iorlw	12
  1860   003E7E  6EA7               	movwf	167,c	;volatile
  1861   003E80                     
  1862                           ; BSR set to: 15
  1863                           ;dc_motor.c: 58:     CCP2CONbits.EN=1;
  1864   003E80  8EA7               	bsf	167,7,c	;volatile
  1865   003E82                     
  1866                           ; BSR set to: 15
  1867                           ;dc_motor.c: 60:     CCP3CONbits.FMT=1;
  1868   003E82  8926               	bsf	38,4,b	;volatile
  1869                           
  1870                           ;dc_motor.c: 61:     CCP3CONbits.CCP3MODE=0b1100;
  1871   003E84  5126               	movf	38,w,b	;volatile
  1872   003E86  0BF0               	andlw	-16
  1873   003E88  090C               	iorlw	12
  1874   003E8A  6F26               	movwf	38,b	;volatile
  1875   003E8C                     
  1876                           ; BSR set to: 15
  1877                           ;dc_motor.c: 62:     CCP3CONbits.EN=1;
  1878   003E8C  8F26               	bsf	38,7,b	;volatile
  1879   003E8E                     
  1880                           ; BSR set to: 15
  1881                           ;dc_motor.c: 64:     CCP4CONbits.FMT=1;
  1882   003E8E  8922               	bsf	34,4,b	;volatile
  1883                           
  1884                           ;dc_motor.c: 65:     CCP4CONbits.CCP4MODE=0b1100;
  1885   003E90  5122               	movf	34,w,b	;volatile
  1886   003E92  0BF0               	andlw	-16
  1887   003E94  090C               	iorlw	12
  1888   003E96  6F22               	movwf	34,b	;volatile
  1889   003E98                     
  1890                           ; BSR set to: 15
  1891                           ;dc_motor.c: 66:     CCP4CONbits.EN=1;
  1892   003E98  8F22               	bsf	34,7,b	;volatile
  1893   003E9A                     
  1894                           ; BSR set to: 15
  1895   003E9A  0012               	return		;funcret
  1896   003E9C                     __end_of_initDCmotorsPWM:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _colour_read_all *****************
  1900 ;; Defined at:
  1901 ;;		line 8 in file "colorfunctions.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  cf              2   25[COMRAM] PTR struct RGBC_rel
  1904 ;;		 -> colorf(22), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  C               4   39[COMRAM] float 
  1907 ;;  B               4   35[COMRAM] float 
  1908 ;;  G               4   31[COMRAM] float 
  1909 ;;  R               4   27[COMRAM] float 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;Total ram usage:       18 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 4
  1926 ;; This function calls:
  1927 ;;		___xxtofl
  1928 ;;		_color_read_Blue
  1929 ;;		_color_read_Clear
  1930 ;;		_color_read_Green
  1931 ;;		_color_read_Red
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text5
  1938   0034C6                     __ptext5:
  1939                           	callstack 0
  1940   0034C6                     _colour_read_all:
  1941                           	callstack 26
  1942   0034C6                     
  1943                           ;colorfunctions.c: 10:     float R = color_read_Red();
  1944   0034C6  EC04  F022         	call	_color_read_Red	;wreg free
  1945   0034CA  C005  F00C         	movff	?_color_read_Red,___xxtofl@val
  1946   0034CE  C006  F00D         	movff	?_color_read_Red+1,___xxtofl@val+1
  1947   0034D2  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1948   0034D4  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1949   0034D6  0E00               	movlw	0
  1950   0034D8  EC04  F017         	call	___xxtofl
  1951   0034DC  C00C  F01C         	movff	?___xxtofl,colour_read_all@R
  1952   0034E0  C00D  F01D         	movff	?___xxtofl+1,colour_read_all@R+1
  1953   0034E4  C00E  F01E         	movff	?___xxtofl+2,colour_read_all@R+2
  1954   0034E8  C00F  F01F         	movff	?___xxtofl+3,colour_read_all@R+3
  1955                           
  1956                           ;colorfunctions.c: 11:     float G= color_read_Green();
  1957   0034EC  EC2C  F022         	call	_color_read_Green	;wreg free
  1958   0034F0  C005  F00C         	movff	?_color_read_Green,___xxtofl@val
  1959   0034F4  C006  F00D         	movff	?_color_read_Green+1,___xxtofl@val+1
  1960   0034F8  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1961   0034FA  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1962   0034FC  0E00               	movlw	0
  1963   0034FE  EC04  F017         	call	___xxtofl
  1964   003502  C00C  F020         	movff	?___xxtofl,colour_read_all@G
  1965   003506  C00D  F021         	movff	?___xxtofl+1,colour_read_all@G+1
  1966   00350A  C00E  F022         	movff	?___xxtofl+2,colour_read_all@G+2
  1967   00350E  C00F  F023         	movff	?___xxtofl+3,colour_read_all@G+3
  1968                           
  1969                           ;colorfunctions.c: 12:     float B= color_read_Blue();
  1970   003512  EC7C  F022         	call	_color_read_Blue	;wreg free
  1971   003516  C005  F00C         	movff	?_color_read_Blue,___xxtofl@val
  1972   00351A  C006  F00D         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1973   00351E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1974   003520  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1975   003522  0E00               	movlw	0
  1976   003524  EC04  F017         	call	___xxtofl
  1977   003528  C00C  F024         	movff	?___xxtofl,colour_read_all@B
  1978   00352C  C00D  F025         	movff	?___xxtofl+1,colour_read_all@B+1
  1979   003530  C00E  F026         	movff	?___xxtofl+2,colour_read_all@B+2
  1980   003534  C00F  F027         	movff	?___xxtofl+3,colour_read_all@B+3
  1981                           
  1982                           ;colorfunctions.c: 13:     float C= color_read_Clear();
  1983   003538  EC54  F022         	call	_color_read_Clear	;wreg free
  1984   00353C  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1985   003540  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1986   003544  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1987   003546  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1988   003548  0E00               	movlw	0
  1989   00354A  EC04  F017         	call	___xxtofl
  1990   00354E  C00C  F028         	movff	?___xxtofl,colour_read_all@C
  1991   003552  C00D  F029         	movff	?___xxtofl+1,colour_read_all@C+1
  1992   003556  C00E  F02A         	movff	?___xxtofl+2,colour_read_all@C+2
  1993   00355A  C00F  F02B         	movff	?___xxtofl+3,colour_read_all@C+3
  1994   00355E                     
  1995                           ;colorfunctions.c: 17:     (cf->Rf)=R;
  1996   00355E  C01A  FFD9         	movff	colour_read_all@cf,fsr2l
  1997   003562  C01B  FFDA         	movff	colour_read_all@cf+1,fsr2h
  1998   003566  C01C  FFDE         	movff	colour_read_all@R,postinc2
  1999   00356A  C01D  FFDE         	movff	colour_read_all@R+1,postinc2
  2000   00356E  C01E  FFDE         	movff	colour_read_all@R+2,postinc2
  2001   003572  C01F  FFDE         	movff	colour_read_all@R+3,postinc2
  2002   003576                     
  2003                           ;colorfunctions.c: 18:     (cf->Bf)=B;
  2004   003576  EE20 F008          	lfsr	2,8
  2005   00357A  501A               	movf	colour_read_all@cf^0,w,c
  2006   00357C  26D9               	addwf	fsr2l,f,c
  2007   00357E  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2008   003580  22DA               	addwfc	fsr2h,f,c
  2009   003582  C024  FFDE         	movff	colour_read_all@B,postinc2
  2010   003586  C025  FFDE         	movff	colour_read_all@B+1,postinc2
  2011   00358A  C026  FFDE         	movff	colour_read_all@B+2,postinc2
  2012   00358E  C027  FFDE         	movff	colour_read_all@B+3,postinc2
  2013   003592                     
  2014                           ;colorfunctions.c: 19:     (cf->Gf)=G;
  2015   003592  EE20 F004          	lfsr	2,4
  2016   003596  501A               	movf	colour_read_all@cf^0,w,c
  2017   003598  26D9               	addwf	fsr2l,f,c
  2018   00359A  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2019   00359C  22DA               	addwfc	fsr2h,f,c
  2020   00359E  C020  FFDE         	movff	colour_read_all@G,postinc2
  2021   0035A2  C021  FFDE         	movff	colour_read_all@G+1,postinc2
  2022   0035A6  C022  FFDE         	movff	colour_read_all@G+2,postinc2
  2023   0035AA  C023  FFDE         	movff	colour_read_all@G+3,postinc2
  2024   0035AE                     
  2025                           ;colorfunctions.c: 20:     (cf->Cf)=C;
  2026   0035AE  EE20 F00C          	lfsr	2,12
  2027   0035B2  501A               	movf	colour_read_all@cf^0,w,c
  2028   0035B4  26D9               	addwf	fsr2l,f,c
  2029   0035B6  501B               	movf	(colour_read_all@cf+1)^0,w,c
  2030   0035B8  22DA               	addwfc	fsr2h,f,c
  2031   0035BA  C028  FFDE         	movff	colour_read_all@C,postinc2
  2032   0035BE  C029  FFDE         	movff	colour_read_all@C+1,postinc2
  2033   0035C2  C02A  FFDE         	movff	colour_read_all@C+2,postinc2
  2034   0035C6  C02B  FFDE         	movff	colour_read_all@C+3,postinc2
  2035   0035CA  0012               	return		;funcret
  2036   0035CC                     __end_of_colour_read_all:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _color_read_Red *****************
  2040 ;; Defined at:
  2041 ;;		line 38 in file "colorclick.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  tmp             2    9[COMRAM] unsigned int 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2    4[COMRAM] unsigned int 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2059 ;;Total ram usage:        7 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 3
  2062 ;; This function calls:
  2063 ;;		_I2C_2_Master_Read
  2064 ;;		_I2C_2_Master_RepStart
  2065 ;;		_I2C_2_Master_Start
  2066 ;;		_I2C_2_Master_Stop
  2067 ;;		_I2C_2_Master_Write
  2068 ;; This function is called by:
  2069 ;;		_colour_read_all
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text6
  2074   004408                     __ptext6:
  2075                           	callstack 0
  2076   004408                     _color_read_Red:
  2077                           	callstack 26
  2078   004408                     
  2079                           ;colorclick.c: 40:  unsigned int tmp;;colorclick.c: 41:  I2C_2_Master_Start();
  2080   004408  EC8A  F024         	call	_I2C_2_Master_Start	;wreg free
  2081                           
  2082                           ;colorclick.c: 42:  I2C_2_Master_Write(0x52 | 0x00);
  2083   00440C  0E52               	movlw	82
  2084   00440E  EC7A  F024         	call	_I2C_2_Master_Write
  2085                           
  2086                           ;colorclick.c: 43:  I2C_2_Master_Write(0xA0 | 0x16);
  2087   004412  0EB6               	movlw	182
  2088   004414  EC7A  F024         	call	_I2C_2_Master_Write
  2089                           
  2090                           ;colorclick.c: 44:  I2C_2_Master_RepStart();
  2091   004418  EC80  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2092                           
  2093                           ;colorclick.c: 45:  I2C_2_Master_Write(0x52 | 0x01);
  2094   00441C  0E53               	movlw	83
  2095   00441E  EC7A  F024         	call	_I2C_2_Master_Write
  2096                           
  2097                           ;colorclick.c: 46:  tmp=I2C_2_Master_Read(1);
  2098   004422  0E01               	movlw	1
  2099   004424  EC3D  F023         	call	_I2C_2_Master_Read
  2100   004428  6E07               	movwf	??_color_read_Red^0,c
  2101   00442A  5007               	movf	??_color_read_Red^0,w,c
  2102   00442C  6E0A               	movwf	color_read_Red@tmp^0,c
  2103   00442E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2104                           
  2105                           ;colorclick.c: 47:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2106   004430  0E00               	movlw	0
  2107   004432  EC3D  F023         	call	_I2C_2_Master_Read
  2108   004436  6E07               	movwf	??_color_read_Red^0,c
  2109   004438  5007               	movf	??_color_read_Red^0,w,c
  2110   00443A  6E09               	movwf	(??_color_read_Red+2)^0,c
  2111   00443C  6A08               	clrf	(??_color_read_Red+1)^0,c
  2112   00443E  500A               	movf	color_read_Red@tmp^0,w,c
  2113   004440  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2114   004442  6E0A               	movwf	color_read_Red@tmp^0,c
  2115   004444  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2116   004446  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2117   004448  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2118                           
  2119                           ;colorclick.c: 48:  I2C_2_Master_Stop();
  2120   00444A  EC85  F024         	call	_I2C_2_Master_Stop	;wreg free
  2121   00444E                     
  2122                           ;colorclick.c: 49:  return tmp;
  2123   00444E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2124   004452  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2125   004456  0012               	return		;funcret
  2126   004458                     __end_of_color_read_Red:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _color_read_Green *****************
  2130 ;; Defined at:
  2131 ;;		line 51 in file "colorclick.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  tmp             2    9[COMRAM] unsigned int 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2    4[COMRAM] unsigned int 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;Total ram usage:        7 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 3
  2152 ;; This function calls:
  2153 ;;		_I2C_2_Master_Read
  2154 ;;		_I2C_2_Master_RepStart
  2155 ;;		_I2C_2_Master_Start
  2156 ;;		_I2C_2_Master_Stop
  2157 ;;		_I2C_2_Master_Write
  2158 ;; This function is called by:
  2159 ;;		_colour_read_all
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text7
  2164   004458                     __ptext7:
  2165                           	callstack 0
  2166   004458                     _color_read_Green:
  2167                           	callstack 26
  2168   004458                     
  2169                           ;colorclick.c: 53:     unsigned int tmp;;colorclick.c: 54:     I2C_2_Master_Start();
  2170   004458  EC8A  F024         	call	_I2C_2_Master_Start	;wreg free
  2171                           
  2172                           ;colorclick.c: 55:     I2C_2_Master_Write(0x52 | 0x00);
  2173   00445C  0E52               	movlw	82
  2174   00445E  EC7A  F024         	call	_I2C_2_Master_Write
  2175                           
  2176                           ;colorclick.c: 56:     I2C_2_Master_Write(0xA0 | 0x18);
  2177   004462  0EB8               	movlw	184
  2178   004464  EC7A  F024         	call	_I2C_2_Master_Write
  2179                           
  2180                           ;colorclick.c: 57:     I2C_2_Master_RepStart();
  2181   004468  EC80  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2182                           
  2183                           ;colorclick.c: 58:     I2C_2_Master_Write(0x52 | 0x01);
  2184   00446C  0E53               	movlw	83
  2185   00446E  EC7A  F024         	call	_I2C_2_Master_Write
  2186                           
  2187                           ;colorclick.c: 59:     tmp=I2C_2_Master_Read(1);
  2188   004472  0E01               	movlw	1
  2189   004474  EC3D  F023         	call	_I2C_2_Master_Read
  2190   004478  6E07               	movwf	??_color_read_Green^0,c
  2191   00447A  5007               	movf	??_color_read_Green^0,w,c
  2192   00447C  6E0A               	movwf	color_read_Green@tmp^0,c
  2193   00447E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2194                           
  2195                           ;colorclick.c: 60:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2196   004480  0E00               	movlw	0
  2197   004482  EC3D  F023         	call	_I2C_2_Master_Read
  2198   004486  6E07               	movwf	??_color_read_Green^0,c
  2199   004488  5007               	movf	??_color_read_Green^0,w,c
  2200   00448A  6E09               	movwf	(??_color_read_Green+2)^0,c
  2201   00448C  6A08               	clrf	(??_color_read_Green+1)^0,c
  2202   00448E  500A               	movf	color_read_Green@tmp^0,w,c
  2203   004490  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2204   004492  6E0A               	movwf	color_read_Green@tmp^0,c
  2205   004494  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2206   004496  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2207   004498  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2208                           
  2209                           ;colorclick.c: 61:     I2C_2_Master_Stop();
  2210   00449A  EC85  F024         	call	_I2C_2_Master_Stop	;wreg free
  2211   00449E                     
  2212                           ;colorclick.c: 62:     return tmp;
  2213   00449E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2214   0044A2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2215   0044A6  0012               	return		;funcret
  2216   0044A8                     __end_of_color_read_Green:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function _color_read_Clear *****************
  2220 ;; Defined at:
  2221 ;;		line 80 in file "colorclick.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  tmp             2    9[COMRAM] unsigned int 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  2    4[COMRAM] unsigned int 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;Total ram usage:        7 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 3
  2242 ;; This function calls:
  2243 ;;		_I2C_2_Master_Read
  2244 ;;		_I2C_2_Master_RepStart
  2245 ;;		_I2C_2_Master_Start
  2246 ;;		_I2C_2_Master_Stop
  2247 ;;		_I2C_2_Master_Write
  2248 ;; This function is called by:
  2249 ;;		_colour_read_all
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text8
  2254   0044A8                     __ptext8:
  2255                           	callstack 0
  2256   0044A8                     _color_read_Clear:
  2257                           	callstack 26
  2258   0044A8                     
  2259                           ;colorclick.c: 82:     unsigned int tmp;;colorclick.c: 83:     I2C_2_Master_Start();
  2260   0044A8  EC8A  F024         	call	_I2C_2_Master_Start	;wreg free
  2261                           
  2262                           ;colorclick.c: 84:     I2C_2_Master_Write(0x52 | 0x00);
  2263   0044AC  0E52               	movlw	82
  2264   0044AE  EC7A  F024         	call	_I2C_2_Master_Write
  2265                           
  2266                           ;colorclick.c: 85:     I2C_2_Master_Write(0xA0 | 0x14);
  2267   0044B2  0EB4               	movlw	180
  2268   0044B4  EC7A  F024         	call	_I2C_2_Master_Write
  2269                           
  2270                           ;colorclick.c: 86:     I2C_2_Master_RepStart();
  2271   0044B8  EC80  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2272                           
  2273                           ;colorclick.c: 87:     I2C_2_Master_Write(0x52 | 0x01);
  2274   0044BC  0E53               	movlw	83
  2275   0044BE  EC7A  F024         	call	_I2C_2_Master_Write
  2276                           
  2277                           ;colorclick.c: 88:     tmp=I2C_2_Master_Read(1);
  2278   0044C2  0E01               	movlw	1
  2279   0044C4  EC3D  F023         	call	_I2C_2_Master_Read
  2280   0044C8  6E07               	movwf	??_color_read_Clear^0,c
  2281   0044CA  5007               	movf	??_color_read_Clear^0,w,c
  2282   0044CC  6E0A               	movwf	color_read_Clear@tmp^0,c
  2283   0044CE  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2284                           
  2285                           ;colorclick.c: 89:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2286   0044D0  0E00               	movlw	0
  2287   0044D2  EC3D  F023         	call	_I2C_2_Master_Read
  2288   0044D6  6E07               	movwf	??_color_read_Clear^0,c
  2289   0044D8  5007               	movf	??_color_read_Clear^0,w,c
  2290   0044DA  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2291   0044DC  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2292   0044DE  500A               	movf	color_read_Clear@tmp^0,w,c
  2293   0044E0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2294   0044E2  6E0A               	movwf	color_read_Clear@tmp^0,c
  2295   0044E4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2296   0044E6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2297   0044E8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2298                           
  2299                           ;colorclick.c: 90:     I2C_2_Master_Stop();
  2300   0044EA  EC85  F024         	call	_I2C_2_Master_Stop	;wreg free
  2301   0044EE                     
  2302                           ;colorclick.c: 91:     return tmp;
  2303   0044EE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2304   0044F2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2305   0044F6  0012               	return		;funcret
  2306   0044F8                     __end_of_color_read_Clear:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function _color_read_Blue *****************
  2310 ;; Defined at:
  2311 ;;		line 65 in file "colorclick.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  tmp             2    9[COMRAM] unsigned int 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  2    4[COMRAM] unsigned int 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2328 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2329 ;;Total ram usage:        7 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; Hardware stack levels required when called: 3
  2332 ;; This function calls:
  2333 ;;		_I2C_2_Master_Read
  2334 ;;		_I2C_2_Master_RepStart
  2335 ;;		_I2C_2_Master_Start
  2336 ;;		_I2C_2_Master_Stop
  2337 ;;		_I2C_2_Master_Write
  2338 ;; This function is called by:
  2339 ;;		_colour_read_all
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text9
  2344   0044F8                     __ptext9:
  2345                           	callstack 0
  2346   0044F8                     _color_read_Blue:
  2347                           	callstack 26
  2348   0044F8                     
  2349                           ;colorclick.c: 67:     unsigned int tmp;;colorclick.c: 68:     I2C_2_Master_Start();
  2350   0044F8  EC8A  F024         	call	_I2C_2_Master_Start	;wreg free
  2351                           
  2352                           ;colorclick.c: 69:     I2C_2_Master_Write(0x52 | 0x00);
  2353   0044FC  0E52               	movlw	82
  2354   0044FE  EC7A  F024         	call	_I2C_2_Master_Write
  2355                           
  2356                           ;colorclick.c: 70:     I2C_2_Master_Write(0xA0 | 0x1A);
  2357   004502  0EBA               	movlw	186
  2358   004504  EC7A  F024         	call	_I2C_2_Master_Write
  2359                           
  2360                           ;colorclick.c: 71:     I2C_2_Master_RepStart();
  2361   004508  EC80  F024         	call	_I2C_2_Master_RepStart	;wreg free
  2362                           
  2363                           ;colorclick.c: 72:     I2C_2_Master_Write(0x52 | 0x01);
  2364   00450C  0E53               	movlw	83
  2365   00450E  EC7A  F024         	call	_I2C_2_Master_Write
  2366                           
  2367                           ;colorclick.c: 73:     tmp=I2C_2_Master_Read(1);
  2368   004512  0E01               	movlw	1
  2369   004514  EC3D  F023         	call	_I2C_2_Master_Read
  2370   004518  6E07               	movwf	??_color_read_Blue^0,c
  2371   00451A  5007               	movf	??_color_read_Blue^0,w,c
  2372   00451C  6E0A               	movwf	color_read_Blue@tmp^0,c
  2373   00451E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2374                           
  2375                           ;colorclick.c: 74:     tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2376   004520  0E00               	movlw	0
  2377   004522  EC3D  F023         	call	_I2C_2_Master_Read
  2378   004526  6E07               	movwf	??_color_read_Blue^0,c
  2379   004528  5007               	movf	??_color_read_Blue^0,w,c
  2380   00452A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2381   00452C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2382   00452E  500A               	movf	color_read_Blue@tmp^0,w,c
  2383   004530  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2384   004532  6E0A               	movwf	color_read_Blue@tmp^0,c
  2385   004534  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2386   004536  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2387   004538  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2388                           
  2389                           ;colorclick.c: 75:     I2C_2_Master_Stop();
  2390   00453A  EC85  F024         	call	_I2C_2_Master_Stop	;wreg free
  2391   00453E                     
  2392                           ;colorclick.c: 76:     return tmp;
  2393   00453E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2394   004542  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2395   004546  0012               	return		;funcret
  2396   004548                     __end_of_color_read_Blue:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _I2C_2_Master_RepStart *****************
  2400 ;; Defined at:
  2401 ;;		line 33 in file "i2c.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 2
  2422 ;; This function calls:
  2423 ;;		_I2C_2_Master_Idle
  2424 ;; This function is called by:
  2425 ;;		_color_read_Red
  2426 ;;		_color_read_Green
  2427 ;;		_color_read_Blue
  2428 ;;		_color_read_Clear
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text10
  2433   004900                     __ptext10:
  2434                           	callstack 0
  2435   004900                     _I2C_2_Master_RepStart:
  2436                           	callstack 26
  2437   004900                     
  2438                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2439   004900  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2440   004904                     
  2441                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2442   004904  010E               	movlb	14	; () banked
  2443   004906  83DA               	bsf	218,1,b	;volatile
  2444   004908                     
  2445                           ; BSR set to: 14
  2446   004908  0012               	return		;funcret
  2447   00490A                     __end_of_I2C_2_Master_RepStart:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _I2C_2_Master_Read *****************
  2451 ;; Defined at:
  2452 ;;		line 51 in file "i2c.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  ack             1    wreg     unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  ack             1    2[COMRAM] unsigned char 
  2457 ;;  tmp             1    3[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      unsigned char 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:        3 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 2
  2474 ;; This function calls:
  2475 ;;		_I2C_2_Master_Idle
  2476 ;; This function is called by:
  2477 ;;		_color_read_Red
  2478 ;;		_color_read_Green
  2479 ;;		_color_read_Blue
  2480 ;;		_color_read_Clear
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485   00467A                     __ptext11:
  2486                           	callstack 0
  2487   00467A                     _I2C_2_Master_Read:
  2488                           	callstack 26
  2489                           
  2490                           ; BSR set to: 14
  2491                           ;incstack = 0
  2492                           ;I2C_2_Master_Read@ack stored from wreg
  2493   00467A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2494   00467C                     
  2495                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2496   00467C  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2497   004680                     
  2498                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2499   004680  010E               	movlb	14	; () banked
  2500   004682  87DA               	bsf	218,3,b	;volatile
  2501                           
  2502                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2503   004684  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2504   004688                     
  2505                           ;i2c.c: 57:   tmp = SSP2BUF;
  2506   004688  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2507                           
  2508                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2509   00468C  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2510   004690                     
  2511                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2512   004690  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2513   004692  B4D8               	btfsc	status,2,c
  2514   004694  EF4E  F023         	goto	u2841
  2515   004698  EF52  F023         	goto	u2840
  2516   00469C                     u2841:
  2517   00469C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2518   00469E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2519   0046A0  EF53  F023         	goto	u2858
  2520   0046A4                     u2840:
  2521   0046A4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2522   0046A6                     u2858:
  2523   0046A6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2524   0046A8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2525   0046AA  010E               	movlb	14	; () banked
  2526   0046AC  51DA               	movf	218,w,b	;volatile
  2527   0046AE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2528   0046B0  0BDF               	andlw	-33
  2529   0046B2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2530   0046B4  6FDA               	movwf	218,b	;volatile
  2531   0046B6                     
  2532                           ; BSR set to: 14
  2533                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2534   0046B6  89DA               	bsf	218,4,b	;volatile
  2535   0046B8                     
  2536                           ; BSR set to: 14
  2537                           ;i2c.c: 61:   return tmp;
  2538   0046B8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2539   0046BA                     
  2540                           ; BSR set to: 14
  2541   0046BA  0012               	return		;funcret
  2542   0046BC                     __end_of_I2C_2_Master_Read:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _color_click_init *****************
  2546 ;; Defined at:
  2547 ;;		line 6 in file "colorclick.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 4
  2568 ;; This function calls:
  2569 ;;		_I2C_2_Master_Init
  2570 ;;		_color_writetoaddr
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text12
  2577   0046BC                     __ptext12:
  2578                           	callstack 0
  2579   0046BC                     _color_click_init:
  2580                           	callstack 26
  2581   0046BC                     
  2582                           ;colorclick.c: 9:     I2C_2_Master_Init();
  2583   0046BC  EC02  F024         	call	_I2C_2_Master_Init	;wreg free
  2584   0046C0                     
  2585                           ;colorclick.c: 12:   color_writetoaddr(0x00, 0x01);
  2586   0046C0  0E01               	movlw	1
  2587   0046C2  6E03               	movwf	color_writetoaddr@value^0,c
  2588   0046C4  0E00               	movlw	0
  2589   0046C6  EC4F  F024         	call	_color_writetoaddr
  2590   0046CA                     
  2591                           ;colorclick.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2592   0046CA  0E3F               	movlw	63
  2593   0046CC  6E05               	movwf	??_color_click_init^0,c
  2594   0046CE  0E55               	movlw	85
  2595   0046D0                     u4227:
  2596   0046D0  2EE8               	decfsz	wreg,f,c
  2597   0046D2  D7FE               	bra	u4227
  2598   0046D4  2E05               	decfsz	??_color_click_init^0,f,c
  2599   0046D6  D7FC               	bra	u4227
  2600   0046D8  F000               	nop	
  2601   0046DA                     
  2602                           ;colorclick.c: 16:  color_writetoaddr(0x00, 0x03);
  2603   0046DA  0E03               	movlw	3
  2604   0046DC  6E03               	movwf	color_writetoaddr@value^0,c
  2605   0046DE  0E00               	movlw	0
  2606   0046E0  EC4F  F024         	call	_color_writetoaddr
  2607   0046E4                     
  2608                           ;colorclick.c: 19:  color_writetoaddr(0x01, 0xD6);
  2609   0046E4  0ED6               	movlw	214
  2610   0046E6  6E03               	movwf	color_writetoaddr@value^0,c
  2611   0046E8  0E01               	movlw	1
  2612   0046EA  EC4F  F024         	call	_color_writetoaddr
  2613   0046EE                     
  2614                           ;colorclick.c: 22:     LATGbits.LATG1=0;
  2615   0046EE  927F               	bcf	127,1,c	;volatile
  2616   0046F0                     
  2617                           ;colorclick.c: 23:     TRISGbits.TRISG1=0;
  2618   0046F0  9287               	bcf	135,1,c	;volatile
  2619   0046F2                     
  2620                           ;colorclick.c: 24:     LATAbits.LATA4=0;
  2621   0046F2  9879               	bcf	121,4,c	;volatile
  2622   0046F4                     
  2623                           ;colorclick.c: 25:     TRISAbits.TRISA4=0;
  2624   0046F4  9881               	bcf	129,4,c	;volatile
  2625   0046F6                     
  2626                           ;colorclick.c: 26:     LATFbits.LATF7=0;
  2627   0046F6  9E7E               	bcf	126,7,c	;volatile
  2628   0046F8                     
  2629                           ;colorclick.c: 27:     TRISFbits.TRISF7=0;
  2630   0046F8  9E86               	bcf	134,7,c	;volatile
  2631   0046FA  0012               	return		;funcret
  2632   0046FC                     __end_of_color_click_init:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function _color_writetoaddr *****************
  2636 ;; Defined at:
  2637 ;;		line 30 in file "colorclick.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  address         1    wreg     unsigned char 
  2640 ;;  value           1    2[COMRAM] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  address         1    3[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2652 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;Total ram usage:        2 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 3
  2659 ;; This function calls:
  2660 ;;		_I2C_2_Master_Start
  2661 ;;		_I2C_2_Master_Stop
  2662 ;;		_I2C_2_Master_Write
  2663 ;; This function is called by:
  2664 ;;		_color_click_init
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text13
  2669   00489E                     __ptext13:
  2670                           	callstack 0
  2671   00489E                     _color_writetoaddr:
  2672                           	callstack 26
  2673                           
  2674                           ;incstack = 0
  2675                           ;color_writetoaddr@address stored from wreg
  2676   00489E  6E04               	movwf	color_writetoaddr@address^0,c
  2677   0048A0                     
  2678                           ;colorclick.c: 31:     I2C_2_Master_Start();
  2679   0048A0  EC8A  F024         	call	_I2C_2_Master_Start	;wreg free
  2680                           
  2681                           ;colorclick.c: 32:     I2C_2_Master_Write(0x52 | 0x00);
  2682   0048A4  0E52               	movlw	82
  2683   0048A6  EC7A  F024         	call	_I2C_2_Master_Write
  2684                           
  2685                           ;colorclick.c: 33:     I2C_2_Master_Write(0x80 | address);
  2686   0048AA  5004               	movf	color_writetoaddr@address^0,w,c
  2687   0048AC  0980               	iorlw	128
  2688   0048AE  EC7A  F024         	call	_I2C_2_Master_Write
  2689                           
  2690                           ;colorclick.c: 34:     I2C_2_Master_Write(value);
  2691   0048B2  5003               	movf	color_writetoaddr@value^0,w,c
  2692   0048B4  EC7A  F024         	call	_I2C_2_Master_Write
  2693                           
  2694                           ;colorclick.c: 35:     I2C_2_Master_Stop();
  2695   0048B8  EC85  F024         	call	_I2C_2_Master_Stop	;wreg free
  2696   0048BC  0012               	return		;funcret
  2697   0048BE                     __end_of_color_writetoaddr:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _I2C_2_Master_Write *****************
  2701 ;; Defined at:
  2702 ;;		line 45 in file "i2c.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  data_byte       1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  data_byte       1    1[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 2
  2723 ;; This function calls:
  2724 ;;		_I2C_2_Master_Idle
  2725 ;; This function is called by:
  2726 ;;		_color_writetoaddr
  2727 ;;		_color_read_Red
  2728 ;;		_color_read_Green
  2729 ;;		_color_read_Blue
  2730 ;;		_color_read_Clear
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text14
  2735   0048F4                     __ptext14:
  2736                           	callstack 0
  2737   0048F4                     _I2C_2_Master_Write:
  2738                           	callstack 26
  2739                           
  2740                           ;incstack = 0
  2741                           ;I2C_2_Master_Write@data_byte stored from wreg
  2742   0048F4  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2743   0048F6                     
  2744                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2745   0048F6  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2746   0048FA                     
  2747                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2748   0048FA  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2749   0048FE  0012               	return		;funcret
  2750   004900                     __end_of_I2C_2_Master_Write:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _I2C_2_Master_Stop *****************
  2754 ;; Defined at:
  2755 ;;		line 39 in file "i2c.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 2
  2776 ;; This function calls:
  2777 ;;		_I2C_2_Master_Idle
  2778 ;; This function is called by:
  2779 ;;		_color_writetoaddr
  2780 ;;		_color_read_Red
  2781 ;;		_color_read_Green
  2782 ;;		_color_read_Blue
  2783 ;;		_color_read_Clear
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text15
  2788   00490A                     __ptext15:
  2789                           	callstack 0
  2790   00490A                     _I2C_2_Master_Stop:
  2791                           	callstack 26
  2792   00490A                     
  2793                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2794   00490A  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2795   00490E                     
  2796                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2797   00490E  010E               	movlb	14	; () banked
  2798   004910  85DA               	bsf	218,2,b	;volatile
  2799   004912                     
  2800                           ; BSR set to: 14
  2801   004912  0012               	return		;funcret
  2802   004914                     __end_of_I2C_2_Master_Stop:
  2803                           	callstack 0
  2804                           
  2805 ;; *************** function _I2C_2_Master_Start *****************
  2806 ;; Defined at:
  2807 ;;		line 27 in file "i2c.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 2
  2828 ;; This function calls:
  2829 ;;		_I2C_2_Master_Idle
  2830 ;; This function is called by:
  2831 ;;		_color_writetoaddr
  2832 ;;		_color_read_Red
  2833 ;;		_color_read_Green
  2834 ;;		_color_read_Blue
  2835 ;;		_color_read_Clear
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text16
  2840   004914                     __ptext16:
  2841                           	callstack 0
  2842   004914                     _I2C_2_Master_Start:
  2843                           	callstack 26
  2844   004914                     
  2845                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2846   004914  EC17  F024         	call	_I2C_2_Master_Idle	;wreg free
  2847   004918                     
  2848                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2849   004918  010E               	movlb	14	; () banked
  2850   00491A  81DA               	bsf	218,0,b	;volatile
  2851   00491C                     
  2852                           ; BSR set to: 14
  2853   00491C  0012               	return		;funcret
  2854   00491E                     __end_of_I2C_2_Master_Start:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _I2C_2_Master_Idle *****************
  2858 ;; Defined at:
  2859 ;;		line 22 in file "i2c.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;Total ram usage:        1 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_I2C_2_Master_Start
  2884 ;;		_I2C_2_Master_RepStart
  2885 ;;		_I2C_2_Master_Stop
  2886 ;;		_I2C_2_Master_Write
  2887 ;;		_I2C_2_Master_Read
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text17
  2892   00482E                     __ptext17:
  2893                           	callstack 0
  2894   00482E                     _I2C_2_Master_Idle:
  2895                           	callstack 26
  2896   00482E                     l186:
  2897   00482E  010E               	movlb	14	; () banked
  2898   004830  B5D8               	btfsc	216,2,b	;volatile
  2899   004832  EF1D  F024         	goto	u2411
  2900   004836  EF1F  F024         	goto	u2410
  2901   00483A                     u2411:
  2902   00483A  EF17  F024         	goto	l186
  2903   00483E                     u2410:
  2904   00483E                     
  2905                           ; BSR set to: 14
  2906   00483E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2907   004842  0E1F               	movlw	31
  2908   004844  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2909   004846  A4D8               	btfss	status,2,c
  2910   004848  EF28  F024         	goto	u2421
  2911   00484C  EF2A  F024         	goto	u2420
  2912   004850                     u2421:
  2913   004850  EF17  F024         	goto	l186
  2914   004854                     u2420:
  2915   004854                     
  2916                           ; BSR set to: 14
  2917   004854  0012               	return		;funcret
  2918   004856                     __end_of_I2C_2_Master_Idle:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _I2C_2_Master_Init *****************
  2922 ;; Defined at:
  2923 ;;		line 4 in file "i2c.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;Total ram usage:        0 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_color_click_init
  2948 ;;		_main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           	psect	text18
  2953   004804                     __ptext18:
  2954                           	callstack 0
  2955   004804                     _I2C_2_Master_Init:
  2956                           	callstack 28
  2957   004804                     
  2958                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2959   004804  010E               	movlb	14	; () banked
  2960   004806  51D9               	movf	217,w,b	;volatile
  2961   004808  0BF0               	andlw	-16
  2962   00480A  0908               	iorlw	8
  2963   00480C  6FD9               	movwf	217,b	;volatile
  2964   00480E                     
  2965                           ; BSR set to: 14
  2966                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2967   00480E  8BD9               	bsf	217,5,b	;volatile
  2968                           
  2969                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2970   004810  0E9F               	movlw	159
  2971   004812  6FD6               	movwf	214,b	;volatile
  2972   004814                     
  2973                           ; BSR set to: 14
  2974                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2975   004814  8A84               	bsf	132,5,c	;volatile
  2976   004816                     
  2977                           ; BSR set to: 14
  2978                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2979   004816  8C84               	bsf	132,6,c	;volatile
  2980   004818                     
  2981                           ; BSR set to: 14
  2982                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2983   004818  9BA7               	bcf	167,5,b	;volatile
  2984   00481A                     
  2985                           ; BSR set to: 14
  2986                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2987   00481A  9DA7               	bcf	167,6,b	;volatile
  2988                           
  2989                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2990   00481C  0E1D               	movlw	29
  2991   00481E  6F1D               	movwf	29,b	;volatile
  2992                           
  2993                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2994   004820  0E1E               	movlw	30
  2995   004822  6F1C               	movwf	28,b	;volatile
  2996                           
  2997                           ;i2c.c: 18:   RD5PPS=0x1C;
  2998   004824  0E1C               	movlw	28
  2999   004826  6F6F               	movwf	111,b	;volatile
  3000                           
  3001                           ;i2c.c: 19:   RD6PPS=0x1B;
  3002   004828  0E1B               	movlw	27
  3003   00482A  6F70               	movwf	112,b	;volatile
  3004   00482C                     
  3005                           ; BSR set to: 14
  3006   00482C  0012               	return		;funcret
  3007   00482E                     __end_of_I2C_2_Master_Init:
  3008                           	callstack 0
  3009                           
  3010 ;; *************** function _RGB2Hue *****************
  3011 ;; Defined at:
  3012 ;;		line 23 in file "colorfunctions.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  cf              2   15[BANK0 ] PTR struct RGBC_rel
  3015 ;;		 -> colorf(22), 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  min             2   27[BANK0 ] int 
  3018 ;;  max             2   25[BANK0 ] int 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3028 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;Total ram usage:       14 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 3
  3035 ;; This function calls:
  3036 ;;		___fladd
  3037 ;;		___fldiv
  3038 ;;		___fleq
  3039 ;;		___flge
  3040 ;;		___flmul
  3041 ;;		___flsub
  3042 ;;		___fltol
  3043 ;;		___xxtofl
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text19
  3050   000E52                     __ptext19:
  3051                           	callstack 0
  3052   000E52                     _RGB2Hue:
  3053                           	callstack 27
  3054   000E52                     
  3055                           ;colorfunctions.c: 24:     if ((cf->Rf == cf->Gf)&&(cf->Rf == cf->Bf)){
  3056   000E52  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3057   000E56  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3058   000E5A  CFDE F001          	movff	postinc2,___fleq@ff1
  3059   000E5E  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3060   000E62  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3061   000E66  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3062   000E6A  0100               	movlb	0	; () banked
  3063   000E6C  EE20 F004          	lfsr	2,4
  3064   000E70  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3065   000E72  26D9               	addwf	fsr2l,f,c
  3066   000E74  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3067   000E76  22DA               	addwfc	fsr2h,f,c
  3068   000E78  CFDE F005          	movff	postinc2,___fleq@ff2
  3069   000E7C  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3070   000E80  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3071   000E84  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3072   000E88  EC24  F01D         	call	___fleq	;wreg free
  3073   000E8C  A0D8               	btfss	status,0,c
  3074   000E8E  EF4B  F007         	goto	u3951
  3075   000E92  EF4D  F007         	goto	u3950
  3076   000E96                     u3951:
  3077   000E96  EF82  F007         	goto	l4242
  3078   000E9A                     u3950:
  3079   000E9A  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3080   000E9E  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3081   000EA2  CFDE F001          	movff	postinc2,___fleq@ff1
  3082   000EA6  CFDE F002          	movff	postinc2,___fleq@ff1+1
  3083   000EAA  CFDE F003          	movff	postinc2,___fleq@ff1+2
  3084   000EAE  CFDE F004          	movff	postinc2,___fleq@ff1+3
  3085   000EB2  0100               	movlb	0	; () banked
  3086   000EB4  EE20 F008          	lfsr	2,8
  3087   000EB8  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3088   000EBA  26D9               	addwf	fsr2l,f,c
  3089   000EBC  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3090   000EBE  22DA               	addwfc	fsr2h,f,c
  3091   000EC0  CFDE F005          	movff	postinc2,___fleq@ff2
  3092   000EC4  CFDE F006          	movff	postinc2,___fleq@ff2+1
  3093   000EC8  CFDE F007          	movff	postinc2,___fleq@ff2+2
  3094   000ECC  CFDE F008          	movff	postinc2,___fleq@ff2+3
  3095   000ED0  EC24  F01D         	call	___fleq	;wreg free
  3096   000ED4  A0D8               	btfss	status,0,c
  3097   000ED6  EF6F  F007         	goto	u3961
  3098   000EDA  EF71  F007         	goto	u3960
  3099   000EDE                     u3961:
  3100   000EDE  EF82  F007         	goto	l4242
  3101   000EE2                     u3960:
  3102   000EE2                     
  3103                           ;colorfunctions.c: 25:         cf->h=0;
  3104   000EE2  0100               	movlb	0	; () banked
  3105   000EE4  EE20 F010          	lfsr	2,16
  3106   000EE8  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3107   000EEA  26D9               	addwf	fsr2l,f,c
  3108   000EEC  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3109   000EEE  22DA               	addwfc	fsr2h,f,c
  3110   000EF0  0E00               	movlw	0
  3111   000EF2  6EDE               	movwf	postinc2,c
  3112   000EF4  0E00               	movlw	0
  3113   000EF6  6EDE               	movwf	postinc2,c
  3114   000EF8  0E00               	movlw	0
  3115   000EFA  6EDE               	movwf	postinc2,c
  3116   000EFC  0E00               	movlw	0
  3117   000EFE  6EDD               	movwf	postdec2,c
  3118                           
  3119                           ;colorfunctions.c: 26:     } else{
  3120   000F00  EFBE  F00A         	goto	l119
  3121   000F04                     l4242:
  3122                           
  3123                           ;colorfunctions.c: 28:         signed int min=0;
  3124   000F04  0E00               	movlw	0
  3125   000F06  0100               	movlb	0	; () banked
  3126   000F08  6F7C               	movwf	(RGB2Hue@min+1)& (0+255),b
  3127   000F0A  0E00               	movlw	0
  3128   000F0C  6F7B               	movwf	RGB2Hue@min& (0+255),b
  3129   000F0E                     
  3130                           ; BSR set to: 0
  3131                           ;colorfunctions.c: 30:         if ((cf->Rf < cf->Gf)&(cf->Rf < cf->Bf)){
  3132   000F0E  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3133   000F12  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3134   000F16  CFDE F001          	movff	postinc2,___flge@ff1
  3135   000F1A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3136   000F1E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3137   000F22  CFDE F004          	movff	postinc2,___flge@ff1+3
  3138   000F26  EE20 F004          	lfsr	2,4
  3139   000F2A  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3140   000F2C  26D9               	addwf	fsr2l,f,c
  3141   000F2E  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3142   000F30  22DA               	addwfc	fsr2h,f,c
  3143   000F32  CFDE F005          	movff	postinc2,___flge@ff2
  3144   000F36  CFDE F006          	movff	postinc2,___flge@ff2+1
  3145   000F3A  CFDE F007          	movff	postinc2,___flge@ff2+2
  3146   000F3E  CFDE F008          	movff	postinc2,___flge@ff2+3
  3147   000F42  ECE6  F01A         	call	___flge	;wreg free
  3148   000F46  B0D8               	btfsc	status,0,c
  3149   000F48  EFA8  F007         	goto	u3971
  3150   000F4C  EFAA  F007         	goto	u3970
  3151   000F50                     u3971:
  3152   000F50  EFE2  F007         	goto	l4250
  3153   000F54                     u3970:
  3154   000F54  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3155   000F58  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3156   000F5C  CFDE F001          	movff	postinc2,___flge@ff1
  3157   000F60  CFDE F002          	movff	postinc2,___flge@ff1+1
  3158   000F64  CFDE F003          	movff	postinc2,___flge@ff1+2
  3159   000F68  CFDE F004          	movff	postinc2,___flge@ff1+3
  3160   000F6C  0100               	movlb	0	; () banked
  3161   000F6E  EE20 F008          	lfsr	2,8
  3162   000F72  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3163   000F74  26D9               	addwf	fsr2l,f,c
  3164   000F76  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3165   000F78  22DA               	addwfc	fsr2h,f,c
  3166   000F7A  CFDE F005          	movff	postinc2,___flge@ff2
  3167   000F7E  CFDE F006          	movff	postinc2,___flge@ff2+1
  3168   000F82  CFDE F007          	movff	postinc2,___flge@ff2+2
  3169   000F86  CFDE F008          	movff	postinc2,___flge@ff2+3
  3170   000F8A  ECE6  F01A         	call	___flge	;wreg free
  3171   000F8E  B0D8               	btfsc	status,0,c
  3172   000F90  EFCC  F007         	goto	u3981
  3173   000F94  EFCE  F007         	goto	u3980
  3174   000F98                     u3981:
  3175   000F98  EFE2  F007         	goto	l4250
  3176   000F9C                     u3980:
  3177   000F9C                     
  3178                           ;colorfunctions.c: 31:             min=cf->Rf;
  3179   000F9C  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3180   000FA0  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3181   000FA4  CFDE F057          	movff	postinc2,___fltol@f1
  3182   000FA8  CFDE F058          	movff	postinc2,___fltol@f1+1
  3183   000FAC  CFDE F059          	movff	postinc2,___fltol@f1+2
  3184   000FB0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3185   000FB4  ECDF  F019         	call	___fltol	;wreg free
  3186   000FB8  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3187   000FBC  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3188                           
  3189                           ;colorfunctions.c: 32:         } else if((cf->Gf < cf->Rf)&(cf->Gf < cf->Bf)){
  3190   000FC0  EF58  F008         	goto	l111
  3191   000FC4                     l4250:
  3192   000FC4  0100               	movlb	0	; () banked
  3193   000FC6  EE20 F004          	lfsr	2,4
  3194   000FCA  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3195   000FCC  26D9               	addwf	fsr2l,f,c
  3196   000FCE  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3197   000FD0  22DA               	addwfc	fsr2h,f,c
  3198   000FD2  CFDE F001          	movff	postinc2,___flge@ff1
  3199   000FD6  CFDE F002          	movff	postinc2,___flge@ff1+1
  3200   000FDA  CFDE F003          	movff	postinc2,___flge@ff1+2
  3201   000FDE  CFDE F004          	movff	postinc2,___flge@ff1+3
  3202   000FE2  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3203   000FE6  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3204   000FEA  CFDE F005          	movff	postinc2,___flge@ff2
  3205   000FEE  CFDE F006          	movff	postinc2,___flge@ff2+1
  3206   000FF2  CFDE F007          	movff	postinc2,___flge@ff2+2
  3207   000FF6  CFDE F008          	movff	postinc2,___flge@ff2+3
  3208   000FFA  ECE6  F01A         	call	___flge	;wreg free
  3209   000FFE  B0D8               	btfsc	status,0,c
  3210   001000  EF04  F008         	goto	u3991
  3211   001004  EF06  F008         	goto	u3990
  3212   001008                     u3991:
  3213   001008  EF43  F008         	goto	l4256
  3214   00100C                     u3990:
  3215   00100C  0100               	movlb	0	; () banked
  3216   00100E  EE20 F004          	lfsr	2,4
  3217   001012  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3218   001014  26D9               	addwf	fsr2l,f,c
  3219   001016  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3220   001018  22DA               	addwfc	fsr2h,f,c
  3221   00101A  CFDE F001          	movff	postinc2,___flge@ff1
  3222   00101E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3223   001022  CFDE F003          	movff	postinc2,___flge@ff1+2
  3224   001026  CFDE F004          	movff	postinc2,___flge@ff1+3
  3225   00102A  EE20 F008          	lfsr	2,8
  3226   00102E  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3227   001030  26D9               	addwf	fsr2l,f,c
  3228   001032  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3229   001034  22DA               	addwfc	fsr2h,f,c
  3230   001036  CFDE F005          	movff	postinc2,___flge@ff2
  3231   00103A  CFDE F006          	movff	postinc2,___flge@ff2+1
  3232   00103E  CFDE F007          	movff	postinc2,___flge@ff2+2
  3233   001042  CFDE F008          	movff	postinc2,___flge@ff2+3
  3234   001046  ECE6  F01A         	call	___flge	;wreg free
  3235   00104A  B0D8               	btfsc	status,0,c
  3236   00104C  EF2A  F008         	goto	u4001
  3237   001050  EF2C  F008         	goto	u4000
  3238   001054                     u4001:
  3239   001054  EF43  F008         	goto	l4256
  3240   001058                     u4000:
  3241   001058                     
  3242                           ;colorfunctions.c: 33:             min=cf->Gf;
  3243   001058  0100               	movlb	0	; () banked
  3244   00105A  EE20 F004          	lfsr	2,4
  3245   00105E  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3246   001060  26D9               	addwf	fsr2l,f,c
  3247   001062  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3248   001064  22DA               	addwfc	fsr2h,f,c
  3249   001066  CFDE F057          	movff	postinc2,___fltol@f1
  3250   00106A  CFDE F058          	movff	postinc2,___fltol@f1+1
  3251   00106E  CFDE F059          	movff	postinc2,___fltol@f1+2
  3252   001072  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3253   001076  ECDF  F019         	call	___fltol	;wreg free
  3254   00107A  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3255   00107E  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3256                           
  3257                           ;colorfunctions.c: 34:         } else{
  3258   001082  EF58  F008         	goto	l111
  3259   001086                     l4256:
  3260                           
  3261                           ;colorfunctions.c: 35:             min=cf->Bf;
  3262   001086  0100               	movlb	0	; () banked
  3263   001088  EE20 F008          	lfsr	2,8
  3264   00108C  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3265   00108E  26D9               	addwf	fsr2l,f,c
  3266   001090  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3267   001092  22DA               	addwfc	fsr2h,f,c
  3268   001094  CFDE F057          	movff	postinc2,___fltol@f1
  3269   001098  CFDE F058          	movff	postinc2,___fltol@f1+1
  3270   00109C  CFDE F059          	movff	postinc2,___fltol@f1+2
  3271   0010A0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3272   0010A4  ECDF  F019         	call	___fltol	;wreg free
  3273   0010A8  C057  F07B         	movff	?___fltol,RGB2Hue@min
  3274   0010AC  C058  F07C         	movff	?___fltol+1,RGB2Hue@min+1
  3275   0010B0                     l111:
  3276                           
  3277                           ;colorfunctions.c: 38:         if ((cf->Rf > cf->Gf)&(cf->Rf > cf->Bf)){
  3278   0010B0  0100               	movlb	0	; () banked
  3279   0010B2  EE20 F004          	lfsr	2,4
  3280   0010B6  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3281   0010B8  26D9               	addwf	fsr2l,f,c
  3282   0010BA  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3283   0010BC  22DA               	addwfc	fsr2h,f,c
  3284   0010BE  CFDE F001          	movff	postinc2,___flge@ff1
  3285   0010C2  CFDE F002          	movff	postinc2,___flge@ff1+1
  3286   0010C6  CFDE F003          	movff	postinc2,___flge@ff1+2
  3287   0010CA  CFDE F004          	movff	postinc2,___flge@ff1+3
  3288   0010CE  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3289   0010D2  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3290   0010D6  CFDE F005          	movff	postinc2,___flge@ff2
  3291   0010DA  CFDE F006          	movff	postinc2,___flge@ff2+1
  3292   0010DE  CFDE F007          	movff	postinc2,___flge@ff2+2
  3293   0010E2  CFDE F008          	movff	postinc2,___flge@ff2+3
  3294   0010E6  ECE6  F01A         	call	___flge	;wreg free
  3295   0010EA  B0D8               	btfsc	status,0,c
  3296   0010EC  EF7A  F008         	goto	u4011
  3297   0010F0  EF7C  F008         	goto	u4010
  3298   0010F4                     u4011:
  3299   0010F4  EF19  F009         	goto	l4264
  3300   0010F8                     u4010:
  3301   0010F8  0100               	movlb	0	; () banked
  3302   0010FA  EE20 F008          	lfsr	2,8
  3303   0010FE  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3304   001100  26D9               	addwf	fsr2l,f,c
  3305   001102  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3306   001104  22DA               	addwfc	fsr2h,f,c
  3307   001106  CFDE F001          	movff	postinc2,___flge@ff1
  3308   00110A  CFDE F002          	movff	postinc2,___flge@ff1+1
  3309   00110E  CFDE F003          	movff	postinc2,___flge@ff1+2
  3310   001112  CFDE F004          	movff	postinc2,___flge@ff1+3
  3311   001116  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3312   00111A  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3313   00111E  CFDE F005          	movff	postinc2,___flge@ff2
  3314   001122  CFDE F006          	movff	postinc2,___flge@ff2+1
  3315   001126  CFDE F007          	movff	postinc2,___flge@ff2+2
  3316   00112A  CFDE F008          	movff	postinc2,___flge@ff2+3
  3317   00112E  ECE6  F01A         	call	___flge	;wreg free
  3318   001132  B0D8               	btfsc	status,0,c
  3319   001134  EF9E  F008         	goto	u4021
  3320   001138  EFA0  F008         	goto	u4020
  3321   00113C                     u4021:
  3322   00113C  EF19  F009         	goto	l4264
  3323   001140                     u4020:
  3324   001140                     
  3325                           ;colorfunctions.c: 39:             max=(cf->Rf);
  3326   001140  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3327   001144  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3328   001148  CFDE F057          	movff	postinc2,___fltol@f1
  3329   00114C  CFDE F058          	movff	postinc2,___fltol@f1+1
  3330   001150  CFDE F059          	movff	postinc2,___fltol@f1+2
  3331   001154  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3332   001158  ECDF  F019         	call	___fltol	;wreg free
  3333   00115C  C057  F079         	movff	?___fltol,RGB2Hue@max
  3334   001160  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3335   001164                     
  3336                           ;colorfunctions.c: 42:             (cf->h)=60*(((cf->Gf)-(cf->Bf))/(max-min));
  3337   001164  0100               	movlb	0	; () banked
  3338   001166  517B               	movf	RGB2Hue@min& (0+255),w,b
  3339   001168  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3340   00116A  6F71               	movwf	??_RGB2Hue& (0+255),b
  3341   00116C  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3342   00116E  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3343   001170  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3344   001172  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3345   001176  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3346   00117A  0E00               	movlw	0
  3347   00117C  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3348   00117E  0EFF               	movlw	-1
  3349   001180  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3350   001182  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3351   001184  0E01               	movlw	1
  3352   001186  EC04  F017         	call	___xxtofl
  3353   00118A  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3354   00118E  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3355   001192  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3356   001196  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3357   00119A  0100               	movlb	0	; () banked
  3358   00119C  EE20 F008          	lfsr	2,8
  3359   0011A0  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3360   0011A2  26D9               	addwf	fsr2l,f,c
  3361   0011A4  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3362   0011A6  22DA               	addwfc	fsr2h,f,c
  3363   0011A8  CFDE F02E          	movff	postinc2,___flsub@a
  3364   0011AC  CFDE F02F          	movff	postinc2,___flsub@a+1
  3365   0011B0  CFDE F030          	movff	postinc2,___flsub@a+2
  3366   0011B4  CFDE F031          	movff	postinc2,___flsub@a+3
  3367   0011B8  EE20 F004          	lfsr	2,4
  3368   0011BC  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3369   0011BE  26D9               	addwf	fsr2l,f,c
  3370   0011C0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3371   0011C2  22DA               	addwfc	fsr2h,f,c
  3372   0011C4  CFDE F02A          	movff	postinc2,___flsub@b
  3373   0011C8  CFDE F02B          	movff	postinc2,___flsub@b+1
  3374   0011CC  CFDE F02C          	movff	postinc2,___flsub@b+2
  3375   0011D0  CFDE F02D          	movff	postinc2,___flsub@b+3
  3376   0011D4  EC1A  F023         	call	___flsub	;wreg free
  3377   0011D8  C02A  F032         	movff	?___flsub,___fldiv@b
  3378   0011DC  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3379   0011E0  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3380   0011E4  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3381   0011E8  ECAC  F011         	call	___fldiv	;wreg free
  3382   0011EC  C032  F04B         	movff	?___fldiv,___flmul@b
  3383   0011F0  C033  F04C         	movff	?___fldiv+1,___flmul@b+1
  3384   0011F4  C034  F04D         	movff	?___fldiv+2,___flmul@b+2
  3385   0011F8  C035  F04E         	movff	?___fldiv+3,___flmul@b+3
  3386   0011FC  0E00               	movlw	0
  3387   0011FE  6E4F               	movwf	___flmul@a^0,c
  3388   001200  0E00               	movlw	0
  3389   001202  6E50               	movwf	(___flmul@a+1)^0,c
  3390   001204  0E70               	movlw	112
  3391   001206  6E51               	movwf	(___flmul@a+2)^0,c
  3392   001208  0E42               	movlw	66
  3393   00120A  6E52               	movwf	(___flmul@a+3)^0,c
  3394   00120C  EC96  F00F         	call	___flmul	;wreg free
  3395   001210  0100               	movlb	0	; () banked
  3396   001212  EE20 F010          	lfsr	2,16
  3397   001216  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3398   001218  26D9               	addwf	fsr2l,f,c
  3399   00121A  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3400   00121C  22DA               	addwfc	fsr2h,f,c
  3401   00121E  C04B  FFDE         	movff	?___flmul,postinc2
  3402   001222  C04C  FFDE         	movff	?___flmul+1,postinc2
  3403   001226  C04D  FFDE         	movff	?___flmul+2,postinc2
  3404   00122A  C04E  FFDE         	movff	?___flmul+3,postinc2
  3405                           
  3406                           ;colorfunctions.c: 43:         } else if((cf->Gf > cf->Rf)&(cf->Gf > cf->Bf)){
  3407   00122E  EF89  F00A         	goto	l4276
  3408   001232                     l4264:
  3409   001232  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3410   001236  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3411   00123A  CFDE F001          	movff	postinc2,___flge@ff1
  3412   00123E  CFDE F002          	movff	postinc2,___flge@ff1+1
  3413   001242  CFDE F003          	movff	postinc2,___flge@ff1+2
  3414   001246  CFDE F004          	movff	postinc2,___flge@ff1+3
  3415   00124A  0100               	movlb	0	; () banked
  3416   00124C  EE20 F004          	lfsr	2,4
  3417   001250  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3418   001252  26D9               	addwf	fsr2l,f,c
  3419   001254  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3420   001256  22DA               	addwfc	fsr2h,f,c
  3421   001258  CFDE F005          	movff	postinc2,___flge@ff2
  3422   00125C  CFDE F006          	movff	postinc2,___flge@ff2+1
  3423   001260  CFDE F007          	movff	postinc2,___flge@ff2+2
  3424   001264  CFDE F008          	movff	postinc2,___flge@ff2+3
  3425   001268  ECE6  F01A         	call	___flge	;wreg free
  3426   00126C  B0D8               	btfsc	status,0,c
  3427   00126E  EF3B  F009         	goto	u4031
  3428   001272  EF3D  F009         	goto	u4030
  3429   001276                     u4031:
  3430   001276  EFF7  F009         	goto	l4272
  3431   00127A                     u4030:
  3432   00127A  0100               	movlb	0	; () banked
  3433   00127C  EE20 F008          	lfsr	2,8
  3434   001280  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3435   001282  26D9               	addwf	fsr2l,f,c
  3436   001284  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3437   001286  22DA               	addwfc	fsr2h,f,c
  3438   001288  CFDE F001          	movff	postinc2,___flge@ff1
  3439   00128C  CFDE F002          	movff	postinc2,___flge@ff1+1
  3440   001290  CFDE F003          	movff	postinc2,___flge@ff1+2
  3441   001294  CFDE F004          	movff	postinc2,___flge@ff1+3
  3442   001298  EE20 F004          	lfsr	2,4
  3443   00129C  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3444   00129E  26D9               	addwf	fsr2l,f,c
  3445   0012A0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3446   0012A2  22DA               	addwfc	fsr2h,f,c
  3447   0012A4  CFDE F005          	movff	postinc2,___flge@ff2
  3448   0012A8  CFDE F006          	movff	postinc2,___flge@ff2+1
  3449   0012AC  CFDE F007          	movff	postinc2,___flge@ff2+2
  3450   0012B0  CFDE F008          	movff	postinc2,___flge@ff2+3
  3451   0012B4  ECE6  F01A         	call	___flge	;wreg free
  3452   0012B8  B0D8               	btfsc	status,0,c
  3453   0012BA  EF61  F009         	goto	u4041
  3454   0012BE  EF63  F009         	goto	u4040
  3455   0012C2                     u4041:
  3456   0012C2  EFF7  F009         	goto	l4272
  3457   0012C6                     u4040:
  3458   0012C6                     
  3459                           ;colorfunctions.c: 44:             max=cf->Gf;
  3460   0012C6  0100               	movlb	0	; () banked
  3461   0012C8  EE20 F004          	lfsr	2,4
  3462   0012CC  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3463   0012CE  26D9               	addwf	fsr2l,f,c
  3464   0012D0  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3465   0012D2  22DA               	addwfc	fsr2h,f,c
  3466   0012D4  CFDE F057          	movff	postinc2,___fltol@f1
  3467   0012D8  CFDE F058          	movff	postinc2,___fltol@f1+1
  3468   0012DC  CFDE F059          	movff	postinc2,___fltol@f1+2
  3469   0012E0  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3470   0012E4  ECDF  F019         	call	___fltol	;wreg free
  3471   0012E8  C057  F079         	movff	?___fltol,RGB2Hue@max
  3472   0012EC  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3473                           
  3474                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3475   0012F0  0100               	movlb	0	; () banked
  3476   0012F2  517B               	movf	RGB2Hue@min& (0+255),w,b
  3477   0012F4  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3478   0012F6  6F71               	movwf	??_RGB2Hue& (0+255),b
  3479   0012F8  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3480   0012FA  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3481   0012FC  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3482   0012FE  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3483   001302  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3484   001306  0E00               	movlw	0
  3485   001308  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3486   00130A  0EFF               	movlw	-1
  3487   00130C  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3488   00130E  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3489   001310  0E01               	movlw	1
  3490   001312  EC04  F017         	call	___xxtofl
  3491   001316  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3492   00131A  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3493   00131E  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3494   001322  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3495   001326  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3496   00132A  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3497   00132E  CFDE F02E          	movff	postinc2,___flsub@a
  3498   001332  CFDE F02F          	movff	postinc2,___flsub@a+1
  3499   001336  CFDE F030          	movff	postinc2,___flsub@a+2
  3500   00133A  CFDE F031          	movff	postinc2,___flsub@a+3
  3501   00133E  0100               	movlb	0	; () banked
  3502   001340  EE20 F008          	lfsr	2,8
  3503   001344  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3504   001346  26D9               	addwf	fsr2l,f,c
  3505   001348  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3506   00134A  22DA               	addwfc	fsr2h,f,c
  3507   00134C  CFDE F02A          	movff	postinc2,___flsub@b
  3508   001350  CFDE F02B          	movff	postinc2,___flsub@b+1
  3509   001354  CFDE F02C          	movff	postinc2,___flsub@b+2
  3510   001358  CFDE F02D          	movff	postinc2,___flsub@b+3
  3511   00135C  EC1A  F023         	call	___flsub	;wreg free
  3512   001360  C02A  F032         	movff	?___flsub,___fldiv@b
  3513   001364  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3514   001368  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3515   00136C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3516   001370  ECAC  F011         	call	___fldiv	;wreg free
  3517   001374  C032  F075         	movff	?___fldiv,_RGB2Hue$3169
  3518   001378  C033  F076         	movff	?___fldiv+1,_RGB2Hue$3169+1
  3519   00137C  C034  F077         	movff	?___fldiv+2,_RGB2Hue$3169+2
  3520   001380  C035  F078         	movff	?___fldiv+3,_RGB2Hue$3169+3
  3521   001384                     
  3522                           ;colorfunctions.c: 45:             (cf->h)=60*(2+(((cf->Bf)-(cf->Rf))/(max-min)));
  3523   001384  0E00               	movlw	0
  3524   001386  6E1E               	movwf	___fladd@a^0,c
  3525   001388  0E00               	movlw	0
  3526   00138A  6E1F               	movwf	(___fladd@a+1)^0,c
  3527   00138C  0E00               	movlw	0
  3528   00138E  6E20               	movwf	(___fladd@a+2)^0,c
  3529   001390  0E40               	movlw	64
  3530   001392  6E21               	movwf	(___fladd@a+3)^0,c
  3531   001394  C075  F01A         	movff	_RGB2Hue$3169,___fladd@b
  3532   001398  C076  F01B         	movff	_RGB2Hue$3169+1,___fladd@b+1
  3533   00139C  C077  F01C         	movff	_RGB2Hue$3169+2,___fladd@b+2
  3534   0013A0  C078  F01D         	movff	_RGB2Hue$3169+3,___fladd@b+3
  3535   0013A4  EC36  F00D         	call	___fladd	;wreg free
  3536   0013A8  C01A  F04B         	movff	?___fladd,___flmul@b
  3537   0013AC  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3538   0013B0  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3539   0013B4  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3540   0013B8  0E00               	movlw	0
  3541   0013BA  6E4F               	movwf	___flmul@a^0,c
  3542   0013BC  0E00               	movlw	0
  3543   0013BE  6E50               	movwf	(___flmul@a+1)^0,c
  3544   0013C0  0E70               	movlw	112
  3545   0013C2  6E51               	movwf	(___flmul@a+2)^0,c
  3546   0013C4  0E42               	movlw	66
  3547   0013C6  6E52               	movwf	(___flmul@a+3)^0,c
  3548   0013C8  EC96  F00F         	call	___flmul	;wreg free
  3549   0013CC  0100               	movlb	0	; () banked
  3550   0013CE  EE20 F010          	lfsr	2,16
  3551   0013D2  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3552   0013D4  26D9               	addwf	fsr2l,f,c
  3553   0013D6  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3554   0013D8  22DA               	addwfc	fsr2h,f,c
  3555   0013DA  C04B  FFDE         	movff	?___flmul,postinc2
  3556   0013DE  C04C  FFDE         	movff	?___flmul+1,postinc2
  3557   0013E2  C04D  FFDE         	movff	?___flmul+2,postinc2
  3558   0013E6  C04E  FFDE         	movff	?___flmul+3,postinc2
  3559                           
  3560                           ;colorfunctions.c: 46:         }else{
  3561   0013EA  EF89  F00A         	goto	l4276
  3562   0013EE                     l4272:
  3563                           
  3564                           ;colorfunctions.c: 47:             max=cf->Bf;
  3565   0013EE  0100               	movlb	0	; () banked
  3566   0013F0  EE20 F008          	lfsr	2,8
  3567   0013F4  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3568   0013F6  26D9               	addwf	fsr2l,f,c
  3569   0013F8  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3570   0013FA  22DA               	addwfc	fsr2h,f,c
  3571   0013FC  CFDE F057          	movff	postinc2,___fltol@f1
  3572   001400  CFDE F058          	movff	postinc2,___fltol@f1+1
  3573   001404  CFDE F059          	movff	postinc2,___fltol@f1+2
  3574   001408  CFDE F05A          	movff	postinc2,___fltol@f1+3
  3575   00140C  ECDF  F019         	call	___fltol	;wreg free
  3576   001410  C057  F079         	movff	?___fltol,RGB2Hue@max
  3577   001414  C058  F07A         	movff	?___fltol+1,RGB2Hue@max+1
  3578                           
  3579                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3580   001418  0100               	movlb	0	; () banked
  3581   00141A  517B               	movf	RGB2Hue@min& (0+255),w,b
  3582   00141C  5D79               	subwf	RGB2Hue@max& (0+255),w,b
  3583   00141E  6F71               	movwf	??_RGB2Hue& (0+255),b
  3584   001420  517C               	movf	(RGB2Hue@min+1)& (0+255),w,b
  3585   001422  597A               	subwfb	(RGB2Hue@max+1)& (0+255),w,b
  3586   001424  6F72               	movwf	(??_RGB2Hue+1)& (0+255),b
  3587   001426  C071  F00C         	movff	??_RGB2Hue,___xxtofl@val
  3588   00142A  C072  F00D         	movff	??_RGB2Hue+1,___xxtofl@val+1
  3589   00142E  0E00               	movlw	0
  3590   001430  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  3591   001432  0EFF               	movlw	-1
  3592   001434  6E0E               	movwf	(___xxtofl@val+2)^0,c
  3593   001436  6E0F               	movwf	(___xxtofl@val+3)^0,c
  3594   001438  0E01               	movlw	1
  3595   00143A  EC04  F017         	call	___xxtofl
  3596   00143E  C00C  F036         	movff	?___xxtofl,___fldiv@a
  3597   001442  C00D  F037         	movff	?___xxtofl+1,___fldiv@a+1
  3598   001446  C00E  F038         	movff	?___xxtofl+2,___fldiv@a+2
  3599   00144A  C00F  F039         	movff	?___xxtofl+3,___fldiv@a+3
  3600   00144E  0100               	movlb	0	; () banked
  3601   001450  EE20 F004          	lfsr	2,4
  3602   001454  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3603   001456  26D9               	addwf	fsr2l,f,c
  3604   001458  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3605   00145A  22DA               	addwfc	fsr2h,f,c
  3606   00145C  CFDE F02E          	movff	postinc2,___flsub@a
  3607   001460  CFDE F02F          	movff	postinc2,___flsub@a+1
  3608   001464  CFDE F030          	movff	postinc2,___flsub@a+2
  3609   001468  CFDE F031          	movff	postinc2,___flsub@a+3
  3610   00146C  C06F  FFD9         	movff	RGB2Hue@cf,fsr2l
  3611   001470  C070  FFDA         	movff	RGB2Hue@cf+1,fsr2h
  3612   001474  CFDE F02A          	movff	postinc2,___flsub@b
  3613   001478  CFDE F02B          	movff	postinc2,___flsub@b+1
  3614   00147C  CFDE F02C          	movff	postinc2,___flsub@b+2
  3615   001480  CFDE F02D          	movff	postinc2,___flsub@b+3
  3616   001484  EC1A  F023         	call	___flsub	;wreg free
  3617   001488  C02A  F032         	movff	?___flsub,___fldiv@b
  3618   00148C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  3619   001490  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  3620   001494  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  3621   001498  ECAC  F011         	call	___fldiv	;wreg free
  3622   00149C  C032  F075         	movff	?___fldiv,_RGB2Hue$3169
  3623   0014A0  C033  F076         	movff	?___fldiv+1,_RGB2Hue$3169+1
  3624   0014A4  C034  F077         	movff	?___fldiv+2,_RGB2Hue$3169+2
  3625   0014A8  C035  F078         	movff	?___fldiv+3,_RGB2Hue$3169+3
  3626   0014AC                     
  3627                           ;colorfunctions.c: 48:             (cf->h)=60*(4+(((cf->Rf)-(cf->Gf))/(max-min)));
  3628   0014AC  0E00               	movlw	0
  3629   0014AE  6E1E               	movwf	___fladd@a^0,c
  3630   0014B0  0E00               	movlw	0
  3631   0014B2  6E1F               	movwf	(___fladd@a+1)^0,c
  3632   0014B4  0E80               	movlw	128
  3633   0014B6  6E20               	movwf	(___fladd@a+2)^0,c
  3634   0014B8  0E40               	movlw	64
  3635   0014BA  6E21               	movwf	(___fladd@a+3)^0,c
  3636   0014BC  C075  F01A         	movff	_RGB2Hue$3169,___fladd@b
  3637   0014C0  C076  F01B         	movff	_RGB2Hue$3169+1,___fladd@b+1
  3638   0014C4  C077  F01C         	movff	_RGB2Hue$3169+2,___fladd@b+2
  3639   0014C8  C078  F01D         	movff	_RGB2Hue$3169+3,___fladd@b+3
  3640   0014CC  EC36  F00D         	call	___fladd	;wreg free
  3641   0014D0  C01A  F04B         	movff	?___fladd,___flmul@b
  3642   0014D4  C01B  F04C         	movff	?___fladd+1,___flmul@b+1
  3643   0014D8  C01C  F04D         	movff	?___fladd+2,___flmul@b+2
  3644   0014DC  C01D  F04E         	movff	?___fladd+3,___flmul@b+3
  3645   0014E0  0E00               	movlw	0
  3646   0014E2  6E4F               	movwf	___flmul@a^0,c
  3647   0014E4  0E00               	movlw	0
  3648   0014E6  6E50               	movwf	(___flmul@a+1)^0,c
  3649   0014E8  0E70               	movlw	112
  3650   0014EA  6E51               	movwf	(___flmul@a+2)^0,c
  3651   0014EC  0E42               	movlw	66
  3652   0014EE  6E52               	movwf	(___flmul@a+3)^0,c
  3653   0014F0  EC96  F00F         	call	___flmul	;wreg free
  3654   0014F4  0100               	movlb	0	; () banked
  3655   0014F6  EE20 F010          	lfsr	2,16
  3656   0014FA  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3657   0014FC  26D9               	addwf	fsr2l,f,c
  3658   0014FE  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3659   001500  22DA               	addwfc	fsr2h,f,c
  3660   001502  C04B  FFDE         	movff	?___flmul,postinc2
  3661   001506  C04C  FFDE         	movff	?___flmul+1,postinc2
  3662   00150A  C04D  FFDE         	movff	?___flmul+2,postinc2
  3663   00150E  C04E  FFDE         	movff	?___flmul+3,postinc2
  3664   001512                     l4276:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;colorfunctions.c: 50:         if (cf->h < 0){
  3668   001512  EE20 F010          	lfsr	2,16
  3669   001516  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3670   001518  26D9               	addwf	fsr2l,f,c
  3671   00151A  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3672   00151C  22DA               	addwfc	fsr2h,f,c
  3673   00151E  0E03               	movlw	3
  3674   001520  BEDB               	btfsc	plusw2,7,c
  3675   001522  EF97  F00A         	goto	u4050
  3676   001526  EF95  F00A         	goto	u4051
  3677   00152A                     u4051:
  3678   00152A  EFBE  F00A         	goto	l119
  3679   00152E                     u4050:
  3680   00152E                     
  3681                           ; BSR set to: 0
  3682                           ;colorfunctions.c: 51:             cf->h= cf->h +360;
  3683   00152E  EE20 F010          	lfsr	2,16
  3684   001532  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3685   001534  26D9               	addwf	fsr2l,f,c
  3686   001536  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3687   001538  22DA               	addwfc	fsr2h,f,c
  3688   00153A  CFDE F01A          	movff	postinc2,___fladd@b
  3689   00153E  CFDE F01B          	movff	postinc2,___fladd@b+1
  3690   001542  CFDE F01C          	movff	postinc2,___fladd@b+2
  3691   001546  CFDE F01D          	movff	postinc2,___fladd@b+3
  3692   00154A  0E00               	movlw	0
  3693   00154C  6E1E               	movwf	___fladd@a^0,c
  3694   00154E  0E00               	movlw	0
  3695   001550  6E1F               	movwf	(___fladd@a+1)^0,c
  3696   001552  0EB4               	movlw	180
  3697   001554  6E20               	movwf	(___fladd@a+2)^0,c
  3698   001556  0E43               	movlw	67
  3699   001558  6E21               	movwf	(___fladd@a+3)^0,c
  3700   00155A  EC36  F00D         	call	___fladd	;wreg free
  3701   00155E  0100               	movlb	0	; () banked
  3702   001560  EE20 F010          	lfsr	2,16
  3703   001564  516F               	movf	RGB2Hue@cf& (0+255),w,b
  3704   001566  26D9               	addwf	fsr2l,f,c
  3705   001568  5170               	movf	(RGB2Hue@cf+1)& (0+255),w,b
  3706   00156A  22DA               	addwfc	fsr2h,f,c
  3707   00156C  C01A  FFDE         	movff	?___fladd,postinc2
  3708   001570  C01B  FFDE         	movff	?___fladd+1,postinc2
  3709   001574  C01C  FFDE         	movff	?___fladd+2,postinc2
  3710   001578  C01D  FFDE         	movff	?___fladd+3,postinc2
  3711   00157C                     l119:
  3712                           
  3713                           ; BSR set to: 0
  3714   00157C  0012               	return		;funcret
  3715   00157E                     __end_of_RGB2Hue:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function ___flsub *****************
  3719 ;; Defined at:
  3720 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  b               4   41[COMRAM] void 
  3723 ;;  a               4   45[COMRAM] void 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;		None
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  4   41[COMRAM] void 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;Total ram usage:        8 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 2
  3742 ;; This function calls:
  3743 ;;		___fladd
  3744 ;; This function is called by:
  3745 ;;		_RGB2Hue
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text20
  3750   004634                     __ptext20:
  3751                           	callstack 0
  3752   004634                     ___flsub:
  3753                           	callstack 27
  3754   004634  0E00               	movlw	0
  3755   004636  1A2E               	xorwf	___flsub@a^0,f,c
  3756   004638  0E00               	movlw	0
  3757   00463A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  3758   00463C  0E00               	movlw	0
  3759   00463E  1A30               	xorwf	(___flsub@a+2)^0,f,c
  3760   004640  0E80               	movlw	128
  3761   004642  1A31               	xorwf	(___flsub@a+3)^0,f,c
  3762   004644  C02A  F01A         	movff	___flsub@b,___fladd@b
  3763   004648  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  3764   00464C  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  3765   004650  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  3766   004654  C02E  F01E         	movff	___flsub@a,___fladd@a
  3767   004658  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  3768   00465C  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  3769   004660  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  3770   004664  EC36  F00D         	call	___fladd	;wreg free
  3771   004668  C01A  F02A         	movff	?___fladd,?___flsub
  3772   00466C  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  3773   004670  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  3774   004674  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  3775   004678  0012               	return		;funcret
  3776   00467A                     __end_of___flsub:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function ___fladd *****************
  3780 ;; Defined at:
  3781 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  b               4   25[COMRAM] void 
  3784 ;;  a               4   29[COMRAM] void 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  grs             1   40[COMRAM] unsigned char 
  3787 ;;  bexp            1   39[COMRAM] unsigned char 
  3788 ;;  aexp            1   38[COMRAM] unsigned char 
  3789 ;;  signs           1   37[COMRAM] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  4   25[COMRAM] unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3799 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;Total ram usage:       16 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_RGB2Hue
  3810 ;;		___flsub
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text21
  3815   001A6C                     __ptext21:
  3816                           	callstack 0
  3817   001A6C                     ___fladd:
  3818                           	callstack 27
  3819   001A6C  501D               	movf	(___fladd@b+3)^0,w,c
  3820   001A6E  0B80               	andlw	128
  3821   001A70  6E26               	movwf	___fladd@signs^0,c
  3822   001A72  501D               	movf	(___fladd@b+3)^0,w,c
  3823   001A74  241D               	addwf	(___fladd@b+3)^0,w,c
  3824   001A76  6E28               	movwf	___fladd@bexp^0,c
  3825   001A78  AE1C               	btfss	(___fladd@b+2)^0,7,c
  3826   001A7A  EF41  F00D         	goto	u2941
  3827   001A7E  EF43  F00D         	goto	u2940
  3828   001A82                     u2941:
  3829   001A82  EF44  F00D         	goto	l3602
  3830   001A86                     u2940:
  3831   001A86  8028               	bsf	___fladd@bexp^0,0,c
  3832   001A88                     l3602:
  3833   001A88  5028               	movf	___fladd@bexp^0,w,c
  3834   001A8A  B4D8               	btfsc	status,2,c
  3835   001A8C  EF4A  F00D         	goto	u2951
  3836   001A90  EF4C  F00D         	goto	u2950
  3837   001A94                     u2951:
  3838   001A94  EF61  F00D         	goto	l3612
  3839   001A98                     u2950:
  3840   001A98  2828               	incf	___fladd@bexp^0,w,c
  3841   001A9A  A4D8               	btfss	status,2,c
  3842   001A9C  EF52  F00D         	goto	u2961
  3843   001AA0  EF54  F00D         	goto	u2960
  3844   001AA4                     u2961:
  3845   001AA4  EF5C  F00D         	goto	l3608
  3846   001AA8                     u2960:
  3847   001AA8  0E00               	movlw	0
  3848   001AAA  6E1A               	movwf	___fladd@b^0,c
  3849   001AAC  0E00               	movlw	0
  3850   001AAE  6E1B               	movwf	(___fladd@b+1)^0,c
  3851   001AB0  0E00               	movlw	0
  3852   001AB2  6E1C               	movwf	(___fladd@b+2)^0,c
  3853   001AB4  0E00               	movlw	0
  3854   001AB6  6E1D               	movwf	(___fladd@b+3)^0,c
  3855   001AB8                     l3608:
  3856   001AB8  8E1C               	bsf	(___fladd@b+2)^0,7,c
  3857   001ABA  0E00               	movlw	0
  3858   001ABC  6E1D               	movwf	(___fladd@b+3)^0,c
  3859   001ABE  EF69  F00D         	goto	l3614
  3860   001AC2                     l3612:
  3861   001AC2  0E00               	movlw	0
  3862   001AC4  6E1A               	movwf	___fladd@b^0,c
  3863   001AC6  0E00               	movlw	0
  3864   001AC8  6E1B               	movwf	(___fladd@b+1)^0,c
  3865   001ACA  0E00               	movlw	0
  3866   001ACC  6E1C               	movwf	(___fladd@b+2)^0,c
  3867   001ACE  0E00               	movlw	0
  3868   001AD0  6E1D               	movwf	(___fladd@b+3)^0,c
  3869   001AD2                     l3614:
  3870   001AD2  5021               	movf	(___fladd@a+3)^0,w,c
  3871   001AD4  0B80               	andlw	128
  3872   001AD6  6E27               	movwf	___fladd@aexp^0,c
  3873   001AD8  5026               	movf	___fladd@signs^0,w,c
  3874   001ADA  1827               	xorwf	___fladd@aexp^0,w,c
  3875   001ADC  B4D8               	btfsc	status,2,c
  3876   001ADE  EF73  F00D         	goto	u2971
  3877   001AE2  EF75  F00D         	goto	u2970
  3878   001AE6                     u2971:
  3879   001AE6  EF76  F00D         	goto	l3620
  3880   001AEA                     u2970:
  3881   001AEA  8C26               	bsf	___fladd@signs^0,6,c
  3882   001AEC                     l3620:
  3883   001AEC  5021               	movf	(___fladd@a+3)^0,w,c
  3884   001AEE  2421               	addwf	(___fladd@a+3)^0,w,c
  3885   001AF0  6E27               	movwf	___fladd@aexp^0,c
  3886   001AF2  AE20               	btfss	(___fladd@a+2)^0,7,c
  3887   001AF4  EF7E  F00D         	goto	u2981
  3888   001AF8  EF80  F00D         	goto	u2980
  3889   001AFC                     u2981:
  3890   001AFC  EF81  F00D         	goto	l3626
  3891   001B00                     u2980:
  3892   001B00  8027               	bsf	___fladd@aexp^0,0,c
  3893   001B02                     l3626:
  3894   001B02  5027               	movf	___fladd@aexp^0,w,c
  3895   001B04  B4D8               	btfsc	status,2,c
  3896   001B06  EF87  F00D         	goto	u2991
  3897   001B0A  EF89  F00D         	goto	u2990
  3898   001B0E                     u2991:
  3899   001B0E  EF9E  F00D         	goto	l3636
  3900   001B12                     u2990:
  3901   001B12  2827               	incf	___fladd@aexp^0,w,c
  3902   001B14  A4D8               	btfss	status,2,c
  3903   001B16  EF8F  F00D         	goto	u3001
  3904   001B1A  EF91  F00D         	goto	u3000
  3905   001B1E                     u3001:
  3906   001B1E  EF99  F00D         	goto	l3632
  3907   001B22                     u3000:
  3908   001B22  0E00               	movlw	0
  3909   001B24  6E1E               	movwf	___fladd@a^0,c
  3910   001B26  0E00               	movlw	0
  3911   001B28  6E1F               	movwf	(___fladd@a+1)^0,c
  3912   001B2A  0E00               	movlw	0
  3913   001B2C  6E20               	movwf	(___fladd@a+2)^0,c
  3914   001B2E  0E00               	movlw	0
  3915   001B30  6E21               	movwf	(___fladd@a+3)^0,c
  3916   001B32                     l3632:
  3917   001B32  8E20               	bsf	(___fladd@a+2)^0,7,c
  3918   001B34  0E00               	movlw	0
  3919   001B36  6E21               	movwf	(___fladd@a+3)^0,c
  3920   001B38  EFA6  F00D         	goto	l3638
  3921   001B3C                     l3636:
  3922   001B3C  0E00               	movlw	0
  3923   001B3E  6E1E               	movwf	___fladd@a^0,c
  3924   001B40  0E00               	movlw	0
  3925   001B42  6E1F               	movwf	(___fladd@a+1)^0,c
  3926   001B44  0E00               	movlw	0
  3927   001B46  6E20               	movwf	(___fladd@a+2)^0,c
  3928   001B48  0E00               	movlw	0
  3929   001B4A  6E21               	movwf	(___fladd@a+3)^0,c
  3930   001B4C                     l3638:
  3931   001B4C  5028               	movf	___fladd@bexp^0,w,c
  3932   001B4E  5C27               	subwf	___fladd@aexp^0,w,c
  3933   001B50  B0D8               	btfsc	status,0,c
  3934   001B52  EFAD  F00D         	goto	u3011
  3935   001B56  EFAF  F00D         	goto	u3010
  3936   001B5A                     u3011:
  3937   001B5A  EFD6  F00D         	goto	l3674
  3938   001B5E                     u3010:
  3939   001B5E  AC26               	btfss	___fladd@signs^0,6,c
  3940   001B60  EFB4  F00D         	goto	u3021
  3941   001B64  EFB6  F00D         	goto	u3020
  3942   001B68                     u3021:
  3943   001B68  EFB8  F00D         	goto	l3644
  3944   001B6C                     u3020:
  3945   001B6C  0E80               	movlw	128
  3946   001B6E  1A26               	xorwf	___fladd@signs^0,f,c
  3947   001B70                     l3644:
  3948   001B70  C028  F029         	movff	___fladd@bexp,___fladd@grs
  3949   001B74  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  3950   001B78  C029  F027         	movff	___fladd@grs,___fladd@aexp
  3951   001B7C  C01A  F029         	movff	___fladd@b,___fladd@grs
  3952   001B80  C01E  F01A         	movff	___fladd@a,___fladd@b
  3953   001B84  C029  F01E         	movff	___fladd@grs,___fladd@a
  3954   001B88  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  3955   001B8C  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  3956   001B90  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  3957   001B94  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  3958   001B98  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  3959   001B9C  C029  F020         	movff	___fladd@grs,___fladd@a+2
  3960   001BA0  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  3961   001BA4  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  3962   001BA8  C029  F021         	movff	___fladd@grs,___fladd@a+3
  3963   001BAC                     l3674:
  3964   001BAC  0E00               	movlw	0
  3965   001BAE  6E29               	movwf	___fladd@grs^0,c
  3966   001BB0  5028               	movf	___fladd@bexp^0,w,c
  3967   001BB2  C027  F022         	movff	___fladd@aexp,??___fladd
  3968   001BB6  6A23               	clrf	(??___fladd+1)^0,c
  3969   001BB8  5E22               	subwf	??___fladd^0,f,c
  3970   001BBA  0E00               	movlw	0
  3971   001BBC  5A23               	subwfb	(??___fladd+1)^0,f,c
  3972   001BBE  BE23               	btfsc	(??___fladd+1)^0,7,c
  3973   001BC0  EFEB  F00D         	goto	u3031
  3974   001BC4  5023               	movf	(??___fladd+1)^0,w,c
  3975   001BC6  E109               	bnz	u3030
  3976   001BC8  0E1A               	movlw	26
  3977   001BCA  5C22               	subwf	??___fladd^0,w,c
  3978   001BCC  A0D8               	btfss	status,0,c
  3979   001BCE  EFEB  F00D         	goto	u3031
  3980   001BD2  EFED  F00D         	goto	u3030
  3981   001BD6                     u3031:
  3982   001BD6  EF24  F00E         	goto	l1194
  3983   001BDA                     u3030:
  3984   001BDA  501A               	movf	___fladd@b^0,w,c
  3985   001BDC  101B               	iorwf	(___fladd@b+1)^0,w,c
  3986   001BDE  101C               	iorwf	(___fladd@b+2)^0,w,c
  3987   001BE0  101D               	iorwf	(___fladd@b+3)^0,w,c
  3988   001BE2  A4D8               	btfss	status,2,c
  3989   001BE4  EFF6  F00D         	goto	u3041
  3990   001BE8  EFF9  F00D         	goto	u3040
  3991   001BEC                     u3041:
  3992   001BEC  0E01               	movlw	1
  3993   001BEE  EFFA  F00D         	goto	u3050
  3994   001BF2                     u3040:
  3995   001BF2  0E00               	movlw	0
  3996   001BF4                     u3050:
  3997   001BF4  6E29               	movwf	___fladd@grs^0,c
  3998   001BF6  0E00               	movlw	0
  3999   001BF8  6E1A               	movwf	___fladd@b^0,c
  4000   001BFA  0E00               	movlw	0
  4001   001BFC  6E1B               	movwf	(___fladd@b+1)^0,c
  4002   001BFE  0E00               	movlw	0
  4003   001C00  6E1C               	movwf	(___fladd@b+2)^0,c
  4004   001C02  0E00               	movlw	0
  4005   001C04  6E1D               	movwf	(___fladd@b+3)^0,c
  4006   001C06  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  4007   001C0A  EF2D  F00E         	goto	l1193
  4008   001C0E                     l1195:
  4009   001C0E  A029               	btfss	___fladd@grs^0,0,c
  4010   001C10  EF0C  F00E         	goto	u3061
  4011   001C14  EF0E  F00E         	goto	u3060
  4012   001C18                     u3061:
  4013   001C18  EF14  F00E         	goto	l3686
  4014   001C1C                     u3060:
  4015   001C1C  90D8               	bcf	status,0,c
  4016   001C1E  3029               	rrcf	___fladd@grs^0,w,c
  4017   001C20  0901               	iorlw	1
  4018   001C22  6E29               	movwf	___fladd@grs^0,c
  4019   001C24  EF16  F00E         	goto	l3688
  4020   001C28                     l3686:
  4021   001C28  90D8               	bcf	status,0,c
  4022   001C2A  3229               	rrcf	___fladd@grs^0,f,c
  4023   001C2C                     l3688:
  4024   001C2C  A01A               	btfss	___fladd@b^0,0,c
  4025   001C2E  EF1B  F00E         	goto	u3071
  4026   001C32  EF1D  F00E         	goto	u3070
  4027   001C36                     u3071:
  4028   001C36  EF1E  F00E         	goto	l3692
  4029   001C3A                     u3070:
  4030   001C3A  8E29               	bsf	___fladd@grs^0,7,c
  4031   001C3C                     l3692:
  4032   001C3C  341D               	rlcf	(___fladd@b+3)^0,w,c
  4033   001C3E  321D               	rrcf	(___fladd@b+3)^0,f,c
  4034   001C40  321C               	rrcf	(___fladd@b+2)^0,f,c
  4035   001C42  321B               	rrcf	(___fladd@b+1)^0,f,c
  4036   001C44  321A               	rrcf	___fladd@b^0,f,c
  4037   001C46  2A28               	incf	___fladd@bexp^0,f,c
  4038   001C48                     l1194:
  4039   001C48  5027               	movf	___fladd@aexp^0,w,c
  4040   001C4A  5C28               	subwf	___fladd@bexp^0,w,c
  4041   001C4C  A0D8               	btfss	status,0,c
  4042   001C4E  EF2B  F00E         	goto	u3081
  4043   001C52  EF2D  F00E         	goto	u3080
  4044   001C56                     u3081:
  4045   001C56  EF07  F00E         	goto	l1195
  4046   001C5A                     u3080:
  4047   001C5A                     l1193:
  4048   001C5A  BC26               	btfsc	___fladd@signs^0,6,c
  4049   001C5C  EF32  F00E         	goto	u3091
  4050   001C60  EF34  F00E         	goto	u3090
  4051   001C64                     u3091:
  4052   001C64  EF74  F00E         	goto	l3720
  4053   001C68                     u3090:
  4054   001C68  5028               	movf	___fladd@bexp^0,w,c
  4055   001C6A  A4D8               	btfss	status,2,c
  4056   001C6C  EF3A  F00E         	goto	u3101
  4057   001C70  EF3C  F00E         	goto	u3100
  4058   001C74                     u3101:
  4059   001C74  EF46  F00E         	goto	l3702
  4060   001C78                     u3100:
  4061   001C78  0E00               	movlw	0
  4062   001C7A  6E1A               	movwf	?___fladd^0,c
  4063   001C7C  0E00               	movlw	0
  4064   001C7E  6E1B               	movwf	(?___fladd+1)^0,c
  4065   001C80  0E00               	movlw	0
  4066   001C82  6E1C               	movwf	(?___fladd+2)^0,c
  4067   001C84  0E00               	movlw	0
  4068   001C86  6E1D               	movwf	(?___fladd+3)^0,c
  4069   001C88  EF95  F00F         	goto	l1202
  4070   001C8C                     l3702:
  4071   001C8C  501E               	movf	___fladd@a^0,w,c
  4072   001C8E  261A               	addwf	___fladd@b^0,f,c
  4073   001C90  501F               	movf	(___fladd@a+1)^0,w,c
  4074   001C92  221B               	addwfc	(___fladd@b+1)^0,f,c
  4075   001C94  5020               	movf	(___fladd@a+2)^0,w,c
  4076   001C96  221C               	addwfc	(___fladd@b+2)^0,f,c
  4077   001C98  5021               	movf	(___fladd@a+3)^0,w,c
  4078   001C9A  221D               	addwfc	(___fladd@b+3)^0,f,c
  4079   001C9C  A01D               	btfss	(___fladd@b+3)^0,0,c
  4080   001C9E  EF53  F00E         	goto	u3111
  4081   001CA2  EF55  F00E         	goto	u3110
  4082   001CA6                     u3111:
  4083   001CA6  EF01  F00F         	goto	l3756
  4084   001CAA                     u3110:
  4085   001CAA  A029               	btfss	___fladd@grs^0,0,c
  4086   001CAC  EF5A  F00E         	goto	u3121
  4087   001CB0  EF5C  F00E         	goto	u3120
  4088   001CB4                     u3121:
  4089   001CB4  EF62  F00E         	goto	l3710
  4090   001CB8                     u3120:
  4091   001CB8  90D8               	bcf	status,0,c
  4092   001CBA  3029               	rrcf	___fladd@grs^0,w,c
  4093   001CBC  0901               	iorlw	1
  4094   001CBE  6E29               	movwf	___fladd@grs^0,c
  4095   001CC0  EF64  F00E         	goto	l3712
  4096   001CC4                     l3710:
  4097   001CC4  90D8               	bcf	status,0,c
  4098   001CC6  3229               	rrcf	___fladd@grs^0,f,c
  4099   001CC8                     l3712:
  4100   001CC8  A01A               	btfss	___fladd@b^0,0,c
  4101   001CCA  EF69  F00E         	goto	u3131
  4102   001CCE  EF6B  F00E         	goto	u3130
  4103   001CD2                     u3131:
  4104   001CD2  EF6C  F00E         	goto	l3716
  4105   001CD6                     u3130:
  4106   001CD6  8E29               	bsf	___fladd@grs^0,7,c
  4107   001CD8                     l3716:
  4108   001CD8  341D               	rlcf	(___fladd@b+3)^0,w,c
  4109   001CDA  321D               	rrcf	(___fladd@b+3)^0,f,c
  4110   001CDC  321C               	rrcf	(___fladd@b+2)^0,f,c
  4111   001CDE  321B               	rrcf	(___fladd@b+1)^0,f,c
  4112   001CE0  321A               	rrcf	___fladd@b^0,f,c
  4113   001CE2  2A28               	incf	___fladd@bexp^0,f,c
  4114   001CE4  EF01  F00F         	goto	l3756
  4115   001CE8                     l3720:
  4116   001CE8  501E               	movf	___fladd@a^0,w,c
  4117   001CEA  5C1A               	subwf	___fladd@b^0,w,c
  4118   001CEC  501F               	movf	(___fladd@a+1)^0,w,c
  4119   001CEE  581B               	subwfb	(___fladd@b+1)^0,w,c
  4120   001CF0  5020               	movf	(___fladd@a+2)^0,w,c
  4121   001CF2  581C               	subwfb	(___fladd@b+2)^0,w,c
  4122   001CF4  501D               	movf	(___fladd@b+3)^0,w,c
  4123   001CF6  0A80               	xorlw	128
  4124   001CF8  6E22               	movwf	??___fladd^0,c
  4125   001CFA  5021               	movf	(___fladd@a+3)^0,w,c
  4126   001CFC  0A80               	xorlw	128
  4127   001CFE  5822               	subwfb	??___fladd^0,w,c
  4128   001D00  B0D8               	btfsc	status,0,c
  4129   001D02  EF85  F00E         	goto	u3141
  4130   001D06  EF87  F00E         	goto	u3140
  4131   001D0A                     u3141:
  4132   001D0A  EFB2  F00E         	goto	l3730
  4133   001D0E                     u3140:
  4134   001D0E  501A               	movf	___fladd@b^0,w,c
  4135   001D10  5C1E               	subwf	___fladd@a^0,w,c
  4136   001D12  6E22               	movwf	??___fladd^0,c
  4137   001D14  501B               	movf	(___fladd@b+1)^0,w,c
  4138   001D16  581F               	subwfb	(___fladd@a+1)^0,w,c
  4139   001D18  6E23               	movwf	(??___fladd+1)^0,c
  4140   001D1A  501C               	movf	(___fladd@b+2)^0,w,c
  4141   001D1C  5820               	subwfb	(___fladd@a+2)^0,w,c
  4142   001D1E  6E24               	movwf	(??___fladd+2)^0,c
  4143   001D20  501D               	movf	(___fladd@b+3)^0,w,c
  4144   001D22  5821               	subwfb	(___fladd@a+3)^0,w,c
  4145   001D24  6E25               	movwf	(??___fladd+3)^0,c
  4146   001D26  0EFF               	movlw	255
  4147   001D28  2422               	addwf	??___fladd^0,w,c
  4148   001D2A  6E1A               	movwf	___fladd@b^0,c
  4149   001D2C  0EFF               	movlw	255
  4150   001D2E  2023               	addwfc	(??___fladd+1)^0,w,c
  4151   001D30  6E1B               	movwf	(___fladd@b+1)^0,c
  4152   001D32  0EFF               	movlw	255
  4153   001D34  2024               	addwfc	(??___fladd+2)^0,w,c
  4154   001D36  6E1C               	movwf	(___fladd@b+2)^0,c
  4155   001D38  0EFF               	movlw	255
  4156   001D3A  2025               	addwfc	(??___fladd+3)^0,w,c
  4157   001D3C  6E1D               	movwf	(___fladd@b+3)^0,c
  4158   001D3E  0E80               	movlw	128
  4159   001D40  1A26               	xorwf	___fladd@signs^0,f,c
  4160   001D42  6C29               	negf	___fladd@grs^0,c
  4161   001D44  5029               	movf	___fladd@grs^0,w,c
  4162   001D46  A4D8               	btfss	status,2,c
  4163   001D48  EFA8  F00E         	goto	u3151
  4164   001D4C  EFAA  F00E         	goto	u3150
  4165   001D50                     u3151:
  4166   001D50  EFBA  F00E         	goto	l1210
  4167   001D54                     u3150:
  4168   001D54  0E01               	movlw	1
  4169   001D56  261A               	addwf	___fladd@b^0,f,c
  4170   001D58  0E00               	movlw	0
  4171   001D5A  221B               	addwfc	(___fladd@b+1)^0,f,c
  4172   001D5C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4173   001D5E  221D               	addwfc	(___fladd@b+3)^0,f,c
  4174   001D60  EFBA  F00E         	goto	l1210
  4175   001D64                     l3730:
  4176   001D64  501E               	movf	___fladd@a^0,w,c
  4177   001D66  5E1A               	subwf	___fladd@b^0,f,c
  4178   001D68  501F               	movf	(___fladd@a+1)^0,w,c
  4179   001D6A  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  4180   001D6C  5020               	movf	(___fladd@a+2)^0,w,c
  4181   001D6E  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  4182   001D70  5021               	movf	(___fladd@a+3)^0,w,c
  4183   001D72  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  4184   001D74                     l1210:
  4185   001D74  501A               	movf	___fladd@b^0,w,c
  4186   001D76  101B               	iorwf	(___fladd@b+1)^0,w,c
  4187   001D78  101C               	iorwf	(___fladd@b+2)^0,w,c
  4188   001D7A  101D               	iorwf	(___fladd@b+3)^0,w,c
  4189   001D7C  A4D8               	btfss	status,2,c
  4190   001D7E  EFC3  F00E         	goto	u3161
  4191   001D82  EFC5  F00E         	goto	u3160
  4192   001D86                     u3161:
  4193   001D86  EFFA  F00E         	goto	l3754
  4194   001D8A                     u3160:
  4195   001D8A  5029               	movf	___fladd@grs^0,w,c
  4196   001D8C  A4D8               	btfss	status,2,c
  4197   001D8E  EFCB  F00E         	goto	u3171
  4198   001D92  EFCD  F00E         	goto	u3170
  4199   001D96                     u3171:
  4200   001D96  EFFA  F00E         	goto	l3754
  4201   001D9A                     u3170:
  4202   001D9A  0E00               	movlw	0
  4203   001D9C  6E1A               	movwf	?___fladd^0,c
  4204   001D9E  0E00               	movlw	0
  4205   001DA0  6E1B               	movwf	(?___fladd+1)^0,c
  4206   001DA2  0E00               	movlw	0
  4207   001DA4  6E1C               	movwf	(?___fladd+2)^0,c
  4208   001DA6  0E00               	movlw	0
  4209   001DA8  6E1D               	movwf	(?___fladd+3)^0,c
  4210   001DAA  EF95  F00F         	goto	l1202
  4211   001DAE                     l3738:
  4212   001DAE  90D8               	bcf	status,0,c
  4213   001DB0  361A               	rlcf	___fladd@b^0,f,c
  4214   001DB2  361B               	rlcf	(___fladd@b+1)^0,f,c
  4215   001DB4  361C               	rlcf	(___fladd@b+2)^0,f,c
  4216   001DB6  361D               	rlcf	(___fladd@b+3)^0,f,c
  4217   001DB8  AE29               	btfss	___fladd@grs^0,7,c
  4218   001DBA  EFE1  F00E         	goto	u3181
  4219   001DBE  EFE3  F00E         	goto	u3180
  4220   001DC2                     u3181:
  4221   001DC2  EFE4  F00E         	goto	l3744
  4222   001DC6                     u3180:
  4223   001DC6  801A               	bsf	___fladd@b^0,0,c
  4224   001DC8                     l3744:
  4225   001DC8  A029               	btfss	___fladd@grs^0,0,c
  4226   001DCA  EFE9  F00E         	goto	u3191
  4227   001DCE  EFEB  F00E         	goto	u3190
  4228   001DD2                     u3191:
  4229   001DD2  EFEF  F00E         	goto	l3748
  4230   001DD6                     u3190:
  4231   001DD6  80D8               	bsf	status,0,c
  4232   001DD8  3629               	rlcf	___fladd@grs^0,f,c
  4233   001DDA  EFF1  F00E         	goto	l3750
  4234   001DDE                     l3748:
  4235   001DDE  90D8               	bcf	status,0,c
  4236   001DE0  3629               	rlcf	___fladd@grs^0,f,c
  4237   001DE2                     l3750:
  4238   001DE2  5028               	movf	___fladd@bexp^0,w,c
  4239   001DE4  B4D8               	btfsc	status,2,c
  4240   001DE6  EFF7  F00E         	goto	u3201
  4241   001DEA  EFF9  F00E         	goto	u3200
  4242   001DEE                     u3201:
  4243   001DEE  EFFA  F00E         	goto	l3754
  4244   001DF2                     u3200:
  4245   001DF2  0628               	decf	___fladd@bexp^0,f,c
  4246   001DF4                     l3754:
  4247   001DF4  AE1C               	btfss	(___fladd@b+2)^0,7,c
  4248   001DF6  EFFF  F00E         	goto	u3211
  4249   001DFA  EF01  F00F         	goto	u3210
  4250   001DFE                     u3211:
  4251   001DFE  EFD7  F00E         	goto	l3738
  4252   001E02                     u3210:
  4253   001E02                     l3756:
  4254   001E02  0E00               	movlw	0
  4255   001E04  6E27               	movwf	___fladd@aexp^0,c
  4256   001E06  AE29               	btfss	___fladd@grs^0,7,c
  4257   001E08  EF08  F00F         	goto	u3221
  4258   001E0C  EF0A  F00F         	goto	u3220
  4259   001E10                     u3221:
  4260   001E10  EF22  F00F         	goto	l1219
  4261   001E14                     u3220:
  4262   001E14  C029  F022         	movff	___fladd@grs,??___fladd
  4263   001E18  0E7F               	movlw	127
  4264   001E1A  1622               	andwf	??___fladd^0,f,c
  4265   001E1C  B4D8               	btfsc	status,2,c
  4266   001E1E  EF13  F00F         	goto	u3231
  4267   001E22  EF15  F00F         	goto	u3230
  4268   001E26                     u3231:
  4269   001E26  EF19  F00F         	goto	l1220
  4270   001E2A                     u3230:
  4271   001E2A                     l3762:
  4272   001E2A  0E01               	movlw	1
  4273   001E2C  6E27               	movwf	___fladd@aexp^0,c
  4274   001E2E  EF22  F00F         	goto	l1219
  4275   001E32                     l1220:
  4276   001E32  A01A               	btfss	___fladd@b^0,0,c
  4277   001E34  EF1E  F00F         	goto	u3241
  4278   001E38  EF20  F00F         	goto	u3240
  4279   001E3C                     u3241:
  4280   001E3C  EF22  F00F         	goto	l1219
  4281   001E40                     u3240:
  4282   001E40  EF15  F00F         	goto	l3762
  4283   001E44                     l1219:
  4284   001E44  5027               	movf	___fladd@aexp^0,w,c
  4285   001E46  B4D8               	btfsc	status,2,c
  4286   001E48  EF28  F00F         	goto	u3251
  4287   001E4C  EF2A  F00F         	goto	u3250
  4288   001E50                     u3251:
  4289   001E50  EF55  F00F         	goto	l3774
  4290   001E54                     u3250:
  4291   001E54  0E01               	movlw	1
  4292   001E56  261A               	addwf	___fladd@b^0,f,c
  4293   001E58  0E00               	movlw	0
  4294   001E5A  221B               	addwfc	(___fladd@b+1)^0,f,c
  4295   001E5C  221C               	addwfc	(___fladd@b+2)^0,f,c
  4296   001E5E  221D               	addwfc	(___fladd@b+3)^0,f,c
  4297   001E60  A01D               	btfss	(___fladd@b+3)^0,0,c
  4298   001E62  EF35  F00F         	goto	u3261
  4299   001E66  EF37  F00F         	goto	u3260
  4300   001E6A                     u3261:
  4301   001E6A  EF55  F00F         	goto	l3774
  4302   001E6E                     u3260:
  4303   001E6E  C01A  F022         	movff	___fladd@b,??___fladd
  4304   001E72  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  4305   001E76  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  4306   001E7A  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  4307   001E7E  3425               	rlcf	(??___fladd+3)^0,w,c
  4308   001E80  3225               	rrcf	(??___fladd+3)^0,f,c
  4309   001E82  3224               	rrcf	(??___fladd+2)^0,f,c
  4310   001E84  3223               	rrcf	(??___fladd+1)^0,f,c
  4311   001E86  3222               	rrcf	??___fladd^0,f,c
  4312   001E88  C022  F01A         	movff	??___fladd,___fladd@b
  4313   001E8C  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  4314   001E90  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  4315   001E94  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  4316   001E98  2828               	incf	___fladd@bexp^0,w,c
  4317   001E9A  B4D8               	btfsc	status,2,c
  4318   001E9C  EF52  F00F         	goto	u3271
  4319   001EA0  EF54  F00F         	goto	u3270
  4320   001EA4                     u3271:
  4321   001EA4  EF55  F00F         	goto	l3774
  4322   001EA8                     u3270:
  4323   001EA8  2A28               	incf	___fladd@bexp^0,f,c
  4324   001EAA                     l3774:
  4325   001EAA  2828               	incf	___fladd@bexp^0,w,c
  4326   001EAC  B4D8               	btfsc	status,2,c
  4327   001EAE  EF5B  F00F         	goto	u3281
  4328   001EB2  EF5D  F00F         	goto	u3280
  4329   001EB6                     u3281:
  4330   001EB6  EF65  F00F         	goto	l3778
  4331   001EBA                     u3280:
  4332   001EBA  5028               	movf	___fladd@bexp^0,w,c
  4333   001EBC  A4D8               	btfss	status,2,c
  4334   001EBE  EF63  F00F         	goto	u3291
  4335   001EC2  EF65  F00F         	goto	u3290
  4336   001EC6                     u3291:
  4337   001EC6  EF77  F00F         	goto	l3782
  4338   001ECA                     u3290:
  4339   001ECA                     l3778:
  4340   001ECA  0E00               	movlw	0
  4341   001ECC  6E1A               	movwf	___fladd@b^0,c
  4342   001ECE  0E00               	movlw	0
  4343   001ED0  6E1B               	movwf	(___fladd@b+1)^0,c
  4344   001ED2  0E00               	movlw	0
  4345   001ED4  6E1C               	movwf	(___fladd@b+2)^0,c
  4346   001ED6  0E00               	movlw	0
  4347   001ED8  6E1D               	movwf	(___fladd@b+3)^0,c
  4348   001EDA  5028               	movf	___fladd@bexp^0,w,c
  4349   001EDC  A4D8               	btfss	status,2,c
  4350   001EDE  EF73  F00F         	goto	u3301
  4351   001EE2  EF75  F00F         	goto	u3300
  4352   001EE6                     u3301:
  4353   001EE6  EF77  F00F         	goto	l3782
  4354   001EEA                     u3300:
  4355   001EEA  0E00               	movlw	0
  4356   001EEC  6E26               	movwf	___fladd@signs^0,c
  4357   001EEE                     l3782:
  4358   001EEE  A028               	btfss	___fladd@bexp^0,0,c
  4359   001EF0  EF7C  F00F         	goto	u3311
  4360   001EF4  EF7E  F00F         	goto	u3310
  4361   001EF8                     u3311:
  4362   001EF8  EF81  F00F         	goto	l3786
  4363   001EFC                     u3310:
  4364   001EFC  8E1C               	bsf	(___fladd@b+2)^0,7,c
  4365   001EFE  EF82  F00F         	goto	l3788
  4366   001F02                     l3786:
  4367   001F02  9E1C               	bcf	(___fladd@b+2)^0,7,c
  4368   001F04                     l3788:
  4369   001F04  90D8               	bcf	status,0,c
  4370   001F06  3028               	rrcf	___fladd@bexp^0,w,c
  4371   001F08  6E1D               	movwf	(___fladd@b+3)^0,c
  4372   001F0A  AE26               	btfss	___fladd@signs^0,7,c
  4373   001F0C  EF8A  F00F         	goto	u3321
  4374   001F10  EF8C  F00F         	goto	u3320
  4375   001F14                     u3321:
  4376   001F14  EF8D  F00F         	goto	l3794
  4377   001F18                     u3320:
  4378   001F18  8E1D               	bsf	(___fladd@b+3)^0,7,c
  4379   001F1A                     l3794:
  4380   001F1A  C01A  F01A         	movff	___fladd@b,?___fladd
  4381   001F1E  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  4382   001F22  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  4383   001F26  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  4384   001F2A                     l1202:
  4385   001F2A  0012               	return		;funcret
  4386   001F2C                     __end_of___fladd:
  4387                           	callstack 0
  4388                           
  4389 ;; *************** function ___fleq *****************
  4390 ;; Defined at:
  4391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  ff1             4    0[COMRAM] unsigned char 
  4394 ;;  ff2             4    4[COMRAM] unsigned char 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;		None               void
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:       12 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_RGB2Hue
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text22
  4421   003A48                     __ptext22:
  4422                           	callstack 0
  4423   003A48                     ___fleq:
  4424                           	callstack 28
  4425   003A48  0E00               	movlw	0
  4426   003A4A  1401               	andwf	___fleq@ff1^0,w,c
  4427   003A4C  6E09               	movwf	??___fleq^0,c
  4428   003A4E  0E00               	movlw	0
  4429   003A50  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4430   003A52  6E0A               	movwf	(??___fleq+1)^0,c
  4431   003A54  0E80               	movlw	128
  4432   003A56  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4433   003A58  6E0B               	movwf	(??___fleq+2)^0,c
  4434   003A5A  0E7F               	movlw	127
  4435   003A5C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4436   003A5E  6E0C               	movwf	(??___fleq+3)^0,c
  4437   003A60  5009               	movf	??___fleq^0,w,c
  4438   003A62  100A               	iorwf	(??___fleq+1)^0,w,c
  4439   003A64  100B               	iorwf	(??___fleq+2)^0,w,c
  4440   003A66  100C               	iorwf	(??___fleq+3)^0,w,c
  4441   003A68  A4D8               	btfss	status,2,c
  4442   003A6A  EF39  F01D         	goto	u3901
  4443   003A6E  EF3B  F01D         	goto	u3900
  4444   003A72                     u3901:
  4445   003A72  EF43  F01D         	goto	l4184
  4446   003A76                     u3900:
  4447   003A76  0E00               	movlw	0
  4448   003A78  6E01               	movwf	___fleq@ff1^0,c
  4449   003A7A  0E00               	movlw	0
  4450   003A7C  6E02               	movwf	(___fleq@ff1+1)^0,c
  4451   003A7E  0E00               	movlw	0
  4452   003A80  6E03               	movwf	(___fleq@ff1+2)^0,c
  4453   003A82  0E00               	movlw	0
  4454   003A84  6E04               	movwf	(___fleq@ff1+3)^0,c
  4455   003A86                     l4184:
  4456   003A86  0E00               	movlw	0
  4457   003A88  1405               	andwf	___fleq@ff2^0,w,c
  4458   003A8A  6E09               	movwf	??___fleq^0,c
  4459   003A8C  0E00               	movlw	0
  4460   003A8E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4461   003A90  6E0A               	movwf	(??___fleq+1)^0,c
  4462   003A92  0E80               	movlw	128
  4463   003A94  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4464   003A96  6E0B               	movwf	(??___fleq+2)^0,c
  4465   003A98  0E7F               	movlw	127
  4466   003A9A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4467   003A9C  6E0C               	movwf	(??___fleq+3)^0,c
  4468   003A9E  5009               	movf	??___fleq^0,w,c
  4469   003AA0  100A               	iorwf	(??___fleq+1)^0,w,c
  4470   003AA2  100B               	iorwf	(??___fleq+2)^0,w,c
  4471   003AA4  100C               	iorwf	(??___fleq+3)^0,w,c
  4472   003AA6  A4D8               	btfss	status,2,c
  4473   003AA8  EF58  F01D         	goto	u3911
  4474   003AAC  EF5A  F01D         	goto	u3910
  4475   003AB0                     u3911:
  4476   003AB0  EF62  F01D         	goto	l4188
  4477   003AB4                     u3910:
  4478   003AB4  0E00               	movlw	0
  4479   003AB6  6E05               	movwf	___fleq@ff2^0,c
  4480   003AB8  0E00               	movlw	0
  4481   003ABA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4482   003ABC  0E00               	movlw	0
  4483   003ABE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4484   003AC0  0E00               	movlw	0
  4485   003AC2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4486   003AC4                     l4188:
  4487   003AC4  5005               	movf	___fleq@ff2^0,w,c
  4488   003AC6  1801               	xorwf	___fleq@ff1^0,w,c
  4489   003AC8  E10F               	bnz	u3920
  4490   003ACA  5006               	movf	(___fleq@ff2+1)^0,w,c
  4491   003ACC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4492   003ACE  E10C               	bnz	u3920
  4493   003AD0  5007               	movf	(___fleq@ff2+2)^0,w,c
  4494   003AD2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4495   003AD4  E109               	bnz	u3920
  4496   003AD6  5008               	movf	(___fleq@ff2+3)^0,w,c
  4497   003AD8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4498   003ADA  B4D8               	btfsc	status,2,c
  4499   003ADC  EF72  F01D         	goto	u3921
  4500   003AE0  EF74  F01D         	goto	u3920
  4501   003AE4                     u3921:
  4502   003AE4  EF77  F01D         	goto	l4192
  4503   003AE8                     u3920:
  4504   003AE8  90D8               	bcf	status,0,c
  4505   003AEA  EF78  F01D         	goto	l924
  4506   003AEE                     l4192:
  4507   003AEE  80D8               	bsf	status,0,c
  4508   003AF0                     l924:
  4509   003AF0  0012               	return		;funcret
  4510   003AF2                     __end_of___fleq:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function ___fldiv *****************
  4514 ;; Defined at:
  4515 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  b               4   49[COMRAM] unsigned char 
  4518 ;;  a               4   53[COMRAM] unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  grs             4   68[COMRAM] unsigned long 
  4521 ;;  rem             4   61[COMRAM] unsigned long 
  4522 ;;  new_exp         2   66[COMRAM] short 
  4523 ;;  aexp            1   73[COMRAM] unsigned char 
  4524 ;;  bexp            1   72[COMRAM] unsigned char 
  4525 ;;  sign            1   65[COMRAM] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  4   49[COMRAM] unsigned char 
  4528 ;; Registers used:
  4529 ;;		wreg, status,2, status,0
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4535 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4536 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4538 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4539 ;;Total ram usage:       25 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 1
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_RGB2Hue
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text23
  4550   002358                     __ptext23:
  4551                           	callstack 0
  4552   002358                     ___fldiv:
  4553                           	callstack 28
  4554   002358  5035               	movf	(___fldiv@b+3)^0,w,c
  4555   00235A  0B80               	andlw	128
  4556   00235C  6E42               	movwf	___fldiv@sign^0,c
  4557   00235E  5035               	movf	(___fldiv@b+3)^0,w,c
  4558   002360  2435               	addwf	(___fldiv@b+3)^0,w,c
  4559   002362  6E49               	movwf	___fldiv@bexp^0,c
  4560   002364  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4561   002366  EFB7  F011         	goto	u3671
  4562   00236A  EFB9  F011         	goto	u3670
  4563   00236E                     u3671:
  4564   00236E  EFBA  F011         	goto	l4042
  4565   002372                     u3670:
  4566   002372  8049               	bsf	___fldiv@bexp^0,0,c
  4567   002374                     l4042:
  4568   002374  5049               	movf	___fldiv@bexp^0,w,c
  4569   002376  B4D8               	btfsc	status,2,c
  4570   002378  EFC0  F011         	goto	u3681
  4571   00237C  EFC2  F011         	goto	u3680
  4572   002380                     u3681:
  4573   002380  EFD7  F011         	goto	l4052
  4574   002384                     u3680:
  4575   002384  2849               	incf	___fldiv@bexp^0,w,c
  4576   002386  A4D8               	btfss	status,2,c
  4577   002388  EFC8  F011         	goto	u3691
  4578   00238C  EFCA  F011         	goto	u3690
  4579   002390                     u3691:
  4580   002390  EFD2  F011         	goto	l4048
  4581   002394                     u3690:
  4582   002394  0E00               	movlw	0
  4583   002396  6E32               	movwf	___fldiv@b^0,c
  4584   002398  0E00               	movlw	0
  4585   00239A  6E33               	movwf	(___fldiv@b+1)^0,c
  4586   00239C  0E00               	movlw	0
  4587   00239E  6E34               	movwf	(___fldiv@b+2)^0,c
  4588   0023A0  0E00               	movlw	0
  4589   0023A2  6E35               	movwf	(___fldiv@b+3)^0,c
  4590   0023A4                     l4048:
  4591   0023A4  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4592   0023A6  0E00               	movlw	0
  4593   0023A8  6E35               	movwf	(___fldiv@b+3)^0,c
  4594   0023AA  EFDF  F011         	goto	l4054
  4595   0023AE                     l4052:
  4596   0023AE  0E00               	movlw	0
  4597   0023B0  6E32               	movwf	___fldiv@b^0,c
  4598   0023B2  0E00               	movlw	0
  4599   0023B4  6E33               	movwf	(___fldiv@b+1)^0,c
  4600   0023B6  0E00               	movlw	0
  4601   0023B8  6E34               	movwf	(___fldiv@b+2)^0,c
  4602   0023BA  0E00               	movlw	0
  4603   0023BC  6E35               	movwf	(___fldiv@b+3)^0,c
  4604   0023BE                     l4054:
  4605   0023BE  5039               	movf	(___fldiv@a+3)^0,w,c
  4606   0023C0  0B80               	andlw	128
  4607   0023C2  1A42               	xorwf	___fldiv@sign^0,f,c
  4608   0023C4  5039               	movf	(___fldiv@a+3)^0,w,c
  4609   0023C6  2439               	addwf	(___fldiv@a+3)^0,w,c
  4610   0023C8  6E4A               	movwf	___fldiv@aexp^0,c
  4611   0023CA  AE38               	btfss	(___fldiv@a+2)^0,7,c
  4612   0023CC  EFEA  F011         	goto	u3701
  4613   0023D0  EFEC  F011         	goto	u3700
  4614   0023D4                     u3701:
  4615   0023D4  EFED  F011         	goto	l4062
  4616   0023D8                     u3700:
  4617   0023D8  804A               	bsf	___fldiv@aexp^0,0,c
  4618   0023DA                     l4062:
  4619   0023DA  504A               	movf	___fldiv@aexp^0,w,c
  4620   0023DC  B4D8               	btfsc	status,2,c
  4621   0023DE  EFF3  F011         	goto	u3711
  4622   0023E2  EFF5  F011         	goto	u3710
  4623   0023E6                     u3711:
  4624   0023E6  EF0A  F012         	goto	l4072
  4625   0023EA                     u3710:
  4626   0023EA  284A               	incf	___fldiv@aexp^0,w,c
  4627   0023EC  A4D8               	btfss	status,2,c
  4628   0023EE  EFFB  F011         	goto	u3721
  4629   0023F2  EFFD  F011         	goto	u3720
  4630   0023F6                     u3721:
  4631   0023F6  EF05  F012         	goto	l4068
  4632   0023FA                     u3720:
  4633   0023FA  0E00               	movlw	0
  4634   0023FC  6E36               	movwf	___fldiv@a^0,c
  4635   0023FE  0E00               	movlw	0
  4636   002400  6E37               	movwf	(___fldiv@a+1)^0,c
  4637   002402  0E00               	movlw	0
  4638   002404  6E38               	movwf	(___fldiv@a+2)^0,c
  4639   002406  0E00               	movlw	0
  4640   002408  6E39               	movwf	(___fldiv@a+3)^0,c
  4641   00240A                     l4068:
  4642   00240A  8E38               	bsf	(___fldiv@a+2)^0,7,c
  4643   00240C  0E00               	movlw	0
  4644   00240E  6E39               	movwf	(___fldiv@a+3)^0,c
  4645   002410  EF12  F012         	goto	l4074
  4646   002414                     l4072:
  4647   002414  0E00               	movlw	0
  4648   002416  6E36               	movwf	___fldiv@a^0,c
  4649   002418  0E00               	movlw	0
  4650   00241A  6E37               	movwf	(___fldiv@a+1)^0,c
  4651   00241C  0E00               	movlw	0
  4652   00241E  6E38               	movwf	(___fldiv@a+2)^0,c
  4653   002420  0E00               	movlw	0
  4654   002422  6E39               	movwf	(___fldiv@a+3)^0,c
  4655   002424                     l4074:
  4656   002424  5036               	movf	___fldiv@a^0,w,c
  4657   002426  1037               	iorwf	(___fldiv@a+1)^0,w,c
  4658   002428  1038               	iorwf	(___fldiv@a+2)^0,w,c
  4659   00242A  1039               	iorwf	(___fldiv@a+3)^0,w,c
  4660   00242C  A4D8               	btfss	status,2,c
  4661   00242E  EF1B  F012         	goto	u3731
  4662   002432  EF1D  F012         	goto	u3730
  4663   002436                     u3731:
  4664   002436  EF35  F012         	goto	l4086
  4665   00243A                     u3730:
  4666   00243A  0E00               	movlw	0
  4667   00243C  6E32               	movwf	___fldiv@b^0,c
  4668   00243E  0E00               	movlw	0
  4669   002440  6E33               	movwf	(___fldiv@b+1)^0,c
  4670   002442  0E00               	movlw	0
  4671   002444  6E34               	movwf	(___fldiv@b+2)^0,c
  4672   002446  0E00               	movlw	0
  4673   002448  6E35               	movwf	(___fldiv@b+3)^0,c
  4674   00244A  0E80               	movlw	128
  4675   00244C  1234               	iorwf	(___fldiv@b+2)^0,f,c
  4676   00244E  0E7F               	movlw	127
  4677   002450  1235               	iorwf	(___fldiv@b+3)^0,f,c
  4678   002452                     l4080:
  4679   002452  5042               	movf	___fldiv@sign^0,w,c
  4680   002454  1235               	iorwf	(___fldiv@b+3)^0,f,c
  4681   002456  C032  F032         	movff	___fldiv@b,?___fldiv
  4682   00245A  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  4683   00245E  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  4684   002462  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  4685   002466  EF78  F013         	goto	l1247
  4686   00246A                     l4086:
  4687   00246A  5049               	movf	___fldiv@bexp^0,w,c
  4688   00246C  A4D8               	btfss	status,2,c
  4689   00246E  EF3B  F012         	goto	u3741
  4690   002472  EF3D  F012         	goto	u3740
  4691   002476                     u3741:
  4692   002476  EF47  F012         	goto	l4094
  4693   00247A                     u3740:
  4694   00247A  0E00               	movlw	0
  4695   00247C  6E32               	movwf	?___fldiv^0,c
  4696   00247E  0E00               	movlw	0
  4697   002480  6E33               	movwf	(?___fldiv+1)^0,c
  4698   002482  0E00               	movlw	0
  4699   002484  6E34               	movwf	(?___fldiv+2)^0,c
  4700   002486  0E00               	movlw	0
  4701   002488  6E35               	movwf	(?___fldiv+3)^0,c
  4702   00248A  EF78  F013         	goto	l1247
  4703   00248E                     l4094:
  4704   00248E  504A               	movf	___fldiv@aexp^0,w,c
  4705   002490  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  4706   002494  6A3B               	clrf	(??___fldiv+1)^0,c
  4707   002496  5E3A               	subwf	??___fldiv^0,f,c
  4708   002498  0E00               	movlw	0
  4709   00249A  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  4710   00249C  0E7F               	movlw	127
  4711   00249E  243A               	addwf	??___fldiv^0,w,c
  4712   0024A0  6E43               	movwf	___fldiv@new_exp^0,c
  4713   0024A2  0E00               	movlw	0
  4714   0024A4  203B               	addwfc	(??___fldiv+1)^0,w,c
  4715   0024A6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4716   0024A8  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  4717   0024AC  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  4718   0024B0  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  4719   0024B4  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  4720   0024B8  0E00               	movlw	0
  4721   0024BA  6E32               	movwf	___fldiv@b^0,c
  4722   0024BC  0E00               	movlw	0
  4723   0024BE  6E33               	movwf	(___fldiv@b+1)^0,c
  4724   0024C0  0E00               	movlw	0
  4725   0024C2  6E34               	movwf	(___fldiv@b+2)^0,c
  4726   0024C4  0E00               	movlw	0
  4727   0024C6  6E35               	movwf	(___fldiv@b+3)^0,c
  4728   0024C8  0E00               	movlw	0
  4729   0024CA  6E45               	movwf	___fldiv@grs^0,c
  4730   0024CC  0E00               	movlw	0
  4731   0024CE  6E46               	movwf	(___fldiv@grs+1)^0,c
  4732   0024D0  0E00               	movlw	0
  4733   0024D2  6E47               	movwf	(___fldiv@grs+2)^0,c
  4734   0024D4  0E00               	movlw	0
  4735   0024D6  6E48               	movwf	(___fldiv@grs+3)^0,c
  4736   0024D8  0E00               	movlw	0
  4737   0024DA  6E4A               	movwf	___fldiv@aexp^0,c
  4738   0024DC  EFA8  F012         	goto	l1249
  4739   0024E0                     l4104:
  4740   0024E0  504A               	movf	___fldiv@aexp^0,w,c
  4741   0024E2  B4D8               	btfsc	status,2,c
  4742   0024E4  EF76  F012         	goto	u3751
  4743   0024E8  EF78  F012         	goto	u3750
  4744   0024EC                     u3751:
  4745   0024EC  EF8F  F012         	goto	l4112
  4746   0024F0                     u3750:
  4747   0024F0  90D8               	bcf	status,0,c
  4748   0024F2  363E               	rlcf	___fldiv@rem^0,f,c
  4749   0024F4  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  4750   0024F6  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  4751   0024F8  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  4752   0024FA  90D8               	bcf	status,0,c
  4753   0024FC  3632               	rlcf	___fldiv@b^0,f,c
  4754   0024FE  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4755   002500  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4756   002502  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4757   002504  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4758   002506  EF87  F012         	goto	u3761
  4759   00250A  EF89  F012         	goto	u3760
  4760   00250E                     u3761:
  4761   00250E  EF8A  F012         	goto	l1252
  4762   002512                     u3760:
  4763   002512  8032               	bsf	___fldiv@b^0,0,c
  4764   002514                     l1252:
  4765   002514  90D8               	bcf	status,0,c
  4766   002516  3645               	rlcf	___fldiv@grs^0,f,c
  4767   002518  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4768   00251A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4769   00251C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4770   00251E                     l4112:
  4771   00251E  5036               	movf	___fldiv@a^0,w,c
  4772   002520  5C3E               	subwf	___fldiv@rem^0,w,c
  4773   002522  5037               	movf	(___fldiv@a+1)^0,w,c
  4774   002524  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  4775   002526  5038               	movf	(___fldiv@a+2)^0,w,c
  4776   002528  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  4777   00252A  5039               	movf	(___fldiv@a+3)^0,w,c
  4778   00252C  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  4779   00252E  A0D8               	btfss	status,0,c
  4780   002530  EF9C  F012         	goto	u3771
  4781   002534  EF9E  F012         	goto	u3770
  4782   002538                     u3771:
  4783   002538  EFA7  F012         	goto	l4118
  4784   00253C                     u3770:
  4785   00253C  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  4786   00253E  5036               	movf	___fldiv@a^0,w,c
  4787   002540  5E3E               	subwf	___fldiv@rem^0,f,c
  4788   002542  5037               	movf	(___fldiv@a+1)^0,w,c
  4789   002544  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  4790   002546  5038               	movf	(___fldiv@a+2)^0,w,c
  4791   002548  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  4792   00254A  5039               	movf	(___fldiv@a+3)^0,w,c
  4793   00254C  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  4794   00254E                     l4118:
  4795   00254E  2A4A               	incf	___fldiv@aexp^0,f,c
  4796   002550                     l1249:
  4797   002550  0E19               	movlw	25
  4798   002552  644A               	cpfsgt	___fldiv@aexp^0,c
  4799   002554  EFAE  F012         	goto	u3781
  4800   002558  EFB0  F012         	goto	u3780
  4801   00255C                     u3781:
  4802   00255C  EF70  F012         	goto	l4104
  4803   002560                     u3780:
  4804   002560  503E               	movf	___fldiv@rem^0,w,c
  4805   002562  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  4806   002564  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  4807   002566  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  4808   002568  B4D8               	btfsc	status,2,c
  4809   00256A  EFB9  F012         	goto	u3791
  4810   00256E  EFBB  F012         	goto	u3790
  4811   002572                     u3791:
  4812   002572  EFD3  F012         	goto	l4130
  4813   002576                     u3790:
  4814   002576  8045               	bsf	___fldiv@grs^0,0,c
  4815   002578  EFD3  F012         	goto	l4130
  4816   00257C                     l4124:
  4817   00257C  90D8               	bcf	status,0,c
  4818   00257E  3632               	rlcf	___fldiv@b^0,f,c
  4819   002580  3633               	rlcf	(___fldiv@b+1)^0,f,c
  4820   002582  3634               	rlcf	(___fldiv@b+2)^0,f,c
  4821   002584  3635               	rlcf	(___fldiv@b+3)^0,f,c
  4822   002586  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4823   002588  EFC8  F012         	goto	u3801
  4824   00258C  EFCA  F012         	goto	u3800
  4825   002590                     u3801:
  4826   002590  EFCB  F012         	goto	l1258
  4827   002594                     u3800:
  4828   002594  8032               	bsf	___fldiv@b^0,0,c
  4829   002596                     l1258:
  4830   002596  90D8               	bcf	status,0,c
  4831   002598  3645               	rlcf	___fldiv@grs^0,f,c
  4832   00259A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  4833   00259C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  4834   00259E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  4835   0025A0  0643               	decf	___fldiv@new_exp^0,f,c
  4836   0025A2  A0D8               	btfss	status,0,c
  4837   0025A4  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  4838   0025A6                     l4130:
  4839   0025A6  AE34               	btfss	(___fldiv@b+2)^0,7,c
  4840   0025A8  EFD8  F012         	goto	u3811
  4841   0025AC  EFDA  F012         	goto	u3810
  4842   0025B0                     u3811:
  4843   0025B0  EFBE  F012         	goto	l4124
  4844   0025B4                     u3810:
  4845   0025B4  0E00               	movlw	0
  4846   0025B6  6E4A               	movwf	___fldiv@aexp^0,c
  4847   0025B8  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  4848   0025BA  EFE1  F012         	goto	u3821
  4849   0025BE  EFE3  F012         	goto	u3820
  4850   0025C2                     u3821:
  4851   0025C2  EF07  F013         	goto	l1260
  4852   0025C6                     u3820:
  4853   0025C6  0EFF               	movlw	255
  4854   0025C8  1445               	andwf	___fldiv@grs^0,w,c
  4855   0025CA  6E3A               	movwf	??___fldiv^0,c
  4856   0025CC  0EFF               	movlw	255
  4857   0025CE  1446               	andwf	(___fldiv@grs+1)^0,w,c
  4858   0025D0  6E3B               	movwf	(??___fldiv+1)^0,c
  4859   0025D2  0EFF               	movlw	255
  4860   0025D4  1447               	andwf	(___fldiv@grs+2)^0,w,c
  4861   0025D6  6E3C               	movwf	(??___fldiv+2)^0,c
  4862   0025D8  0E7F               	movlw	127
  4863   0025DA  1448               	andwf	(___fldiv@grs+3)^0,w,c
  4864   0025DC  6E3D               	movwf	(??___fldiv+3)^0,c
  4865   0025DE  503A               	movf	??___fldiv^0,w,c
  4866   0025E0  103B               	iorwf	(??___fldiv+1)^0,w,c
  4867   0025E2  103C               	iorwf	(??___fldiv+2)^0,w,c
  4868   0025E4  103D               	iorwf	(??___fldiv+3)^0,w,c
  4869   0025E6  B4D8               	btfsc	status,2,c
  4870   0025E8  EFF8  F012         	goto	u3831
  4871   0025EC  EFFA  F012         	goto	u3830
  4872   0025F0                     u3831:
  4873   0025F0  EFFE  F012         	goto	l1261
  4874   0025F4                     u3830:
  4875   0025F4                     l4138:
  4876   0025F4  0E01               	movlw	1
  4877   0025F6  6E4A               	movwf	___fldiv@aexp^0,c
  4878   0025F8  EF07  F013         	goto	l1260
  4879   0025FC                     l1261:
  4880   0025FC  A032               	btfss	___fldiv@b^0,0,c
  4881   0025FE  EF03  F013         	goto	u3841
  4882   002602  EF05  F013         	goto	u3840
  4883   002606                     u3841:
  4884   002606  EF07  F013         	goto	l1260
  4885   00260A                     u3840:
  4886   00260A  EFFA  F012         	goto	l4138
  4887   00260E                     l1260:
  4888   00260E  504A               	movf	___fldiv@aexp^0,w,c
  4889   002610  B4D8               	btfsc	status,2,c
  4890   002612  EF0D  F013         	goto	u3851
  4891   002616  EF0F  F013         	goto	u3850
  4892   00261A                     u3851:
  4893   00261A  EF33  F013         	goto	l4150
  4894   00261E                     u3850:
  4895   00261E  0E01               	movlw	1
  4896   002620  2632               	addwf	___fldiv@b^0,f,c
  4897   002622  0E00               	movlw	0
  4898   002624  2233               	addwfc	(___fldiv@b+1)^0,f,c
  4899   002626  2234               	addwfc	(___fldiv@b+2)^0,f,c
  4900   002628  2235               	addwfc	(___fldiv@b+3)^0,f,c
  4901   00262A  A035               	btfss	(___fldiv@b+3)^0,0,c
  4902   00262C  EF1A  F013         	goto	u3861
  4903   002630  EF1C  F013         	goto	u3860
  4904   002634                     u3861:
  4905   002634  EF33  F013         	goto	l4150
  4906   002638                     u3860:
  4907   002638  C032  F03A         	movff	___fldiv@b,??___fldiv
  4908   00263C  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  4909   002640  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  4910   002644  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  4911   002648  343D               	rlcf	(??___fldiv+3)^0,w,c
  4912   00264A  323D               	rrcf	(??___fldiv+3)^0,f,c
  4913   00264C  323C               	rrcf	(??___fldiv+2)^0,f,c
  4914   00264E  323B               	rrcf	(??___fldiv+1)^0,f,c
  4915   002650  323A               	rrcf	??___fldiv^0,f,c
  4916   002652  C03A  F032         	movff	??___fldiv,___fldiv@b
  4917   002656  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  4918   00265A  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  4919   00265E  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  4920   002662  4A43               	infsnz	___fldiv@new_exp^0,f,c
  4921   002664  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  4922   002666                     l4150:
  4923   002666  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4924   002668  EF3E  F013         	goto	u3871
  4925   00266C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4926   00266E  E108               	bnz	u3870
  4927   002670  2843               	incf	___fldiv@new_exp^0,w,c
  4928   002672  A0D8               	btfss	status,0,c
  4929   002674  EF3E  F013         	goto	u3871
  4930   002678  EF40  F013         	goto	u3870
  4931   00267C                     u3871:
  4932   00267C  EF4B  F013         	goto	l4154
  4933   002680                     u3870:
  4934   002680  0E00               	movlw	0
  4935   002682  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4936   002684  6843               	setf	___fldiv@new_exp^0,c
  4937   002686  0E00               	movlw	0
  4938   002688  6E32               	movwf	___fldiv@b^0,c
  4939   00268A  0E00               	movlw	0
  4940   00268C  6E33               	movwf	(___fldiv@b+1)^0,c
  4941   00268E  0E00               	movlw	0
  4942   002690  6E34               	movwf	(___fldiv@b+2)^0,c
  4943   002692  0E00               	movlw	0
  4944   002694  6E35               	movwf	(___fldiv@b+3)^0,c
  4945   002696                     l4154:
  4946   002696  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4947   002698  EF58  F013         	goto	u3880
  4948   00269C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  4949   00269E  E106               	bnz	u3881
  4950   0026A0  0443               	decf	___fldiv@new_exp^0,w,c
  4951   0026A2  B0D8               	btfsc	status,0,c
  4952   0026A4  EF56  F013         	goto	u3881
  4953   0026A8  EF58  F013         	goto	u3880
  4954   0026AC                     u3881:
  4955   0026AC  EF66  F013         	goto	l4158
  4956   0026B0                     u3880:
  4957   0026B0  0E00               	movlw	0
  4958   0026B2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  4959   0026B4  0E00               	movlw	0
  4960   0026B6  6E43               	movwf	___fldiv@new_exp^0,c
  4961   0026B8  0E00               	movlw	0
  4962   0026BA  6E32               	movwf	___fldiv@b^0,c
  4963   0026BC  0E00               	movlw	0
  4964   0026BE  6E33               	movwf	(___fldiv@b+1)^0,c
  4965   0026C0  0E00               	movlw	0
  4966   0026C2  6E34               	movwf	(___fldiv@b+2)^0,c
  4967   0026C4  0E00               	movlw	0
  4968   0026C6  6E35               	movwf	(___fldiv@b+3)^0,c
  4969   0026C8  0E00               	movlw	0
  4970   0026CA  6E42               	movwf	___fldiv@sign^0,c
  4971   0026CC                     l4158:
  4972   0026CC  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  4973   0026D0  A049               	btfss	___fldiv@bexp^0,0,c
  4974   0026D2  EF6D  F013         	goto	u3891
  4975   0026D6  EF6F  F013         	goto	u3890
  4976   0026DA                     u3891:
  4977   0026DA  EF72  F013         	goto	l4164
  4978   0026DE                     u3890:
  4979   0026DE  8E34               	bsf	(___fldiv@b+2)^0,7,c
  4980   0026E0  EF73  F013         	goto	l4166
  4981   0026E4                     l4164:
  4982   0026E4  9E34               	bcf	(___fldiv@b+2)^0,7,c
  4983   0026E6                     l4166:
  4984   0026E6  90D8               	bcf	status,0,c
  4985   0026E8  3049               	rrcf	___fldiv@bexp^0,w,c
  4986   0026EA  6E35               	movwf	(___fldiv@b+3)^0,c
  4987   0026EC  EF29  F012         	goto	l4080
  4988   0026F0                     l1247:
  4989   0026F0  0012               	return		;funcret
  4990   0026F2                     __end_of___fldiv:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function _LED_init *****************
  4994 ;; Defined at:
  4995 ;;		line 4 in file "LED.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		None
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 1
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_main
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text24
  5024   0048E6                     __ptext24:
  5025                           	callstack 0
  5026   0048E6                     _LED_init:
  5027                           	callstack 29
  5028   0048E6                     
  5029                           ;LED.c: 6:     TRISDbits.TRISD4 = 0;
  5030   0048E6  9884               	bcf	132,4,c	;volatile
  5031                           
  5032                           ;LED.c: 7:     TRISHbits.TRISH0 = 0;
  5033   0048E8  9088               	bcf	136,0,c	;volatile
  5034                           
  5035                           ;LED.c: 8:     TRISFbits.TRISF0 = 0;
  5036   0048EA  9086               	bcf	134,0,c	;volatile
  5037                           
  5038                           ;LED.c: 11:     LATDbits.LATD4 = 0;
  5039   0048EC  987C               	bcf	124,4,c	;volatile
  5040                           
  5041                           ;LED.c: 12:     LATHbits.LATH0 = 0;
  5042   0048EE  9080               	bcf	128,0,c	;volatile
  5043                           
  5044                           ;LED.c: 13:     LATFbits.LATF0 = 0;
  5045   0048F0  907E               	bcf	126,0,c	;volatile
  5046   0048F2  0012               	return		;funcret
  5047   0048F4                     __end_of_LED_init:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _Colour2Action *****************
  5051 ;; Defined at:
  5052 ;;		line 105 in file "colorfunctions.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  cf              2   37[BANK0 ] PTR struct RGBC_rel
  5055 ;;		 -> colorf(22), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;Total ram usage:        4 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; Hardware stack levels required when called: 8
  5074 ;; This function calls:
  5075 ;;		_Blue_T180
  5076 ;;		_Green_L90
  5077 ;;		_LightBlue_L135
  5078 ;;		_Orange_R135
  5079 ;;		_Pink_rev1_L90
  5080 ;;		_Red_R90
  5081 ;;		_White
  5082 ;;		_Yellow_rev1_R90
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text25
  5089   002C1E                     __ptext25:
  5090                           	callstack 0
  5091   002C1E                     _Colour2Action:
  5092                           	callstack 22
  5093   002C1E                     
  5094                           ;colorfunctions.c: 105: void Colour2Action(struct RGBC_rel *cf);colorfunctions.c: 106: {
      +                          ;colorfunctions.c: 107:     if (cf->colourindex == 0)
  5095   002C1E  0100               	movlb	0	; () banked
  5096   002C20  EE20 F014          	lfsr	2,20
  5097   002C24  5185               	movf	Colour2Action@cf& (0+255),w,b
  5098   002C26  26D9               	addwf	fsr2l,f,c
  5099   002C28  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5100   002C2A  22DA               	addwfc	fsr2h,f,c
  5101   002C2C  50DE               	movf	postinc2,w,c
  5102   002C2E  10DE               	iorwf	postinc2,w,c
  5103   002C30  A4D8               	btfss	status,2,c
  5104   002C32  EF1D  F016         	goto	u4061
  5105   002C36  EF1F  F016         	goto	u4060
  5106   002C3A                     u4061:
  5107   002C3A  EF2B  F016         	goto	l4284
  5108   002C3E                     u4060:
  5109   002C3E                     
  5110                           ; BSR set to: 0
  5111                           ;colorfunctions.c: 108:     {;colorfunctions.c: 109:         Red_R90(&motorL,&motorR);
  5112   002C3E  0EF5               	movlw	low _motorL
  5113   002C40  6E21               	movwf	Red_R90@mL^0,c
  5114   002C42  0E00               	movlw	high _motorL
  5115   002C44  6E22               	movwf	(Red_R90@mL+1)^0,c
  5116   002C46  0E8C               	movlw	low _motorR
  5117   002C48  6E23               	movwf	Red_R90@mR^0,c
  5118   002C4A  0E01               	movlw	high _motorR
  5119   002C4C  6E24               	movwf	(Red_R90@mR+1)^0,c
  5120   002C4E  EC9A  F020         	call	_Red_R90	;wreg free
  5121                           
  5122                           ;colorfunctions.c: 110:     }
  5123   002C52  EFD2  F016         	goto	l4308
  5124   002C56                     l4284:
  5125                           
  5126                           ; BSR set to: 0
  5127   002C56  EE20 F014          	lfsr	2,20
  5128   002C5A  5185               	movf	Colour2Action@cf& (0+255),w,b
  5129   002C5C  26D9               	addwf	fsr2l,f,c
  5130   002C5E  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5131   002C60  22DA               	addwfc	fsr2h,f,c
  5132   002C62  04DE               	decf	postinc2,w,c
  5133   002C64  10DE               	iorwf	postinc2,w,c
  5134   002C66  A4D8               	btfss	status,2,c
  5135   002C68  EF38  F016         	goto	u4071
  5136   002C6C  EF3A  F016         	goto	u4070
  5137   002C70                     u4071:
  5138   002C70  EF46  F016         	goto	l4288
  5139   002C74                     u4070:
  5140   002C74                     
  5141                           ; BSR set to: 0
  5142                           ;colorfunctions.c: 112:     {;colorfunctions.c: 113:         Green_L90(&motorL,&motorR);
  5143   002C74  0EF5               	movlw	low _motorL
  5144   002C76  6E21               	movwf	Green_L90@mL^0,c
  5145   002C78  0E00               	movlw	high _motorL
  5146   002C7A  6E22               	movwf	(Green_L90@mL+1)^0,c
  5147   002C7C  0E8C               	movlw	low _motorR
  5148   002C7E  6E23               	movwf	Green_L90@mR^0,c
  5149   002C80  0E01               	movlw	high _motorR
  5150   002C82  6E24               	movwf	(Green_L90@mR+1)^0,c
  5151   002C84  ECD8  F020         	call	_Green_L90	;wreg free
  5152                           
  5153                           ;colorfunctions.c: 114:     }
  5154   002C88  EFD2  F016         	goto	l4308
  5155   002C8C                     l4288:
  5156                           
  5157                           ; BSR set to: 0
  5158   002C8C  EE20 F014          	lfsr	2,20
  5159   002C90  5185               	movf	Colour2Action@cf& (0+255),w,b
  5160   002C92  26D9               	addwf	fsr2l,f,c
  5161   002C94  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5162   002C96  22DA               	addwfc	fsr2h,f,c
  5163   002C98  0E02               	movlw	2
  5164   002C9A  18DE               	xorwf	postinc2,w,c
  5165   002C9C  10DE               	iorwf	postinc2,w,c
  5166   002C9E  A4D8               	btfss	status,2,c
  5167   002CA0  EF54  F016         	goto	u4081
  5168   002CA4  EF56  F016         	goto	u4080
  5169   002CA8                     u4081:
  5170   002CA8  EF62  F016         	goto	l4292
  5171   002CAC                     u4080:
  5172   002CAC                     
  5173                           ; BSR set to: 0
  5174                           ;colorfunctions.c: 116:     {;colorfunctions.c: 117:         Blue_T180(&motorL,&motorR);
  5175   002CAC  0EF5               	movlw	low _motorL
  5176   002CAE  6E24               	movwf	Blue_T180@mL^0,c
  5177   002CB0  0E00               	movlw	high _motorL
  5178   002CB2  6E25               	movwf	(Blue_T180@mL+1)^0,c
  5179   002CB4  0E8C               	movlw	low _motorR
  5180   002CB6  6E26               	movwf	Blue_T180@mR^0,c
  5181   002CB8  0E01               	movlw	high _motorR
  5182   002CBA  6E27               	movwf	(Blue_T180@mR+1)^0,c
  5183   002CBC  ECB1  F021         	call	_Blue_T180	;wreg free
  5184                           
  5185                           ;colorfunctions.c: 118:     }
  5186   002CC0  EFD2  F016         	goto	l4308
  5187   002CC4                     l4292:
  5188                           
  5189                           ; BSR set to: 0
  5190   002CC4  EE20 F014          	lfsr	2,20
  5191   002CC8  5185               	movf	Colour2Action@cf& (0+255),w,b
  5192   002CCA  26D9               	addwf	fsr2l,f,c
  5193   002CCC  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5194   002CCE  22DA               	addwfc	fsr2h,f,c
  5195   002CD0  0E03               	movlw	3
  5196   002CD2  18DE               	xorwf	postinc2,w,c
  5197   002CD4  10DE               	iorwf	postinc2,w,c
  5198   002CD6  A4D8               	btfss	status,2,c
  5199   002CD8  EF70  F016         	goto	u4091
  5200   002CDC  EF72  F016         	goto	u4090
  5201   002CE0                     u4091:
  5202   002CE0  EF7E  F016         	goto	l4296
  5203   002CE4                     u4090:
  5204   002CE4                     
  5205                           ; BSR set to: 0
  5206                           ;colorfunctions.c: 120:     {;colorfunctions.c: 121:         Yellow_rev1_R90(&motorL,&mo
      +                          torR);
  5207   002CE4  0EF5               	movlw	low _motorL
  5208   002CE6  6E21               	movwf	Yellow_rev1_R90@mL^0,c
  5209   002CE8  0E00               	movlw	high _motorL
  5210   002CEA  6E22               	movwf	(Yellow_rev1_R90@mL+1)^0,c
  5211   002CEC  0E8C               	movlw	low _motorR
  5212   002CEE  6E23               	movwf	Yellow_rev1_R90@mR^0,c
  5213   002CF0  0E01               	movlw	high _motorR
  5214   002CF2  6E24               	movwf	(Yellow_rev1_R90@mR+1)^0,c
  5215   002CF4  EC68  F01B         	call	_Yellow_rev1_R90	;wreg free
  5216                           
  5217                           ;colorfunctions.c: 122:     }
  5218   002CF8  EFD2  F016         	goto	l4308
  5219   002CFC                     l4296:
  5220                           
  5221                           ; BSR set to: 0
  5222   002CFC  EE20 F014          	lfsr	2,20
  5223   002D00  5185               	movf	Colour2Action@cf& (0+255),w,b
  5224   002D02  26D9               	addwf	fsr2l,f,c
  5225   002D04  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5226   002D06  22DA               	addwfc	fsr2h,f,c
  5227   002D08  0E04               	movlw	4
  5228   002D0A  18DE               	xorwf	postinc2,w,c
  5229   002D0C  10DE               	iorwf	postinc2,w,c
  5230   002D0E  A4D8               	btfss	status,2,c
  5231   002D10  EF8C  F016         	goto	u4101
  5232   002D14  EF8E  F016         	goto	u4100
  5233   002D18                     u4101:
  5234   002D18  EF9A  F016         	goto	l4300
  5235   002D1C                     u4100:
  5236   002D1C                     
  5237                           ; BSR set to: 0
  5238                           ;colorfunctions.c: 124:     {;colorfunctions.c: 125:         Pink_rev1_L90(&motorL,&moto
      +                          rR);
  5239   002D1C  0EF5               	movlw	low _motorL
  5240   002D1E  6E21               	movwf	Pink_rev1_L90@mL^0,c
  5241   002D20  0E00               	movlw	high _motorL
  5242   002D22  6E22               	movwf	(Pink_rev1_L90@mL+1)^0,c
  5243   002D24  0E8C               	movlw	low _motorR
  5244   002D26  6E23               	movwf	Pink_rev1_L90@mR^0,c
  5245   002D28  0E01               	movlw	high _motorR
  5246   002D2A  6E24               	movwf	(Pink_rev1_L90@mR+1)^0,c
  5247   002D2C  ECDC  F01B         	call	_Pink_rev1_L90	;wreg free
  5248                           
  5249                           ;colorfunctions.c: 126:     }
  5250   002D30  EFD2  F016         	goto	l4308
  5251   002D34                     l4300:
  5252                           
  5253                           ; BSR set to: 0
  5254   002D34  EE20 F014          	lfsr	2,20
  5255   002D38  5185               	movf	Colour2Action@cf& (0+255),w,b
  5256   002D3A  26D9               	addwf	fsr2l,f,c
  5257   002D3C  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5258   002D3E  22DA               	addwfc	fsr2h,f,c
  5259   002D40  0E05               	movlw	5
  5260   002D42  18DE               	xorwf	postinc2,w,c
  5261   002D44  10DE               	iorwf	postinc2,w,c
  5262   002D46  A4D8               	btfss	status,2,c
  5263   002D48  EFA8  F016         	goto	u4111
  5264   002D4C  EFAA  F016         	goto	u4110
  5265   002D50                     u4111:
  5266   002D50  EFB6  F016         	goto	l4304
  5267   002D54                     u4110:
  5268   002D54                     
  5269                           ; BSR set to: 0
  5270                           ;colorfunctions.c: 128:     {;colorfunctions.c: 129:         Orange_R135(&motorL,&motorR
      +                          );
  5271   002D54  0EF5               	movlw	low _motorL
  5272   002D56  6E21               	movwf	Orange_R135@mL^0,c
  5273   002D58  0E00               	movlw	high _motorL
  5274   002D5A  6E22               	movwf	(Orange_R135@mL+1)^0,c
  5275   002D5C  0E8C               	movlw	low _motorR
  5276   002D5E  6E23               	movwf	Orange_R135@mR^0,c
  5277   002D60  0E01               	movlw	high _motorR
  5278   002D62  6E24               	movwf	(Orange_R135@mR+1)^0,c
  5279   002D64  ECCC  F01D         	call	_Orange_R135	;wreg free
  5280                           
  5281                           ;colorfunctions.c: 130:     }
  5282   002D68  EFD2  F016         	goto	l4308
  5283   002D6C                     l4304:
  5284                           
  5285                           ; BSR set to: 0
  5286   002D6C  EE20 F014          	lfsr	2,20
  5287   002D70  5185               	movf	Colour2Action@cf& (0+255),w,b
  5288   002D72  26D9               	addwf	fsr2l,f,c
  5289   002D74  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5290   002D76  22DA               	addwfc	fsr2h,f,c
  5291   002D78  0E06               	movlw	6
  5292   002D7A  18DE               	xorwf	postinc2,w,c
  5293   002D7C  10DE               	iorwf	postinc2,w,c
  5294   002D7E  A4D8               	btfss	status,2,c
  5295   002D80  EFC4  F016         	goto	u4121
  5296   002D84  EFC6  F016         	goto	u4120
  5297   002D88                     u4121:
  5298   002D88  EFD2  F016         	goto	l146
  5299   002D8C                     u4120:
  5300   002D8C                     
  5301                           ; BSR set to: 0
  5302                           ;colorfunctions.c: 132:     {;colorfunctions.c: 133:         LightBlue_L135(&motorL,&mot
      +                          orR);
  5303   002D8C  0EF5               	movlw	low _motorL
  5304   002D8E  6E21               	movwf	LightBlue_L135@mL^0,c
  5305   002D90  0E00               	movlw	high _motorL
  5306   002D92  6E22               	movwf	(LightBlue_L135@mL+1)^0,c
  5307   002D94  0E8C               	movlw	low _motorR
  5308   002D96  6E23               	movwf	LightBlue_L135@mR^0,c
  5309   002D98  0E01               	movlw	high _motorR
  5310   002D9A  6E24               	movwf	(LightBlue_L135@mR+1)^0,c
  5311   002D9C  EC1E  F01E         	call	_LightBlue_L135	;wreg free
  5312   002DA0  EFD2  F016         	goto	l4308
  5313   002DA4                     l146:
  5314   002DA4                     l4308:
  5315                           
  5316                           ;colorfunctions.c: 135:     if (cf->colourindex == 7)
  5317   002DA4  0100               	movlb	0	; () banked
  5318   002DA6  EE20 F014          	lfsr	2,20
  5319   002DAA  5185               	movf	Colour2Action@cf& (0+255),w,b
  5320   002DAC  26D9               	addwf	fsr2l,f,c
  5321   002DAE  5186               	movf	(Colour2Action@cf+1)& (0+255),w,b
  5322   002DB0  22DA               	addwfc	fsr2h,f,c
  5323   002DB2  0E07               	movlw	7
  5324   002DB4  18DE               	xorwf	postinc2,w,c
  5325   002DB6  10DE               	iorwf	postinc2,w,c
  5326   002DB8  A4D8               	btfss	status,2,c
  5327   002DBA  EFE1  F016         	goto	u4131
  5328   002DBE  EFE3  F016         	goto	u4130
  5329   002DC2                     u4131:
  5330   002DC2  EF03  F017         	goto	l156
  5331   002DC6                     u4130:
  5332   002DC6                     
  5333                           ; BSR set to: 0
  5334                           ;colorfunctions.c: 136:     {;colorfunctions.c: 137:         White(&motorL,&motorR,movem
      +                          entCount,movementMemory,timerMemory);
  5335   002DC6  0EF5               	movlw	low _motorL
  5336   002DC8  6F75               	movwf	White@mL& (0+255),b
  5337   002DCA  0E00               	movlw	high _motorL
  5338   002DCC  6F76               	movwf	(White@mL+1)& (0+255),b
  5339   002DCE  0E8C               	movlw	low _motorR
  5340   002DD0  6F77               	movwf	White@mR& (0+255),b
  5341   002DD2  0E01               	movlw	high _motorR
  5342   002DD4  6F78               	movwf	(White@mR+1)& (0+255),b
  5343   002DD6  C0F2  F079         	movff	_movementCount,White@movementCount	;volatile
  5344   002DDA  C0F3  F07A         	movff	_movementCount+1,White@movementCount+1	;volatile
  5345   002DDE  0E4E               	movlw	low _movementMemory
  5346   002DE0  6F7B               	movwf	White@movementMemory& (0+255),b
  5347   002DE2  0E01               	movlw	high _movementMemory
  5348   002DE4  6F7C               	movwf	(White@movementMemory+1)& (0+255),b
  5349   002DE6  0E26               	movlw	low _timerMemory
  5350   002DE8  6F7D               	movwf	White@timerMemory& (0+255),b
  5351   002DEA  0E01               	movlw	high _timerMemory
  5352   002DEC  6F7E               	movwf	(White@timerMemory+1)& (0+255),b
  5353   002DEE  EC79  F013         	call	_White	;wreg free
  5354   002DF2                     l4312:
  5355   002DF2  0100               	movlb	0	; () banked
  5356   002DF4  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  5357   002DF6  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  5358   002DF8  B4D8               	btfsc	status,2,c
  5359   002DFA  EF01  F017         	goto	u4141
  5360   002DFE  EF03  F017         	goto	u4140
  5361   002E02                     u4141:
  5362   002E02  EFF9  F016         	goto	l4312
  5363   002E06                     u4140:
  5364   002E06                     l156:
  5365                           
  5366                           ; BSR set to: 0
  5367   002E06  0012               	return		;funcret
  5368   002E08                     __end_of_Colour2Action:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _White *****************
  5372 ;; Defined at:
  5373 ;;		line 341 in file "dc_motor.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  mL              2   21[BANK0 ] PTR struct DC_motor
  5376 ;;		 -> motorL(9), 
  5377 ;;  mR              2   23[BANK0 ] PTR struct DC_motor
  5378 ;;		 -> motorR(9), 
  5379 ;;  movementCoun    2   25[BANK0 ] unsigned int 
  5380 ;;  movementMemo    2   27[BANK0 ] PTR volatile unsigned in
  5381 ;;		 -> movementMemory(40), 
  5382 ;;  timerMemory     2   29[BANK0 ] PTR volatile unsigned in
  5383 ;;		 -> timerMemory(40), 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  tempTimer       2   33[BANK0 ] unsigned int 
  5386 ;;  i               2   35[BANK0 ] int 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5396 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;Total ram usage:       16 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; Hardware stack levels required when called: 7
  5403 ;; This function calls:
  5404 ;;		_Blue_T180
  5405 ;;		_Green_L90
  5406 ;;		_LightBlue_L135
  5407 ;;		_Orange_R135
  5408 ;;		_Pink_rev1_L90
  5409 ;;		_Red_R90
  5410 ;;		_TimerReset
  5411 ;;		_Yellow_rev1_R90
  5412 ;;		_fullSpeedAhead
  5413 ;;		_getTimerValue
  5414 ;;		_reverseHalfSquare
  5415 ;;		_rotate180left
  5416 ;;		_stop
  5417 ;; This function is called by:
  5418 ;;		_Colour2Action
  5419 ;;		_maxTimeReturn
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text26
  5424   0026F2                     __ptext26:
  5425                           	callstack 0
  5426   0026F2                     _White:
  5427                           	callstack 22
  5428   0026F2                     
  5429                           ;dc_motor.c: 341: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movem
      +                          entCount, volatile unsigned int *movementMemory, volatile unsigned int *timerMemory);dc_
      +                          motor.c: 342: {;dc_motor.c: 343:     LATDbits.LATD4 = 1;;
  5430   0026F2  887C               	bsf	124,4,c	;volatile
  5431                           
  5432                           ;dc_motor.c: 345:     while (!retracingDone){
  5433   0026F4  EFF3  F014         	goto	l4006
  5434   0026F8                     l3940:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;dc_motor.c: 346:         reverseHalfSquare(mL,mR);
  5438   0026F8  C075  F01B         	movff	White@mL,reverseHalfSquare@mL
  5439   0026FC  C076  F01C         	movff	White@mL+1,reverseHalfSquare@mL+1
  5440   002700  C077  F01D         	movff	White@mR,reverseHalfSquare@mR
  5441   002704  C078  F01E         	movff	White@mR+1,reverseHalfSquare@mR+1
  5442   002708  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  5443                           
  5444                           ;dc_motor.c: 347:         rotate180left(mL,mR);
  5445   00270C  C075  F020         	movff	White@mL,rotate180left@mL
  5446   002710  C076  F021         	movff	White@mL+1,rotate180left@mL+1
  5447   002714  C077  F022         	movff	White@mR,rotate180left@mR
  5448   002718  C078  F023         	movff	White@mR+1,rotate180left@mR+1
  5449   00271C  ECDB  F021         	call	_rotate180left	;wreg free
  5450   002720                     
  5451                           ;dc_motor.c: 348:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5452   002720  0E29               	movlw	41
  5453   002722  0100               	movlb	0	; () banked
  5454   002724  6F80               	movwf	(??_White+1)& (0+255),b
  5455   002726  0E96               	movlw	150
  5456   002728  6F7F               	movwf	??_White& (0+255),b
  5457   00272A  0E7F               	movlw	127
  5458   00272C                     u4237:
  5459   00272C  2EE8               	decfsz	wreg,f,c
  5460   00272E  D7FE               	bra	u4237
  5461   002730  2F7F               	decfsz	??_White& (0+255),f,b
  5462   002732  D7FC               	bra	u4237
  5463   002734  2F80               	decfsz	(??_White+1)& (0+255),f,b
  5464   002736  D7FA               	bra	u4237
  5465   002738                     
  5466                           ;dc_motor.c: 349:         ForwardFlag = 0;
  5467   002738  0E00               	movlw	0
  5468   00273A  0100               	movlb	0	; () banked
  5469   00273C  6FFE               	movwf	_ForwardFlag& (0+255),b	;volatile
  5470   00273E                     
  5471                           ; BSR set to: 0
  5472                           ;dc_motor.c: 350:         retracingDone = 1;
  5473   00273E  0E00               	movlw	0
  5474   002740  6FF1               	movwf	(_retracingDone+1)& (0+255),b	;volatile
  5475   002742  0E01               	movlw	1
  5476   002744  6FF0               	movwf	_retracingDone& (0+255),b	;volatile
  5477   002746                     
  5478                           ; BSR set to: 0
  5479                           ;dc_motor.c: 352:         for (int i=movementCount; i>=0;i--){
  5480   002746  C079  F083         	movff	White@movementCount,White@i
  5481   00274A  C07A  F084         	movff	White@movementCount+1,White@i+1
  5482   00274E                     l3950:
  5483                           
  5484                           ; BSR set to: 0
  5485   00274E  BF84               	btfsc	(White@i+1)& (0+255),7,b
  5486   002750  EFAE  F013         	goto	u3550
  5487   002754  EFAC  F013         	goto	u3551
  5488   002758                     u3551:
  5489   002758  EFB0  F013         	goto	l540
  5490   00275C                     u3550:
  5491   00275C  EFF3  F014         	goto	l4006
  5492   002760                     l540:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;dc_motor.c: 353:             LATDbits.LATD4 = 1;;
  5496   002760  887C               	bsf	124,4,c	;volatile
  5497   002762                     
  5498                           ; BSR set to: 0
  5499                           ;dc_motor.c: 354:             _delay((unsigned long)((200)*(64000000/4000.0)));
  5500   002762  0E11               	movlw	17
  5501   002764  0100               	movlb	0	; () banked
  5502   002766  6F80               	movwf	(??_White+1)& (0+255),b
  5503   002768  0E3C               	movlw	60
  5504   00276A  6F7F               	movwf	??_White& (0+255),b
  5505   00276C  0ECB               	movlw	203
  5506   00276E                     u4247:
  5507   00276E  2EE8               	decfsz	wreg,f,c
  5508   002770  D7FE               	bra	u4247
  5509   002772  2F7F               	decfsz	??_White& (0+255),f,b
  5510   002774  D7FC               	bra	u4247
  5511   002776  2F80               	decfsz	(??_White+1)& (0+255),f,b
  5512   002778  D7FA               	bra	u4247
  5513   00277A                     
  5514                           ;dc_motor.c: 355:             if (movementMemory[i]==0){
  5515   00277A  90D8               	bcf	status,0,c
  5516   00277C  0100               	movlb	0	; () banked
  5517   00277E  3583               	rlcf	White@i& (0+255),w,b
  5518   002780  6ED9               	movwf	fsr2l,c
  5519   002782  3584               	rlcf	(White@i+1)& (0+255),w,b
  5520   002784  6EDA               	movwf	fsr2h,c
  5521   002786  517B               	movf	White@movementMemory& (0+255),w,b
  5522   002788  26D9               	addwf	fsr2l,f,c
  5523   00278A  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5524   00278C  22DA               	addwfc	fsr2h,f,c
  5525   00278E  50DE               	movf	postinc2,w,c
  5526   002790  10DE               	iorwf	postinc2,w,c
  5527   002792  A4D8               	btfss	status,2,c
  5528   002794  EFCE  F013         	goto	u3561
  5529   002798  EFD0  F013         	goto	u3560
  5530   00279C                     u3561:
  5531   00279C  EFDC  F013         	goto	l3960
  5532   0027A0                     u3560:
  5533   0027A0                     
  5534                           ; BSR set to: 0
  5535                           ;dc_motor.c: 356:                 Red_R90(mL,mR);}
  5536   0027A0  C075  F021         	movff	White@mL,Red_R90@mL
  5537   0027A4  C076  F022         	movff	White@mL+1,Red_R90@mL+1
  5538   0027A8  C077  F023         	movff	White@mR,Red_R90@mR
  5539   0027AC  C078  F024         	movff	White@mR+1,Red_R90@mR+1
  5540   0027B0  EC9A  F020         	call	_Red_R90	;wreg free
  5541   0027B4  EFB4  F014         	goto	l3988
  5542   0027B8                     l3960:
  5543                           
  5544                           ; BSR set to: 0
  5545   0027B8  90D8               	bcf	status,0,c
  5546   0027BA  3583               	rlcf	White@i& (0+255),w,b
  5547   0027BC  6ED9               	movwf	fsr2l,c
  5548   0027BE  3584               	rlcf	(White@i+1)& (0+255),w,b
  5549   0027C0  6EDA               	movwf	fsr2h,c
  5550   0027C2  517B               	movf	White@movementMemory& (0+255),w,b
  5551   0027C4  26D9               	addwf	fsr2l,f,c
  5552   0027C6  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5553   0027C8  22DA               	addwfc	fsr2h,f,c
  5554   0027CA  04DE               	decf	postinc2,w,c
  5555   0027CC  10DE               	iorwf	postinc2,w,c
  5556   0027CE  A4D8               	btfss	status,2,c
  5557   0027D0  EFEC  F013         	goto	u3571
  5558   0027D4  EFEE  F013         	goto	u3570
  5559   0027D8                     u3571:
  5560   0027D8  EFFA  F013         	goto	l3964
  5561   0027DC                     u3570:
  5562   0027DC                     
  5563                           ; BSR set to: 0
  5564                           ;dc_motor.c: 358:                 Green_L90(mL,mR);}
  5565   0027DC  C075  F021         	movff	White@mL,Green_L90@mL
  5566   0027E0  C076  F022         	movff	White@mL+1,Green_L90@mL+1
  5567   0027E4  C077  F023         	movff	White@mR,Green_L90@mR
  5568   0027E8  C078  F024         	movff	White@mR+1,Green_L90@mR+1
  5569   0027EC  ECD8  F020         	call	_Green_L90	;wreg free
  5570   0027F0  EFB4  F014         	goto	l3988
  5571   0027F4                     l3964:
  5572                           
  5573                           ; BSR set to: 0
  5574   0027F4  90D8               	bcf	status,0,c
  5575   0027F6  3583               	rlcf	White@i& (0+255),w,b
  5576   0027F8  6ED9               	movwf	fsr2l,c
  5577   0027FA  3584               	rlcf	(White@i+1)& (0+255),w,b
  5578   0027FC  6EDA               	movwf	fsr2h,c
  5579   0027FE  517B               	movf	White@movementMemory& (0+255),w,b
  5580   002800  26D9               	addwf	fsr2l,f,c
  5581   002802  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5582   002804  22DA               	addwfc	fsr2h,f,c
  5583   002806  0E02               	movlw	2
  5584   002808  18DE               	xorwf	postinc2,w,c
  5585   00280A  10DE               	iorwf	postinc2,w,c
  5586   00280C  A4D8               	btfss	status,2,c
  5587   00280E  EF0B  F014         	goto	u3581
  5588   002812  EF0D  F014         	goto	u3580
  5589   002816                     u3581:
  5590   002816  EF19  F014         	goto	l3968
  5591   00281A                     u3580:
  5592   00281A                     
  5593                           ; BSR set to: 0
  5594                           ;dc_motor.c: 360:                 Blue_T180(mL,mR);}
  5595   00281A  C075  F024         	movff	White@mL,Blue_T180@mL
  5596   00281E  C076  F025         	movff	White@mL+1,Blue_T180@mL+1
  5597   002822  C077  F026         	movff	White@mR,Blue_T180@mR
  5598   002826  C078  F027         	movff	White@mR+1,Blue_T180@mR+1
  5599   00282A  ECB1  F021         	call	_Blue_T180	;wreg free
  5600   00282E  EFB4  F014         	goto	l3988
  5601   002832                     l3968:
  5602                           
  5603                           ; BSR set to: 0
  5604   002832  90D8               	bcf	status,0,c
  5605   002834  3583               	rlcf	White@i& (0+255),w,b
  5606   002836  6ED9               	movwf	fsr2l,c
  5607   002838  3584               	rlcf	(White@i+1)& (0+255),w,b
  5608   00283A  6EDA               	movwf	fsr2h,c
  5609   00283C  517B               	movf	White@movementMemory& (0+255),w,b
  5610   00283E  26D9               	addwf	fsr2l,f,c
  5611   002840  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5612   002842  22DA               	addwfc	fsr2h,f,c
  5613   002844  0E03               	movlw	3
  5614   002846  18DE               	xorwf	postinc2,w,c
  5615   002848  10DE               	iorwf	postinc2,w,c
  5616   00284A  A4D8               	btfss	status,2,c
  5617   00284C  EF2A  F014         	goto	u3591
  5618   002850  EF2C  F014         	goto	u3590
  5619   002854                     u3591:
  5620   002854  EF38  F014         	goto	l3972
  5621   002858                     u3590:
  5622   002858                     
  5623                           ; BSR set to: 0
  5624                           ;dc_motor.c: 362:                 Yellow_rev1_R90(mL,mR);}
  5625   002858  C075  F021         	movff	White@mL,Yellow_rev1_R90@mL
  5626   00285C  C076  F022         	movff	White@mL+1,Yellow_rev1_R90@mL+1
  5627   002860  C077  F023         	movff	White@mR,Yellow_rev1_R90@mR
  5628   002864  C078  F024         	movff	White@mR+1,Yellow_rev1_R90@mR+1
  5629   002868  EC68  F01B         	call	_Yellow_rev1_R90	;wreg free
  5630   00286C  EFB4  F014         	goto	l3988
  5631   002870                     l3972:
  5632                           
  5633                           ; BSR set to: 0
  5634   002870  90D8               	bcf	status,0,c
  5635   002872  3583               	rlcf	White@i& (0+255),w,b
  5636   002874  6ED9               	movwf	fsr2l,c
  5637   002876  3584               	rlcf	(White@i+1)& (0+255),w,b
  5638   002878  6EDA               	movwf	fsr2h,c
  5639   00287A  517B               	movf	White@movementMemory& (0+255),w,b
  5640   00287C  26D9               	addwf	fsr2l,f,c
  5641   00287E  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5642   002880  22DA               	addwfc	fsr2h,f,c
  5643   002882  0E04               	movlw	4
  5644   002884  18DE               	xorwf	postinc2,w,c
  5645   002886  10DE               	iorwf	postinc2,w,c
  5646   002888  A4D8               	btfss	status,2,c
  5647   00288A  EF49  F014         	goto	u3601
  5648   00288E  EF4B  F014         	goto	u3600
  5649   002892                     u3601:
  5650   002892  EF57  F014         	goto	l3976
  5651   002896                     u3600:
  5652   002896                     
  5653                           ; BSR set to: 0
  5654                           ;dc_motor.c: 364:                 Pink_rev1_L90(mL,mR);}
  5655   002896  C075  F021         	movff	White@mL,Pink_rev1_L90@mL
  5656   00289A  C076  F022         	movff	White@mL+1,Pink_rev1_L90@mL+1
  5657   00289E  C077  F023         	movff	White@mR,Pink_rev1_L90@mR
  5658   0028A2  C078  F024         	movff	White@mR+1,Pink_rev1_L90@mR+1
  5659   0028A6  ECDC  F01B         	call	_Pink_rev1_L90	;wreg free
  5660   0028AA  EFB4  F014         	goto	l3988
  5661   0028AE                     l3976:
  5662                           
  5663                           ; BSR set to: 0
  5664   0028AE  90D8               	bcf	status,0,c
  5665   0028B0  3583               	rlcf	White@i& (0+255),w,b
  5666   0028B2  6ED9               	movwf	fsr2l,c
  5667   0028B4  3584               	rlcf	(White@i+1)& (0+255),w,b
  5668   0028B6  6EDA               	movwf	fsr2h,c
  5669   0028B8  517B               	movf	White@movementMemory& (0+255),w,b
  5670   0028BA  26D9               	addwf	fsr2l,f,c
  5671   0028BC  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5672   0028BE  22DA               	addwfc	fsr2h,f,c
  5673   0028C0  0E05               	movlw	5
  5674   0028C2  18DE               	xorwf	postinc2,w,c
  5675   0028C4  10DE               	iorwf	postinc2,w,c
  5676   0028C6  A4D8               	btfss	status,2,c
  5677   0028C8  EF68  F014         	goto	u3611
  5678   0028CC  EF6A  F014         	goto	u3610
  5679   0028D0                     u3611:
  5680   0028D0  EF76  F014         	goto	l3980
  5681   0028D4                     u3610:
  5682   0028D4                     
  5683                           ; BSR set to: 0
  5684                           ;dc_motor.c: 366:                 Orange_R135(mL,mR);}
  5685   0028D4  C075  F021         	movff	White@mL,Orange_R135@mL
  5686   0028D8  C076  F022         	movff	White@mL+1,Orange_R135@mL+1
  5687   0028DC  C077  F023         	movff	White@mR,Orange_R135@mR
  5688   0028E0  C078  F024         	movff	White@mR+1,Orange_R135@mR+1
  5689   0028E4  ECCC  F01D         	call	_Orange_R135	;wreg free
  5690   0028E8  EFB4  F014         	goto	l3988
  5691   0028EC                     l3980:
  5692                           
  5693                           ; BSR set to: 0
  5694   0028EC  90D8               	bcf	status,0,c
  5695   0028EE  3583               	rlcf	White@i& (0+255),w,b
  5696   0028F0  6ED9               	movwf	fsr2l,c
  5697   0028F2  3584               	rlcf	(White@i+1)& (0+255),w,b
  5698   0028F4  6EDA               	movwf	fsr2h,c
  5699   0028F6  517B               	movf	White@movementMemory& (0+255),w,b
  5700   0028F8  26D9               	addwf	fsr2l,f,c
  5701   0028FA  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5702   0028FC  22DA               	addwfc	fsr2h,f,c
  5703   0028FE  0E06               	movlw	6
  5704   002900  18DE               	xorwf	postinc2,w,c
  5705   002902  10DE               	iorwf	postinc2,w,c
  5706   002904  A4D8               	btfss	status,2,c
  5707   002906  EF87  F014         	goto	u3621
  5708   00290A  EF89  F014         	goto	u3620
  5709   00290E                     u3621:
  5710   00290E  EF95  F014         	goto	l3984
  5711   002912                     u3620:
  5712   002912                     
  5713                           ; BSR set to: 0
  5714                           ;dc_motor.c: 368:                 LightBlue_L135(mL,mR);}
  5715   002912  C075  F021         	movff	White@mL,LightBlue_L135@mL
  5716   002916  C076  F022         	movff	White@mL+1,LightBlue_L135@mL+1
  5717   00291A  C077  F023         	movff	White@mR,LightBlue_L135@mR
  5718   00291E  C078  F024         	movff	White@mR+1,LightBlue_L135@mR+1
  5719   002922  EC1E  F01E         	call	_LightBlue_L135	;wreg free
  5720   002926  EFB4  F014         	goto	l3988
  5721   00292A                     l3984:
  5722                           
  5723                           ; BSR set to: 0
  5724   00292A  90D8               	bcf	status,0,c
  5725   00292C  3583               	rlcf	White@i& (0+255),w,b
  5726   00292E  6ED9               	movwf	fsr2l,c
  5727   002930  3584               	rlcf	(White@i+1)& (0+255),w,b
  5728   002932  6EDA               	movwf	fsr2h,c
  5729   002934  517B               	movf	White@movementMemory& (0+255),w,b
  5730   002936  26D9               	addwf	fsr2l,f,c
  5731   002938  517C               	movf	(White@movementMemory+1)& (0+255),w,b
  5732   00293A  22DA               	addwfc	fsr2h,f,c
  5733   00293C  0E07               	movlw	7
  5734   00293E  18DE               	xorwf	postinc2,w,c
  5735   002940  10DE               	iorwf	postinc2,w,c
  5736   002942  A4D8               	btfss	status,2,c
  5737   002944  EFA6  F014         	goto	u3631
  5738   002948  EFA8  F014         	goto	u3630
  5739   00294C                     u3631:
  5740   00294C  EFB4  F014         	goto	l551
  5741   002950                     u3630:
  5742   002950                     
  5743                           ; BSR set to: 0
  5744                           ;dc_motor.c: 370:                 stop(mL,mR);}
  5745   002950  C075  F014         	movff	White@mL,stop@mL
  5746   002954  C076  F015         	movff	White@mL+1,stop@mL+1
  5747   002958  C077  F016         	movff	White@mR,stop@mR
  5748   00295C  C078  F017         	movff	White@mR+1,stop@mR+1
  5749   002960  EC79  F01D         	call	_stop	;wreg free
  5750   002964  EFB4  F014         	goto	l3988
  5751   002968                     l551:
  5752   002968                     l3988:
  5753                           
  5754                           ;dc_motor.c: 371:             LATDbits.LATD4 = 1;;
  5755   002968  887C               	bsf	124,4,c	;volatile
  5756   00296A                     
  5757                           ;dc_motor.c: 373:             unsigned int tempTimer = 0;
  5758   00296A  0E00               	movlw	0
  5759   00296C  0100               	movlb	0	; () banked
  5760   00296E  6F82               	movwf	(White@tempTimer+1)& (0+255),b
  5761   002970  0E00               	movlw	0
  5762   002972  6F81               	movwf	White@tempTimer& (0+255),b
  5763   002974                     
  5764                           ; BSR set to: 0
  5765                           ;dc_motor.c: 374:             TimerReset();
  5766   002974  EC8F  F024         	call	_TimerReset	;wreg free
  5767   002978                     
  5768                           ;dc_motor.c: 375:             fullSpeedAhead(mL,mR);
  5769   002978  C075  F014         	movff	White@mL,fullSpeedAhead@mL
  5770   00297C  C076  F015         	movff	White@mL+1,fullSpeedAhead@mL+1
  5771   002980  C077  F016         	movff	White@mR,fullSpeedAhead@mR
  5772   002984  C078  F017         	movff	White@mR+1,fullSpeedAhead@mR+1
  5773   002988  EC1A  F020         	call	_fullSpeedAhead	;wreg free
  5774                           
  5775                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5776   00298C  EFCE  F014         	goto	l3998
  5777   002990                     l3996:
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;dc_motor.c: 377:             {;dc_motor.c: 378:                 tempTimer = getTimerVal
      +                          ue();
  5781   002990  EC50  F021         	call	_getTimerValue	;wreg free
  5782   002994  C06F  F081         	movff	?_getTimerValue,White@tempTimer
  5783   002998  C070  F082         	movff	?_getTimerValue+1,White@tempTimer+1
  5784   00299C                     l3998:
  5785                           
  5786                           ;dc_motor.c: 376:             while(tempTimer<timerMemory[i])
  5787   00299C  90D8               	bcf	status,0,c
  5788   00299E  0100               	movlb	0	; () banked
  5789   0029A0  3583               	rlcf	White@i& (0+255),w,b
  5790   0029A2  6ED9               	movwf	fsr2l,c
  5791   0029A4  3584               	rlcf	(White@i+1)& (0+255),w,b
  5792   0029A6  6EDA               	movwf	fsr2h,c
  5793   0029A8  517D               	movf	White@timerMemory& (0+255),w,b
  5794   0029AA  26D9               	addwf	fsr2l,f,c
  5795   0029AC  517E               	movf	(White@timerMemory+1)& (0+255),w,b
  5796   0029AE  22DA               	addwfc	fsr2h,f,c
  5797   0029B0  50DE               	movf	postinc2,w,c
  5798   0029B2  5D81               	subwf	White@tempTimer& (0+255),w,b
  5799   0029B4  50DE               	movf	postinc2,w,c
  5800   0029B6  5982               	subwfb	(White@tempTimer+1)& (0+255),w,b
  5801   0029B8  A0D8               	btfss	status,0,c
  5802   0029BA  EFE1  F014         	goto	u3641
  5803   0029BE  EFE3  F014         	goto	u3640
  5804   0029C2                     u3641:
  5805   0029C2  EFC8  F014         	goto	l3996
  5806   0029C6                     u3640:
  5807   0029C6                     
  5808                           ; BSR set to: 0
  5809                           ;dc_motor.c: 380:             stop(mL,mR);
  5810   0029C6  C075  F014         	movff	White@mL,stop@mL
  5811   0029CA  C076  F015         	movff	White@mL+1,stop@mL+1
  5812   0029CE  C077  F016         	movff	White@mR,stop@mR
  5813   0029D2  C078  F017         	movff	White@mR+1,stop@mR+1
  5814   0029D6  EC79  F01D         	call	_stop	;wreg free
  5815   0029DA                     
  5816                           ;dc_motor.c: 381:         }
  5817   0029DA  0100               	movlb	0	; () banked
  5818   0029DC  0783               	decf	White@i& (0+255),f,b
  5819   0029DE  A0D8               	btfss	status,0,c
  5820   0029E0  0784               	decf	(White@i+1)& (0+255),f,b
  5821   0029E2  EFA7  F013         	goto	l3950
  5822   0029E6                     l4006:
  5823                           
  5824                           ;dc_motor.c: 345:     while (!retracingDone){
  5825   0029E6  0100               	movlb	0	; () banked
  5826   0029E8  51F0               	movf	_retracingDone& (0+255),w,b	;volatile
  5827   0029EA  11F1               	iorwf	(_retracingDone+1)& (0+255),w,b	;volatile
  5828   0029EC  B4D8               	btfsc	status,2,c
  5829   0029EE  EFFB  F014         	goto	u3651
  5830   0029F2  EFFD  F014         	goto	u3650
  5831   0029F6                     u3651:
  5832   0029F6  EF7C  F013         	goto	l3940
  5833   0029FA                     u3650:
  5834   0029FA                     
  5835                           ; BSR set to: 0
  5836                           ;dc_motor.c: 383:     stop(mL,mR);
  5837   0029FA  C075  F014         	movff	White@mL,stop@mL
  5838   0029FE  C076  F015         	movff	White@mL+1,stop@mL+1
  5839   002A02  C077  F016         	movff	White@mR,stop@mR
  5840   002A06  C078  F017         	movff	White@mR+1,stop@mR+1
  5841   002A0A  EC79  F01D         	call	_stop	;wreg free
  5842   002A0E                     
  5843                           ;dc_motor.c: 384:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5844   002A0E  0E52               	movlw	82
  5845   002A10  0100               	movlb	0	; () banked
  5846   002A12  6F80               	movwf	(??_White+1)& (0+255),b
  5847   002A14  0E2B               	movlw	43
  5848   002A16  6F7F               	movwf	??_White& (0+255),b
  5849   002A18  0E00               	movlw	0
  5850   002A1A                     u4257:
  5851   002A1A  2EE8               	decfsz	wreg,f,c
  5852   002A1C  D7FE               	bra	u4257
  5853   002A1E  2F7F               	decfsz	??_White& (0+255),f,b
  5854   002A20  D7FC               	bra	u4257
  5855   002A22  2F80               	decfsz	(??_White+1)& (0+255),f,b
  5856   002A24  D7FA               	bra	u4257
  5857   002A26  F000               	nop	
  5858   002A28                     
  5859                           ;dc_motor.c: 385:     LATDbits.LATD4 = 0;;
  5860   002A28  987C               	bcf	124,4,c	;volatile
  5861   002A2A  0012               	return		;funcret
  5862   002A2C                     __end_of_White:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function _getTimerValue *****************
  5866 ;; Defined at:
  5867 ;;		line 28 in file "timer.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  timerCount      2   19[BANK0 ] unsigned int 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  2   15[BANK0 ] unsigned int 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:        6 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 2
  5888 ;; This function calls:
  5889 ;;		___flmul
  5890 ;;		___fltol
  5891 ;;		___xxtofl
  5892 ;; This function is called by:
  5893 ;;		_White
  5894 ;;		_memoryUpdateTime
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text27
  5899   0042A0                     __ptext27:
  5900                           	callstack 0
  5901   0042A0                     _getTimerValue:
  5902                           	callstack 27
  5903   0042A0                     
  5904                           ;timer.c: 30:     unsigned int timerCount;;timer.c: 32:     timerCount = TMR0L;
  5905   0042A0  CFD3 F073          	movff	4051,getTimerValue@timerCount	;volatile
  5906   0042A4  0100               	movlb	0	; () banked
  5907   0042A6  6B74               	clrf	(getTimerValue@timerCount+1)& (0+255),b
  5908   0042A8                     
  5909                           ; BSR set to: 0
  5910                           ;timer.c: 34:     timerCount |= (unsigned int)(TMR0H << 8);
  5911   0042A8  50D4               	movf	212,w,c	;volatile
  5912   0042AA  6F72               	movwf	(??_getTimerValue+1)& (0+255),b
  5913   0042AC  6B71               	clrf	??_getTimerValue& (0+255),b
  5914   0042AE  5171               	movf	??_getTimerValue& (0+255),w,b
  5915   0042B0  1373               	iorwf	getTimerValue@timerCount& (0+255),f,b
  5916   0042B2  5172               	movf	(??_getTimerValue+1)& (0+255),w,b
  5917   0042B4  1374               	iorwf	(getTimerValue@timerCount+1)& (0+255),f,b
  5918   0042B6                     
  5919                           ; BSR set to: 0
  5920                           ;timer.c: 35:     return timerCount*1.048576;
  5921   0042B6  0EBD               	movlw	189
  5922   0042B8  6E4F               	movwf	___flmul@a^0,c
  5923   0042BA  0E37               	movlw	55
  5924   0042BC  6E50               	movwf	(___flmul@a+1)^0,c
  5925   0042BE  0E86               	movlw	134
  5926   0042C0  6E51               	movwf	(___flmul@a+2)^0,c
  5927   0042C2  0E3F               	movlw	63
  5928   0042C4  6E52               	movwf	(___flmul@a+3)^0,c
  5929   0042C6  C073  F00C         	movff	getTimerValue@timerCount,___xxtofl@val
  5930   0042CA  C074  F00D         	movff	getTimerValue@timerCount+1,___xxtofl@val+1
  5931   0042CE  6A0E               	clrf	(___xxtofl@val+2)^0,c
  5932   0042D0  6A0F               	clrf	(___xxtofl@val+3)^0,c
  5933   0042D2  0E00               	movlw	0
  5934   0042D4  EC04  F017         	call	___xxtofl
  5935   0042D8  C00C  F04B         	movff	?___xxtofl,___flmul@b
  5936   0042DC  C00D  F04C         	movff	?___xxtofl+1,___flmul@b+1
  5937   0042E0  C00E  F04D         	movff	?___xxtofl+2,___flmul@b+2
  5938   0042E4  C00F  F04E         	movff	?___xxtofl+3,___flmul@b+3
  5939   0042E8  EC96  F00F         	call	___flmul	;wreg free
  5940   0042EC  C04B  F057         	movff	?___flmul,___fltol@f1
  5941   0042F0  C04C  F058         	movff	?___flmul+1,___fltol@f1+1
  5942   0042F4  C04D  F059         	movff	?___flmul+2,___fltol@f1+2
  5943   0042F8  C04E  F05A         	movff	?___flmul+3,___fltol@f1+3
  5944   0042FC  ECDF  F019         	call	___fltol	;wreg free
  5945   004300  C057  F06F         	movff	?___fltol,?_getTimerValue
  5946   004304  C058  F070         	movff	?___fltol+1,?_getTimerValue+1
  5947   004308  0012               	return		;funcret
  5948   00430A                     __end_of_getTimerValue:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function ___xxtofl *****************
  5952 ;; Defined at:
  5953 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  sign            1    wreg     unsigned char 
  5956 ;;  val             4   11[COMRAM] long 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  sign            1   19[COMRAM] unsigned char 
  5959 ;;  arg             4   21[COMRAM] unsigned long 
  5960 ;;  exp             1   20[COMRAM] unsigned char 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  4   11[COMRAM] unsigned char 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;Total ram usage:       14 bytes
  5975 ;; Hardware stack levels used: 1
  5976 ;; Hardware stack levels required when called: 1
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_colour_read_all
  5981 ;;		_RGB2Hue
  5982 ;;		_Left45
  5983 ;;		_Right45
  5984 ;;		_reverseHalfSquare
  5985 ;;		_Yellow_rev1_R90
  5986 ;;		_Pink_rev1_L90
  5987 ;;		_getTimerValue
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text28
  5992   002E08                     __ptext28:
  5993                           	callstack 0
  5994   002E08                     ___xxtofl:
  5995                           	callstack 27
  5996                           
  5997                           ;incstack = 0
  5998                           ;___xxtofl@sign stored from wreg
  5999   002E08  6E14               	movwf	___xxtofl@sign^0,c
  6000   002E0A  5014               	movf	___xxtofl@sign^0,w,c
  6001   002E0C  B4D8               	btfsc	status,2,c
  6002   002E0E  EF0B  F017         	goto	u2701
  6003   002E12  EF0D  F017         	goto	u2700
  6004   002E16                     u2701:
  6005   002E16  EF2F  F017         	goto	l1320
  6006   002E1A                     u2700:
  6007   002E1A  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6008   002E1C  EF14  F017         	goto	u2710
  6009   002E20  EF12  F017         	goto	u2711
  6010   002E24                     u2711:
  6011   002E24  EF2F  F017         	goto	l1320
  6012   002E28                     u2710:
  6013   002E28  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  6014   002E2C  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  6015   002E30  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  6016   002E34  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  6017   002E38  1E10               	comf	??___xxtofl^0,f,c
  6018   002E3A  1E11               	comf	(??___xxtofl+1)^0,f,c
  6019   002E3C  1E12               	comf	(??___xxtofl+2)^0,f,c
  6020   002E3E  1E13               	comf	(??___xxtofl+3)^0,f,c
  6021   002E40  2A10               	incf	??___xxtofl^0,f,c
  6022   002E42  0E00               	movlw	0
  6023   002E44  2211               	addwfc	(??___xxtofl+1)^0,f,c
  6024   002E46  2212               	addwfc	(??___xxtofl+2)^0,f,c
  6025   002E48  2213               	addwfc	(??___xxtofl+3)^0,f,c
  6026   002E4A  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  6027   002E4E  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  6028   002E52  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  6029   002E56  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  6030   002E5A  EF37  F017         	goto	l3416
  6031   002E5E                     l1320:
  6032   002E5E  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  6033   002E62  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6034   002E66  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6035   002E6A  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6036   002E6E                     l3416:
  6037   002E6E  500C               	movf	___xxtofl@val^0,w,c
  6038   002E70  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  6039   002E72  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  6040   002E74  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  6041   002E76  A4D8               	btfss	status,2,c
  6042   002E78  EF40  F017         	goto	u2721
  6043   002E7C  EF42  F017         	goto	u2720
  6044   002E80                     u2721:
  6045   002E80  EF4C  F017         	goto	l3422
  6046   002E84                     u2720:
  6047   002E84  0E00               	movlw	0
  6048   002E86  6E0C               	movwf	?___xxtofl^0,c
  6049   002E88  0E00               	movlw	0
  6050   002E8A  6E0D               	movwf	(?___xxtofl+1)^0,c
  6051   002E8C  0E00               	movlw	0
  6052   002E8E  6E0E               	movwf	(?___xxtofl+2)^0,c
  6053   002E90  0E00               	movlw	0
  6054   002E92  6E0F               	movwf	(?___xxtofl+3)^0,c
  6055   002E94  EFDD  F017         	goto	l1323
  6056   002E98                     l3422:
  6057   002E98  0E96               	movlw	150
  6058   002E9A  6E15               	movwf	___xxtofl@exp^0,c
  6059   002E9C  EF56  F017         	goto	l3426
  6060   002EA0                     l3424:
  6061   002EA0  2A15               	incf	___xxtofl@exp^0,f,c
  6062   002EA2  90D8               	bcf	status,0,c
  6063   002EA4  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6064   002EA6  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6065   002EA8  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6066   002EAA  3216               	rrcf	___xxtofl@arg^0,f,c
  6067   002EAC                     l3426:
  6068   002EAC  0E00               	movlw	0
  6069   002EAE  1416               	andwf	___xxtofl@arg^0,w,c
  6070   002EB0  6E10               	movwf	??___xxtofl^0,c
  6071   002EB2  0E00               	movlw	0
  6072   002EB4  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6073   002EB6  6E11               	movwf	(??___xxtofl+1)^0,c
  6074   002EB8  0E00               	movlw	0
  6075   002EBA  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6076   002EBC  6E12               	movwf	(??___xxtofl+2)^0,c
  6077   002EBE  0EFE               	movlw	254
  6078   002EC0  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6079   002EC2  6E13               	movwf	(??___xxtofl+3)^0,c
  6080   002EC4  5010               	movf	??___xxtofl^0,w,c
  6081   002EC6  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6082   002EC8  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6083   002ECA  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6084   002ECC  A4D8               	btfss	status,2,c
  6085   002ECE  EF6B  F017         	goto	u2731
  6086   002ED2  EF6D  F017         	goto	u2730
  6087   002ED6                     u2731:
  6088   002ED6  EF50  F017         	goto	l3424
  6089   002EDA                     u2730:
  6090   002EDA  EF7B  F017         	goto	l1327
  6091   002EDE                     l3428:
  6092   002EDE  2A15               	incf	___xxtofl@exp^0,f,c
  6093   002EE0  0E01               	movlw	1
  6094   002EE2  2616               	addwf	___xxtofl@arg^0,f,c
  6095   002EE4  0E00               	movlw	0
  6096   002EE6  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  6097   002EE8  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  6098   002EEA  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  6099   002EEC  90D8               	bcf	status,0,c
  6100   002EEE  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  6101   002EF0  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  6102   002EF2  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  6103   002EF4  3216               	rrcf	___xxtofl@arg^0,f,c
  6104   002EF6                     l1327:
  6105   002EF6  0E00               	movlw	0
  6106   002EF8  1416               	andwf	___xxtofl@arg^0,w,c
  6107   002EFA  6E10               	movwf	??___xxtofl^0,c
  6108   002EFC  0E00               	movlw	0
  6109   002EFE  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  6110   002F00  6E11               	movwf	(??___xxtofl+1)^0,c
  6111   002F02  0E00               	movlw	0
  6112   002F04  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  6113   002F06  6E12               	movwf	(??___xxtofl+2)^0,c
  6114   002F08  0EFF               	movlw	255
  6115   002F0A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  6116   002F0C  6E13               	movwf	(??___xxtofl+3)^0,c
  6117   002F0E  5010               	movf	??___xxtofl^0,w,c
  6118   002F10  1011               	iorwf	(??___xxtofl+1)^0,w,c
  6119   002F12  1012               	iorwf	(??___xxtofl+2)^0,w,c
  6120   002F14  1013               	iorwf	(??___xxtofl+3)^0,w,c
  6121   002F16  A4D8               	btfss	status,2,c
  6122   002F18  EF90  F017         	goto	u2741
  6123   002F1C  EF92  F017         	goto	u2740
  6124   002F20                     u2741:
  6125   002F20  EF6F  F017         	goto	l3428
  6126   002F24                     u2740:
  6127   002F24  EF9A  F017         	goto	l3436
  6128   002F28                     l3434:
  6129   002F28  0615               	decf	___xxtofl@exp^0,f,c
  6130   002F2A  90D8               	bcf	status,0,c
  6131   002F2C  3616               	rlcf	___xxtofl@arg^0,f,c
  6132   002F2E  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  6133   002F30  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  6134   002F32  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  6135   002F34                     l3436:
  6136   002F34  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  6137   002F36  EF9F  F017         	goto	u2751
  6138   002F3A  EFA1  F017         	goto	u2750
  6139   002F3E                     u2751:
  6140   002F3E  EFA9  F017         	goto	l1334
  6141   002F42                     u2750:
  6142   002F42  0E02               	movlw	2
  6143   002F44  6015               	cpfslt	___xxtofl@exp^0,c
  6144   002F46  EFA7  F017         	goto	u2761
  6145   002F4A  EFA9  F017         	goto	u2760
  6146   002F4E                     u2761:
  6147   002F4E  EF94  F017         	goto	l3434
  6148   002F52                     u2760:
  6149   002F52                     l1334:
  6150   002F52  B015               	btfsc	___xxtofl@exp^0,0,c
  6151   002F54  EFAE  F017         	goto	u2771
  6152   002F58  EFB0  F017         	goto	u2770
  6153   002F5C                     u2771:
  6154   002F5C  EFB1  F017         	goto	l3442
  6155   002F60                     u2770:
  6156   002F60  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  6157   002F62                     l3442:
  6158   002F62  90D8               	bcf	status,0,c
  6159   002F64  3215               	rrcf	___xxtofl@exp^0,f,c
  6160   002F66  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  6161   002F6A  6A11               	clrf	(??___xxtofl+1)^0,c
  6162   002F6C  6A12               	clrf	(??___xxtofl+2)^0,c
  6163   002F6E  6A13               	clrf	(??___xxtofl+3)^0,c
  6164   002F70  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  6165   002F74  6A12               	clrf	(??___xxtofl+2)^0,c
  6166   002F76  6A11               	clrf	(??___xxtofl+1)^0,c
  6167   002F78  6A10               	clrf	??___xxtofl^0,c
  6168   002F7A  5010               	movf	??___xxtofl^0,w,c
  6169   002F7C  1216               	iorwf	___xxtofl@arg^0,f,c
  6170   002F7E  5011               	movf	(??___xxtofl+1)^0,w,c
  6171   002F80  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  6172   002F82  5012               	movf	(??___xxtofl+2)^0,w,c
  6173   002F84  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  6174   002F86  5013               	movf	(??___xxtofl+3)^0,w,c
  6175   002F88  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  6176   002F8A  5014               	movf	___xxtofl@sign^0,w,c
  6177   002F8C  B4D8               	btfsc	status,2,c
  6178   002F8E  EFCB  F017         	goto	u2781
  6179   002F92  EFCD  F017         	goto	u2780
  6180   002F96                     u2781:
  6181   002F96  EFD5  F017         	goto	l3452
  6182   002F9A                     u2780:
  6183   002F9A  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  6184   002F9C  EFD4  F017         	goto	u2790
  6185   002FA0  EFD2  F017         	goto	u2791
  6186   002FA4                     u2791:
  6187   002FA4  EFD5  F017         	goto	l3452
  6188   002FA8                     u2790:
  6189   002FA8  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  6190   002FAA                     l3452:
  6191   002FAA  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  6192   002FAE  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6193   002FB2  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6194   002FB6  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6195   002FBA                     l1323:
  6196   002FBA  0012               	return		;funcret
  6197   002FBC                     __end_of___xxtofl:
  6198                           	callstack 0
  6199                           
  6200 ;; *************** function ___fltol *****************
  6201 ;; Defined at:
  6202 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  f1              4   86[COMRAM] unsigned char 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  exp1            1   14[BANK0 ] unsigned char 
  6207 ;;  sign1           1   13[BANK0 ] unsigned char 
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  4   86[COMRAM] long 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2, status,0
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;Total ram usage:       10 bytes
  6222 ;; Hardware stack levels used: 1
  6223 ;; Hardware stack levels required when called: 1
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_RGB2Hue
  6228 ;;		_Left45
  6229 ;;		_Right45
  6230 ;;		_reverseHalfSquare
  6231 ;;		_Yellow_rev1_R90
  6232 ;;		_Pink_rev1_L90
  6233 ;;		_getTimerValue
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text29
  6238   0033BE                     __ptext29:
  6239                           	callstack 0
  6240   0033BE                     ___fltol:
  6241                           	callstack 27
  6242   0033BE  3459               	rlcf	(___fltol@f1+2)^0,w,c
  6243   0033C0  345A               	rlcf	(___fltol@f1+3)^0,w,c
  6244   0033C2  0100               	movlb	0	; () banked
  6245   0033C4  6F6E               	movwf	___fltol@exp1& (0+255),b
  6246   0033C6  516E               	movf	___fltol@exp1& (0+255),w,b
  6247   0033C8  A4D8               	btfss	status,2,c
  6248   0033CA  EFE9  F019         	goto	u2631
  6249   0033CE  EFEB  F019         	goto	u2630
  6250   0033D2                     u2631:
  6251   0033D2  EFF5  F019         	goto	l3372
  6252   0033D6                     u2630:
  6253   0033D6                     l3368:
  6254                           
  6255                           ; BSR set to: 0
  6256   0033D6  0E00               	movlw	0
  6257   0033D8  6E57               	movwf	?___fltol^0,c
  6258   0033DA  0E00               	movlw	0
  6259   0033DC  6E58               	movwf	(?___fltol+1)^0,c
  6260   0033DE  0E00               	movlw	0
  6261   0033E0  6E59               	movwf	(?___fltol+2)^0,c
  6262   0033E2  0E00               	movlw	0
  6263   0033E4  6E5A               	movwf	(?___fltol+3)^0,c
  6264   0033E6  EF62  F01A         	goto	l962
  6265   0033EA                     l3372:
  6266                           
  6267                           ; BSR set to: 0
  6268   0033EA  C057  F05B         	movff	___fltol@f1,??___fltol
  6269   0033EE  C058  F05C         	movff	___fltol@f1+1,??___fltol+1
  6270   0033F2  C059  F05D         	movff	___fltol@f1+2,??___fltol+2
  6271   0033F6  C05A  F05E         	movff	___fltol@f1+3,??___fltol+3
  6272   0033FA  0E20               	movlw	32
  6273   0033FC  EF05  F01A         	goto	u2640
  6274   003400                     u2645:
  6275   003400  90D8               	bcf	status,0,c
  6276   003402  325E               	rrcf	(??___fltol+3)^0,f,c
  6277   003404  325D               	rrcf	(??___fltol+2)^0,f,c
  6278   003406  325C               	rrcf	(??___fltol+1)^0,f,c
  6279   003408  325B               	rrcf	??___fltol^0,f,c
  6280   00340A                     u2640:
  6281   00340A  2EE8               	decfsz	wreg,f,c
  6282   00340C  EF00  F01A         	goto	u2645
  6283   003410  505B               	movf	??___fltol^0,w,c
  6284   003412  6F6D               	movwf	___fltol@sign1& (0+255),b
  6285   003414                     
  6286                           ; BSR set to: 0
  6287   003414  8E59               	bsf	(___fltol@f1+2)^0,7,c
  6288   003416                     
  6289                           ; BSR set to: 0
  6290   003416  0EFF               	movlw	255
  6291   003418  1657               	andwf	___fltol@f1^0,f,c
  6292   00341A  0EFF               	movlw	255
  6293   00341C  1658               	andwf	(___fltol@f1+1)^0,f,c
  6294   00341E  0EFF               	movlw	255
  6295   003420  1659               	andwf	(___fltol@f1+2)^0,f,c
  6296   003422  0E00               	movlw	0
  6297   003424  165A               	andwf	(___fltol@f1+3)^0,f,c
  6298   003426                     
  6299                           ; BSR set to: 0
  6300   003426  0E96               	movlw	150
  6301   003428  5F6E               	subwf	___fltol@exp1& (0+255),f,b
  6302   00342A                     
  6303                           ; BSR set to: 0
  6304   00342A  BF6E               	btfsc	___fltol@exp1& (0+255),7,b
  6305   00342C  EF1C  F01A         	goto	u2650
  6306   003430  EF1A  F01A         	goto	u2651
  6307   003434                     u2651:
  6308   003434  EF32  F01A         	goto	l3392
  6309   003438                     u2650:
  6310   003438                     
  6311                           ; BSR set to: 0
  6312   003438  516E               	movf	___fltol@exp1& (0+255),w,b
  6313   00343A  0A80               	xorlw	128
  6314   00343C  0F97               	addlw	151
  6315   00343E  B0D8               	btfsc	status,0,c
  6316   003440  EF24  F01A         	goto	u2661
  6317   003444  EF26  F01A         	goto	u2660
  6318   003448                     u2661:
  6319   003448  EF28  F01A         	goto	l3388
  6320   00344C                     u2660:
  6321   00344C  EFEB  F019         	goto	l3368
  6322   003450                     l3388:
  6323                           
  6324                           ; BSR set to: 0
  6325   003450  90D8               	bcf	status,0,c
  6326   003452  325A               	rrcf	(___fltol@f1+3)^0,f,c
  6327   003454  3259               	rrcf	(___fltol@f1+2)^0,f,c
  6328   003456  3258               	rrcf	(___fltol@f1+1)^0,f,c
  6329   003458  3257               	rrcf	___fltol@f1^0,f,c
  6330   00345A                     
  6331                           ; BSR set to: 0
  6332   00345A  3F6E               	incfsz	___fltol@exp1& (0+255),f,b
  6333   00345C  EF28  F01A         	goto	l3388
  6334   003460  EF4A  F01A         	goto	l3402
  6335   003464                     l3392:
  6336                           
  6337                           ; BSR set to: 0
  6338   003464  0E1F               	movlw	31
  6339   003466  656E               	cpfsgt	___fltol@exp1& (0+255),b
  6340   003468  EF38  F01A         	goto	u2671
  6341   00346C  EF3A  F01A         	goto	u2670
  6342   003470                     u2671:
  6343   003470  EF42  F01A         	goto	l3400
  6344   003474                     u2670:
  6345   003474  EFEB  F019         	goto	l3368
  6346   003478                     l3398:
  6347                           
  6348                           ; BSR set to: 0
  6349   003478  90D8               	bcf	status,0,c
  6350   00347A  3657               	rlcf	___fltol@f1^0,f,c
  6351   00347C  3658               	rlcf	(___fltol@f1+1)^0,f,c
  6352   00347E  3659               	rlcf	(___fltol@f1+2)^0,f,c
  6353   003480  365A               	rlcf	(___fltol@f1+3)^0,f,c
  6354   003482  076E               	decf	___fltol@exp1& (0+255),f,b
  6355   003484                     l3400:
  6356                           
  6357                           ; BSR set to: 0
  6358   003484  516E               	movf	___fltol@exp1& (0+255),w,b
  6359   003486  A4D8               	btfss	status,2,c
  6360   003488  EF48  F01A         	goto	u2681
  6361   00348C  EF4A  F01A         	goto	u2680
  6362   003490                     u2681:
  6363   003490  EF3C  F01A         	goto	l3398
  6364   003494                     u2680:
  6365   003494                     l3402:
  6366                           
  6367                           ; BSR set to: 0
  6368   003494  516D               	movf	___fltol@sign1& (0+255),w,b
  6369   003496  B4D8               	btfsc	status,2,c
  6370   003498  EF50  F01A         	goto	u2691
  6371   00349C  EF52  F01A         	goto	u2690
  6372   0034A0                     u2691:
  6373   0034A0  EF5A  F01A         	goto	l3406
  6374   0034A4                     u2690:
  6375   0034A4                     
  6376                           ; BSR set to: 0
  6377   0034A4  1E5A               	comf	(___fltol@f1+3)^0,f,c
  6378   0034A6  1E59               	comf	(___fltol@f1+2)^0,f,c
  6379   0034A8  1E58               	comf	(___fltol@f1+1)^0,f,c
  6380   0034AA  6C57               	negf	___fltol@f1^0,c
  6381   0034AC  0E00               	movlw	0
  6382   0034AE  2258               	addwfc	(___fltol@f1+1)^0,f,c
  6383   0034B0  2259               	addwfc	(___fltol@f1+2)^0,f,c
  6384   0034B2  225A               	addwfc	(___fltol@f1+3)^0,f,c
  6385   0034B4                     l3406:
  6386                           
  6387                           ; BSR set to: 0
  6388   0034B4  C057  F057         	movff	___fltol@f1,?___fltol
  6389   0034B8  C058  F058         	movff	___fltol@f1+1,?___fltol+1
  6390   0034BC  C059  F059         	movff	___fltol@f1+2,?___fltol+2
  6391   0034C0  C05A  F05A         	movff	___fltol@f1+3,?___fltol+3
  6392   0034C4                     l962:
  6393                           
  6394                           ; BSR set to: 0
  6395   0034C4  0012               	return		;funcret
  6396   0034C6                     __end_of___fltol:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function ___flmul *****************
  6400 ;; Defined at:
  6401 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  b               4   74[COMRAM] long 
  6404 ;;  a               4   78[COMRAM] long 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  prod            4    7[BANK0 ] struct .
  6407 ;;  grs             4    1[BANK0 ] unsigned long 
  6408 ;;  temp            2   11[BANK0 ] struct .
  6409 ;;  bexp            1    6[BANK0 ] unsigned char 
  6410 ;;  aexp            1    5[BANK0 ] unsigned char 
  6411 ;;  sign            1    0[BANK0 ] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  4   74[COMRAM] unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, prodl, prodh
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6425 ;;Total ram usage:       25 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 1
  6428 ;; This function calls:
  6429 ;;		Nothing
  6430 ;; This function is called by:
  6431 ;;		_RGB2Hue
  6432 ;;		_Left45
  6433 ;;		_Right45
  6434 ;;		_reverseHalfSquare
  6435 ;;		_Yellow_rev1_R90
  6436 ;;		_Pink_rev1_L90
  6437 ;;		_getTimerValue
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text30
  6442   001F2C                     __ptext30:
  6443                           	callstack 0
  6444   001F2C                     ___flmul:
  6445                           	callstack 27
  6446   001F2C  504E               	movf	(___flmul@b+3)^0,w,c
  6447   001F2E  0B80               	andlw	128
  6448   001F30  0100               	movlb	0	; () banked
  6449   001F32  6F60               	movwf	___flmul@sign& (0+255),b
  6450   001F34  504E               	movf	(___flmul@b+3)^0,w,c
  6451   001F36  244E               	addwf	(___flmul@b+3)^0,w,c
  6452   001F38  6F66               	movwf	___flmul@bexp& (0+255),b
  6453   001F3A                     
  6454                           ; BSR set to: 0
  6455   001F3A  AE4D               	btfss	(___flmul@b+2)^0,7,c
  6456   001F3C  EFA2  F00F         	goto	u2441
  6457   001F40  EFA4  F00F         	goto	u2440
  6458   001F44                     u2441:
  6459   001F44  EFA5  F00F         	goto	l3242
  6460   001F48                     u2440:
  6461   001F48                     
  6462                           ; BSR set to: 0
  6463   001F48  8166               	bsf	___flmul@bexp& (0+255),0,b
  6464   001F4A                     l3242:
  6465                           
  6466                           ; BSR set to: 0
  6467   001F4A  5166               	movf	___flmul@bexp& (0+255),w,b
  6468   001F4C  B4D8               	btfsc	status,2,c
  6469   001F4E  EFAB  F00F         	goto	u2451
  6470   001F52  EFAD  F00F         	goto	u2450
  6471   001F56                     u2451:
  6472   001F56  EFC0  F00F         	goto	l3250
  6473   001F5A                     u2450:
  6474   001F5A                     
  6475                           ; BSR set to: 0
  6476   001F5A  2966               	incf	___flmul@bexp& (0+255),w,b
  6477   001F5C  A4D8               	btfss	status,2,c
  6478   001F5E  EFB3  F00F         	goto	u2461
  6479   001F62  EFB5  F00F         	goto	u2460
  6480   001F66                     u2461:
  6481   001F66  EFBD  F00F         	goto	l3248
  6482   001F6A                     u2460:
  6483   001F6A                     
  6484                           ; BSR set to: 0
  6485   001F6A  0E00               	movlw	0
  6486   001F6C  6E4B               	movwf	___flmul@b^0,c
  6487   001F6E  0E00               	movlw	0
  6488   001F70  6E4C               	movwf	(___flmul@b+1)^0,c
  6489   001F72  0E00               	movlw	0
  6490   001F74  6E4D               	movwf	(___flmul@b+2)^0,c
  6491   001F76  0E00               	movlw	0
  6492   001F78  6E4E               	movwf	(___flmul@b+3)^0,c
  6493   001F7A                     l3248:
  6494                           
  6495                           ; BSR set to: 0
  6496   001F7A  8E4D               	bsf	(___flmul@b+2)^0,7,c
  6497   001F7C  EFC8  F00F         	goto	l3252
  6498   001F80                     l3250:
  6499                           
  6500                           ; BSR set to: 0
  6501   001F80  0E00               	movlw	0
  6502   001F82  6E4B               	movwf	___flmul@b^0,c
  6503   001F84  0E00               	movlw	0
  6504   001F86  6E4C               	movwf	(___flmul@b+1)^0,c
  6505   001F88  0E00               	movlw	0
  6506   001F8A  6E4D               	movwf	(___flmul@b+2)^0,c
  6507   001F8C  0E00               	movlw	0
  6508   001F8E  6E4E               	movwf	(___flmul@b+3)^0,c
  6509   001F90                     l3252:
  6510                           
  6511                           ; BSR set to: 0
  6512   001F90  5052               	movf	(___flmul@a+3)^0,w,c
  6513   001F92  0B80               	andlw	128
  6514   001F94  1B60               	xorwf	___flmul@sign& (0+255),f,b
  6515   001F96                     
  6516                           ; BSR set to: 0
  6517   001F96  5052               	movf	(___flmul@a+3)^0,w,c
  6518   001F98  2452               	addwf	(___flmul@a+3)^0,w,c
  6519   001F9A  6F65               	movwf	___flmul@aexp& (0+255),b
  6520   001F9C                     
  6521                           ; BSR set to: 0
  6522   001F9C  AE51               	btfss	(___flmul@a+2)^0,7,c
  6523   001F9E  EFD3  F00F         	goto	u2471
  6524   001FA2  EFD5  F00F         	goto	u2470
  6525   001FA6                     u2471:
  6526   001FA6  EFD6  F00F         	goto	l3260
  6527   001FAA                     u2470:
  6528   001FAA                     
  6529                           ; BSR set to: 0
  6530   001FAA  8165               	bsf	___flmul@aexp& (0+255),0,b
  6531   001FAC                     l3260:
  6532                           
  6533                           ; BSR set to: 0
  6534   001FAC  5165               	movf	___flmul@aexp& (0+255),w,b
  6535   001FAE  B4D8               	btfsc	status,2,c
  6536   001FB0  EFDC  F00F         	goto	u2481
  6537   001FB4  EFDE  F00F         	goto	u2480
  6538   001FB8                     u2481:
  6539   001FB8  EFF1  F00F         	goto	l3268
  6540   001FBC                     u2480:
  6541   001FBC                     
  6542                           ; BSR set to: 0
  6543   001FBC  2965               	incf	___flmul@aexp& (0+255),w,b
  6544   001FBE  A4D8               	btfss	status,2,c
  6545   001FC0  EFE4  F00F         	goto	u2491
  6546   001FC4  EFE6  F00F         	goto	u2490
  6547   001FC8                     u2491:
  6548   001FC8  EFEE  F00F         	goto	l3266
  6549   001FCC                     u2490:
  6550   001FCC                     
  6551                           ; BSR set to: 0
  6552   001FCC  0E00               	movlw	0
  6553   001FCE  6E4F               	movwf	___flmul@a^0,c
  6554   001FD0  0E00               	movlw	0
  6555   001FD2  6E50               	movwf	(___flmul@a+1)^0,c
  6556   001FD4  0E00               	movlw	0
  6557   001FD6  6E51               	movwf	(___flmul@a+2)^0,c
  6558   001FD8  0E00               	movlw	0
  6559   001FDA  6E52               	movwf	(___flmul@a+3)^0,c
  6560   001FDC                     l3266:
  6561                           
  6562                           ; BSR set to: 0
  6563   001FDC  8E51               	bsf	(___flmul@a+2)^0,7,c
  6564   001FDE  EFF9  F00F         	goto	l1279
  6565   001FE2                     l3268:
  6566                           
  6567                           ; BSR set to: 0
  6568   001FE2  0E00               	movlw	0
  6569   001FE4  6E4F               	movwf	___flmul@a^0,c
  6570   001FE6  0E00               	movlw	0
  6571   001FE8  6E50               	movwf	(___flmul@a+1)^0,c
  6572   001FEA  0E00               	movlw	0
  6573   001FEC  6E51               	movwf	(___flmul@a+2)^0,c
  6574   001FEE  0E00               	movlw	0
  6575   001FF0  6E52               	movwf	(___flmul@a+3)^0,c
  6576   001FF2                     l1279:
  6577                           
  6578                           ; BSR set to: 0
  6579   001FF2  5165               	movf	___flmul@aexp& (0+255),w,b
  6580   001FF4  B4D8               	btfsc	status,2,c
  6581   001FF6  EFFF  F00F         	goto	u2501
  6582   001FFA  EF01  F010         	goto	u2500
  6583   001FFE                     u2501:
  6584   001FFE  EF09  F010         	goto	l3272
  6585   002002                     u2500:
  6586   002002                     
  6587                           ; BSR set to: 0
  6588   002002  5166               	movf	___flmul@bexp& (0+255),w,b
  6589   002004  A4D8               	btfss	status,2,c
  6590   002006  EF07  F010         	goto	u2511
  6591   00200A  EF09  F010         	goto	u2510
  6592   00200E                     u2511:
  6593   00200E  EF13  F010         	goto	l3276
  6594   002012                     u2510:
  6595   002012                     l3272:
  6596                           
  6597                           ; BSR set to: 0
  6598   002012  0E00               	movlw	0
  6599   002014  6E4B               	movwf	?___flmul^0,c
  6600   002016  0E00               	movlw	0
  6601   002018  6E4C               	movwf	(?___flmul+1)^0,c
  6602   00201A  0E00               	movlw	0
  6603   00201C  6E4D               	movwf	(?___flmul+2)^0,c
  6604   00201E  0E00               	movlw	0
  6605   002020  6E4E               	movwf	(?___flmul+3)^0,c
  6606   002022  EFAB  F011         	goto	l1283
  6607   002026                     l3276:
  6608                           
  6609                           ; BSR set to: 0
  6610   002026  5051               	movf	(___flmul@a+2)^0,w,c
  6611   002028  024B               	mulwf	___flmul@b^0,c
  6612   00202A  CFF3 F06B          	movff	prodl,___flmul@temp
  6613   00202E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6614   002032                     
  6615                           ; BSR set to: 0
  6616   002032  516B               	movf	___flmul@temp& (0+255),w,b
  6617   002034  6F61               	movwf	___flmul@grs& (0+255),b
  6618   002036  6B62               	clrf	(___flmul@grs+1)& (0+255),b
  6619   002038  6B63               	clrf	(___flmul@grs+2)& (0+255),b
  6620   00203A  6B64               	clrf	(___flmul@grs+3)& (0+255),b
  6621   00203C                     
  6622                           ; BSR set to: 0
  6623   00203C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6624   00203E  6F67               	movwf	___flmul@prod& (0+255),b
  6625   002040  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6626   002042  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6627   002044  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6628   002046  5050               	movf	(___flmul@a+1)^0,w,c
  6629   002048  024C               	mulwf	(___flmul@b+1)^0,c
  6630   00204A  CFF3 F06B          	movff	prodl,___flmul@temp
  6631   00204E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6632   002052                     
  6633                           ; BSR set to: 0
  6634   002052  516B               	movf	___flmul@temp& (0+255),w,b
  6635   002054  2761               	addwf	___flmul@grs& (0+255),f,b
  6636   002056  0E00               	movlw	0
  6637   002058  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6638   00205A  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6639   00205C  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6640   00205E                     
  6641                           ; BSR set to: 0
  6642   00205E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6643   002060  2767               	addwf	___flmul@prod& (0+255),f,b
  6644   002062  0E00               	movlw	0
  6645   002064  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6646   002066  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6647   002068  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6648   00206A  504F               	movf	___flmul@a^0,w,c
  6649   00206C  024D               	mulwf	(___flmul@b+2)^0,c
  6650   00206E  CFF3 F06B          	movff	prodl,___flmul@temp
  6651   002072  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6652   002076                     
  6653                           ; BSR set to: 0
  6654   002076  516B               	movf	___flmul@temp& (0+255),w,b
  6655   002078  2761               	addwf	___flmul@grs& (0+255),f,b
  6656   00207A  0E00               	movlw	0
  6657   00207C  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6658   00207E  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6659   002080  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6660   002082                     
  6661                           ; BSR set to: 0
  6662   002082  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6663   002084  2767               	addwf	___flmul@prod& (0+255),f,b
  6664   002086  0E00               	movlw	0
  6665   002088  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6666   00208A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6667   00208C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6668   00208E                     
  6669                           ; BSR set to: 0
  6670   00208E  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6671   002092  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6672   002096  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6673   00209A  6B61               	clrf	___flmul@grs& (0+255),b
  6674   00209C                     
  6675                           ; BSR set to: 0
  6676   00209C  504F               	movf	___flmul@a^0,w,c
  6677   00209E  024C               	mulwf	(___flmul@b+1)^0,c
  6678   0020A0  CFF3 F06B          	movff	prodl,___flmul@temp
  6679   0020A4  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6680   0020A8                     
  6681                           ; BSR set to: 0
  6682   0020A8  516B               	movf	___flmul@temp& (0+255),w,b
  6683   0020AA  2761               	addwf	___flmul@grs& (0+255),f,b
  6684   0020AC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6685   0020AE  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6686   0020B0  0E00               	movlw	0
  6687   0020B2  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6688   0020B4  0E00               	movlw	0
  6689   0020B6  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6690   0020B8                     
  6691                           ; BSR set to: 0
  6692   0020B8  5050               	movf	(___flmul@a+1)^0,w,c
  6693   0020BA  024B               	mulwf	___flmul@b^0,c
  6694   0020BC  CFF3 F06B          	movff	prodl,___flmul@temp
  6695   0020C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6696   0020C4                     
  6697                           ; BSR set to: 0
  6698   0020C4  516B               	movf	___flmul@temp& (0+255),w,b
  6699   0020C6  2761               	addwf	___flmul@grs& (0+255),f,b
  6700   0020C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6701   0020CA  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6702   0020CC  0E00               	movlw	0
  6703   0020CE  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6704   0020D0  0E00               	movlw	0
  6705   0020D2  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6706   0020D4                     
  6707                           ; BSR set to: 0
  6708   0020D4  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6709   0020D8  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6710   0020DC  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6711   0020E0  6B61               	clrf	___flmul@grs& (0+255),b
  6712   0020E2  504F               	movf	___flmul@a^0,w,c
  6713   0020E4  024B               	mulwf	___flmul@b^0,c
  6714   0020E6  CFF3 F06B          	movff	prodl,___flmul@temp
  6715   0020EA  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6716   0020EE                     
  6717                           ; BSR set to: 0
  6718   0020EE  516B               	movf	___flmul@temp& (0+255),w,b
  6719   0020F0  2761               	addwf	___flmul@grs& (0+255),f,b
  6720   0020F2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6721   0020F4  2362               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6722   0020F6  0E00               	movlw	0
  6723   0020F8  2363               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6724   0020FA  0E00               	movlw	0
  6725   0020FC  2364               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6726   0020FE                     
  6727                           ; BSR set to: 0
  6728   0020FE  5051               	movf	(___flmul@a+2)^0,w,c
  6729   002100  024C               	mulwf	(___flmul@b+1)^0,c
  6730   002102  CFF3 F06B          	movff	prodl,___flmul@temp
  6731   002106  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6732   00210A  516B               	movf	___flmul@temp& (0+255),w,b
  6733   00210C  2767               	addwf	___flmul@prod& (0+255),f,b
  6734   00210E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6735   002110  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6736   002112  0E00               	movlw	0
  6737   002114  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6738   002116  0E00               	movlw	0
  6739   002118  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6740   00211A                     
  6741                           ; BSR set to: 0
  6742   00211A  5050               	movf	(___flmul@a+1)^0,w,c
  6743   00211C  024D               	mulwf	(___flmul@b+2)^0,c
  6744   00211E  CFF3 F06B          	movff	prodl,___flmul@temp
  6745   002122  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6746   002126                     
  6747                           ; BSR set to: 0
  6748   002126  516B               	movf	___flmul@temp& (0+255),w,b
  6749   002128  2767               	addwf	___flmul@prod& (0+255),f,b
  6750   00212A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6751   00212C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6752   00212E  0E00               	movlw	0
  6753   002130  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6754   002132  0E00               	movlw	0
  6755   002134  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6756   002136  5051               	movf	(___flmul@a+2)^0,w,c
  6757   002138  024D               	mulwf	(___flmul@b+2)^0,c
  6758   00213A  CFF3 F06B          	movff	prodl,___flmul@temp
  6759   00213E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6760   002142                     
  6761                           ; BSR set to: 0
  6762   002142  516B               	movf	___flmul@temp& (0+255),w,b
  6763   002144  6E53               	movwf	??___flmul^0,c
  6764   002146  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6765   002148  6E54               	movwf	(??___flmul+1)^0,c
  6766   00214A  6A55               	clrf	(??___flmul+2)^0,c
  6767   00214C  6A56               	clrf	(??___flmul+3)^0,c
  6768   00214E  C055  F056         	movff	??___flmul+2,??___flmul+3
  6769   002152  C054  F055         	movff	??___flmul+1,??___flmul+2
  6770   002156  C053  F054         	movff	??___flmul,??___flmul+1
  6771   00215A  6A53               	clrf	??___flmul^0,c
  6772   00215C  5053               	movf	??___flmul^0,w,c
  6773   00215E  2767               	addwf	___flmul@prod& (0+255),f,b
  6774   002160  5054               	movf	(??___flmul+1)^0,w,c
  6775   002162  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6776   002164  5055               	movf	(??___flmul+2)^0,w,c
  6777   002166  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6778   002168  5056               	movf	(??___flmul+3)^0,w,c
  6779   00216A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6780   00216C                     
  6781                           ; BSR set to: 0
  6782   00216C  C061  F053         	movff	___flmul@grs,??___flmul
  6783   002170  C062  F054         	movff	___flmul@grs+1,??___flmul+1
  6784   002174  C063  F055         	movff	___flmul@grs+2,??___flmul+2
  6785   002178  C064  F056         	movff	___flmul@grs+3,??___flmul+3
  6786   00217C  0E19               	movlw	25
  6787   00217E  EFC6  F010         	goto	u2520
  6788   002182                     u2525:
  6789   002182  90D8               	bcf	status,0,c
  6790   002184  3256               	rrcf	(??___flmul+3)^0,f,c
  6791   002186  3255               	rrcf	(??___flmul+2)^0,f,c
  6792   002188  3254               	rrcf	(??___flmul+1)^0,f,c
  6793   00218A  3253               	rrcf	??___flmul^0,f,c
  6794   00218C                     u2520:
  6795   00218C  2EE8               	decfsz	wreg,f,c
  6796   00218E  EFC1  F010         	goto	u2525
  6797   002192  5053               	movf	??___flmul^0,w,c
  6798   002194  2767               	addwf	___flmul@prod& (0+255),f,b
  6799   002196  5054               	movf	(??___flmul+1)^0,w,c
  6800   002198  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6801   00219A  5055               	movf	(??___flmul+2)^0,w,c
  6802   00219C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6803   00219E  5056               	movf	(??___flmul+3)^0,w,c
  6804   0021A0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6805   0021A2                     
  6806                           ; BSR set to: 0
  6807   0021A2  C063  F064         	movff	___flmul@grs+2,___flmul@grs+3
  6808   0021A6  C062  F063         	movff	___flmul@grs+1,___flmul@grs+2
  6809   0021AA  C061  F062         	movff	___flmul@grs,___flmul@grs+1
  6810   0021AE  6B61               	clrf	___flmul@grs& (0+255),b
  6811   0021B0                     
  6812                           ; BSR set to: 0
  6813   0021B0  5165               	movf	___flmul@aexp& (0+255),w,b
  6814   0021B2  C066  F053         	movff	___flmul@bexp,??___flmul
  6815   0021B6  6A54               	clrf	(??___flmul+1)^0,c
  6816   0021B8  2653               	addwf	??___flmul^0,f,c
  6817   0021BA  0E00               	movlw	0
  6818   0021BC  2254               	addwfc	(??___flmul+1)^0,f,c
  6819   0021BE  0E82               	movlw	130
  6820   0021C0  2453               	addwf	??___flmul^0,w,c
  6821   0021C2  6F6B               	movwf	___flmul@temp& (0+255),b
  6822   0021C4  0EFF               	movlw	255
  6823   0021C6  2054               	addwfc	(??___flmul+1)^0,w,c
  6824   0021C8  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6825   0021CA  EFFC  F010         	goto	l3324
  6826   0021CE                     l3318:
  6827                           
  6828                           ; BSR set to: 0
  6829   0021CE  90D8               	bcf	status,0,c
  6830   0021D0  3767               	rlcf	___flmul@prod& (0+255),f,b
  6831   0021D2  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6832   0021D4  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6833   0021D6  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6834   0021D8                     
  6835                           ; BSR set to: 0
  6836   0021D8  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  6837   0021DA  EFF1  F010         	goto	u2531
  6838   0021DE  EFF3  F010         	goto	u2530
  6839   0021E2                     u2531:
  6840   0021E2  EFF4  F010         	goto	l1286
  6841   0021E6                     u2530:
  6842   0021E6                     
  6843                           ; BSR set to: 0
  6844   0021E6  8167               	bsf	___flmul@prod& (0+255),0,b
  6845   0021E8                     l1286:
  6846                           
  6847                           ; BSR set to: 0
  6848   0021E8  90D8               	bcf	status,0,c
  6849   0021EA  3761               	rlcf	___flmul@grs& (0+255),f,b
  6850   0021EC  3762               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6851   0021EE  3763               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6852   0021F0  3764               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6853   0021F2  076B               	decf	___flmul@temp& (0+255),f,b
  6854   0021F4  A0D8               	btfss	status,0,c
  6855   0021F6  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  6856   0021F8                     l3324:
  6857                           
  6858                           ; BSR set to: 0
  6859   0021F8  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  6860   0021FA  EF01  F011         	goto	u2541
  6861   0021FE  EF03  F011         	goto	u2540
  6862   002202                     u2541:
  6863   002202  EFE7  F010         	goto	l3318
  6864   002206                     u2540:
  6865   002206                     
  6866                           ; BSR set to: 0
  6867   002206  0E00               	movlw	0
  6868   002208  6F65               	movwf	___flmul@aexp& (0+255),b
  6869   00220A                     
  6870                           ; BSR set to: 0
  6871   00220A  AF64               	btfss	(___flmul@grs+3)& (0+255),7,b
  6872   00220C  EF0A  F011         	goto	u2551
  6873   002210  EF0C  F011         	goto	u2550
  6874   002214                     u2551:
  6875   002214  EF30  F011         	goto	l1288
  6876   002218                     u2550:
  6877   002218                     
  6878                           ; BSR set to: 0
  6879   002218  0EFF               	movlw	255
  6880   00221A  1561               	andwf	___flmul@grs& (0+255),w,b
  6881   00221C  6E53               	movwf	??___flmul^0,c
  6882   00221E  0EFF               	movlw	255
  6883   002220  1562               	andwf	(___flmul@grs+1)& (0+255),w,b
  6884   002222  6E54               	movwf	(??___flmul+1)^0,c
  6885   002224  0EFF               	movlw	255
  6886   002226  1563               	andwf	(___flmul@grs+2)& (0+255),w,b
  6887   002228  6E55               	movwf	(??___flmul+2)^0,c
  6888   00222A  0E7F               	movlw	127
  6889   00222C  1564               	andwf	(___flmul@grs+3)& (0+255),w,b
  6890   00222E  6E56               	movwf	(??___flmul+3)^0,c
  6891   002230  5053               	movf	??___flmul^0,w,c
  6892   002232  1054               	iorwf	(??___flmul+1)^0,w,c
  6893   002234  1055               	iorwf	(??___flmul+2)^0,w,c
  6894   002236  1056               	iorwf	(??___flmul+3)^0,w,c
  6895   002238  B4D8               	btfsc	status,2,c
  6896   00223A  EF21  F011         	goto	u2561
  6897   00223E  EF23  F011         	goto	u2560
  6898   002242                     u2561:
  6899   002242  EF27  F011         	goto	l1289
  6900   002246                     u2560:
  6901   002246                     l3332:
  6902                           
  6903                           ; BSR set to: 0
  6904   002246  0E01               	movlw	1
  6905   002248  6F65               	movwf	___flmul@aexp& (0+255),b
  6906   00224A  EF30  F011         	goto	l1288
  6907   00224E                     l1289:
  6908                           
  6909                           ; BSR set to: 0
  6910   00224E  A167               	btfss	___flmul@prod& (0+255),0,b
  6911   002250  EF2C  F011         	goto	u2571
  6912   002254  EF2E  F011         	goto	u2570
  6913   002258                     u2571:
  6914   002258  EF30  F011         	goto	l1288
  6915   00225C                     u2570:
  6916   00225C  EF23  F011         	goto	l3332
  6917   002260                     l1288:
  6918                           
  6919                           ; BSR set to: 0
  6920   002260  5165               	movf	___flmul@aexp& (0+255),w,b
  6921   002262  B4D8               	btfsc	status,2,c
  6922   002264  EF36  F011         	goto	u2581
  6923   002268  EF38  F011         	goto	u2580
  6924   00226C                     u2581:
  6925   00226C  EF5C  F011         	goto	l3344
  6926   002270                     u2580:
  6927   002270                     
  6928                           ; BSR set to: 0
  6929   002270  0E01               	movlw	1
  6930   002272  2767               	addwf	___flmul@prod& (0+255),f,b
  6931   002274  0E00               	movlw	0
  6932   002276  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6933   002278  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6934   00227A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6935   00227C                     
  6936                           ; BSR set to: 0
  6937   00227C  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6938   00227E  EF43  F011         	goto	u2591
  6939   002282  EF45  F011         	goto	u2590
  6940   002286                     u2591:
  6941   002286  EF5C  F011         	goto	l3344
  6942   00228A                     u2590:
  6943   00228A                     
  6944                           ; BSR set to: 0
  6945   00228A  C067  F053         	movff	___flmul@prod,??___flmul
  6946   00228E  C068  F054         	movff	___flmul@prod+1,??___flmul+1
  6947   002292  C069  F055         	movff	___flmul@prod+2,??___flmul+2
  6948   002296  C06A  F056         	movff	___flmul@prod+3,??___flmul+3
  6949   00229A  3456               	rlcf	(??___flmul+3)^0,w,c
  6950   00229C  3256               	rrcf	(??___flmul+3)^0,f,c
  6951   00229E  3255               	rrcf	(??___flmul+2)^0,f,c
  6952   0022A0  3254               	rrcf	(??___flmul+1)^0,f,c
  6953   0022A2  3253               	rrcf	??___flmul^0,f,c
  6954   0022A4  C053  F067         	movff	??___flmul,___flmul@prod
  6955   0022A8  C054  F068         	movff	??___flmul+1,___flmul@prod+1
  6956   0022AC  C055  F069         	movff	??___flmul+2,___flmul@prod+2
  6957   0022B0  C056  F06A         	movff	??___flmul+3,___flmul@prod+3
  6958   0022B4                     
  6959                           ; BSR set to: 0
  6960   0022B4  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  6961   0022B6  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  6962   0022B8                     l3344:
  6963                           
  6964                           ; BSR set to: 0
  6965   0022B8  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6966   0022BA  EF67  F011         	goto	u2601
  6967   0022BE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6968   0022C0  E108               	bnz	u2600
  6969   0022C2  296B               	incf	___flmul@temp& (0+255),w,b
  6970   0022C4  A0D8               	btfss	status,0,c
  6971   0022C6  EF67  F011         	goto	u2601
  6972   0022CA  EF69  F011         	goto	u2600
  6973   0022CE                     u2601:
  6974   0022CE  EF73  F011         	goto	l3348
  6975   0022D2                     u2600:
  6976   0022D2                     
  6977                           ; BSR set to: 0
  6978   0022D2  0E00               	movlw	0
  6979   0022D4  6F67               	movwf	___flmul@prod& (0+255),b
  6980   0022D6  0E00               	movlw	0
  6981   0022D8  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6982   0022DA  0E80               	movlw	128
  6983   0022DC  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6984   0022DE  0E7F               	movlw	127
  6985   0022E0  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6986   0022E2  EFA1  F011         	goto	l3360
  6987   0022E6                     l3348:
  6988                           
  6989                           ; BSR set to: 0
  6990   0022E6  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6991   0022E8  EF80  F011         	goto	u2610
  6992   0022EC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6993   0022EE  E106               	bnz	u2611
  6994   0022F0  056B               	decf	___flmul@temp& (0+255),w,b
  6995   0022F2  B0D8               	btfsc	status,0,c
  6996   0022F4  EF7E  F011         	goto	u2611
  6997   0022F8  EF80  F011         	goto	u2610
  6998   0022FC                     u2611:
  6999   0022FC  EF8C  F011         	goto	l1296
  7000   002300                     u2610:
  7001   002300                     
  7002                           ; BSR set to: 0
  7003   002300  0E00               	movlw	0
  7004   002302  6F67               	movwf	___flmul@prod& (0+255),b
  7005   002304  0E00               	movlw	0
  7006   002306  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7007   002308  0E00               	movlw	0
  7008   00230A  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7009   00230C  0E00               	movlw	0
  7010   00230E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7011   002310  0E00               	movlw	0
  7012   002312  6F60               	movwf	___flmul@sign& (0+255),b
  7013   002314  EFA1  F011         	goto	l3360
  7014   002318                     l1296:
  7015                           
  7016                           ; BSR set to: 0
  7017   002318  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  7018   00231C                     
  7019                           ; BSR set to: 0
  7020   00231C  0EFF               	movlw	255
  7021   00231E  1767               	andwf	___flmul@prod& (0+255),f,b
  7022   002320  0EFF               	movlw	255
  7023   002322  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7024   002324  0E7F               	movlw	127
  7025   002326  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7026   002328  0E00               	movlw	0
  7027   00232A  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7028   00232C                     
  7029                           ; BSR set to: 0
  7030   00232C  A166               	btfss	___flmul@bexp& (0+255),0,b
  7031   00232E  EF9B  F011         	goto	u2621
  7032   002332  EF9D  F011         	goto	u2620
  7033   002336                     u2621:
  7034   002336  EF9E  F011         	goto	l3358
  7035   00233A                     u2620:
  7036   00233A                     
  7037                           ; BSR set to: 0
  7038   00233A  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  7039   00233C                     l3358:
  7040                           
  7041                           ; BSR set to: 0
  7042   00233C  90D8               	bcf	status,0,c
  7043   00233E  3166               	rrcf	___flmul@bexp& (0+255),w,b
  7044   002340  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7045   002342                     l3360:
  7046                           
  7047                           ; BSR set to: 0
  7048   002342  5160               	movf	___flmul@sign& (0+255),w,b
  7049   002344  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7050   002346                     
  7051                           ; BSR set to: 0
  7052   002346  C067  F04B         	movff	___flmul@prod,?___flmul
  7053   00234A  C068  F04C         	movff	___flmul@prod+1,?___flmul+1
  7054   00234E  C069  F04D         	movff	___flmul@prod+2,?___flmul+2
  7055   002352  C06A  F04E         	movff	___flmul@prod+3,?___flmul+3
  7056   002356                     l1283:
  7057                           
  7058                           ; BSR set to: 0
  7059   002356  0012               	return		;funcret
  7060   002358                     __end_of___flmul:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _Yellow_rev1_R90 *****************
  7064 ;; Defined at:
  7065 ;;		line 266 in file "dc_motor.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7068 ;;		 -> motorL(9), 
  7069 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7070 ;;		 -> motorR(9), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;Total ram usage:        6 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 5
  7089 ;; This function calls:
  7090 ;;		_Left45
  7091 ;;		_Right45
  7092 ;;		_fullSpeedAhead
  7093 ;;		_fullSpeedReverse
  7094 ;;		_reverseHalfSquare
  7095 ;;		_stop
  7096 ;; This function is called by:
  7097 ;;		_Colour2Action
  7098 ;;		_White
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text31
  7103   0036D0                     __ptext31:
  7104                           	callstack 0
  7105   0036D0                     _Yellow_rev1_R90:
  7106                           	callstack 24
  7107   0036D0                     
  7108                           ;dc_motor.c: 266: void Yellow_rev1_R90(struct DC_motor *mL, struct DC_motor *mR);dc_moto
      +                          r.c: 267: {;dc_motor.c: 268:     if (ForwardFlag){
  7109   0036D0  0100               	movlb	0	; () banked
  7110   0036D2  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7111   0036D4  B4D8               	btfsc	status,2,c
  7112   0036D6  EF6F  F01B         	goto	u2891
  7113   0036DA  EF71  F01B         	goto	u2890
  7114   0036DE                     u2891:
  7115   0036DE  EFA7  F01B         	goto	l3548
  7116   0036E2                     u2890:
  7117   0036E2                     
  7118                           ; BSR set to: 0
  7119                           ;dc_motor.c: 269:         reverseHalfSquare(mL,mR);
  7120   0036E2  C021  F01B         	movff	Yellow_rev1_R90@mL,reverseHalfSquare@mL
  7121   0036E6  C022  F01C         	movff	Yellow_rev1_R90@mL+1,reverseHalfSquare@mL+1
  7122   0036EA  C023  F01D         	movff	Yellow_rev1_R90@mR,reverseHalfSquare@mR
  7123   0036EE  C024  F01E         	movff	Yellow_rev1_R90@mR+1,reverseHalfSquare@mR+1
  7124   0036F2  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7125                           
  7126                           ;dc_motor.c: 271:         fullSpeedReverse(mL,mR);
  7127   0036F6  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedReverse@mL
  7128   0036FA  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedReverse@mL+1
  7129   0036FE  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedReverse@mR
  7130   003702  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedReverse@mR+1
  7131   003706  EC5A  F020         	call	_fullSpeedReverse	;wreg free
  7132   00370A                     
  7133                           ;dc_motor.c: 272:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7134   00370A  0E39               	movlw	57
  7135   00370C  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7136   00370E  0ED2               	movlw	210
  7137   003710  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7138   003712  0E4C               	movlw	76
  7139   003714                     u4267:
  7140   003714  2EE8               	decfsz	wreg,f,c
  7141   003716  D7FE               	bra	u4267
  7142   003718  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7143   00371A  D7FC               	bra	u4267
  7144   00371C  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7145   00371E  D7FA               	bra	u4267
  7146   003720  D000               	nop2	
  7147   003722                     
  7148                           ;dc_motor.c: 274:         Right45(mL,mR);
  7149   003722  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7150   003726  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7151   00372A  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7152   00372E  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7153   003732  EC93  F01F         	call	_Right45	;wreg free
  7154   003736                     
  7155                           ;dc_motor.c: 275:         Right45(mL,mR);
  7156   003736  C021  F01A         	movff	Yellow_rev1_R90@mL,Right45@mL
  7157   00373A  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Right45@mL+1
  7158   00373E  C023  F01C         	movff	Yellow_rev1_R90@mR,Right45@mR
  7159   003742  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Right45@mR+1
  7160   003746  EC93  F01F         	call	_Right45	;wreg free
  7161                           
  7162                           ;dc_motor.c: 276:     }
  7163   00374A  EFDB  F01B         	goto	l520
  7164   00374E                     l3548:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;dc_motor.c: 279:         Left45(mL,mR);
  7168   00374E  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7169   003752  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7170   003756  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7171   00375A  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7172   00375E  EC4E  F01F         	call	_Left45	;wreg free
  7173                           
  7174                           ;dc_motor.c: 280:         Left45(mL,mR);
  7175   003762  C021  F01A         	movff	Yellow_rev1_R90@mL,Left45@mL
  7176   003766  C022  F01B         	movff	Yellow_rev1_R90@mL+1,Left45@mL+1
  7177   00376A  C023  F01C         	movff	Yellow_rev1_R90@mR,Left45@mR
  7178   00376E  C024  F01D         	movff	Yellow_rev1_R90@mR+1,Left45@mR+1
  7179   003772  EC4E  F01F         	call	_Left45	;wreg free
  7180                           
  7181                           ;dc_motor.c: 281:         fullSpeedAhead(mL,mR);
  7182   003776  C021  F014         	movff	Yellow_rev1_R90@mL,fullSpeedAhead@mL
  7183   00377A  C022  F015         	movff	Yellow_rev1_R90@mL+1,fullSpeedAhead@mL+1
  7184   00377E  C023  F016         	movff	Yellow_rev1_R90@mR,fullSpeedAhead@mR
  7185   003782  C024  F017         	movff	Yellow_rev1_R90@mR+1,fullSpeedAhead@mR+1
  7186   003786  EC1A  F020         	call	_fullSpeedAhead	;wreg free
  7187   00378A                     
  7188                           ;dc_motor.c: 282:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7189   00378A  0E39               	movlw	57
  7190   00378C  6E26               	movwf	(??_Yellow_rev1_R90+1)^0,c
  7191   00378E  0ED2               	movlw	210
  7192   003790  6E25               	movwf	??_Yellow_rev1_R90^0,c
  7193   003792  0E4C               	movlw	76
  7194   003794                     u4277:
  7195   003794  2EE8               	decfsz	wreg,f,c
  7196   003796  D7FE               	bra	u4277
  7197   003798  2E25               	decfsz	??_Yellow_rev1_R90^0,f,c
  7198   00379A  D7FC               	bra	u4277
  7199   00379C  2E26               	decfsz	(??_Yellow_rev1_R90+1)^0,f,c
  7200   00379E  D7FA               	bra	u4277
  7201   0037A0  D000               	nop2	
  7202   0037A2                     
  7203                           ;dc_motor.c: 283:         stop(mL,mR);
  7204   0037A2  C021  F014         	movff	Yellow_rev1_R90@mL,stop@mL
  7205   0037A6  C022  F015         	movff	Yellow_rev1_R90@mL+1,stop@mL+1
  7206   0037AA  C023  F016         	movff	Yellow_rev1_R90@mR,stop@mR
  7207   0037AE  C024  F017         	movff	Yellow_rev1_R90@mR+1,stop@mR+1
  7208   0037B2  EC79  F01D         	call	_stop	;wreg free
  7209   0037B6                     l520:
  7210   0037B6  0012               	return		;funcret
  7211   0037B8                     __end_of_Yellow_rev1_R90:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _TimerReset *****************
  7215 ;; Defined at:
  7216 ;;		line 23 in file "timer.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 1
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_main
  7241 ;;		_White
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text32
  7246   00491E                     __ptext32:
  7247                           	callstack 0
  7248   00491E                     _TimerReset:
  7249                           	callstack 29
  7250   00491E                     
  7251                           ;timer.c: 25:     TMR0L = 0;
  7252   00491E  0E00               	movlw	0
  7253   004920  6ED3               	movwf	211,c	;volatile
  7254                           
  7255                           ;timer.c: 26:     TMR0H = 0;
  7256   004922  0E00               	movlw	0
  7257   004924  6ED4               	movwf	212,c	;volatile
  7258   004926  0012               	return		;funcret
  7259   004928                     __end_of_TimerReset:
  7260                           	callstack 0
  7261                           
  7262 ;; *************** function _Red_R90 *****************
  7263 ;; Defined at:
  7264 ;;		line 226 in file "dc_motor.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7267 ;;		 -> motorL(9), 
  7268 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7269 ;;		 -> motorR(9), 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;Total ram usage:        4 bytes
  7286 ;; Hardware stack levels used: 1
  7287 ;; Hardware stack levels required when called: 5
  7288 ;; This function calls:
  7289 ;;		_Left45
  7290 ;;		_Right45
  7291 ;;		_reverseHalfSquare
  7292 ;; This function is called by:
  7293 ;;		_Colour2Action
  7294 ;;		_White
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text33
  7299   004134                     __ptext33:
  7300                           	callstack 0
  7301   004134                     _Red_R90:
  7302                           	callstack 23
  7303   004134                     
  7304                           ;dc_motor.c: 226: void Red_R90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 227
      +                          : {;dc_motor.c: 228:     if (ForwardFlag){
  7305   004134  0100               	movlb	0	; () banked
  7306   004136  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7307   004138  B4D8               	btfsc	status,2,c
  7308   00413A  EFA1  F020         	goto	u2861
  7309   00413E  EFA3  F020         	goto	u2860
  7310   004142                     u2861:
  7311   004142  EFC3  F020         	goto	l3524
  7312   004146                     u2860:
  7313   004146                     
  7314                           ; BSR set to: 0
  7315                           ;dc_motor.c: 229:         reverseHalfSquare(mL,mR);
  7316   004146  C021  F01B         	movff	Red_R90@mL,reverseHalfSquare@mL
  7317   00414A  C022  F01C         	movff	Red_R90@mL+1,reverseHalfSquare@mL+1
  7318   00414E  C023  F01D         	movff	Red_R90@mR,reverseHalfSquare@mR
  7319   004152  C024  F01E         	movff	Red_R90@mR+1,reverseHalfSquare@mR+1
  7320   004156  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7321                           
  7322                           ;dc_motor.c: 230:         Right45(mL,mR);
  7323   00415A  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7324   00415E  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7325   004162  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7326   004166  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7327   00416A  EC93  F01F         	call	_Right45	;wreg free
  7328                           
  7329                           ;dc_motor.c: 231:         Right45(mL,mR);
  7330   00416E  C021  F01A         	movff	Red_R90@mL,Right45@mL
  7331   004172  C022  F01B         	movff	Red_R90@mL+1,Right45@mL+1
  7332   004176  C023  F01C         	movff	Red_R90@mR,Right45@mR
  7333   00417A  C024  F01D         	movff	Red_R90@mR+1,Right45@mR+1
  7334   00417E  EC93  F01F         	call	_Right45	;wreg free
  7335                           
  7336                           ;dc_motor.c: 232:     }
  7337   004182  EFD7  F020         	goto	l505
  7338   004186                     l3524:
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;dc_motor.c: 235:         Left45(mL,mR);
  7342   004186  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7343   00418A  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7344   00418E  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7345   004192  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7346   004196  EC4E  F01F         	call	_Left45	;wreg free
  7347                           
  7348                           ;dc_motor.c: 236:         Left45(mL,mR);
  7349   00419A  C021  F01A         	movff	Red_R90@mL,Left45@mL
  7350   00419E  C022  F01B         	movff	Red_R90@mL+1,Left45@mL+1
  7351   0041A2  C023  F01C         	movff	Red_R90@mR,Left45@mR
  7352   0041A6  C024  F01D         	movff	Red_R90@mR+1,Left45@mR+1
  7353   0041AA  EC4E  F01F         	call	_Left45	;wreg free
  7354   0041AE                     l505:
  7355   0041AE  0012               	return		;funcret
  7356   0041B0                     __end_of_Red_R90:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function _Pink_rev1_L90 *****************
  7360 ;; Defined at:
  7361 ;;		line 286 in file "dc_motor.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7364 ;;		 -> motorL(9), 
  7365 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7366 ;;		 -> motorR(9), 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;Total ram usage:        6 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; Hardware stack levels required when called: 5
  7385 ;; This function calls:
  7386 ;;		_Left45
  7387 ;;		_Right45
  7388 ;;		_fullSpeedAhead
  7389 ;;		_fullSpeedReverse
  7390 ;;		_reverseHalfSquare
  7391 ;;		_stop
  7392 ;; This function is called by:
  7393 ;;		_Colour2Action
  7394 ;;		_White
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           	psect	text34
  7399   0037B8                     __ptext34:
  7400                           	callstack 0
  7401   0037B8                     _Pink_rev1_L90:
  7402                           	callstack 23
  7403   0037B8                     
  7404                           ;dc_motor.c: 286: void Pink_rev1_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 287: {;dc_motor.c: 288:     if (ForwardFlag){
  7405   0037B8  0100               	movlb	0	; () banked
  7406   0037BA  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7407   0037BC  B4D8               	btfsc	status,2,c
  7408   0037BE  EFE3  F01B         	goto	u2901
  7409   0037C2  EFE5  F01B         	goto	u2900
  7410   0037C6                     u2901:
  7411   0037C6  EF1B  F01C         	goto	l3564
  7412   0037CA                     u2900:
  7413   0037CA                     
  7414                           ; BSR set to: 0
  7415                           ;dc_motor.c: 289:         reverseHalfSquare(mL,mR);
  7416   0037CA  C021  F01B         	movff	Pink_rev1_L90@mL,reverseHalfSquare@mL
  7417   0037CE  C022  F01C         	movff	Pink_rev1_L90@mL+1,reverseHalfSquare@mL+1
  7418   0037D2  C023  F01D         	movff	Pink_rev1_L90@mR,reverseHalfSquare@mR
  7419   0037D6  C024  F01E         	movff	Pink_rev1_L90@mR+1,reverseHalfSquare@mR+1
  7420   0037DA  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7421                           
  7422                           ;dc_motor.c: 291:         fullSpeedReverse(mL,mR);
  7423   0037DE  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedReverse@mL
  7424   0037E2  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedReverse@mL+1
  7425   0037E6  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedReverse@mR
  7426   0037EA  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedReverse@mR+1
  7427   0037EE  EC5A  F020         	call	_fullSpeedReverse	;wreg free
  7428   0037F2                     
  7429                           ;dc_motor.c: 292:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7430   0037F2  0E39               	movlw	57
  7431   0037F4  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7432   0037F6  0ED2               	movlw	210
  7433   0037F8  6E25               	movwf	??_Pink_rev1_L90^0,c
  7434   0037FA  0E4C               	movlw	76
  7435   0037FC                     u4287:
  7436   0037FC  2EE8               	decfsz	wreg,f,c
  7437   0037FE  D7FE               	bra	u4287
  7438   003800  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7439   003802  D7FC               	bra	u4287
  7440   003804  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7441   003806  D7FA               	bra	u4287
  7442   003808  D000               	nop2	
  7443   00380A                     
  7444                           ;dc_motor.c: 293:         Left45(mL,mR);
  7445   00380A  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7446   00380E  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7447   003812  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7448   003816  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7449   00381A  EC4E  F01F         	call	_Left45	;wreg free
  7450   00381E                     
  7451                           ;dc_motor.c: 294:         Left45(mL,mR);
  7452   00381E  C021  F01A         	movff	Pink_rev1_L90@mL,Left45@mL
  7453   003822  C022  F01B         	movff	Pink_rev1_L90@mL+1,Left45@mL+1
  7454   003826  C023  F01C         	movff	Pink_rev1_L90@mR,Left45@mR
  7455   00382A  C024  F01D         	movff	Pink_rev1_L90@mR+1,Left45@mR+1
  7456   00382E  EC4E  F01F         	call	_Left45	;wreg free
  7457                           
  7458                           ;dc_motor.c: 295:     }
  7459   003832  EF4F  F01C         	goto	l525
  7460   003836                     l3564:
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;dc_motor.c: 298:         Right45(mL,mR);
  7464   003836  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7465   00383A  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7466   00383E  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7467   003842  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7468   003846  EC93  F01F         	call	_Right45	;wreg free
  7469                           
  7470                           ;dc_motor.c: 299:         Right45(mL,mR);
  7471   00384A  C021  F01A         	movff	Pink_rev1_L90@mL,Right45@mL
  7472   00384E  C022  F01B         	movff	Pink_rev1_L90@mL+1,Right45@mL+1
  7473   003852  C023  F01C         	movff	Pink_rev1_L90@mR,Right45@mR
  7474   003856  C024  F01D         	movff	Pink_rev1_L90@mR+1,Right45@mR+1
  7475   00385A  EC93  F01F         	call	_Right45	;wreg free
  7476                           
  7477                           ;dc_motor.c: 300:         fullSpeedAhead(mL,mR);
  7478   00385E  C021  F014         	movff	Pink_rev1_L90@mL,fullSpeedAhead@mL
  7479   003862  C022  F015         	movff	Pink_rev1_L90@mL+1,fullSpeedAhead@mL+1
  7480   003866  C023  F016         	movff	Pink_rev1_L90@mR,fullSpeedAhead@mR
  7481   00386A  C024  F017         	movff	Pink_rev1_L90@mR+1,fullSpeedAhead@mR+1
  7482   00386E  EC1A  F020         	call	_fullSpeedAhead	;wreg free
  7483   003872                     
  7484                           ;dc_motor.c: 301:         _delay((unsigned long)((_1square)*(64000000/4000.0)));
  7485   003872  0E39               	movlw	57
  7486   003874  6E26               	movwf	(??_Pink_rev1_L90+1)^0,c
  7487   003876  0ED2               	movlw	210
  7488   003878  6E25               	movwf	??_Pink_rev1_L90^0,c
  7489   00387A  0E4C               	movlw	76
  7490   00387C                     u4297:
  7491   00387C  2EE8               	decfsz	wreg,f,c
  7492   00387E  D7FE               	bra	u4297
  7493   003880  2E25               	decfsz	??_Pink_rev1_L90^0,f,c
  7494   003882  D7FC               	bra	u4297
  7495   003884  2E26               	decfsz	(??_Pink_rev1_L90+1)^0,f,c
  7496   003886  D7FA               	bra	u4297
  7497   003888  D000               	nop2	
  7498   00388A                     
  7499                           ;dc_motor.c: 302:         stop(mL,mR);
  7500   00388A  C021  F014         	movff	Pink_rev1_L90@mL,stop@mL
  7501   00388E  C022  F015         	movff	Pink_rev1_L90@mL+1,stop@mL+1
  7502   003892  C023  F016         	movff	Pink_rev1_L90@mR,stop@mR
  7503   003896  C024  F017         	movff	Pink_rev1_L90@mR+1,stop@mR+1
  7504   00389A  EC79  F01D         	call	_stop	;wreg free
  7505   00389E                     l525:
  7506   00389E  0012               	return		;funcret
  7507   0038A0                     __end_of_Pink_rev1_L90:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _fullSpeedAhead *****************
  7511 ;; Defined at:
  7512 ;;		line 149 in file "dc_motor.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7515 ;;		 -> motorL(9), 
  7516 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7517 ;;		 -> motorR(9), 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  i               2   24[COMRAM] unsigned int 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;Total ram usage:        7 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 3
  7536 ;; This function calls:
  7537 ;;		_setMotorPWM
  7538 ;; This function is called by:
  7539 ;;		_main
  7540 ;;		_Yellow_rev1_R90
  7541 ;;		_Pink_rev1_L90
  7542 ;;		_White
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text35
  7547   004034                     __ptext35:
  7548                           	callstack 0
  7549   004034                     _fullSpeedAhead:
  7550                           	callstack 27
  7551   004034                     
  7552                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:  (mL->direction) = 1;
  7553   004034  EE20 F001          	lfsr	2,1
  7554   004038  5014               	movf	fullSpeedAhead@mL^0,w,c
  7555   00403A  26D9               	addwf	fsr2l,f,c
  7556   00403C  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7557   00403E  22DA               	addwfc	fsr2h,f,c
  7558   004040  0E01               	movlw	1
  7559   004042  6EDF               	movwf	indf2,c
  7560                           
  7561                           ;dc_motor.c: 152:  (mR->direction) = 1;
  7562   004044  EE20 F001          	lfsr	2,1
  7563   004048  5016               	movf	fullSpeedAhead@mR^0,w,c
  7564   00404A  26D9               	addwf	fsr2l,f,c
  7565   00404C  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7566   00404E  22DA               	addwfc	fsr2h,f,c
  7567   004050  0E01               	movlw	1
  7568   004052  6EDF               	movwf	indf2,c
  7569   004054                     
  7570                           ;dc_motor.c: 154:     for (unsigned int i = 0; i <50; i++)
  7571   004054  0E00               	movlw	0
  7572   004056  6E1A               	movwf	(fullSpeedAhead@i+1)^0,c
  7573   004058  0E00               	movlw	0
  7574   00405A  6E19               	movwf	fullSpeedAhead@i^0,c
  7575   00405C                     l3198:
  7576                           
  7577                           ;dc_motor.c: 155:     {;dc_motor.c: 156:         (mL->power)++;
  7578   00405C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7579   004060  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7580   004064  2ADF               	incf	indf2,f,c
  7581                           
  7582                           ;dc_motor.c: 157:         (mR->power)++;
  7583   004066  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7584   00406A  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7585   00406E  2ADF               	incf	indf2,f,c
  7586   004070                     
  7587                           ;dc_motor.c: 158:         setMotorPWM(mL);
  7588   004070  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7589   004074  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7590   004078  ECDE  F017         	call	_setMotorPWM	;wreg free
  7591   00407C                     
  7592                           ;dc_motor.c: 159:         setMotorPWM(mR);
  7593   00407C  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7594   004080  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7595   004084  ECDE  F017         	call	_setMotorPWM	;wreg free
  7596   004088                     
  7597                           ;dc_motor.c: 160:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  7598   004088  0E09               	movlw	9
  7599   00408A  6E18               	movwf	??_fullSpeedAhead^0,c
  7600   00408C  0E4E               	movlw	78
  7601   00408E                     u4307:
  7602   00408E  2EE8               	decfsz	wreg,f,c
  7603   004090  D7FE               	bra	u4307
  7604   004092  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7605   004094  D7FC               	bra	u4307
  7606   004096  D000               	nop2	
  7607   004098                     
  7608                           ;dc_motor.c: 161:     }
  7609   004098  4A19               	infsnz	fullSpeedAhead@i^0,f,c
  7610   00409A  2A1A               	incf	(fullSpeedAhead@i+1)^0,f,c
  7611   00409C  501A               	movf	(fullSpeedAhead@i+1)^0,w,c
  7612   00409E  E109               	bnz	u2430
  7613   0040A0  0E32               	movlw	50
  7614   0040A2  5C19               	subwf	fullSpeedAhead@i^0,w,c
  7615   0040A4  A0D8               	btfss	status,0,c
  7616   0040A6  EF57  F020         	goto	u2431
  7617   0040AA  EF59  F020         	goto	u2430
  7618   0040AE                     u2431:
  7619   0040AE  EF2E  F020         	goto	l3198
  7620   0040B2                     u2430:
  7621   0040B2  0012               	return		;funcret
  7622   0040B4                     __end_of_fullSpeedAhead:
  7623                           	callstack 0
  7624                           
  7625 ;; *************** function _Orange_R135 *****************
  7626 ;; Defined at:
  7627 ;;		line 305 in file "dc_motor.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7630 ;;		 -> motorL(9), 
  7631 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7632 ;;		 -> motorR(9), 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;Total ram usage:        4 bytes
  7649 ;; Hardware stack levels used: 1
  7650 ;; Hardware stack levels required when called: 5
  7651 ;; This function calls:
  7652 ;;		_Left45
  7653 ;;		_Right45
  7654 ;;		_reverseHalfSquare
  7655 ;; This function is called by:
  7656 ;;		_Colour2Action
  7657 ;;		_White
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text36
  7662   003B98                     __ptext36:
  7663                           	callstack 0
  7664   003B98                     _Orange_R135:
  7665                           	callstack 23
  7666   003B98                     
  7667                           ;dc_motor.c: 305: void Orange_R135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           306: {;dc_motor.c: 307:     if (ForwardFlag){
  7668   003B98  0100               	movlb	0	; () banked
  7669   003B9A  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7670   003B9C  B4D8               	btfsc	status,2,c
  7671   003B9E  EFD3  F01D         	goto	u2911
  7672   003BA2  EFD5  F01D         	goto	u2910
  7673   003BA6                     u2911:
  7674   003BA6  EFFF  F01D         	goto	l3574
  7675   003BAA                     u2910:
  7676   003BAA                     
  7677                           ; BSR set to: 0
  7678                           ;dc_motor.c: 308:         reverseHalfSquare(mL,mR);
  7679   003BAA  C021  F01B         	movff	Orange_R135@mL,reverseHalfSquare@mL
  7680   003BAE  C022  F01C         	movff	Orange_R135@mL+1,reverseHalfSquare@mL+1
  7681   003BB2  C023  F01D         	movff	Orange_R135@mR,reverseHalfSquare@mR
  7682   003BB6  C024  F01E         	movff	Orange_R135@mR+1,reverseHalfSquare@mR+1
  7683   003BBA  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7684                           
  7685                           ;dc_motor.c: 310:         Right45(mL,mR);
  7686   003BBE  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7687   003BC2  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7688   003BC6  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7689   003BCA  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7690   003BCE  EC93  F01F         	call	_Right45	;wreg free
  7691                           
  7692                           ;dc_motor.c: 311:         Right45(mL,mR);
  7693   003BD2  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7694   003BD6  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7695   003BDA  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7696   003BDE  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7697   003BE2  EC93  F01F         	call	_Right45	;wreg free
  7698                           
  7699                           ;dc_motor.c: 312:         Right45(mL,mR);
  7700   003BE6  C021  F01A         	movff	Orange_R135@mL,Right45@mL
  7701   003BEA  C022  F01B         	movff	Orange_R135@mL+1,Right45@mL+1
  7702   003BEE  C023  F01C         	movff	Orange_R135@mR,Right45@mR
  7703   003BF2  C024  F01D         	movff	Orange_R135@mR+1,Right45@mR+1
  7704   003BF6  EC93  F01F         	call	_Right45	;wreg free
  7705                           
  7706                           ;dc_motor.c: 315:     }
  7707   003BFA  EF1D  F01E         	goto	l530
  7708   003BFE                     l3574:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;dc_motor.c: 318:         Left45(mL,mR);
  7712   003BFE  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7713   003C02  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7714   003C06  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7715   003C0A  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7716   003C0E  EC4E  F01F         	call	_Left45	;wreg free
  7717                           
  7718                           ;dc_motor.c: 319:         Left45(mL,mR);
  7719   003C12  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7720   003C16  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7721   003C1A  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7722   003C1E  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7723   003C22  EC4E  F01F         	call	_Left45	;wreg free
  7724                           
  7725                           ;dc_motor.c: 320:         Left45(mL,mR);
  7726   003C26  C021  F01A         	movff	Orange_R135@mL,Left45@mL
  7727   003C2A  C022  F01B         	movff	Orange_R135@mL+1,Left45@mL+1
  7728   003C2E  C023  F01C         	movff	Orange_R135@mR,Left45@mR
  7729   003C32  C024  F01D         	movff	Orange_R135@mR+1,Left45@mR+1
  7730   003C36  EC4E  F01F         	call	_Left45	;wreg free
  7731   003C3A                     l530:
  7732   003C3A  0012               	return		;funcret
  7733   003C3C                     __end_of_Orange_R135:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function _LightBlue_L135 *****************
  7737 ;; Defined at:
  7738 ;;		line 323 in file "dc_motor.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7741 ;;		 -> motorL(9), 
  7742 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7743 ;;		 -> motorR(9), 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;Total ram usage:        4 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 5
  7762 ;; This function calls:
  7763 ;;		_Left45
  7764 ;;		_Right45
  7765 ;;		_reverseHalfSquare
  7766 ;; This function is called by:
  7767 ;;		_Colour2Action
  7768 ;;		_White
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text37
  7773   003C3C                     __ptext37:
  7774                           	callstack 0
  7775   003C3C                     _LightBlue_L135:
  7776                           	callstack 23
  7777   003C3C                     
  7778                           ;dc_motor.c: 323: void LightBlue_L135(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 324: {;dc_motor.c: 326:      if (ForwardFlag){
  7779   003C3C  0100               	movlb	0	; () banked
  7780   003C3E  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7781   003C40  B4D8               	btfsc	status,2,c
  7782   003C42  EF25  F01E         	goto	u2921
  7783   003C46  EF27  F01E         	goto	u2920
  7784   003C4A                     u2921:
  7785   003C4A  EF51  F01E         	goto	l3580
  7786   003C4E                     u2920:
  7787   003C4E                     
  7788                           ; BSR set to: 0
  7789                           ;dc_motor.c: 327:         reverseHalfSquare(mL,mR);
  7790   003C4E  C021  F01B         	movff	LightBlue_L135@mL,reverseHalfSquare@mL
  7791   003C52  C022  F01C         	movff	LightBlue_L135@mL+1,reverseHalfSquare@mL+1
  7792   003C56  C023  F01D         	movff	LightBlue_L135@mR,reverseHalfSquare@mR
  7793   003C5A  C024  F01E         	movff	LightBlue_L135@mR+1,reverseHalfSquare@mR+1
  7794   003C5E  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7795                           
  7796                           ;dc_motor.c: 329:         Left45(mL,mR);
  7797   003C62  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7798   003C66  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7799   003C6A  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7800   003C6E  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7801   003C72  EC4E  F01F         	call	_Left45	;wreg free
  7802                           
  7803                           ;dc_motor.c: 330:         Left45(mL,mR);
  7804   003C76  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7805   003C7A  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7806   003C7E  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7807   003C82  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7808   003C86  EC4E  F01F         	call	_Left45	;wreg free
  7809                           
  7810                           ;dc_motor.c: 331:         Left45(mL,mR);
  7811   003C8A  C021  F01A         	movff	LightBlue_L135@mL,Left45@mL
  7812   003C8E  C022  F01B         	movff	LightBlue_L135@mL+1,Left45@mL+1
  7813   003C92  C023  F01C         	movff	LightBlue_L135@mR,Left45@mR
  7814   003C96  C024  F01D         	movff	LightBlue_L135@mR+1,Left45@mR+1
  7815   003C9A  EC4E  F01F         	call	_Left45	;wreg free
  7816                           
  7817                           ;dc_motor.c: 333:     }
  7818   003C9E  EF6F  F01E         	goto	l535
  7819   003CA2                     l3580:
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;dc_motor.c: 336:         Right45(mL,mR);
  7823   003CA2  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7824   003CA6  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7825   003CAA  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7826   003CAE  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7827   003CB2  EC93  F01F         	call	_Right45	;wreg free
  7828                           
  7829                           ;dc_motor.c: 337:         Right45(mL,mR);
  7830   003CB6  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7831   003CBA  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7832   003CBE  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7833   003CC2  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7834   003CC6  EC93  F01F         	call	_Right45	;wreg free
  7835                           
  7836                           ;dc_motor.c: 338:         Right45(mL,mR);
  7837   003CCA  C021  F01A         	movff	LightBlue_L135@mL,Right45@mL
  7838   003CCE  C022  F01B         	movff	LightBlue_L135@mL+1,Right45@mL+1
  7839   003CD2  C023  F01C         	movff	LightBlue_L135@mR,Right45@mR
  7840   003CD6  C024  F01D         	movff	LightBlue_L135@mR+1,Right45@mR+1
  7841   003CDA  EC93  F01F         	call	_Right45	;wreg free
  7842   003CDE                     l535:
  7843   003CDE  0012               	return		;funcret
  7844   003CE0                     __end_of_LightBlue_L135:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function _Green_L90 *****************
  7848 ;; Defined at:
  7849 ;;		line 240 in file "dc_motor.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  7852 ;;		 -> motorL(9), 
  7853 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  7854 ;;		 -> motorR(9), 
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;Total ram usage:        4 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 5
  7873 ;; This function calls:
  7874 ;;		_Left45
  7875 ;;		_Right45
  7876 ;;		_reverseHalfSquare
  7877 ;; This function is called by:
  7878 ;;		_Colour2Action
  7879 ;;		_White
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text38
  7884   0041B0                     __ptext38:
  7885                           	callstack 0
  7886   0041B0                     _Green_L90:
  7887                           	callstack 23
  7888   0041B0                     
  7889                           ;dc_motor.c: 240: void Green_L90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          41: {;dc_motor.c: 242:     if (ForwardFlag){
  7890   0041B0  0100               	movlb	0	; () banked
  7891   0041B2  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  7892   0041B4  B4D8               	btfsc	status,2,c
  7893   0041B6  EFDF  F020         	goto	u2871
  7894   0041BA  EFE1  F020         	goto	u2870
  7895   0041BE                     u2871:
  7896   0041BE  EF01  F021         	goto	l3530
  7897   0041C2                     u2870:
  7898   0041C2                     
  7899                           ; BSR set to: 0
  7900                           ;dc_motor.c: 243:         reverseHalfSquare(mL,mR);
  7901   0041C2  C021  F01B         	movff	Green_L90@mL,reverseHalfSquare@mL
  7902   0041C6  C022  F01C         	movff	Green_L90@mL+1,reverseHalfSquare@mL+1
  7903   0041CA  C023  F01D         	movff	Green_L90@mR,reverseHalfSquare@mR
  7904   0041CE  C024  F01E         	movff	Green_L90@mR+1,reverseHalfSquare@mR+1
  7905   0041D2  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  7906                           
  7907                           ;dc_motor.c: 245:         Left45(mL,mR);
  7908   0041D6  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7909   0041DA  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7910   0041DE  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7911   0041E2  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7912   0041E6  EC4E  F01F         	call	_Left45	;wreg free
  7913                           
  7914                           ;dc_motor.c: 246:         Left45(mL,mR);
  7915   0041EA  C021  F01A         	movff	Green_L90@mL,Left45@mL
  7916   0041EE  C022  F01B         	movff	Green_L90@mL+1,Left45@mL+1
  7917   0041F2  C023  F01C         	movff	Green_L90@mR,Left45@mR
  7918   0041F6  C024  F01D         	movff	Green_L90@mR+1,Left45@mR+1
  7919   0041FA  EC4E  F01F         	call	_Left45	;wreg free
  7920                           
  7921                           ;dc_motor.c: 247:     }
  7922   0041FE  EF15  F021         	goto	l510
  7923   004202                     l3530:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;dc_motor.c: 250:         Right45(mL,mR);
  7927   004202  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7928   004206  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7929   00420A  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7930   00420E  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7931   004212  EC93  F01F         	call	_Right45	;wreg free
  7932                           
  7933                           ;dc_motor.c: 251:         Right45(mL,mR);
  7934   004216  C021  F01A         	movff	Green_L90@mL,Right45@mL
  7935   00421A  C022  F01B         	movff	Green_L90@mL+1,Right45@mL+1
  7936   00421E  C023  F01C         	movff	Green_L90@mR,Right45@mR
  7937   004222  C024  F01D         	movff	Green_L90@mR+1,Right45@mR+1
  7938   004226  EC93  F01F         	call	_Right45	;wreg free
  7939   00422A                     l510:
  7940   00422A  0012               	return		;funcret
  7941   00422C                     __end_of_Green_L90:
  7942                           	callstack 0
  7943                           
  7944 ;; *************** function _Right45 *****************
  7945 ;; Defined at:
  7946 ;;		line 193 in file "dc_motor.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7949 ;;		 -> motorL(9), 
  7950 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7951 ;;		 -> motorR(9), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;Total ram usage:        6 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 4
  7970 ;; This function calls:
  7971 ;;		_stop
  7972 ;;		_turnRight
  7973 ;; This function is called by:
  7974 ;;		_Red_R90
  7975 ;;		_Green_L90
  7976 ;;		_Yellow_rev1_R90
  7977 ;;		_Pink_rev1_L90
  7978 ;;		_Orange_R135
  7979 ;;		_LightBlue_L135
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text39
  7984   003F26                     __ptext39:
  7985                           	callstack 0
  7986   003F26                     _Right45:
  7987                           	callstack 24
  7988   003F26                     
  7989                           ;dc_motor.c: 193: void Right45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     LATHbits.LATH0 = 1;;
  7990   003F26  8080               	bsf	128,0,c	;volatile
  7991   003F28                     
  7992                           ;dc_motor.c: 197:     stop(mL,mR);
  7993   003F28  C01A  F014         	movff	Right45@mL,stop@mL
  7994   003F2C  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  7995   003F30  C01C  F016         	movff	Right45@mR,stop@mR
  7996   003F34  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  7997   003F38  EC79  F01D         	call	_stop	;wreg free
  7998   003F3C                     
  7999                           ;dc_motor.c: 198:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8000   003F3C  0E05               	movlw	5
  8001   003F3E  6E1F               	movwf	(??_Right45+1)^0,c
  8002   003F40  0E0F               	movlw	15
  8003   003F42  6E1E               	movwf	??_Right45^0,c
  8004   003F44  0EF1               	movlw	241
  8005   003F46                     u4317:
  8006   003F46  2EE8               	decfsz	wreg,f,c
  8007   003F48  D7FE               	bra	u4317
  8008   003F4A  2E1E               	decfsz	??_Right45^0,f,c
  8009   003F4C  D7FC               	bra	u4317
  8010   003F4E  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8011   003F50  D7FA               	bra	u4317
  8012   003F52  F000               	nop	
  8013   003F54                     
  8014                           ;dc_motor.c: 199:     turnRight(mL,mR);
  8015   003F54  C01A  F014         	movff	Right45@mL,turnRight@mL
  8016   003F58  C01B  F015         	movff	Right45@mL+1,turnRight@mL+1
  8017   003F5C  C01C  F016         	movff	Right45@mR,turnRight@mR
  8018   003F60  C01D  F017         	movff	Right45@mR+1,turnRight@mR+1
  8019   003F64  EC70  F01E         	call	_turnRight	;wreg free
  8020                           
  8021                           ;dc_motor.c: 200:     _delay((unsigned long)((_45drightdelay)*(64000000/4000.0)));
  8022   003F68  0E0D               	movlw	13
  8023   003F6A  6E1F               	movwf	(??_Right45+1)^0,c
  8024   003F6C  0E19               	movlw	25
  8025   003F6E  6E1E               	movwf	??_Right45^0,c
  8026   003F70  0E10               	movlw	16
  8027   003F72                     u4327:
  8028   003F72  2EE8               	decfsz	wreg,f,c
  8029   003F74  D7FE               	bra	u4327
  8030   003F76  2E1E               	decfsz	??_Right45^0,f,c
  8031   003F78  D7FC               	bra	u4327
  8032   003F7A  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8033   003F7C  D7FA               	bra	u4327
  8034   003F7E                     
  8035                           ;dc_motor.c: 201:     stop(mL,mR);
  8036   003F7E  C01A  F014         	movff	Right45@mL,stop@mL
  8037   003F82  C01B  F015         	movff	Right45@mL+1,stop@mL+1
  8038   003F86  C01C  F016         	movff	Right45@mR,stop@mR
  8039   003F8A  C01D  F017         	movff	Right45@mR+1,stop@mR+1
  8040   003F8E  EC79  F01D         	call	_stop	;wreg free
  8041   003F92                     
  8042                           ;dc_motor.c: 202:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8043   003F92  0E05               	movlw	5
  8044   003F94  6E1F               	movwf	(??_Right45+1)^0,c
  8045   003F96  0E0F               	movlw	15
  8046   003F98  6E1E               	movwf	??_Right45^0,c
  8047   003F9A  0EF1               	movlw	241
  8048   003F9C                     u4337:
  8049   003F9C  2EE8               	decfsz	wreg,f,c
  8050   003F9E  D7FE               	bra	u4337
  8051   003FA0  2E1E               	decfsz	??_Right45^0,f,c
  8052   003FA2  D7FC               	bra	u4337
  8053   003FA4  2E1F               	decfsz	(??_Right45+1)^0,f,c
  8054   003FA6  D7FA               	bra	u4337
  8055   003FA8  F000               	nop	
  8056   003FAA                     
  8057                           ;dc_motor.c: 203:     LATHbits.LATH0 = 0;;
  8058   003FAA  9080               	bcf	128,0,c	;volatile
  8059   003FAC  0012               	return		;funcret
  8060   003FAE                     __end_of_Right45:
  8061                           	callstack 0
  8062                           
  8063 ;; *************** function _turnRight *****************
  8064 ;; Defined at:
  8065 ;;		line 132 in file "dc_motor.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8068 ;;		 -> motorL(9), 
  8069 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8070 ;;		 -> motorR(9), 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  i               2   23[COMRAM] unsigned int 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8085 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;Total ram usage:        6 bytes
  8087 ;; Hardware stack levels used: 1
  8088 ;; Hardware stack levels required when called: 3
  8089 ;; This function calls:
  8090 ;;		_setMotorPWM
  8091 ;; This function is called by:
  8092 ;;		_Right45
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text40
  8097   003CE0                     __ptext40:
  8098                           	callstack 0
  8099   003CE0                     _turnRight:
  8100                           	callstack 24
  8101   003CE0                     
  8102                           ;dc_motor.c: 132: void turnRight(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 1
      +                          33: {;dc_motor.c: 134:     (mL->direction) = 1;
  8103   003CE0  EE20 F001          	lfsr	2,1
  8104   003CE4  5014               	movf	turnRight@mL^0,w,c
  8105   003CE6  26D9               	addwf	fsr2l,f,c
  8106   003CE8  5015               	movf	(turnRight@mL+1)^0,w,c
  8107   003CEA  22DA               	addwfc	fsr2h,f,c
  8108   003CEC  0E01               	movlw	1
  8109   003CEE  6EDF               	movwf	indf2,c
  8110                           
  8111                           ;dc_motor.c: 135:     (mR->direction) = 0;
  8112   003CF0  EE20 F001          	lfsr	2,1
  8113   003CF4  5016               	movf	turnRight@mR^0,w,c
  8114   003CF6  26D9               	addwf	fsr2l,f,c
  8115   003CF8  5017               	movf	(turnRight@mR+1)^0,w,c
  8116   003CFA  22DA               	addwfc	fsr2h,f,c
  8117   003CFC  0E00               	movlw	0
  8118   003CFE  6EDF               	movwf	indf2,c
  8119   003D00                     
  8120                           ;dc_motor.c: 136:     setMotorPWM(mL);
  8121   003D00  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8122   003D04  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8123   003D08  ECDE  F017         	call	_setMotorPWM	;wreg free
  8124   003D0C                     
  8125                           ;dc_motor.c: 137:     setMotorPWM(mR);
  8126   003D0C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8127   003D10  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8128   003D14  ECDE  F017         	call	_setMotorPWM	;wreg free
  8129   003D18                     
  8130                           ;dc_motor.c: 138:     for (unsigned int i = 0; i <50; i++)
  8131   003D18  0E00               	movlw	0
  8132   003D1A  6E19               	movwf	(turnRight@i+1)^0,c
  8133   003D1C  0E00               	movlw	0
  8134   003D1E  6E18               	movwf	turnRight@i^0,c
  8135   003D20                     l3088:
  8136                           
  8137                           ;dc_motor.c: 139:     {;dc_motor.c: 140:         mL->power++;
  8138   003D20  C014  FFD9         	movff	turnRight@mL,fsr2l
  8139   003D24  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  8140   003D28  2ADF               	incf	indf2,f,c
  8141                           
  8142                           ;dc_motor.c: 141:         mR->power++;
  8143   003D2A  C016  FFD9         	movff	turnRight@mR,fsr2l
  8144   003D2E  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  8145   003D32  2ADF               	incf	indf2,f,c
  8146   003D34                     
  8147                           ;dc_motor.c: 142:         setMotorPWM(mL);
  8148   003D34  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  8149   003D38  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  8150   003D3C  ECDE  F017         	call	_setMotorPWM	;wreg free
  8151   003D40                     
  8152                           ;dc_motor.c: 143:         setMotorPWM(mR);
  8153   003D40  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  8154   003D44  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  8155   003D48  ECDE  F017         	call	_setMotorPWM	;wreg free
  8156   003D4C                     
  8157                           ;dc_motor.c: 144:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8158   003D4C  0EE4               	movlw	228
  8159   003D4E                     u4347:
  8160   003D4E  D000               	nop2	
  8161   003D50  D000               	nop2	
  8162   003D52  2EE8               	decfsz	wreg,f,c
  8163   003D54  D7FC               	bra	u4347
  8164   003D56  D000               	nop2	
  8165   003D58  D000               	nop2	
  8166   003D5A                     
  8167                           ;dc_motor.c: 145:     }
  8168   003D5A  4A18               	infsnz	turnRight@i^0,f,c
  8169   003D5C  2A19               	incf	(turnRight@i+1)^0,f,c
  8170   003D5E  5019               	movf	(turnRight@i+1)^0,w,c
  8171   003D60  E109               	bnz	u2270
  8172   003D62  0E32               	movlw	50
  8173   003D64  5C18               	subwf	turnRight@i^0,w,c
  8174   003D66  A0D8               	btfss	status,0,c
  8175   003D68  EFB8  F01E         	goto	u2271
  8176   003D6C  EFBA  F01E         	goto	u2270
  8177   003D70                     u2271:
  8178   003D70  EF90  F01E         	goto	l3088
  8179   003D74                     u2270:
  8180   003D74  0012               	return		;funcret
  8181   003D76                     __end_of_turnRight:
  8182                           	callstack 0
  8183                           
  8184 ;; *************** function _Blue_T180 *****************
  8185 ;; Defined at:
  8186 ;;		line 255 in file "dc_motor.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  mL              2   35[COMRAM] PTR struct DC_motor
  8189 ;;		 -> motorL(9), 
  8190 ;;  mR              2   37[COMRAM] PTR struct DC_motor
  8191 ;;		 -> motorR(9), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;Total ram usage:        4 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 6
  8210 ;; This function calls:
  8211 ;;		_reverseHalfSquare
  8212 ;;		_rotate180left
  8213 ;; This function is called by:
  8214 ;;		_Colour2Action
  8215 ;;		_White
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text41
  8220   004362                     __ptext41:
  8221                           	callstack 0
  8222   004362                     _Blue_T180:
  8223                           	callstack 22
  8224   004362                     
  8225                           ;dc_motor.c: 255: void Blue_T180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          56: {;dc_motor.c: 257:     if (ForwardFlag){
  8226   004362  0100               	movlb	0	; () banked
  8227   004364  51FE               	movf	_ForwardFlag& (0+255),w,b	;volatile
  8228   004366  B4D8               	btfsc	status,2,c
  8229   004368  EFB8  F021         	goto	u2881
  8230   00436C  EFBA  F021         	goto	u2880
  8231   004370                     u2881:
  8232   004370  EFD0  F021         	goto	l3536
  8233   004374                     u2880:
  8234   004374                     
  8235                           ; BSR set to: 0
  8236                           ;dc_motor.c: 258:     reverseHalfSquare(mL,mR);
  8237   004374  C024  F01B         	movff	Blue_T180@mL,reverseHalfSquare@mL
  8238   004378  C025  F01C         	movff	Blue_T180@mL+1,reverseHalfSquare@mL+1
  8239   00437C  C026  F01D         	movff	Blue_T180@mR,reverseHalfSquare@mR
  8240   004380  C027  F01E         	movff	Blue_T180@mR+1,reverseHalfSquare@mR+1
  8241   004384  ECD7  F01F         	call	_reverseHalfSquare	;wreg free
  8242                           
  8243                           ;dc_motor.c: 260:     rotate180left(mL,mR);
  8244   004388  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8245   00438C  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8246   004390  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8247   004394  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8248   004398  ECDB  F021         	call	_rotate180left	;wreg free
  8249                           
  8250                           ;dc_motor.c: 261:     }else{
  8251   00439C  EFDA  F021         	goto	l515
  8252   0043A0                     l3536:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;dc_motor.c: 262:     rotate180left(mL,mR);
  8256   0043A0  C024  F020         	movff	Blue_T180@mL,rotate180left@mL
  8257   0043A4  C025  F021         	movff	Blue_T180@mL+1,rotate180left@mL+1
  8258   0043A8  C026  F022         	movff	Blue_T180@mR,rotate180left@mR
  8259   0043AC  C027  F023         	movff	Blue_T180@mR+1,rotate180left@mR+1
  8260   0043B0  ECDB  F021         	call	_rotate180left	;wreg free
  8261   0043B4                     l515:
  8262   0043B4  0012               	return		;funcret
  8263   0043B6                     __end_of_Blue_T180:
  8264                           	callstack 0
  8265                           
  8266 ;; *************** function _rotate180left *****************
  8267 ;; Defined at:
  8268 ;;		line 207 in file "dc_motor.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8271 ;;		 -> motorL(9), 
  8272 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8273 ;;		 -> motorR(9), 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;		None
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  1    wreg      void 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;Total ram usage:        4 bytes
  8290 ;; Hardware stack levels used: 1
  8291 ;; Hardware stack levels required when called: 5
  8292 ;; This function calls:
  8293 ;;		_Left45
  8294 ;; This function is called by:
  8295 ;;		_Blue_T180
  8296 ;;		_White
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text42
  8301   0043B6                     __ptext42:
  8302                           	callstack 0
  8303   0043B6                     _rotate180left:
  8304                           	callstack 23
  8305   0043B6                     
  8306                           ;dc_motor.c: 207: void rotate180left(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 208: {;dc_motor.c: 210:     Left45(mL,mR);
  8307   0043B6  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8308   0043BA  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8309   0043BE  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8310   0043C2  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8311   0043C6  EC4E  F01F         	call	_Left45	;wreg free
  8312                           
  8313                           ;dc_motor.c: 211:     Left45(mL,mR);
  8314   0043CA  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8315   0043CE  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8316   0043D2  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8317   0043D6  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8318   0043DA  EC4E  F01F         	call	_Left45	;wreg free
  8319                           
  8320                           ;dc_motor.c: 212:     Left45(mL,mR);
  8321   0043DE  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8322   0043E2  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8323   0043E6  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8324   0043EA  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8325   0043EE  EC4E  F01F         	call	_Left45	;wreg free
  8326                           
  8327                           ;dc_motor.c: 213:     Left45(mL,mR);
  8328   0043F2  C020  F01A         	movff	rotate180left@mL,Left45@mL
  8329   0043F6  C021  F01B         	movff	rotate180left@mL+1,Left45@mL+1
  8330   0043FA  C022  F01C         	movff	rotate180left@mR,Left45@mR
  8331   0043FE  C023  F01D         	movff	rotate180left@mR+1,Left45@mR+1
  8332   004402  EC4E  F01F         	call	_Left45	;wreg free
  8333   004406  0012               	return		;funcret
  8334   004408                     __end_of_rotate180left:
  8335                           	callstack 0
  8336                           
  8337 ;; *************** function _Left45 *****************
  8338 ;; Defined at:
  8339 ;;		line 179 in file "dc_motor.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8342 ;;		 -> motorL(9), 
  8343 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8344 ;;		 -> motorR(9), 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;Total ram usage:        6 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; Hardware stack levels required when called: 4
  8363 ;; This function calls:
  8364 ;;		_stop
  8365 ;;		_turnLeft
  8366 ;; This function is called by:
  8367 ;;		_rotate180left
  8368 ;;		_Red_R90
  8369 ;;		_Green_L90
  8370 ;;		_Yellow_rev1_R90
  8371 ;;		_Pink_rev1_L90
  8372 ;;		_Orange_R135
  8373 ;;		_LightBlue_L135
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text43
  8378   003E9C                     __ptext43:
  8379                           	callstack 0
  8380   003E9C                     _Left45:
  8381                           	callstack 24
  8382   003E9C                     
  8383                           ;dc_motor.c: 179: void Left45(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 180:
      +                           {;dc_motor.c: 181:     LATFbits.LATF0 = 1;;
  8384   003E9C  807E               	bsf	126,0,c	;volatile
  8385   003E9E                     
  8386                           ;dc_motor.c: 183:     stop(mL,mR);
  8387   003E9E  C01A  F014         	movff	Left45@mL,stop@mL
  8388   003EA2  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8389   003EA6  C01C  F016         	movff	Left45@mR,stop@mR
  8390   003EAA  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8391   003EAE  EC79  F01D         	call	_stop	;wreg free
  8392   003EB2                     
  8393                           ;dc_motor.c: 184:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8394   003EB2  0E05               	movlw	5
  8395   003EB4  6E1F               	movwf	(??_Left45+1)^0,c
  8396   003EB6  0E0F               	movlw	15
  8397   003EB8  6E1E               	movwf	??_Left45^0,c
  8398   003EBA  0EF1               	movlw	241
  8399   003EBC                     u4357:
  8400   003EBC  2EE8               	decfsz	wreg,f,c
  8401   003EBE  D7FE               	bra	u4357
  8402   003EC0  2E1E               	decfsz	??_Left45^0,f,c
  8403   003EC2  D7FC               	bra	u4357
  8404   003EC4  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8405   003EC6  D7FA               	bra	u4357
  8406   003EC8  F000               	nop	
  8407   003ECA                     
  8408                           ;dc_motor.c: 185:     turnLeft(mL,mR);
  8409   003ECA  C01A  F014         	movff	Left45@mL,turnLeft@mL
  8410   003ECE  C01B  F015         	movff	Left45@mL+1,turnLeft@mL+1
  8411   003ED2  C01C  F016         	movff	Left45@mR,turnLeft@mR
  8412   003ED6  C01D  F017         	movff	Left45@mR+1,turnLeft@mR+1
  8413   003EDA  ECBB  F01E         	call	_turnLeft	;wreg free
  8414                           
  8415                           ;dc_motor.c: 186:     _delay((unsigned long)((_45dleftdelay)*(64000000/4000.0)));
  8416   003EDE  0E0C               	movlw	12
  8417   003EE0  6E1F               	movwf	(??_Left45+1)^0,c
  8418   003EE2  0EDA               	movlw	218
  8419   003EE4  6E1E               	movwf	??_Left45^0,c
  8420   003EE6  0EBA               	movlw	186
  8421   003EE8                     u4367:
  8422   003EE8  2EE8               	decfsz	wreg,f,c
  8423   003EEA  D7FE               	bra	u4367
  8424   003EEC  2E1E               	decfsz	??_Left45^0,f,c
  8425   003EEE  D7FC               	bra	u4367
  8426   003EF0  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8427   003EF2  D7FA               	bra	u4367
  8428   003EF4  D000               	nop2	
  8429   003EF6                     
  8430                           ;dc_motor.c: 187:     stop(mL,mR);
  8431   003EF6  C01A  F014         	movff	Left45@mL,stop@mL
  8432   003EFA  C01B  F015         	movff	Left45@mL+1,stop@mL+1
  8433   003EFE  C01C  F016         	movff	Left45@mR,stop@mR
  8434   003F02  C01D  F017         	movff	Left45@mR+1,stop@mR+1
  8435   003F06  EC79  F01D         	call	_stop	;wreg free
  8436   003F0A                     
  8437                           ;dc_motor.c: 188:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8438   003F0A  0E05               	movlw	5
  8439   003F0C  6E1F               	movwf	(??_Left45+1)^0,c
  8440   003F0E  0E0F               	movlw	15
  8441   003F10  6E1E               	movwf	??_Left45^0,c
  8442   003F12  0EF1               	movlw	241
  8443   003F14                     u4377:
  8444   003F14  2EE8               	decfsz	wreg,f,c
  8445   003F16  D7FE               	bra	u4377
  8446   003F18  2E1E               	decfsz	??_Left45^0,f,c
  8447   003F1A  D7FC               	bra	u4377
  8448   003F1C  2E1F               	decfsz	(??_Left45+1)^0,f,c
  8449   003F1E  D7FA               	bra	u4377
  8450   003F20  F000               	nop	
  8451   003F22                     
  8452                           ;dc_motor.c: 189:     LATFbits.LATF0 = 0;;
  8453   003F22  907E               	bcf	126,0,c	;volatile
  8454   003F24  0012               	return		;funcret
  8455   003F26                     __end_of_Left45:
  8456                           	callstack 0
  8457                           
  8458 ;; *************** function _turnLeft *****************
  8459 ;; Defined at:
  8460 ;;		line 113 in file "dc_motor.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8463 ;;		 -> motorL(9), 
  8464 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8465 ;;		 -> motorR(9), 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  i               2   23[COMRAM] unsigned int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;Total ram usage:        6 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; Hardware stack levels required when called: 3
  8484 ;; This function calls:
  8485 ;;		_setMotorPWM
  8486 ;; This function is called by:
  8487 ;;		_Left45
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text44
  8492   003D76                     __ptext44:
  8493                           	callstack 0
  8494   003D76                     _turnLeft:
  8495                           	callstack 24
  8496   003D76                     
  8497                           ;dc_motor.c: 113: void turnLeft(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 11
      +                          4: {;dc_motor.c: 116:     (mL->direction) = 0;
  8498   003D76  EE20 F001          	lfsr	2,1
  8499   003D7A  5014               	movf	turnLeft@mL^0,w,c
  8500   003D7C  26D9               	addwf	fsr2l,f,c
  8501   003D7E  5015               	movf	(turnLeft@mL+1)^0,w,c
  8502   003D80  22DA               	addwfc	fsr2h,f,c
  8503   003D82  0E00               	movlw	0
  8504   003D84  6EDF               	movwf	indf2,c
  8505                           
  8506                           ;dc_motor.c: 117:     (mR->direction) = 1;
  8507   003D86  EE20 F001          	lfsr	2,1
  8508   003D8A  5016               	movf	turnLeft@mR^0,w,c
  8509   003D8C  26D9               	addwf	fsr2l,f,c
  8510   003D8E  5017               	movf	(turnLeft@mR+1)^0,w,c
  8511   003D90  22DA               	addwfc	fsr2h,f,c
  8512   003D92  0E01               	movlw	1
  8513   003D94  6EDF               	movwf	indf2,c
  8514   003D96                     
  8515                           ;dc_motor.c: 118:     setMotorPWM(mL);
  8516   003D96  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8517   003D9A  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8518   003D9E  ECDE  F017         	call	_setMotorPWM	;wreg free
  8519   003DA2                     
  8520                           ;dc_motor.c: 119:     setMotorPWM(mR);
  8521   003DA2  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8522   003DA6  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8523   003DAA  ECDE  F017         	call	_setMotorPWM	;wreg free
  8524   003DAE                     
  8525                           ;dc_motor.c: 120:     for (unsigned int i = 0; i <50; i++)
  8526   003DAE  0E00               	movlw	0
  8527   003DB0  6E19               	movwf	(turnLeft@i+1)^0,c
  8528   003DB2  0E00               	movlw	0
  8529   003DB4  6E18               	movwf	turnLeft@i^0,c
  8530   003DB6                     l3040:
  8531                           
  8532                           ;dc_motor.c: 121:     {;dc_motor.c: 122:         mL->power++;
  8533   003DB6  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8534   003DBA  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8535   003DBE  2ADF               	incf	indf2,f,c
  8536                           
  8537                           ;dc_motor.c: 123:         mR->power++;
  8538   003DC0  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8539   003DC4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8540   003DC8  2ADF               	incf	indf2,f,c
  8541   003DCA                     
  8542                           ;dc_motor.c: 124:         setMotorPWM(mL);
  8543   003DCA  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8544   003DCE  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8545   003DD2  ECDE  F017         	call	_setMotorPWM	;wreg free
  8546   003DD6                     
  8547                           ;dc_motor.c: 125:         setMotorPWM(mR);
  8548   003DD6  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8549   003DDA  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8550   003DDE  ECDE  F017         	call	_setMotorPWM	;wreg free
  8551   003DE2                     
  8552                           ;dc_motor.c: 126:         _delay((unsigned long)((100)*(64000000/4000000.0)));
  8553   003DE2  0EE4               	movlw	228
  8554   003DE4                     u4387:
  8555   003DE4  D000               	nop2	
  8556   003DE6  D000               	nop2	
  8557   003DE8  2EE8               	decfsz	wreg,f,c
  8558   003DEA  D7FC               	bra	u4387
  8559   003DEC  D000               	nop2	
  8560   003DEE  D000               	nop2	
  8561   003DF0                     
  8562                           ;dc_motor.c: 127:     }
  8563   003DF0  4A18               	infsnz	turnLeft@i^0,f,c
  8564   003DF2  2A19               	incf	(turnLeft@i+1)^0,f,c
  8565   003DF4  5019               	movf	(turnLeft@i+1)^0,w,c
  8566   003DF6  E109               	bnz	u2200
  8567   003DF8  0E32               	movlw	50
  8568   003DFA  5C18               	subwf	turnLeft@i^0,w,c
  8569   003DFC  A0D8               	btfss	status,0,c
  8570   003DFE  EF03  F01F         	goto	u2201
  8571   003E02  EF05  F01F         	goto	u2200
  8572   003E06                     u2201:
  8573   003E06  EFDB  F01E         	goto	l3040
  8574   003E0A                     u2200:
  8575   003E0A  0012               	return		;funcret
  8576   003E0C                     __end_of_turnLeft:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _reverseHalfSquare *****************
  8580 ;; Defined at:
  8581 ;;		line 216 in file "dc_motor.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  mL              2   26[COMRAM] PTR struct DC_motor
  8584 ;;		 -> motorL(9), 
  8585 ;;  mR              2   28[COMRAM] PTR struct DC_motor
  8586 ;;		 -> motorR(9), 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        6 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 4
  8605 ;; This function calls:
  8606 ;;		_fullSpeedReverse
  8607 ;;		_stop
  8608 ;; This function is called by:
  8609 ;;		_Red_R90
  8610 ;;		_Green_L90
  8611 ;;		_Blue_T180
  8612 ;;		_Yellow_rev1_R90
  8613 ;;		_Pink_rev1_L90
  8614 ;;		_Orange_R135
  8615 ;;		_LightBlue_L135
  8616 ;;		_White
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text45
  8621   003FAE                     __ptext45:
  8622                           	callstack 0
  8623   003FAE                     _reverseHalfSquare:
  8624                           	callstack 24
  8625   003FAE                     
  8626                           ;dc_motor.c: 216: void reverseHalfSquare(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 217: {;dc_motor.c: 218:     stop(mL,mR);
  8627   003FAE  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8628   003FB2  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8629   003FB6  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8630   003FBA  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8631   003FBE  EC79  F01D         	call	_stop	;wreg free
  8632   003FC2                     
  8633                           ;dc_motor.c: 219:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8634   003FC2  0E09               	movlw	9
  8635   003FC4  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8636   003FC6  0E1E               	movlw	30
  8637   003FC8  6E1F               	movwf	??_reverseHalfSquare^0,c
  8638   003FCA  0EE4               	movlw	228
  8639   003FCC                     u4397:
  8640   003FCC  2EE8               	decfsz	wreg,f,c
  8641   003FCE  D7FE               	bra	u4397
  8642   003FD0  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8643   003FD2  D7FC               	bra	u4397
  8644   003FD4  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8645   003FD6  D7FA               	bra	u4397
  8646   003FD8  D000               	nop2	
  8647   003FDA                     
  8648                           ;dc_motor.c: 220:     fullSpeedReverse(mL,mR);
  8649   003FDA  C01B  F014         	movff	reverseHalfSquare@mL,fullSpeedReverse@mL
  8650   003FDE  C01C  F015         	movff	reverseHalfSquare@mL+1,fullSpeedReverse@mL+1
  8651   003FE2  C01D  F016         	movff	reverseHalfSquare@mR,fullSpeedReverse@mR
  8652   003FE6  C01E  F017         	movff	reverseHalfSquare@mR+1,fullSpeedReverse@mR+1
  8653   003FEA  EC5A  F020         	call	_fullSpeedReverse	;wreg free
  8654                           
  8655                           ;dc_motor.c: 221:     _delay((unsigned long)((_halfsquare)*(64000000/4000.0)));
  8656   003FEE  0E1D               	movlw	29
  8657   003FF0  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8658   003FF2  0E69               	movlw	105
  8659   003FF4  6E1F               	movwf	??_reverseHalfSquare^0,c
  8660   003FF6  0EA5               	movlw	165
  8661   003FF8                     u4407:
  8662   003FF8  2EE8               	decfsz	wreg,f,c
  8663   003FFA  D7FE               	bra	u4407
  8664   003FFC  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8665   003FFE  D7FC               	bra	u4407
  8666   004000  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8667   004002  D7FA               	bra	u4407
  8668   004004  F000               	nop	
  8669   004006                     
  8670                           ;dc_motor.c: 222:     stop(mL,mR);
  8671   004006  C01B  F014         	movff	reverseHalfSquare@mL,stop@mL
  8672   00400A  C01C  F015         	movff	reverseHalfSquare@mL+1,stop@mL+1
  8673   00400E  C01D  F016         	movff	reverseHalfSquare@mR,stop@mR
  8674   004012  C01E  F017         	movff	reverseHalfSquare@mR+1,stop@mR+1
  8675   004016  EC79  F01D         	call	_stop	;wreg free
  8676   00401A                     
  8677                           ;dc_motor.c: 223:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8678   00401A  0E09               	movlw	9
  8679   00401C  6E20               	movwf	(??_reverseHalfSquare+1)^0,c
  8680   00401E  0E1E               	movlw	30
  8681   004020  6E1F               	movwf	??_reverseHalfSquare^0,c
  8682   004022  0EE4               	movlw	228
  8683   004024                     u4417:
  8684   004024  2EE8               	decfsz	wreg,f,c
  8685   004026  D7FE               	bra	u4417
  8686   004028  2E1F               	decfsz	??_reverseHalfSquare^0,f,c
  8687   00402A  D7FC               	bra	u4417
  8688   00402C  2E20               	decfsz	(??_reverseHalfSquare+1)^0,f,c
  8689   00402E  D7FA               	bra	u4417
  8690   004030  D000               	nop2	
  8691   004032  0012               	return		;funcret
  8692   004034                     __end_of_reverseHalfSquare:
  8693                           	callstack 0
  8694                           
  8695 ;; *************** function _stop *****************
  8696 ;; Defined at:
  8697 ;;		line 93 in file "dc_motor.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8700 ;;		 -> motorL(9), 
  8701 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8702 ;;		 -> motorR(9), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;Total ram usage:        5 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 3
  8721 ;; This function calls:
  8722 ;;		_setMotorPWM
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;;		_Left45
  8726 ;;		_Right45
  8727 ;;		_reverseHalfSquare
  8728 ;;		_Yellow_rev1_R90
  8729 ;;		_Pink_rev1_L90
  8730 ;;		_White
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text46
  8735   003AF2                     __ptext46:
  8736                           	callstack 0
  8737   003AF2                     _stop:
  8738                           	callstack 27
  8739   003AF2                     
  8740                           ;dc_motor.c: 93: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 94: {;d
      +                          c_motor.c: 95:     LATDbits.LATD4 = 1;;
  8741   003AF2  887C               	bsf	124,4,c	;volatile
  8742                           
  8743                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8744   003AF4  EFB2  F01D         	goto	l3024
  8745   003AF8                     l3010:
  8746                           
  8747                           ;dc_motor.c: 97:     {;dc_motor.c: 99:         if (mL->power>0){
  8748   003AF8  C014  FFD9         	movff	stop@mL,fsr2l
  8749   003AFC  C015  FFDA         	movff	stop@mL+1,fsr2h
  8750   003B00  50DF               	movf	indf2,w,c
  8751   003B02  B4D8               	btfsc	status,2,c
  8752   003B04  EF86  F01D         	goto	u2161
  8753   003B08  EF88  F01D         	goto	u2160
  8754   003B0C                     u2161:
  8755   003B0C  EF8D  F01D         	goto	l3014
  8756   003B10                     u2160:
  8757   003B10                     
  8758                           ;dc_motor.c: 100:             mL->power--;
  8759   003B10  C014  FFD9         	movff	stop@mL,fsr2l
  8760   003B14  C015  FFDA         	movff	stop@mL+1,fsr2h
  8761   003B18  06DF               	decf	indf2,f,c
  8762   003B1A                     l3014:
  8763                           
  8764                           ;dc_motor.c: 102:         if ((mR->power)>0){
  8765   003B1A  C016  FFD9         	movff	stop@mR,fsr2l
  8766   003B1E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8767   003B22  50DF               	movf	indf2,w,c
  8768   003B24  B4D8               	btfsc	status,2,c
  8769   003B26  EF97  F01D         	goto	u2171
  8770   003B2A  EF99  F01D         	goto	u2170
  8771   003B2E                     u2171:
  8772   003B2E  EF9E  F01D         	goto	l3018
  8773   003B32                     u2170:
  8774   003B32                     
  8775                           ;dc_motor.c: 103:             mR->power--;
  8776   003B32  C016  FFD9         	movff	stop@mR,fsr2l
  8777   003B36  C017  FFDA         	movff	stop@mR+1,fsr2h
  8778   003B3A  06DF               	decf	indf2,f,c
  8779   003B3C                     l3018:
  8780                           
  8781                           ;dc_motor.c: 105:         setMotorPWM(mL);
  8782   003B3C  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8783   003B40  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8784   003B44  ECDE  F017         	call	_setMotorPWM	;wreg free
  8785   003B48                     
  8786                           ;dc_motor.c: 106:         setMotorPWM(mR);
  8787   003B48  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8788   003B4C  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8789   003B50  ECDE  F017         	call	_setMotorPWM	;wreg free
  8790   003B54                     
  8791                           ;dc_motor.c: 107:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8792   003B54  0E09               	movlw	9
  8793   003B56  6E18               	movwf	??_stop^0,c
  8794   003B58  0E4E               	movlw	78
  8795   003B5A                     u4427:
  8796   003B5A  2EE8               	decfsz	wreg,f,c
  8797   003B5C  D7FE               	bra	u4427
  8798   003B5E  2E18               	decfsz	??_stop^0,f,c
  8799   003B60  D7FC               	bra	u4427
  8800   003B62  D000               	nop2	
  8801   003B64                     l3024:
  8802                           
  8803                           ;dc_motor.c: 96:     while((mL->power)>0 && (mR->power)>0)
  8804   003B64  C014  FFD9         	movff	stop@mL,fsr2l
  8805   003B68  C015  FFDA         	movff	stop@mL+1,fsr2h
  8806   003B6C  50DF               	movf	indf2,w,c
  8807   003B6E  B4D8               	btfsc	status,2,c
  8808   003B70  EFBC  F01D         	goto	u2181
  8809   003B74  EFBE  F01D         	goto	u2180
  8810   003B78                     u2181:
  8811   003B78  EFCA  F01D         	goto	l467
  8812   003B7C                     u2180:
  8813   003B7C  C016  FFD9         	movff	stop@mR,fsr2l
  8814   003B80  C017  FFDA         	movff	stop@mR+1,fsr2h
  8815   003B84  50DF               	movf	indf2,w,c
  8816   003B86  A4D8               	btfss	status,2,c
  8817   003B88  EFC8  F01D         	goto	u2191
  8818   003B8C  EFCA  F01D         	goto	u2190
  8819   003B90                     u2191:
  8820   003B90  EF7C  F01D         	goto	l3010
  8821   003B94                     u2190:
  8822   003B94                     l467:
  8823                           
  8824                           ;dc_motor.c: 109:     LATDbits.LATD4 = 0;;
  8825   003B94  987C               	bcf	124,4,c	;volatile
  8826   003B96  0012               	return		;funcret
  8827   003B98                     __end_of_stop:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function _fullSpeedReverse *****************
  8831 ;; Defined at:
  8832 ;;		line 163 in file "dc_motor.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8835 ;;		 -> motorL(9), 
  8836 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8837 ;;		 -> motorR(9), 
  8838 ;; Auto vars:     Size  Location     Type
  8839 ;;  i               2   24[COMRAM] unsigned int 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      void 
  8842 ;; Registers used:
  8843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;Total ram usage:        7 bytes
  8854 ;; Hardware stack levels used: 1
  8855 ;; Hardware stack levels required when called: 3
  8856 ;; This function calls:
  8857 ;;		_setMotorPWM
  8858 ;; This function is called by:
  8859 ;;		_reverseHalfSquare
  8860 ;;		_Yellow_rev1_R90
  8861 ;;		_Pink_rev1_L90
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           	psect	text47
  8866   0040B4                     __ptext47:
  8867                           	callstack 0
  8868   0040B4                     _fullSpeedReverse:
  8869                           	callstack 24
  8870   0040B4                     
  8871                           ;dc_motor.c: 163: void fullSpeedReverse(struct DC_motor *mL, struct DC_motor *mR);dc_mot
      +                          or.c: 164: {;dc_motor.c: 165:  (mL->direction) = 0;
  8872   0040B4  EE20 F001          	lfsr	2,1
  8873   0040B8  5014               	movf	fullSpeedReverse@mL^0,w,c
  8874   0040BA  26D9               	addwf	fsr2l,f,c
  8875   0040BC  5015               	movf	(fullSpeedReverse@mL+1)^0,w,c
  8876   0040BE  22DA               	addwfc	fsr2h,f,c
  8877   0040C0  0E00               	movlw	0
  8878   0040C2  6EDF               	movwf	indf2,c
  8879                           
  8880                           ;dc_motor.c: 166:  (mR->direction) = 0;
  8881   0040C4  EE20 F001          	lfsr	2,1
  8882   0040C8  5016               	movf	fullSpeedReverse@mR^0,w,c
  8883   0040CA  26D9               	addwf	fsr2l,f,c
  8884   0040CC  5017               	movf	(fullSpeedReverse@mR+1)^0,w,c
  8885   0040CE  22DA               	addwfc	fsr2h,f,c
  8886   0040D0  0E00               	movlw	0
  8887   0040D2  6EDF               	movwf	indf2,c
  8888   0040D4                     
  8889                           ;dc_motor.c: 168:     for (unsigned int i = 0; i <50; i++)
  8890   0040D4  0E00               	movlw	0
  8891   0040D6  6E1A               	movwf	(fullSpeedReverse@i+1)^0,c
  8892   0040D8  0E00               	movlw	0
  8893   0040DA  6E19               	movwf	fullSpeedReverse@i^0,c
  8894   0040DC                     l3108:
  8895                           
  8896                           ;dc_motor.c: 169:     {;dc_motor.c: 170:         (mL->power)++;
  8897   0040DC  C014  FFD9         	movff	fullSpeedReverse@mL,fsr2l
  8898   0040E0  C015  FFDA         	movff	fullSpeedReverse@mL+1,fsr2h
  8899   0040E4  2ADF               	incf	indf2,f,c
  8900                           
  8901                           ;dc_motor.c: 171:         (mR->power)++;
  8902   0040E6  C016  FFD9         	movff	fullSpeedReverse@mR,fsr2l
  8903   0040EA  C017  FFDA         	movff	fullSpeedReverse@mR+1,fsr2h
  8904   0040EE  2ADF               	incf	indf2,f,c
  8905   0040F0                     
  8906                           ;dc_motor.c: 172:         setMotorPWM(mL);
  8907   0040F0  C014  F00E         	movff	fullSpeedReverse@mL,setMotorPWM@m
  8908   0040F4  C015  F00F         	movff	fullSpeedReverse@mL+1,setMotorPWM@m+1
  8909   0040F8  ECDE  F017         	call	_setMotorPWM	;wreg free
  8910   0040FC                     
  8911                           ;dc_motor.c: 173:         setMotorPWM(mR);
  8912   0040FC  C016  F00E         	movff	fullSpeedReverse@mR,setMotorPWM@m
  8913   004100  C017  F00F         	movff	fullSpeedReverse@mR+1,setMotorPWM@m+1
  8914   004104  ECDE  F017         	call	_setMotorPWM	;wreg free
  8915   004108                     
  8916                           ;dc_motor.c: 174:         _delay((unsigned long)((400)*(64000000/4000000.0)));
  8917   004108  0E09               	movlw	9
  8918   00410A  6E18               	movwf	??_fullSpeedReverse^0,c
  8919   00410C  0E4E               	movlw	78
  8920   00410E                     u4437:
  8921   00410E  2EE8               	decfsz	wreg,f,c
  8922   004110  D7FE               	bra	u4437
  8923   004112  2E18               	decfsz	??_fullSpeedReverse^0,f,c
  8924   004114  D7FC               	bra	u4437
  8925   004116  D000               	nop2	
  8926   004118                     
  8927                           ;dc_motor.c: 175:     }
  8928   004118  4A19               	infsnz	fullSpeedReverse@i^0,f,c
  8929   00411A  2A1A               	incf	(fullSpeedReverse@i+1)^0,f,c
  8930   00411C  501A               	movf	(fullSpeedReverse@i+1)^0,w,c
  8931   00411E  E109               	bnz	u2280
  8932   004120  0E32               	movlw	50
  8933   004122  5C19               	subwf	fullSpeedReverse@i^0,w,c
  8934   004124  A0D8               	btfss	status,0,c
  8935   004126  EF97  F020         	goto	u2281
  8936   00412A  EF99  F020         	goto	u2280
  8937   00412E                     u2281:
  8938   00412E  EF6E  F020         	goto	l3108
  8939   004132                     u2280:
  8940   004132  0012               	return		;funcret
  8941   004134                     __end_of_fullSpeedReverse:
  8942                           	callstack 0
  8943                           
  8944 ;; *************** function _setMotorPWM *****************
  8945 ;; Defined at:
  8946 ;;		line 70 in file "dc_motor.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8949 ;;		 -> motorR(9), motorL(9), 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  negDuty         1   18[COMRAM] unsigned char 
  8952 ;;  posDuty         1   17[COMRAM] unsigned char 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;Total ram usage:        6 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 2
  8969 ;; This function calls:
  8970 ;;		___lwdiv
  8971 ;;		___wmul
  8972 ;; This function is called by:
  8973 ;;		_stop
  8974 ;;		_turnLeft
  8975 ;;		_turnRight
  8976 ;;		_fullSpeedAhead
  8977 ;;		_fullSpeedReverse
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text48
  8982   002FBC                     __ptext48:
  8983                           	callstack 0
  8984   002FBC                     _setMotorPWM:
  8985                           	callstack 27
  8986   002FBC                     
  8987                           ;dc_motor.c: 70: void setMotorPWM(struct DC_motor *m);dc_motor.c: 71: {;dc_motor.c: 72: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 74:     if(m->brakemode) {
  8988   002FBC  EE20 F002          	lfsr	2,2
  8989   002FC0  500E               	movf	setMotorPWM@m^0,w,c
  8990   002FC2  26D9               	addwf	fsr2l,f,c
  8991   002FC4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8992   002FC6  22DA               	addwfc	fsr2h,f,c
  8993   002FC8  50DF               	movf	indf2,w,c
  8994   002FCA  B4D8               	btfsc	status,2,c
  8995   002FCC  EFEA  F017         	goto	u2141
  8996   002FD0  EFEC  F017         	goto	u2140
  8997   002FD4                     u2141:
  8998   002FD4  EF20  F018         	goto	l2998
  8999   002FD8                     u2140:
  9000   002FD8                     
  9001                           ;dc_motor.c: 75:         posDuty=(m->PWMperiod) - ((unsigned int)(m->power)*(m->PWMperio
      +                          d))/100;
  9002   002FD8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9003   002FDC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9004   002FE0  50DF               	movf	indf2,w,c
  9005   002FE2  6E10               	movwf	??_setMotorPWM^0,c
  9006   002FE4  5010               	movf	??_setMotorPWM^0,w,c
  9007   002FE6  6E01               	movwf	___wmul@multiplier^0,c
  9008   002FE8  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9009   002FEA  EE20 F003          	lfsr	2,3
  9010   002FEE  500E               	movf	setMotorPWM@m^0,w,c
  9011   002FF0  26D9               	addwf	fsr2l,f,c
  9012   002FF2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9013   002FF4  22DA               	addwfc	fsr2h,f,c
  9014   002FF6  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9015   002FFA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9016   002FFE  EC2B  F024         	call	___wmul	;wreg free
  9017   003002  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9018   003006  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9019   00300A  0E00               	movlw	0
  9020   00300C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9021   00300E  0E64               	movlw	100
  9022   003010  6E09               	movwf	___lwdiv@divisor^0,c
  9023   003012  EC16  F021         	call	___lwdiv	;wreg free
  9024   003016  EE20 F003          	lfsr	2,3
  9025   00301A  500E               	movf	setMotorPWM@m^0,w,c
  9026   00301C  26D9               	addwf	fsr2l,f,c
  9027   00301E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9028   003020  22DA               	addwfc	fsr2h,f,c
  9029   003022  50DF               	movf	indf2,w,c
  9030   003024  6E11               	movwf	(??_setMotorPWM+1)^0,c
  9031   003026  5007               	movf	?___lwdiv^0,w,c
  9032   003028  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9033   00302A  6E12               	movwf	setMotorPWM@posDuty^0,c
  9034   00302C                     
  9035                           ;dc_motor.c: 76:         negDuty=(m->PWMperiod);
  9036   00302C  EE20 F003          	lfsr	2,3
  9037   003030  500E               	movf	setMotorPWM@m^0,w,c
  9038   003032  26D9               	addwf	fsr2l,f,c
  9039   003034  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9040   003036  22DA               	addwfc	fsr2h,f,c
  9041   003038  50DF               	movf	indf2,w,c
  9042   00303A  6E13               	movwf	setMotorPWM@negDuty^0,c
  9043                           
  9044                           ;dc_motor.c: 77:     }
  9045   00303C  EF43  F018         	goto	l3002
  9046   003040                     l2998:
  9047                           
  9048                           ;dc_motor.c: 79:         posDuty=0;
  9049   003040  0E00               	movlw	0
  9050   003042  6E12               	movwf	setMotorPWM@posDuty^0,c
  9051   003044                     
  9052                           ;dc_motor.c: 80:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  9053   003044  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9054   003048  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9055   00304C  50DF               	movf	indf2,w,c
  9056   00304E  6E10               	movwf	??_setMotorPWM^0,c
  9057   003050  5010               	movf	??_setMotorPWM^0,w,c
  9058   003052  6E01               	movwf	___wmul@multiplier^0,c
  9059   003054  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9060   003056  EE20 F003          	lfsr	2,3
  9061   00305A  500E               	movf	setMotorPWM@m^0,w,c
  9062   00305C  26D9               	addwf	fsr2l,f,c
  9063   00305E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9064   003060  22DA               	addwfc	fsr2h,f,c
  9065   003062  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9066   003066  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9067   00306A  EC2B  F024         	call	___wmul	;wreg free
  9068   00306E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9069   003072  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9070   003076  0E00               	movlw	0
  9071   003078  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9072   00307A  0E64               	movlw	100
  9073   00307C  6E09               	movwf	___lwdiv@divisor^0,c
  9074   00307E  EC16  F021         	call	___lwdiv	;wreg free
  9075   003082  5007               	movf	?___lwdiv^0,w,c
  9076   003084  6E13               	movwf	setMotorPWM@negDuty^0,c
  9077   003086                     l3002:
  9078                           
  9079                           ;dc_motor.c: 83:     if (m->direction) {
  9080   003086  EE20 F001          	lfsr	2,1
  9081   00308A  500E               	movf	setMotorPWM@m^0,w,c
  9082   00308C  26D9               	addwf	fsr2l,f,c
  9083   00308E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9084   003090  22DA               	addwfc	fsr2h,f,c
  9085   003092  50DF               	movf	indf2,w,c
  9086   003094  B4D8               	btfsc	status,2,c
  9087   003096  EF4F  F018         	goto	u2151
  9088   00309A  EF51  F018         	goto	u2150
  9089   00309E                     u2151:
  9090   00309E  EF73  F018         	goto	l3006
  9091   0030A2                     u2150:
  9092   0030A2                     
  9093                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
  9094   0030A2  EE20 F005          	lfsr	2,5
  9095   0030A6  500E               	movf	setMotorPWM@m^0,w,c
  9096   0030A8  26D9               	addwf	fsr2l,f,c
  9097   0030AA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9098   0030AC  22DA               	addwfc	fsr2h,f,c
  9099   0030AE  CFDE F010          	movff	postinc2,??_setMotorPWM
  9100   0030B2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9101   0030B6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9102   0030BA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9103   0030BE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9104                           
  9105                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
  9106   0030C2  EE20 F007          	lfsr	2,7
  9107   0030C6  500E               	movf	setMotorPWM@m^0,w,c
  9108   0030C8  26D9               	addwf	fsr2l,f,c
  9109   0030CA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9110   0030CC  22DA               	addwfc	fsr2h,f,c
  9111   0030CE  CFDE F010          	movff	postinc2,??_setMotorPWM
  9112   0030D2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9113   0030D6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9114   0030DA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9115   0030DE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9116                           
  9117                           ;dc_motor.c: 86:     } else {
  9118   0030E2  EF93  F018         	goto	l458
  9119   0030E6                     l3006:
  9120                           
  9121                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  9122   0030E6  EE20 F005          	lfsr	2,5
  9123   0030EA  500E               	movf	setMotorPWM@m^0,w,c
  9124   0030EC  26D9               	addwf	fsr2l,f,c
  9125   0030EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9126   0030F0  22DA               	addwfc	fsr2h,f,c
  9127   0030F2  CFDE F010          	movff	postinc2,??_setMotorPWM
  9128   0030F6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9129   0030FA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9130   0030FE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9131   003102  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  9132                           
  9133                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  9134   003106  EE20 F007          	lfsr	2,7
  9135   00310A  500E               	movf	setMotorPWM@m^0,w,c
  9136   00310C  26D9               	addwf	fsr2l,f,c
  9137   00310E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9138   003110  22DA               	addwfc	fsr2h,f,c
  9139   003112  CFDE F010          	movff	postinc2,??_setMotorPWM
  9140   003116  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9141   00311A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9142   00311E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9143   003122  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  9144   003126                     l458:
  9145   003126  0012               	return		;funcret
  9146   003128                     __end_of_setMotorPWM:
  9147                           	callstack 0
  9148                           
  9149 ;; *************** function ___wmul *****************
  9150 ;; Defined at:
  9151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  multiplier      2    0[COMRAM] unsigned int 
  9154 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  product         2    4[COMRAM] unsigned int 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  2    0[COMRAM] unsigned int 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0, prodl, prodh
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:        6 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 1
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_setMotorPWM
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text49
  9181   004856                     __ptext49:
  9182                           	callstack 0
  9183   004856                     ___wmul:
  9184                           	callstack 27
  9185   004856  5001               	movf	___wmul@multiplier^0,w,c
  9186   004858  0203               	mulwf	___wmul@multiplicand^0,c
  9187   00485A  CFF3 F005          	movff	prodl,___wmul@product
  9188   00485E  CFF4 F006          	movff	prodh,___wmul@product+1
  9189   004862  5001               	movf	___wmul@multiplier^0,w,c
  9190   004864  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9191   004866  50F3               	movf	243,w,c
  9192   004868  2606               	addwf	(___wmul@product+1)^0,f,c
  9193   00486A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9194   00486C  0203               	mulwf	___wmul@multiplicand^0,c
  9195   00486E  50F3               	movf	243,w,c
  9196   004870  2606               	addwf	(___wmul@product+1)^0,f,c
  9197   004872  C005  F001         	movff	___wmul@product,?___wmul
  9198   004876  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9199   00487A  0012               	return		;funcret
  9200   00487C                     __end_of___wmul:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function ___lwdiv *****************
  9204 ;; Defined at:
  9205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  dividend        2    6[COMRAM] unsigned int 
  9208 ;;  divisor         2    8[COMRAM] unsigned int 
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;  quotient        2   10[COMRAM] unsigned int 
  9211 ;;  counter         1   12[COMRAM] unsigned char 
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  2    6[COMRAM] unsigned int 
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9224 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9225 ;;Total ram usage:        7 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 1
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_setMotorPWM
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           	psect	text50
  9236   00422C                     __ptext50:
  9237                           	callstack 0
  9238   00422C                     ___lwdiv:
  9239                           	callstack 27
  9240   00422C  0E00               	movlw	0
  9241   00422E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9242   004230  0E00               	movlw	0
  9243   004232  6E0B               	movwf	___lwdiv@quotient^0,c
  9244   004234  5009               	movf	___lwdiv@divisor^0,w,c
  9245   004236  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9246   004238  B4D8               	btfsc	status,2,c
  9247   00423A  EF21  F021         	goto	u2111
  9248   00423E  EF23  F021         	goto	u2110
  9249   004242                     u2111:
  9250   004242  EF4B  F021         	goto	l1156
  9251   004246                     u2110:
  9252   004246  0E01               	movlw	1
  9253   004248  6E0D               	movwf	___lwdiv@counter^0,c
  9254   00424A  EF2B  F021         	goto	l2978
  9255   00424E                     l2976:
  9256   00424E  90D8               	bcf	status,0,c
  9257   004250  3609               	rlcf	___lwdiv@divisor^0,f,c
  9258   004252  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9259   004254  2A0D               	incf	___lwdiv@counter^0,f,c
  9260   004256                     l2978:
  9261   004256  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9262   004258  EF30  F021         	goto	u2121
  9263   00425C  EF32  F021         	goto	u2120
  9264   004260                     u2121:
  9265   004260  EF27  F021         	goto	l2976
  9266   004264                     u2120:
  9267   004264                     l2980:
  9268   004264  90D8               	bcf	status,0,c
  9269   004266  360B               	rlcf	___lwdiv@quotient^0,f,c
  9270   004268  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9271   00426A  5009               	movf	___lwdiv@divisor^0,w,c
  9272   00426C  5C07               	subwf	___lwdiv@dividend^0,w,c
  9273   00426E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9274   004270  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9275   004272  A0D8               	btfss	status,0,c
  9276   004274  EF3E  F021         	goto	u2131
  9277   004278  EF40  F021         	goto	u2130
  9278   00427C                     u2131:
  9279   00427C  EF45  F021         	goto	l2988
  9280   004280                     u2130:
  9281   004280  5009               	movf	___lwdiv@divisor^0,w,c
  9282   004282  5E07               	subwf	___lwdiv@dividend^0,f,c
  9283   004284  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9284   004286  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9285   004288  800B               	bsf	___lwdiv@quotient^0,0,c
  9286   00428A                     l2988:
  9287   00428A  90D8               	bcf	status,0,c
  9288   00428C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9289   00428E  3209               	rrcf	___lwdiv@divisor^0,f,c
  9290   004290  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9291   004292  EF32  F021         	goto	l2980
  9292   004296                     l1156:
  9293   004296  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9294   00429A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9295   00429E  0012               	return		;funcret
  9296   0042A0                     __end_of___lwdiv:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function _Color2String *****************
  9300 ;; Defined at:
  9301 ;;		line 39 in file "serial.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  buf             2   68[COMRAM] PTR unsigned char 
  9304 ;;		 -> main@data(100), 
  9305 ;;  cf              2   70[COMRAM] PTR struct RGBC_rel
  9306 ;;		 -> colorf(22), 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;  colourname      2   72[COMRAM] PTR unsigned char 
  9309 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
  9310 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
  9311 ;;		 -> STR_1(1), 
  9312 ;; Return value:  Size  Location     Type
  9313 ;;                  1    wreg      void 
  9314 ;; Registers used:
  9315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9316 ;; Tracked objects:
  9317 ;;		On entry : 0/0
  9318 ;;		On exit  : 0/0
  9319 ;;		Unchanged: 0/0
  9320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;Total ram usage:        6 bytes
  9326 ;; Hardware stack levels used: 1
  9327 ;; Hardware stack levels required when called: 7
  9328 ;; This function calls:
  9329 ;;		_Hue2Colour
  9330 ;;		_sendStringSerial4
  9331 ;;		_sprintf
  9332 ;; This function is called by:
  9333 ;;		_main
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text51
  9338   0046FC                     __ptext51:
  9339                           	callstack 0
  9340   0046FC                     _Color2String:
  9341                           	callstack 23
  9342   0046FC                     
  9343                           ;serial.c: 42:     char* colourname = Hue2Colour(cf);
  9344   0046FC  C047  F00D         	movff	Color2String@cf,Hue2Colour@cf
  9345   004700  C048  F00E         	movff	Color2String@cf+1,Hue2Colour@cf+1
  9346   004704  ECBF  F00A         	call	_Hue2Colour	;wreg free
  9347   004708  C00D  F049         	movff	?_Hue2Colour,Color2String@colourname
  9348   00470C  C00E  F04A         	movff	?_Hue2Colour+1,Color2String@colourname+1
  9349   004710                     
  9350                           ;serial.c: 44:     sprintf(buf,"Colour is %s  \r",colourname);
  9351   004710  C045  F032         	movff	Color2String@buf,sprintf@s
  9352   004714  C046  F033         	movff	Color2String@buf+1,sprintf@s+1
  9353   004718  0E01               	movlw	low STR_10
  9354   00471A  6E34               	movwf	sprintf@fmt^0,c
  9355   00471C  0E0E               	movlw	high STR_10
  9356   00471E  6E35               	movwf	(sprintf@fmt+1)^0,c
  9357   004720  C049  F036         	movff	Color2String@colourname,?_sprintf+4
  9358   004724  C04A  F037         	movff	Color2String@colourname+1,?_sprintf+5
  9359   004728  ECCC  F022         	call	_sprintf	;wreg free
  9360   00472C                     
  9361                           ;serial.c: 45:     sendStringSerial4(buf);
  9362   00472C  C045  F002         	movff	Color2String@buf,sendStringSerial4@string
  9363   004730  C046  F003         	movff	Color2String@buf+1,sendStringSerial4@string+1
  9364   004734  EC9D  F023         	call	_sendStringSerial4	;wreg free
  9365   004738  0012               	return		;funcret
  9366   00473A                     __end_of_Color2String:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _sprintf *****************
  9370 ;; Defined at:
  9371 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  s               2   49[COMRAM] PTR unsigned char 
  9374 ;;		 -> main@data(100), 
  9375 ;;  fmt             2   51[COMRAM] PTR const unsigned char 
  9376 ;;		 -> STR_10(16), 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  f              11   57[COMRAM] struct _IO_FILE
  9379 ;;  ap              2   55[COMRAM] PTR void [1]
  9380 ;;		 -> ?_sprintf(2), 
  9381 ;;  ret             2    0        int 
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  2   49[COMRAM] int 
  9384 ;; Registers used:
  9385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9391 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9394 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9395 ;;Total ram usage:       19 bytes
  9396 ;; Hardware stack levels used: 1
  9397 ;; Hardware stack levels required when called: 6
  9398 ;; This function calls:
  9399 ;;		_vfprintf
  9400 ;; This function is called by:
  9401 ;;		_Color2String
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text52
  9406   004598                     __ptext52:
  9407                           	callstack 0
  9408   004598                     _sprintf:
  9409                           	callstack 23
  9410   004598  0E36               	movlw	low (?_sprintf+4)
  9411   00459A  6E38               	movwf	sprintf@ap^0,c
  9412   00459C  0E00               	movlw	high (?_sprintf+4)
  9413   00459E  6E39               	movwf	(sprintf@ap+1)^0,c
  9414   0045A0  C032  F03A         	movff	sprintf@s,sprintf@f
  9415   0045A4  C033  F03B         	movff	sprintf@s+1,sprintf@f+1
  9416   0045A8  0E00               	movlw	0
  9417   0045AA  6E3E               	movwf	(sprintf@f+4)^0,c
  9418   0045AC  0E00               	movlw	0
  9419   0045AE  6E3D               	movwf	(sprintf@f+3)^0,c
  9420   0045B0  0E00               	movlw	0
  9421   0045B2  6E44               	movwf	(sprintf@f+10)^0,c
  9422   0045B4  0E00               	movlw	0
  9423   0045B6  6E43               	movwf	(sprintf@f+9)^0,c
  9424   0045B8  0E3A               	movlw	low sprintf@f
  9425   0045BA  6E2A               	movwf	vfprintf@fp^0,c
  9426   0045BC  0E00               	movlw	high sprintf@f
  9427   0045BE  6E2B               	movwf	(vfprintf@fp+1)^0,c
  9428   0045C0  C034  F02C         	movff	sprintf@fmt,vfprintf@fmt
  9429   0045C4  C035  F02D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  9430   0045C8  0E38               	movlw	low sprintf@ap
  9431   0045CA  6E2E               	movwf	vfprintf@ap^0,c
  9432   0045CC  0E00               	movlw	high sprintf@ap
  9433   0045CE  6E2F               	movwf	(vfprintf@ap+1)^0,c
  9434   0045D0  ECF3  F022         	call	_vfprintf	;wreg free
  9435   0045D4  503D               	movf	(sprintf@f+3)^0,w,c
  9436   0045D6  2432               	addwf	sprintf@s^0,w,c
  9437   0045D8  6ED9               	movwf	fsr2l,c
  9438   0045DA  503E               	movf	(sprintf@f+4)^0,w,c
  9439   0045DC  2033               	addwfc	(sprintf@s+1)^0,w,c
  9440   0045DE  6EDA               	movwf	fsr2h,c
  9441   0045E0  0E00               	movlw	0
  9442   0045E2  6EDF               	movwf	indf2,c
  9443   0045E4  0012               	return		;funcret
  9444   0045E6                     __end_of_sprintf:
  9445                           	callstack 0
  9446                           
  9447 ;; *************** function _vfprintf *****************
  9448 ;; Defined at:
  9449 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  9452 ;;		 -> sprintf@f(11), 
  9453 ;;  fmt             2   43[COMRAM] PTR const unsigned char 
  9454 ;;		 -> STR_10(16), 
  9455 ;;  ap              2   45[COMRAM] PTR PTR void 
  9456 ;;		 -> sprintf@ap(2), 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  cfmt            2   47[COMRAM] PTR unsigned char 
  9459 ;;		 -> STR_10(16), 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  2   41[COMRAM] int 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9469 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;Total ram usage:        8 bytes
  9474 ;; Hardware stack levels used: 1
  9475 ;; Hardware stack levels required when called: 5
  9476 ;; This function calls:
  9477 ;;		_vfpfcnvrt
  9478 ;; This function is called by:
  9479 ;;		_sprintf
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text53
  9484   0045E6                     __ptext53:
  9485                           	callstack 0
  9486   0045E6                     _vfprintf:
  9487                           	callstack 23
  9488   0045E6                     
  9489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9490   0045E6  C02C  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  9491   0045EA  C02D  F031         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9492                           
  9493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9494   0045EE  EF07  F023         	goto	l3824
  9495   0045F2                     l3822:
  9496                           
  9497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9498   0045F2  C02A  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  9499   0045F6  C02B  F021         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9500   0045FA  0E30               	movlw	low vfprintf@cfmt
  9501   0045FC  6E22               	movwf	vfpfcnvrt@fmt^0,c
  9502   0045FE  0E00               	movlw	high vfprintf@cfmt
  9503   004600  6E23               	movwf	(vfpfcnvrt@fmt+1)^0,c
  9504   004602  C02E  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  9505   004606  C02F  F025         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9506   00460A  EC94  F018         	call	_vfpfcnvrt	;wreg free
  9507   00460E                     l3824:
  9508                           
  9509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9510   00460E  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  9511   004612  C031  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9512   004616                     	if	0	;tblptru may be non-zero
  9513   004616                     	endif
  9514   004616                     	if	0	;tblptru may be non-zero
  9515   004616                     	endif
  9516   004616  0008               	tblrd		*
  9517   004618  50F5               	movf	tablat,w,c
  9518   00461A  0900               	iorlw	0
  9519   00461C  A4D8               	btfss	status,2,c
  9520   00461E  EF13  F023         	goto	u3381
  9521   004622  EF15  F023         	goto	u3380
  9522   004626                     u3381:
  9523   004626  EFF9  F022         	goto	l3822
  9524   00462A                     u3380:
  9525   00462A                     
  9526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9527   00462A  0E00               	movlw	0
  9528   00462C  6E2B               	movwf	(?_vfprintf+1)^0,c
  9529   00462E  0E00               	movlw	0
  9530   004630  6E2A               	movwf	?_vfprintf^0,c
  9531   004632  0012               	return		;funcret
  9532   004634                     __end_of_vfprintf:
  9533                           	callstack 0
  9534                           
  9535 ;; *************** function _vfpfcnvrt *****************
  9536 ;; Defined at:
  9537 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9540 ;;		 -> sprintf@f(11), 
  9541 ;;  fmt             2   33[COMRAM] PTR PTR unsigned char 
  9542 ;;		 -> vfprintf@cfmt(2), 
  9543 ;;  ap              2   35[COMRAM] PTR PTR void 
  9544 ;;		 -> sprintf@ap(2), 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  convarg         8    0        struct .
  9547 ;;  cp              3    0        PTR unsigned char 
  9548 ;;  i               2    0        int 
  9549 ;;  done            2    0        int 
  9550 ;;  c               1    0        unsigned char 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  1    wreg      void 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9560 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9563 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9564 ;;Total ram usage:       10 bytes
  9565 ;; Hardware stack levels used: 1
  9566 ;; Hardware stack levels required when called: 4
  9567 ;; This function calls:
  9568 ;;		_fputc
  9569 ;;		_stoa
  9570 ;;		_strncmp
  9571 ;; This function is called by:
  9572 ;;		_vfprintf
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           	psect	text54
  9577   003128                     __ptext54:
  9578                           	callstack 0
  9579   003128                     _vfpfcnvrt:
  9580                           	callstack 23
  9581   003128                     
  9582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9583   003128  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9584   00312C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9585   003130  CFDE FFF6          	movff	postinc2,tblptrl
  9586   003134  CFDD FFF7          	movff	postdec2,tblptrh
  9587   003138                     	if	0	;tblptru may be non-zero
  9588   003138                     	endif
  9589   003138                     	if	0	;tblptru may be non-zero
  9590   003138                     	endif
  9591   003138  0008               	tblrd		*
  9592   00313A  50F5               	movf	tablat,w,c
  9593   00313C  0A25               	xorlw	37
  9594   00313E  A4D8               	btfss	status,2,c
  9595   003140  EFA4  F018         	goto	u2801
  9596   003144  EFA6  F018         	goto	u2800
  9597   003148                     u2801:
  9598   003148  EF2C  F019         	goto	l3484
  9599   00314C                     u2800:
  9600   00314C                     
  9601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9602   00314C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9603   003150  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9604   003154  2ADE               	incf	postinc2,f,c
  9605   003156  0E00               	movlw	0
  9606   003158  22DD               	addwfc	postdec2,f,c
  9607   00315A                     
  9608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9609   00315A  0E00               	movlw	0
  9610   00315C  0101               	movlb	1	; () banked
  9611   00315E  6F21               	movwf	(_width+1)& (0+255),b
  9612   003160  0E00               	movlw	0
  9613   003162  6F20               	movwf	_width& (0+255),b
  9614   003164  C120  F0F4         	movff	_width,_flags
  9615   003168                     
  9616                           ; BSR set to: 1
  9617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9618   003168  6922               	setf	_prec& (0+255),b
  9619   00316A  6923               	setf	(_prec+1)& (0+255),b
  9620   00316C                     
  9621                           ; BSR set to: 1
  9622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9623   00316C  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9624   003170  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9625   003174  CFDE FFF6          	movff	postinc2,tblptrl
  9626   003178  CFDD FFF7          	movff	postdec2,tblptrh
  9627   00317C                     	if	0	;tblptru may be non-zero
  9628   00317C                     	endif
  9629   00317C                     	if	0	;tblptru may be non-zero
  9630   00317C                     	endif
  9631   00317C  0008               	tblrd		*
  9632   00317E  50F5               	movf	tablat,w,c
  9633   003180  0A73               	xorlw	115
  9634   003182  B4D8               	btfsc	status,2,c
  9635   003184  EFC6  F018         	goto	u2811
  9636   003188  EFC8  F018         	goto	u2810
  9637   00318C                     u2811:
  9638   00318C  EFE3  F018         	goto	l3468
  9639   003190                     u2810:
  9640   003190                     
  9641                           ; BSR set to: 1
  9642   003190  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9643   003194  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9644   003198  CFDE F001          	movff	postinc2,strncmp@_l
  9645   00319C  CFDD F002          	movff	postdec2,strncmp@_l+1
  9646   0031A0  0E48               	movlw	low STR_11
  9647   0031A2  6E03               	movwf	strncmp@_r^0,c
  9648   0031A4  0E0E               	movlw	high STR_11
  9649   0031A6  6E04               	movwf	(strncmp@_r+1)^0,c
  9650   0031A8  0E00               	movlw	0
  9651   0031AA  6E06               	movwf	(strncmp@n+1)^0,c
  9652   0031AC  0E03               	movlw	3
  9653   0031AE  6E05               	movwf	strncmp@n^0,c
  9654   0031B0  EC50  F01C         	call	_strncmp	;wreg free
  9655   0031B4  5001               	movf	?_strncmp^0,w,c
  9656   0031B6  1002               	iorwf	(?_strncmp+1)^0,w,c
  9657   0031B8  A4D8               	btfss	status,2,c
  9658   0031BA  EFE1  F018         	goto	u2821
  9659   0031BE  EFE3  F018         	goto	u2820
  9660   0031C2                     u2821:
  9661   0031C2  EF23  F019         	goto	l3480
  9662   0031C6                     u2820:
  9663   0031C6                     l3468:
  9664                           
  9665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9666   0031C6  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9667   0031CA  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9668   0031CE  CFDE FFF6          	movff	postinc2,tblptrl
  9669   0031D2  CFDD FFF7          	movff	postdec2,tblptrh
  9670   0031D6                     	if	0	;tblptru may be non-zero
  9671   0031D6                     	endif
  9672   0031D6                     	if	0	;tblptru may be non-zero
  9673   0031D6                     	endif
  9674   0031D6  0008               	tblrd		*
  9675   0031D8  50F5               	movf	tablat,w,c
  9676   0031DA  0A73               	xorlw	115
  9677   0031DC  B4D8               	btfsc	status,2,c
  9678   0031DE  EFF3  F018         	goto	u2831
  9679   0031E2  EFF5  F018         	goto	u2830
  9680   0031E6                     u2831:
  9681   0031E6  EFFB  F018         	goto	l3472
  9682   0031EA                     u2830:
  9683   0031EA  0E00               	movlw	0
  9684   0031EC  6E29               	movwf	(_vfpfcnvrt$2880+1)^0,c
  9685   0031EE  0E03               	movlw	3
  9686   0031F0  6E28               	movwf	_vfpfcnvrt$2880^0,c
  9687   0031F2  EFFF  F018         	goto	l3474
  9688   0031F6                     l3472:
  9689   0031F6  0E00               	movlw	0
  9690   0031F8  6E29               	movwf	(_vfpfcnvrt$2880+1)^0,c
  9691   0031FA  0E01               	movlw	1
  9692   0031FC  6E28               	movwf	_vfpfcnvrt$2880^0,c
  9693   0031FE                     l3474:
  9694   0031FE  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9695   003202  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9696   003206  5028               	movf	_vfpfcnvrt$2880^0,w,c
  9697   003208  26DE               	addwf	postinc2,f,c
  9698   00320A  5029               	movf	(_vfpfcnvrt$2880+1)^0,w,c
  9699   00320C  22DD               	addwfc	postdec2,f,c
  9700   00320E                     
  9701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  9702   00320E  C020  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9703   003212  C021  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9704   003216  C024  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9705   00321A  C025  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9706   00321E  CFDF F026          	movff	indf2,??_vfpfcnvrt
  9707   003222  0E02               	movlw	2
  9708   003224  26DE               	addwf	postinc2,f,c
  9709   003226  CFDF F027          	movff	indf2,??_vfpfcnvrt+1
  9710   00322A  0E00               	movlw	0
  9711   00322C  22DD               	addwfc	postdec2,f,c
  9712   00322E  C026  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9713   003232  C027  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9714   003236  CFDE F00C          	movff	postinc2,stoa@s
  9715   00323A  CFDD F00D          	movff	postdec2,stoa@s+1
  9716   00323E  EC41  F019         	call	_stoa	;wreg free
  9717   003242  EF40  F019         	goto	l1400
  9718   003246                     l3480:
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9721   003246  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9722   00324A  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9723   00324E  2ADE               	incf	postinc2,f,c
  9724   003250  0E00               	movlw	0
  9725   003252  22DD               	addwfc	postdec2,f,c
  9726   003254  EF40  F019         	goto	l1400
  9727   003258                     l3484:
  9728                           
  9729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9730   003258  C022  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9731   00325C  C023  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9732   003260  CFDE FFF6          	movff	postinc2,tblptrl
  9733   003264  CFDD FFF7          	movff	postdec2,tblptrh
  9734   003268                     	if	0	;tblptru may be non-zero
  9735   003268                     	endif
  9736   003268                     	if	0	;tblptru may be non-zero
  9737   003268                     	endif
  9738   003268  0008               	tblrd		*
  9739   00326A  50F5               	movf	tablat,w,c
  9740   00326C  6E01               	movwf	fputc@c^0,c
  9741   00326E  6A02               	clrf	(fputc@c+1)^0,c
  9742   003270  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9743   003274  C021  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9744   003278  ECBF  F01C         	call	_fputc	;wreg free
  9745   00327C  EF23  F019         	goto	l3480
  9746   003280                     l1400:
  9747   003280  0012               	return		;funcret
  9748   003282                     __end_of_vfpfcnvrt:
  9749                           	callstack 0
  9750                           
  9751 ;; *************** function _strncmp *****************
  9752 ;; Defined at:
  9753 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  9756 ;;		 -> STR_10(16), 
  9757 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  9758 ;;		 -> STR_13(4), 
  9759 ;;  n               2    4[COMRAM] unsigned int 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  r               2    9[COMRAM] PTR const unsigned char 
  9762 ;;		 -> STR_13(4), 
  9763 ;;  l               2    7[COMRAM] PTR const unsigned char 
  9764 ;;		 -> STR_10(16), 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  2    0[COMRAM] int 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9774 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9775 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;Total ram usage:       11 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_vfpfcnvrt
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text55
  9789   0038A0                     __ptext55:
  9790                           	callstack 0
  9791   0038A0                     _strncmp:
  9792                           	callstack 25
  9793   0038A0  C001  F008         	movff	strncmp@_l,strncmp@l
  9794   0038A4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  9795   0038A8  C003  F00A         	movff	strncmp@_r,strncmp@r
  9796   0038AC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  9797   0038B0  0605               	decf	strncmp@n^0,f,c
  9798   0038B2  A0D8               	btfss	status,0,c
  9799   0038B4  0606               	decf	(strncmp@n+1)^0,f,c
  9800   0038B6  2805               	incf	strncmp@n^0,w,c
  9801   0038B8  E106               	bnz	u2361
  9802   0038BA  2806               	incf	(strncmp@n+1)^0,w,c
  9803   0038BC  A4D8               	btfss	status,2,c
  9804   0038BE  EF63  F01C         	goto	u2361
  9805   0038C2  EF65  F01C         	goto	u2360
  9806   0038C6                     u2361:
  9807   0038C6  EF72  F01C         	goto	l3174
  9808   0038CA                     u2360:
  9809   0038CA  0E00               	movlw	0
  9810   0038CC  6E02               	movwf	(?_strncmp+1)^0,c
  9811   0038CE  0E00               	movlw	0
  9812   0038D0  6E01               	movwf	?_strncmp^0,c
  9813   0038D2  EFBE  F01C         	goto	l1439
  9814   0038D6                     l3172:
  9815   0038D6  4A08               	infsnz	strncmp@l^0,f,c
  9816   0038D8  2A09               	incf	(strncmp@l+1)^0,f,c
  9817   0038DA  4A0A               	infsnz	strncmp@r^0,f,c
  9818   0038DC  2A0B               	incf	(strncmp@r+1)^0,f,c
  9819   0038DE  0605               	decf	strncmp@n^0,f,c
  9820   0038E0  A0D8               	btfss	status,0,c
  9821   0038E2  0606               	decf	(strncmp@n+1)^0,f,c
  9822   0038E4                     l3174:
  9823   0038E4  C008  FFF6         	movff	strncmp@l,tblptrl
  9824   0038E8  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9825   0038EC                     	if	0	;tblptru may be non-zero
  9826   0038EC                     	endif
  9827   0038EC                     	if	0	;tblptru may be non-zero
  9828   0038EC                     	endif
  9829   0038EC  0008               	tblrd		*
  9830   0038EE  50F5               	movf	tablat,w,c
  9831   0038F0  0900               	iorlw	0
  9832   0038F2  B4D8               	btfsc	status,2,c
  9833   0038F4  EF7E  F01C         	goto	u2371
  9834   0038F8  EF80  F01C         	goto	u2370
  9835   0038FC                     u2371:
  9836   0038FC  EFAC  F01C         	goto	l3182
  9837   003900                     u2370:
  9838   003900  C00A  FFF6         	movff	strncmp@r,tblptrl
  9839   003904  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9840   003908                     	if	0	;tblptru may be non-zero
  9841   003908                     	endif
  9842   003908                     	if	0	;tblptru may be non-zero
  9843   003908                     	endif
  9844   003908  0008               	tblrd		*
  9845   00390A  50F5               	movf	tablat,w,c
  9846   00390C  0900               	iorlw	0
  9847   00390E  B4D8               	btfsc	status,2,c
  9848   003910  EF8C  F01C         	goto	u2381
  9849   003914  EF8E  F01C         	goto	u2380
  9850   003918                     u2381:
  9851   003918  EFAC  F01C         	goto	l3182
  9852   00391C                     u2380:
  9853   00391C  5005               	movf	strncmp@n^0,w,c
  9854   00391E  1006               	iorwf	(strncmp@n+1)^0,w,c
  9855   003920  B4D8               	btfsc	status,2,c
  9856   003922  EF95  F01C         	goto	u2391
  9857   003926  EF97  F01C         	goto	u2390
  9858   00392A                     u2391:
  9859   00392A  EFAC  F01C         	goto	l3182
  9860   00392E                     u2390:
  9861   00392E  C008  FFF6         	movff	strncmp@l,tblptrl
  9862   003932  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9863   003936                     	if	0	;tblptru may be non-zero
  9864   003936                     	endif
  9865   003936                     	if	0	;tblptru may be non-zero
  9866   003936                     	endif
  9867   003936  0008               	tblrd		*
  9868   003938  CFF5 F007          	movff	tablat,??_strncmp
  9869   00393C  C00A  FFF6         	movff	strncmp@r,tblptrl
  9870   003940  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9871   003944                     	if	0	;tblptru may be non-zero
  9872   003944                     	endif
  9873   003944                     	if	0	;tblptru may be non-zero
  9874   003944                     	endif
  9875   003944  0008               	tblrd		*
  9876   003946  50F5               	movf	tablat,w,c
  9877   003948  1807               	xorwf	??_strncmp^0,w,c
  9878   00394A  B4D8               	btfsc	status,2,c
  9879   00394C  EFAA  F01C         	goto	u2401
  9880   003950  EFAC  F01C         	goto	u2400
  9881   003954                     u2401:
  9882   003954  EF6B  F01C         	goto	l3172
  9883   003958                     u2400:
  9884   003958                     l3182:
  9885   003958  C008  FFF6         	movff	strncmp@l,tblptrl
  9886   00395C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  9887   003960                     	if	0	;tblptru may be non-zero
  9888   003960                     	endif
  9889   003960                     	if	0	;tblptru may be non-zero
  9890   003960                     	endif
  9891   003960  0008               	tblrd		*
  9892   003962  CFF5 F007          	movff	tablat,??_strncmp
  9893   003966  C00A  FFF6         	movff	strncmp@r,tblptrl
  9894   00396A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  9895   00396E                     	if	0	;tblptru may be non-zero
  9896   00396E                     	endif
  9897   00396E                     	if	0	;tblptru may be non-zero
  9898   00396E                     	endif
  9899   00396E  0008               	tblrd		*
  9900   003970  50F5               	movf	tablat,w,c
  9901   003972  5C07               	subwf	??_strncmp^0,w,c
  9902   003974  6E01               	movwf	?_strncmp^0,c
  9903   003976  6A02               	clrf	(?_strncmp+1)^0,c
  9904   003978  A0D8               	btfss	status,0,c
  9905   00397A  0602               	decf	(?_strncmp+1)^0,f,c
  9906   00397C                     l1439:
  9907   00397C  0012               	return		;funcret
  9908   00397E                     __end_of_strncmp:
  9909                           	callstack 0
  9910                           
  9911 ;; *************** function _stoa *****************
  9912 ;; Defined at:
  9913 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9914 ;; Parameters:    Size  Location     Type
  9915 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9916 ;;		 -> sprintf@f(11), 
  9917 ;;  s               2   11[COMRAM] PTR unsigned char 
  9918 ;;		 -> ?_sprintf(2), STR_9(9), STR_8(11), STR_7(7), 
  9919 ;;		 -> STR_6(5), STR_5(7), STR_4(10), STR_3(6), 
  9920 ;;		 -> STR_2(4), STR_1(1), 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  nuls            7   14[COMRAM] unsigned char [7]
  9923 ;;  p               2   29[COMRAM] int 
  9924 ;;  l               2   27[COMRAM] int 
  9925 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9926 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
  9927 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
  9928 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
  9929 ;;  i               2   23[COMRAM] int 
  9930 ;;  w               2   21[COMRAM] int 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;Total ram usage:       22 bytes
  9945 ;; Hardware stack levels used: 1
  9946 ;; Hardware stack levels required when called: 3
  9947 ;; This function calls:
  9948 ;;		_fputc
  9949 ;;		_strlen
  9950 ;; This function is called by:
  9951 ;;		_vfpfcnvrt
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text56
  9956   003282                     __ptext56:
  9957                           	callstack 0
  9958   003282                     _stoa:
  9959                           	callstack 23
  9960   003282                     
  9961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  9962   003282  EE21  F095         	lfsr	2,stoa@F1144
  9963   003286  EE10  F00F         	lfsr	1,stoa@nuls
  9964   00328A  0E06               	movlw	6
  9965   00328C                     u2291:
  9966   00328C  CFDB FFE3          	movff	plusw2,plusw1
  9967   003290  06E8               	decf	wreg,f,c
  9968   003292  E2FC               	bc	u2291
  9969   003294                     
  9970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  9971   003294  C00C  F01A         	movff	stoa@s,stoa@cp
  9972   003298  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  9973   00329C                     
  9974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  9975   00329C  501A               	movf	stoa@cp^0,w,c
  9976   00329E  101B               	iorwf	(stoa@cp+1)^0,w,c
  9977   0032A0  A4D8               	btfss	status,2,c
  9978   0032A2  EF55  F019         	goto	u2301
  9979   0032A6  EF57  F019         	goto	u2300
  9980   0032AA                     u2301:
  9981   0032AA  EF5B  F019         	goto	l3142
  9982   0032AE                     u2300:
  9983   0032AE                     
  9984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  9985   0032AE  0E0F               	movlw	low stoa@nuls
  9986   0032B0  6E1A               	movwf	stoa@cp^0,c
  9987   0032B2  0E00               	movlw	high stoa@nuls
  9988   0032B4  6E1B               	movwf	(stoa@cp+1)^0,c
  9989   0032B6                     l3142:
  9990                           
  9991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  9992   0032B6  C01A  F001         	movff	stoa@cp,strlen@s
  9993   0032BA  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  9994   0032BE  ECA4  F022         	call	_strlen	;wreg free
  9995   0032C2  C001  F01C         	movff	?_strlen,stoa@l
  9996   0032C6  C002  F01D         	movff	?_strlen+1,stoa@l+1
  9997   0032CA                     
  9998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  9999   0032CA  C122  F01E         	movff	_prec,stoa@p
 10000   0032CE  C123  F01F         	movff	_prec+1,stoa@p+1
 10001   0032D2                     
 10002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 10003   0032D2  BE1F               	btfsc	(stoa@p+1)^0,7,c
 10004   0032D4  EF6E  F019         	goto	u2311
 10005   0032D8  EF70  F019         	goto	u2310
 10006   0032DC                     u2311:
 10007   0032DC  EF85  F019         	goto	l1380
 10008   0032E0                     u2310:
 10009   0032E0  501C               	movf	stoa@l^0,w,c
 10010   0032E2  5C1E               	subwf	stoa@p^0,w,c
 10011   0032E4  501F               	movf	(stoa@p+1)^0,w,c
 10012   0032E6  0A80               	xorlw	128
 10013   0032E8  6E0E               	movwf	??_stoa^0,c
 10014   0032EA  501D               	movf	(stoa@l+1)^0,w,c
 10015   0032EC  0A80               	xorlw	128
 10016   0032EE  580E               	subwfb	??_stoa^0,w,c
 10017   0032F0  A0D8               	btfss	status,0,c
 10018   0032F2  EF7D  F019         	goto	u2321
 10019   0032F6  EF7F  F019         	goto	u2320
 10020   0032FA                     u2321:
 10021   0032FA  EF81  F019         	goto	l1378
 10022   0032FE                     u2320:
 10023   0032FE  EF85  F019         	goto	l1380
 10024   003302                     l1378:
 10025   003302  C01E  F01C         	movff	stoa@p,stoa@l
 10026   003306  C01F  F01D         	movff	stoa@p+1,stoa@l+1
 10027   00330A                     l1380:
 10028                           
 10029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 10030   00330A  C01C  F01E         	movff	stoa@l,stoa@p
 10031   00330E  C01D  F01F         	movff	stoa@l+1,stoa@p+1
 10032                           
 10033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 10034   003312  C120  F016         	movff	_width,stoa@w
 10035   003316  C121  F017         	movff	_width+1,stoa@w+1
 10036                           
 10037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10038   00331A  EF9B  F019         	goto	l3154
 10039   00331E                     l3150:
 10040                           
 10041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 10042   00331E  0E00               	movlw	0
 10043   003320  6E02               	movwf	(fputc@c+1)^0,c
 10044   003322  0E20               	movlw	32
 10045   003324  6E01               	movwf	fputc@c^0,c
 10046   003326  C00A  F003         	movff	stoa@fp,fputc@fp
 10047   00332A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10048   00332E  ECBF  F01C         	call	_fputc	;wreg free
 10049   003332                     
 10050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 10051   003332  4A1C               	infsnz	stoa@l^0,f,c
 10052   003334  2A1D               	incf	(stoa@l+1)^0,f,c
 10053   003336                     l3154:
 10054                           
 10055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 10056   003336  5016               	movf	stoa@w^0,w,c
 10057   003338  5C1C               	subwf	stoa@l^0,w,c
 10058   00333A  501D               	movf	(stoa@l+1)^0,w,c
 10059   00333C  0A80               	xorlw	128
 10060   00333E  6E0E               	movwf	??_stoa^0,c
 10061   003340  5017               	movf	(stoa@w+1)^0,w,c
 10062   003342  0A80               	xorlw	128
 10063   003344  580E               	subwfb	??_stoa^0,w,c
 10064   003346  A0D8               	btfss	status,0,c
 10065   003348  EFA8  F019         	goto	u2331
 10066   00334C  EFAA  F019         	goto	u2330
 10067   003350                     u2331:
 10068   003350  EF8F  F019         	goto	l3150
 10069   003354                     u2330:
 10070   003354                     
 10071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 10072   003354  0E00               	movlw	0
 10073   003356  6E19               	movwf	(stoa@i+1)^0,c
 10074   003358  0E00               	movlw	0
 10075   00335A  6E18               	movwf	stoa@i^0,c
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10078   00335C  EFCF  F019         	goto	l3164
 10079   003360                     l3158:
 10080                           
 10081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 10082   003360  C01A  FFF6         	movff	stoa@cp,tblptrl
 10083   003364  C01B  FFF7         	movff	stoa@cp+1,tblptrh
 10084   003368  0E00               	movlw	low (__smallconst shr (0+16))
 10085   00336A  6EF8               	movwf	tblptru,c
 10086   00336C  0E0D               	movlw	(high __ramtop+-1)
 10087   00336E  64F7               	cpfsgt	tblptrh,c
 10088   003370  D003               	bra	u2347
 10089   003372  0008               	tblrd		*
 10090   003374  50F5               	movf	tablat,w,c
 10091   003376  D005               	bra	u2340
 10092   003378                     u2347:
 10093   003378  CFF6 FFE1          	movff	tblptrl,fsr1l
 10094   00337C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10095   003380  50E7               	movf	indf1,w,c
 10096   003382                     u2340:
 10097   003382  6E0E               	movwf	??_stoa^0,c
 10098   003384  500E               	movf	??_stoa^0,w,c
 10099   003386  6E01               	movwf	fputc@c^0,c
 10100   003388  6A02               	clrf	(fputc@c+1)^0,c
 10101   00338A  C00A  F003         	movff	stoa@fp,fputc@fp
 10102   00338E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10103   003392  ECBF  F01C         	call	_fputc	;wreg free
 10104   003396                     
 10105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 10106   003396  4A1A               	infsnz	stoa@cp^0,f,c
 10107   003398  2A1B               	incf	(stoa@cp+1)^0,f,c
 10108   00339A                     
 10109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 10110   00339A  4A18               	infsnz	stoa@i^0,f,c
 10111   00339C  2A19               	incf	(stoa@i+1)^0,f,c
 10112   00339E                     l3164:
 10113                           
 10114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 10115   00339E  501E               	movf	stoa@p^0,w,c
 10116   0033A0  5C18               	subwf	stoa@i^0,w,c
 10117   0033A2  5019               	movf	(stoa@i+1)^0,w,c
 10118   0033A4  0A80               	xorlw	128
 10119   0033A6  6E0E               	movwf	??_stoa^0,c
 10120   0033A8  501F               	movf	(stoa@p+1)^0,w,c
 10121   0033AA  0A80               	xorlw	128
 10122   0033AC  580E               	subwfb	??_stoa^0,w,c
 10123   0033AE  A0D8               	btfss	status,0,c
 10124   0033B0  EFDC  F019         	goto	u2351
 10125   0033B4  EFDE  F019         	goto	u2350
 10126   0033B8                     u2351:
 10127   0033B8  EFB0  F019         	goto	l3158
 10128   0033BC                     u2350:
 10129   0033BC  0012               	return		;funcret
 10130   0033BE                     __end_of_stoa:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _strlen *****************
 10134 ;; Defined at:
 10135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10138 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
 10139 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
 10140 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10143 ;;		 -> stoa@nuls(7), ?_sprintf(2), STR_9(9), STR_8(11), 
 10144 ;;		 -> STR_7(7), STR_6(5), STR_5(7), STR_4(10), 
 10145 ;;		 -> STR_3(6), STR_2(4), STR_1(1), 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  2    0[COMRAM] unsigned int 
 10148 ;; Registers used:
 10149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10158 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10159 ;;Total ram usage:        4 bytes
 10160 ;; Hardware stack levels used: 1
 10161 ;; Hardware stack levels required when called: 1
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_stoa
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text57
 10170   004548                     __ptext57:
 10171                           	callstack 0
 10172   004548                     _strlen:
 10173                           	callstack 24
 10174   004548  C001  F003         	movff	strlen@s,strlen@a
 10175   00454C  C002  F004         	movff	strlen@s+1,strlen@a+1
 10176   004550  EFAC  F022         	goto	l3070
 10177   004554                     l3068:
 10178   004554  4A01               	infsnz	strlen@s^0,f,c
 10179   004556  2A02               	incf	(strlen@s+1)^0,f,c
 10180   004558                     l3070:
 10181   004558  C001  FFF6         	movff	strlen@s,tblptrl
 10182   00455C  C002  FFF7         	movff	strlen@s+1,tblptrh
 10183   004560  0E00               	movlw	low (__smallconst shr (0+16))
 10184   004562  6EF8               	movwf	tblptru,c
 10185   004564  0E0D               	movlw	(high __ramtop+-1)
 10186   004566  64F7               	cpfsgt	tblptrh,c
 10187   004568  D003               	bra	u2257
 10188   00456A  0008               	tblrd		*
 10189   00456C  50F5               	movf	tablat,w,c
 10190   00456E  D005               	bra	u2250
 10191   004570                     u2257:
 10192   004570  CFF6 FFE1          	movff	tblptrl,fsr1l
 10193   004574  CFF7 FFE2          	movff	tblptrh,fsr1h
 10194   004578  50E7               	movf	indf1,w,c
 10195   00457A                     u2250:
 10196   00457A  0900               	iorlw	0
 10197   00457C  A4D8               	btfss	status,2,c
 10198   00457E  EFC3  F022         	goto	u2261
 10199   004582  EFC5  F022         	goto	u2260
 10200   004586                     u2261:
 10201   004586  EFAA  F022         	goto	l3068
 10202   00458A                     u2260:
 10203   00458A  5003               	movf	strlen@a^0,w,c
 10204   00458C  5C01               	subwf	strlen@s^0,w,c
 10205   00458E  6E01               	movwf	?_strlen^0,c
 10206   004590  5004               	movf	(strlen@a+1)^0,w,c
 10207   004592  5802               	subwfb	(strlen@s+1)^0,w,c
 10208   004594  6E02               	movwf	(?_strlen+1)^0,c
 10209   004596  0012               	return		;funcret
 10210   004598                     __end_of_strlen:
 10211                           	callstack 0
 10212                           
 10213 ;; *************** function _fputc *****************
 10214 ;; Defined at:
 10215 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  c               2    0[COMRAM] int 
 10218 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10219 ;;		 -> sprintf@f(11), 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  2    0[COMRAM] int 
 10224 ;; Registers used:
 10225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;Total ram usage:        9 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; Hardware stack levels required when called: 2
 10238 ;; This function calls:
 10239 ;;		_putch
 10240 ;; This function is called by:
 10241 ;;		_stoa
 10242 ;;		_vfpfcnvrt
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text58
 10247   00397E                     __ptext58:
 10248                           	callstack 0
 10249   00397E                     _fputc:
 10250                           	callstack 23
 10251   00397E  5003               	movf	fputc@fp^0,w,c
 10252   003980  1004               	iorwf	(fputc@fp+1)^0,w,c
 10253   003982  B4D8               	btfsc	status,2,c
 10254   003984  EFC6  F01C         	goto	u2211
 10255   003988  EFC8  F01C         	goto	u2210
 10256   00398C                     u2211:
 10257   00398C  EFD1  F01C         	goto	l3056
 10258   003990                     u2210:
 10259   003990  5003               	movf	fputc@fp^0,w,c
 10260   003992  1004               	iorwf	(fputc@fp+1)^0,w,c
 10261   003994  A4D8               	btfss	status,2,c
 10262   003996  EFCF  F01C         	goto	u2221
 10263   00399A  EFD1  F01C         	goto	u2220
 10264   00399E                     u2221:
 10265   00399E  EFD6  F01C         	goto	l3058
 10266   0039A2                     u2220:
 10267   0039A2                     l3056:
 10268   0039A2  5001               	movf	fputc@c^0,w,c
 10269   0039A4  EC94  F024         	call	_putch
 10270   0039A8  EF23  F01D         	goto	l1418
 10271   0039AC                     l3058:
 10272   0039AC  EE20 F009          	lfsr	2,9
 10273   0039B0  5003               	movf	fputc@fp^0,w,c
 10274   0039B2  26D9               	addwf	fsr2l,f,c
 10275   0039B4  5004               	movf	(fputc@fp+1)^0,w,c
 10276   0039B6  22DA               	addwfc	fsr2h,f,c
 10277   0039B8  50DE               	movf	postinc2,w,c
 10278   0039BA  10DE               	iorwf	postinc2,w,c
 10279   0039BC  B4D8               	btfsc	status,2,c
 10280   0039BE  EFE3  F01C         	goto	u2231
 10281   0039C2  EFE5  F01C         	goto	u2230
 10282   0039C6                     u2231:
 10283   0039C6  EF00  F01D         	goto	l3062
 10284   0039CA                     u2230:
 10285   0039CA  EE20 F009          	lfsr	2,9
 10286   0039CE  5003               	movf	fputc@fp^0,w,c
 10287   0039D0  26D9               	addwf	fsr2l,f,c
 10288   0039D2  5004               	movf	(fputc@fp+1)^0,w,c
 10289   0039D4  22DA               	addwfc	fsr2h,f,c
 10290   0039D6  EE10 F003          	lfsr	1,3
 10291   0039DA  5003               	movf	fputc@fp^0,w,c
 10292   0039DC  26E1               	addwf	fsr1l,f,c
 10293   0039DE  5004               	movf	(fputc@fp+1)^0,w,c
 10294   0039E0  22E2               	addwfc	fsr1h,f,c
 10295   0039E2  50DE               	movf	postinc2,w,c
 10296   0039E4  5CE6               	subwf	postinc1,w,c
 10297   0039E6  50E6               	movf	postinc1,w,c
 10298   0039E8  0A80               	xorlw	128
 10299   0039EA  6E09               	movwf	(??_fputc+4)^0,c
 10300   0039EC  50DE               	movf	postinc2,w,c
 10301   0039EE  0A80               	xorlw	128
 10302   0039F0  5809               	subwfb	(??_fputc+4)^0,w,c
 10303   0039F2  B0D8               	btfsc	status,0,c
 10304   0039F4  EFFE  F01C         	goto	u2241
 10305   0039F8  EF00  F01D         	goto	u2240
 10306   0039FC                     u2241:
 10307   0039FC  EF23  F01D         	goto	l1418
 10308   003A00                     u2240:
 10309   003A00                     l3062:
 10310   003A00  EE20 F003          	lfsr	2,3
 10311   003A04  5003               	movf	fputc@fp^0,w,c
 10312   003A06  26D9               	addwf	fsr2l,f,c
 10313   003A08  5004               	movf	(fputc@fp+1)^0,w,c
 10314   003A0A  22DA               	addwfc	fsr2h,f,c
 10315   003A0C  CFDE F005          	movff	postinc2,??_fputc
 10316   003A10  CFDD F006          	movff	postdec2,??_fputc+1
 10317   003A14  C003  FFD9         	movff	fputc@fp,fsr2l
 10318   003A18  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10319   003A1C  CFDE F007          	movff	postinc2,??_fputc+2
 10320   003A20  CFDD F008          	movff	postdec2,??_fputc+3
 10321   003A24  5005               	movf	??_fputc^0,w,c
 10322   003A26  2407               	addwf	(??_fputc+2)^0,w,c
 10323   003A28  6ED9               	movwf	fsr2l,c
 10324   003A2A  5006               	movf	(??_fputc+1)^0,w,c
 10325   003A2C  2008               	addwfc	(??_fputc+3)^0,w,c
 10326   003A2E  6EDA               	movwf	fsr2h,c
 10327   003A30  C001  FFDF         	movff	fputc@c,indf2
 10328   003A34  EE20 F003          	lfsr	2,3
 10329   003A38  5003               	movf	fputc@fp^0,w,c
 10330   003A3A  26D9               	addwf	fsr2l,f,c
 10331   003A3C  5004               	movf	(fputc@fp+1)^0,w,c
 10332   003A3E  22DA               	addwfc	fsr2h,f,c
 10333   003A40  2ADE               	incf	postinc2,f,c
 10334   003A42  0E00               	movlw	0
 10335   003A44  22DD               	addwfc	postdec2,f,c
 10336   003A46                     l1418:
 10337   003A46  0012               	return		;funcret
 10338   003A48                     __end_of_fputc:
 10339                           	callstack 0
 10340                           
 10341 ;; *************** function _putch *****************
 10342 ;; Defined at:
 10343 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;  c               1    wreg     unsigned char 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  c               1    0[COMRAM] unsigned char 
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used: 1
 10363 ;; Hardware stack levels required when called: 1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_fputc
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text59
 10372   004928                     __ptext59:
 10373                           	callstack 0
 10374   004928                     _putch:
 10375                           	callstack 23
 10376   004928  0012               	return		;funcret
 10377   00492A                     __end_of_putch:
 10378                           	callstack 0
 10379                           
 10380 ;; *************** function _sendStringSerial4 *****************
 10381 ;; Defined at:
 10382 ;;		line 48 in file "serial.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  string          2    1[COMRAM] PTR unsigned char 
 10385 ;;		 -> main@data(100), 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10401 ;;Total ram usage:        2 bytes
 10402 ;; Hardware stack levels used: 1
 10403 ;; Hardware stack levels required when called: 2
 10404 ;; This function calls:
 10405 ;;		_sendCharSerial4
 10406 ;; This function is called by:
 10407 ;;		_Color2String
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text60
 10412   00473A                     __ptext60:
 10413                           	callstack 0
 10414   00473A                     _sendStringSerial4:
 10415                           	callstack 27
 10416   00473A                     
 10417                           ;serial.c: 51:     while(*string != 0){
 10418   00473A  EFAC  F023         	goto	l4034
 10419   00473E                     l4028:
 10420                           
 10421                           ;serial.c: 53:   sendCharSerial4(*string++);
 10422   00473E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10423   004742  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10424   004746  50DF               	movf	indf2,w,c
 10425   004748  EC5F  F024         	call	_sendCharSerial4
 10426   00474C  4A02               	infsnz	sendStringSerial4@string^0,f,c
 10427   00474E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 10428   004750                     
 10429                           ;serial.c: 54:         _delay((unsigned long)((20)*(64000000/4000000.0)));
 10430   004750  0E6A               	movlw	106
 10431   004752                     u4447:
 10432   004752  2EE8               	decfsz	wreg,f,c
 10433   004754  D7FE               	bra	u4447
 10434   004756  D000               	nop2	
 10435   004758                     l4034:
 10436                           
 10437                           ;serial.c: 51:     while(*string != 0){
 10438   004758  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 10439   00475C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10440   004760  50DF               	movf	indf2,w,c
 10441   004762  A4D8               	btfss	status,2,c
 10442   004764  EFB6  F023         	goto	u3661
 10443   004768  EFB8  F023         	goto	u3660
 10444   00476C                     u3661:
 10445   00476C  EF9F  F023         	goto	l4028
 10446   004770                     u3660:
 10447   004770  0012               	return		;funcret
 10448   004772                     __end_of_sendStringSerial4:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _sendCharSerial4 *****************
 10452 ;; Defined at:
 10453 ;;		line 34 in file "serial.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  charToSend      1    wreg     unsigned char 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  charToSend      1    0[COMRAM] unsigned char 
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		wreg
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;Total ram usage:        1 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; Hardware stack levels required when called: 1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_sendStringSerial4
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text61
 10482   0048BE                     __ptext61:
 10483                           	callstack 0
 10484   0048BE                     _sendCharSerial4:
 10485                           	callstack 27
 10486                           
 10487                           ;incstack = 0
 10488                           ;sendCharSerial4@charToSend stored from wreg
 10489   0048BE  6E01               	movwf	sendCharSerial4@charToSend^0,c
 10490   0048C0                     l337:
 10491   0048C0  010E               	movlb	14	; () banked
 10492   0048C2  A537               	btfss	55,2,b	;volatile
 10493   0048C4  EF66  F024         	goto	u2931
 10494   0048C8  EF68  F024         	goto	u2930
 10495   0048CC                     u2931:
 10496   0048CC  EF60  F024         	goto	l337
 10497   0048D0                     u2930:
 10498   0048D0                     
 10499                           ; BSR set to: 14
 10500                           ;serial.c: 36:     TX4REG = charToSend;
 10501   0048D0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10502   0048D4                     
 10503                           ; BSR set to: 14
 10504   0048D4  0012               	return		;funcret
 10505   0048D6                     __end_of_sendCharSerial4:
 10506                           	callstack 0
 10507                           
 10508 ;; *************** function _Hue2Colour *****************
 10509 ;; Defined at:
 10510 ;;		line 56 in file "colorfunctions.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  cf              2   12[COMRAM] PTR struct RGBC_rel
 10513 ;;		 -> colorf(22), 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;  colourname      2   14[COMRAM] PTR unsigned char 
 10516 ;;		 -> STR_9(9), STR_8(11), STR_7(7), STR_6(5), 
 10517 ;;		 -> STR_5(7), STR_4(10), STR_3(6), STR_2(4), 
 10518 ;;		 -> STR_1(1), 
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  2   12[COMRAM] PTR unsigned char 
 10521 ;; Registers used:
 10522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;Total ram usage:        4 bytes
 10533 ;; Hardware stack levels used: 1
 10534 ;; Hardware stack levels required when called: 2
 10535 ;; This function calls:
 10536 ;;		___flge
 10537 ;; This function is called by:
 10538 ;;		_main
 10539 ;;		_Color2String
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text62
 10544   00157E                     __ptext62:
 10545                           	callstack 0
 10546   00157E                     _Hue2Colour:
 10547                           	callstack 28
 10548   00157E                     
 10549                           ;colorfunctions.c: 56: char* Hue2Colour(struct RGBC_rel *cf);colorfunctions.c: 57: {;col
      +                          orfunctions.c: 58:     char* colourname = "";
 10550   00157E  0E10               	movlw	low (STR_10+15)
 10551   001580  6E0F               	movwf	Hue2Colour@colourname^0,c
 10552   001582  0E0E               	movlw	high (STR_10+15)
 10553   001584  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10554   001586                     
 10555                           ;colorfunctions.c: 59:     if (((cf->h)>350)&&((cf->h)<360))
 10556   001586  0E00               	movlw	0
 10557   001588  6E01               	movwf	___flge@ff1^0,c
 10558   00158A  0E00               	movlw	0
 10559   00158C  6E02               	movwf	(___flge@ff1+1)^0,c
 10560   00158E  0EAF               	movlw	175
 10561   001590  6E03               	movwf	(___flge@ff1+2)^0,c
 10562   001592  0E43               	movlw	67
 10563   001594  6E04               	movwf	(___flge@ff1+3)^0,c
 10564   001596  EE20 F010          	lfsr	2,16
 10565   00159A  500D               	movf	Hue2Colour@cf^0,w,c
 10566   00159C  26D9               	addwf	fsr2l,f,c
 10567   00159E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10568   0015A0  22DA               	addwfc	fsr2h,f,c
 10569   0015A2  CFDE F005          	movff	postinc2,___flge@ff2
 10570   0015A6  CFDE F006          	movff	postinc2,___flge@ff2+1
 10571   0015AA  CFDE F007          	movff	postinc2,___flge@ff2+2
 10572   0015AE  CFDE F008          	movff	postinc2,___flge@ff2+3
 10573   0015B2  ECE6  F01A         	call	___flge	;wreg free
 10574   0015B6  B0D8               	btfsc	status,0,c
 10575   0015B8  EFE0  F00A         	goto	u3391
 10576   0015BC  EFE2  F00A         	goto	u3390
 10577   0015C0                     u3391:
 10578   0015C0  EF0F  F00B         	goto	l3878
 10579   0015C4                     u3390:
 10580   0015C4  EE20 F010          	lfsr	2,16
 10581   0015C8  500D               	movf	Hue2Colour@cf^0,w,c
 10582   0015CA  26D9               	addwf	fsr2l,f,c
 10583   0015CC  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10584   0015CE  22DA               	addwfc	fsr2h,f,c
 10585   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
 10586   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10587   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10588   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10589   0015E0  0E00               	movlw	0
 10590   0015E2  6E05               	movwf	___flge@ff2^0,c
 10591   0015E4  0E00               	movlw	0
 10592   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
 10593   0015E8  0EB4               	movlw	180
 10594   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
 10595   0015EC  0E43               	movlw	67
 10596   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
 10597   0015F0  ECE6  F01A         	call	___flge	;wreg free
 10598   0015F4  B0D8               	btfsc	status,0,c
 10599   0015F6  EFFF  F00A         	goto	u3401
 10600   0015FA  EF01  F00B         	goto	u3400
 10601   0015FE                     u3401:
 10602   0015FE  EF0F  F00B         	goto	l3878
 10603   001602                     u3400:
 10604   001602                     
 10605                           ;colorfunctions.c: 60:     {;colorfunctions.c: 62:         colourname = "Red";
 10606   001602  0E4C               	movlw	low STR_2
 10607   001604  6E0F               	movwf	Hue2Colour@colourname^0,c
 10608   001606  0E0E               	movlw	high STR_2
 10609   001608  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10610   00160A                     
 10611                           ;colorfunctions.c: 65:         cf->colourindex=0;
 10612   00160A  EE20 F014          	lfsr	2,20
 10613   00160E  500D               	movf	Hue2Colour@cf^0,w,c
 10614   001610  26D9               	addwf	fsr2l,f,c
 10615   001612  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10616   001614  22DA               	addwfc	fsr2h,f,c
 10617   001616  0E00               	movlw	0
 10618   001618  6EDE               	movwf	postinc2,c
 10619   00161A  0E00               	movlw	0
 10620   00161C  6EDD               	movwf	postdec2,c
 10621   00161E                     l3878:
 10622                           
 10623                           ;colorfunctions.c: 67:      if (((cf->h)>70)&&((cf->h)<79))
 10624   00161E  0E00               	movlw	0
 10625   001620  6E01               	movwf	___flge@ff1^0,c
 10626   001622  0E00               	movlw	0
 10627   001624  6E02               	movwf	(___flge@ff1+1)^0,c
 10628   001626  0E8C               	movlw	140
 10629   001628  6E03               	movwf	(___flge@ff1+2)^0,c
 10630   00162A  0E42               	movlw	66
 10631   00162C  6E04               	movwf	(___flge@ff1+3)^0,c
 10632   00162E  EE20 F010          	lfsr	2,16
 10633   001632  500D               	movf	Hue2Colour@cf^0,w,c
 10634   001634  26D9               	addwf	fsr2l,f,c
 10635   001636  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10636   001638  22DA               	addwfc	fsr2h,f,c
 10637   00163A  CFDE F005          	movff	postinc2,___flge@ff2
 10638   00163E  CFDE F006          	movff	postinc2,___flge@ff2+1
 10639   001642  CFDE F007          	movff	postinc2,___flge@ff2+2
 10640   001646  CFDE F008          	movff	postinc2,___flge@ff2+3
 10641   00164A  ECE6  F01A         	call	___flge	;wreg free
 10642   00164E  B0D8               	btfsc	status,0,c
 10643   001650  EF2C  F00B         	goto	u3411
 10644   001654  EF2E  F00B         	goto	u3410
 10645   001658                     u3411:
 10646   001658  EF5D  F00B         	goto	l3886
 10647   00165C                     u3410:
 10648   00165C  EE20 F010          	lfsr	2,16
 10649   001660  500D               	movf	Hue2Colour@cf^0,w,c
 10650   001662  26D9               	addwf	fsr2l,f,c
 10651   001664  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10652   001666  22DA               	addwfc	fsr2h,f,c
 10653   001668  CFDE F001          	movff	postinc2,___flge@ff1
 10654   00166C  CFDE F002          	movff	postinc2,___flge@ff1+1
 10655   001670  CFDE F003          	movff	postinc2,___flge@ff1+2
 10656   001674  CFDE F004          	movff	postinc2,___flge@ff1+3
 10657   001678  0E00               	movlw	0
 10658   00167A  6E05               	movwf	___flge@ff2^0,c
 10659   00167C  0E00               	movlw	0
 10660   00167E  6E06               	movwf	(___flge@ff2+1)^0,c
 10661   001680  0E9E               	movlw	158
 10662   001682  6E07               	movwf	(___flge@ff2+2)^0,c
 10663   001684  0E42               	movlw	66
 10664   001686  6E08               	movwf	(___flge@ff2+3)^0,c
 10665   001688  ECE6  F01A         	call	___flge	;wreg free
 10666   00168C  B0D8               	btfsc	status,0,c
 10667   00168E  EF4B  F00B         	goto	u3421
 10668   001692  EF4D  F00B         	goto	u3420
 10669   001696                     u3421:
 10670   001696  EF5D  F00B         	goto	l3886
 10671   00169A                     u3420:
 10672   00169A                     
 10673                           ;colorfunctions.c: 68:     {;colorfunctions.c: 69:         colourname = "Green";
 10674   00169A  0E3D               	movlw	low STR_3
 10675   00169C  6E0F               	movwf	Hue2Colour@colourname^0,c
 10676   00169E  0E0E               	movlw	high STR_3
 10677   0016A0  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10678   0016A2                     
 10679                           ;colorfunctions.c: 70:         cf->colourindex=1;
 10680   0016A2  EE20 F014          	lfsr	2,20
 10681   0016A6  500D               	movf	Hue2Colour@cf^0,w,c
 10682   0016A8  26D9               	addwf	fsr2l,f,c
 10683   0016AA  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10684   0016AC  22DA               	addwfc	fsr2h,f,c
 10685   0016AE  0E01               	movlw	1
 10686   0016B0  6EDE               	movwf	postinc2,c
 10687   0016B2  0E00               	movlw	0
 10688   0016B4  6EDD               	movwf	postdec2,c
 10689                           
 10690                           ;colorfunctions.c: 71:     }
 10691   0016B6  EF31  F00D         	goto	l3934
 10692   0016BA                     l3886:
 10693   0016BA  0E00               	movlw	0
 10694   0016BC  6E01               	movwf	___flge@ff1^0,c
 10695   0016BE  0E00               	movlw	0
 10696   0016C0  6E02               	movwf	(___flge@ff1+1)^0,c
 10697   0016C2  0E11               	movlw	17
 10698   0016C4  6E03               	movwf	(___flge@ff1+2)^0,c
 10699   0016C6  0E43               	movlw	67
 10700   0016C8  6E04               	movwf	(___flge@ff1+3)^0,c
 10701   0016CA  EE20 F010          	lfsr	2,16
 10702   0016CE  500D               	movf	Hue2Colour@cf^0,w,c
 10703   0016D0  26D9               	addwf	fsr2l,f,c
 10704   0016D2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10705   0016D4  22DA               	addwfc	fsr2h,f,c
 10706   0016D6  CFDE F005          	movff	postinc2,___flge@ff2
 10707   0016DA  CFDE F006          	movff	postinc2,___flge@ff2+1
 10708   0016DE  CFDE F007          	movff	postinc2,___flge@ff2+2
 10709   0016E2  CFDE F008          	movff	postinc2,___flge@ff2+3
 10710   0016E6  ECE6  F01A         	call	___flge	;wreg free
 10711   0016EA  B0D8               	btfsc	status,0,c
 10712   0016EC  EF7A  F00B         	goto	u3431
 10713   0016F0  EF7C  F00B         	goto	u3430
 10714   0016F4                     u3431:
 10715   0016F4  EFAB  F00B         	goto	l3894
 10716   0016F8                     u3430:
 10717   0016F8  EE20 F010          	lfsr	2,16
 10718   0016FC  500D               	movf	Hue2Colour@cf^0,w,c
 10719   0016FE  26D9               	addwf	fsr2l,f,c
 10720   001700  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10721   001702  22DA               	addwfc	fsr2h,f,c
 10722   001704  CFDE F001          	movff	postinc2,___flge@ff1
 10723   001708  CFDE F002          	movff	postinc2,___flge@ff1+1
 10724   00170C  CFDE F003          	movff	postinc2,___flge@ff1+2
 10725   001710  CFDE F004          	movff	postinc2,___flge@ff1+3
 10726   001714  0E00               	movlw	0
 10727   001716  6E05               	movwf	___flge@ff2^0,c
 10728   001718  0E00               	movlw	0
 10729   00171A  6E06               	movwf	(___flge@ff2+1)^0,c
 10730   00171C  0E34               	movlw	52
 10731   00171E  6E07               	movwf	(___flge@ff2+2)^0,c
 10732   001720  0E43               	movlw	67
 10733   001722  6E08               	movwf	(___flge@ff2+3)^0,c
 10734   001724  ECE6  F01A         	call	___flge	;wreg free
 10735   001728  B0D8               	btfsc	status,0,c
 10736   00172A  EF99  F00B         	goto	u3441
 10737   00172E  EF9B  F00B         	goto	u3440
 10738   001732                     u3441:
 10739   001732  EFAB  F00B         	goto	l3894
 10740   001736                     u3440:
 10741   001736                     
 10742                           ;colorfunctions.c: 73:     {;colorfunctions.c: 74:         colourname = "Dark Blue";
 10743   001736  0E1C               	movlw	low STR_4
 10744   001738  6E0F               	movwf	Hue2Colour@colourname^0,c
 10745   00173A  0E0E               	movlw	high STR_4
 10746   00173C  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10747   00173E                     
 10748                           ;colorfunctions.c: 75:         cf->colourindex=2;
 10749   00173E  EE20 F014          	lfsr	2,20
 10750   001742  500D               	movf	Hue2Colour@cf^0,w,c
 10751   001744  26D9               	addwf	fsr2l,f,c
 10752   001746  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10753   001748  22DA               	addwfc	fsr2h,f,c
 10754   00174A  0E02               	movlw	2
 10755   00174C  6EDE               	movwf	postinc2,c
 10756   00174E  0E00               	movlw	0
 10757   001750  6EDD               	movwf	postdec2,c
 10758                           
 10759                           ;colorfunctions.c: 76:     }
 10760   001752  EF31  F00D         	goto	l3934
 10761   001756                     l3894:
 10762   001756  0E00               	movlw	0
 10763   001758  6E01               	movwf	___flge@ff1^0,c
 10764   00175A  0E00               	movlw	0
 10765   00175C  6E02               	movwf	(___flge@ff1+1)^0,c
 10766   00175E  0EA8               	movlw	168
 10767   001760  6E03               	movwf	(___flge@ff1+2)^0,c
 10768   001762  0E41               	movlw	65
 10769   001764  6E04               	movwf	(___flge@ff1+3)^0,c
 10770   001766  EE20 F010          	lfsr	2,16
 10771   00176A  500D               	movf	Hue2Colour@cf^0,w,c
 10772   00176C  26D9               	addwf	fsr2l,f,c
 10773   00176E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10774   001770  22DA               	addwfc	fsr2h,f,c
 10775   001772  CFDE F005          	movff	postinc2,___flge@ff2
 10776   001776  CFDE F006          	movff	postinc2,___flge@ff2+1
 10777   00177A  CFDE F007          	movff	postinc2,___flge@ff2+2
 10778   00177E  CFDE F008          	movff	postinc2,___flge@ff2+3
 10779   001782  ECE6  F01A         	call	___flge	;wreg free
 10780   001786  B0D8               	btfsc	status,0,c
 10781   001788  EFC8  F00B         	goto	u3451
 10782   00178C  EFCA  F00B         	goto	u3450
 10783   001790                     u3451:
 10784   001790  EFF9  F00B         	goto	l3902
 10785   001794                     u3450:
 10786   001794  EE20 F010          	lfsr	2,16
 10787   001798  500D               	movf	Hue2Colour@cf^0,w,c
 10788   00179A  26D9               	addwf	fsr2l,f,c
 10789   00179C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10790   00179E  22DA               	addwfc	fsr2h,f,c
 10791   0017A0  CFDE F001          	movff	postinc2,___flge@ff1
 10792   0017A4  CFDE F002          	movff	postinc2,___flge@ff1+1
 10793   0017A8  CFDE F003          	movff	postinc2,___flge@ff1+2
 10794   0017AC  CFDE F004          	movff	postinc2,___flge@ff1+3
 10795   0017B0  0E00               	movlw	0
 10796   0017B2  6E05               	movwf	___flge@ff2^0,c
 10797   0017B4  0E00               	movlw	0
 10798   0017B6  6E06               	movwf	(___flge@ff2+1)^0,c
 10799   0017B8  0EC8               	movlw	200
 10800   0017BA  6E07               	movwf	(___flge@ff2+2)^0,c
 10801   0017BC  0E41               	movlw	65
 10802   0017BE  6E08               	movwf	(___flge@ff2+3)^0,c
 10803   0017C0  ECE6  F01A         	call	___flge	;wreg free
 10804   0017C4  B0D8               	btfsc	status,0,c
 10805   0017C6  EFE7  F00B         	goto	u3461
 10806   0017CA  EFE9  F00B         	goto	u3460
 10807   0017CE                     u3461:
 10808   0017CE  EFF9  F00B         	goto	l3902
 10809   0017D2                     u3460:
 10810   0017D2                     
 10811                           ;colorfunctions.c: 78:     {;colorfunctions.c: 79:         colourname = "Yellow";
 10812   0017D2  0E36               	movlw	low STR_5
 10813   0017D4  6E0F               	movwf	Hue2Colour@colourname^0,c
 10814   0017D6  0E0E               	movlw	high STR_5
 10815   0017D8  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10816   0017DA                     
 10817                           ;colorfunctions.c: 80:         cf->colourindex=3;
 10818   0017DA  EE20 F014          	lfsr	2,20
 10819   0017DE  500D               	movf	Hue2Colour@cf^0,w,c
 10820   0017E0  26D9               	addwf	fsr2l,f,c
 10821   0017E2  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10822   0017E4  22DA               	addwfc	fsr2h,f,c
 10823   0017E6  0E03               	movlw	3
 10824   0017E8  6EDE               	movwf	postinc2,c
 10825   0017EA  0E00               	movlw	0
 10826   0017EC  6EDD               	movwf	postdec2,c
 10827                           
 10828                           ;colorfunctions.c: 81:     }
 10829   0017EE  EF31  F00D         	goto	l3934
 10830   0017F2                     l3902:
 10831   0017F2  0E00               	movlw	0
 10832   0017F4  6E01               	movwf	___flge@ff1^0,c
 10833   0017F6  0E00               	movlw	0
 10834   0017F8  6E02               	movwf	(___flge@ff1+1)^0,c
 10835   0017FA  0E70               	movlw	112
 10836   0017FC  6E03               	movwf	(___flge@ff1+2)^0,c
 10837   0017FE  0E41               	movlw	65
 10838   001800  6E04               	movwf	(___flge@ff1+3)^0,c
 10839   001802  EE20 F010          	lfsr	2,16
 10840   001806  500D               	movf	Hue2Colour@cf^0,w,c
 10841   001808  26D9               	addwf	fsr2l,f,c
 10842   00180A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10843   00180C  22DA               	addwfc	fsr2h,f,c
 10844   00180E  CFDE F005          	movff	postinc2,___flge@ff2
 10845   001812  CFDE F006          	movff	postinc2,___flge@ff2+1
 10846   001816  CFDE F007          	movff	postinc2,___flge@ff2+2
 10847   00181A  CFDE F008          	movff	postinc2,___flge@ff2+3
 10848   00181E  ECE6  F01A         	call	___flge	;wreg free
 10849   001822  B0D8               	btfsc	status,0,c
 10850   001824  EF16  F00C         	goto	u3471
 10851   001828  EF18  F00C         	goto	u3470
 10852   00182C                     u3471:
 10853   00182C  EF47  F00C         	goto	l3910
 10854   001830                     u3470:
 10855   001830  EE20 F010          	lfsr	2,16
 10856   001834  500D               	movf	Hue2Colour@cf^0,w,c
 10857   001836  26D9               	addwf	fsr2l,f,c
 10858   001838  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10859   00183A  22DA               	addwfc	fsr2h,f,c
 10860   00183C  CFDE F001          	movff	postinc2,___flge@ff1
 10861   001840  CFDE F002          	movff	postinc2,___flge@ff1+1
 10862   001844  CFDE F003          	movff	postinc2,___flge@ff1+2
 10863   001848  CFDE F004          	movff	postinc2,___flge@ff1+3
 10864   00184C  0E00               	movlw	0
 10865   00184E  6E05               	movwf	___flge@ff2^0,c
 10866   001850  0E00               	movlw	0
 10867   001852  6E06               	movwf	(___flge@ff2+1)^0,c
 10868   001854  0E98               	movlw	152
 10869   001856  6E07               	movwf	(___flge@ff2+2)^0,c
 10870   001858  0E41               	movlw	65
 10871   00185A  6E08               	movwf	(___flge@ff2+3)^0,c
 10872   00185C  ECE6  F01A         	call	___flge	;wreg free
 10873   001860  B0D8               	btfsc	status,0,c
 10874   001862  EF35  F00C         	goto	u3481
 10875   001866  EF37  F00C         	goto	u3480
 10876   00186A                     u3481:
 10877   00186A  EF47  F00C         	goto	l3910
 10878   00186E                     u3480:
 10879   00186E                     
 10880                           ;colorfunctions.c: 83:     {;colorfunctions.c: 84:         colourname = "Pink";
 10881   00186E  0E43               	movlw	low STR_6
 10882   001870  6E0F               	movwf	Hue2Colour@colourname^0,c
 10883   001872  0E0E               	movlw	high STR_6
 10884   001874  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10885   001876                     
 10886                           ;colorfunctions.c: 85:         cf->colourindex=4;
 10887   001876  EE20 F014          	lfsr	2,20
 10888   00187A  500D               	movf	Hue2Colour@cf^0,w,c
 10889   00187C  26D9               	addwf	fsr2l,f,c
 10890   00187E  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10891   001880  22DA               	addwfc	fsr2h,f,c
 10892   001882  0E04               	movlw	4
 10893   001884  6EDE               	movwf	postinc2,c
 10894   001886  0E00               	movlw	0
 10895   001888  6EDD               	movwf	postdec2,c
 10896                           
 10897                           ;colorfunctions.c: 86:     }
 10898   00188A  EF31  F00D         	goto	l3934
 10899   00188E                     l3910:
 10900   00188E  0E00               	movlw	0
 10901   001890  6E01               	movwf	___flge@ff1^0,c
 10902   001892  0E00               	movlw	0
 10903   001894  6E02               	movwf	(___flge@ff1+1)^0,c
 10904   001896  0E40               	movlw	64
 10905   001898  6E03               	movwf	(___flge@ff1+2)^0,c
 10906   00189A  0E40               	movlw	64
 10907   00189C  6E04               	movwf	(___flge@ff1+3)^0,c
 10908   00189E  EE20 F010          	lfsr	2,16
 10909   0018A2  500D               	movf	Hue2Colour@cf^0,w,c
 10910   0018A4  26D9               	addwf	fsr2l,f,c
 10911   0018A6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10912   0018A8  22DA               	addwfc	fsr2h,f,c
 10913   0018AA  CFDE F005          	movff	postinc2,___flge@ff2
 10914   0018AE  CFDE F006          	movff	postinc2,___flge@ff2+1
 10915   0018B2  CFDE F007          	movff	postinc2,___flge@ff2+2
 10916   0018B6  CFDE F008          	movff	postinc2,___flge@ff2+3
 10917   0018BA  ECE6  F01A         	call	___flge	;wreg free
 10918   0018BE  B0D8               	btfsc	status,0,c
 10919   0018C0  EF64  F00C         	goto	u3491
 10920   0018C4  EF66  F00C         	goto	u3490
 10921   0018C8                     u3491:
 10922   0018C8  EF95  F00C         	goto	l3918
 10923   0018CC                     u3490:
 10924   0018CC  EE20 F010          	lfsr	2,16
 10925   0018D0  500D               	movf	Hue2Colour@cf^0,w,c
 10926   0018D2  26D9               	addwf	fsr2l,f,c
 10927   0018D4  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10928   0018D6  22DA               	addwfc	fsr2h,f,c
 10929   0018D8  CFDE F001          	movff	postinc2,___flge@ff1
 10930   0018DC  CFDE F002          	movff	postinc2,___flge@ff1+1
 10931   0018E0  CFDE F003          	movff	postinc2,___flge@ff1+2
 10932   0018E4  CFDE F004          	movff	postinc2,___flge@ff1+3
 10933   0018E8  0E00               	movlw	0
 10934   0018EA  6E05               	movwf	___flge@ff2^0,c
 10935   0018EC  0E00               	movlw	0
 10936   0018EE  6E06               	movwf	(___flge@ff2+1)^0,c
 10937   0018F0  0E30               	movlw	48
 10938   0018F2  6E07               	movwf	(___flge@ff2+2)^0,c
 10939   0018F4  0E41               	movlw	65
 10940   0018F6  6E08               	movwf	(___flge@ff2+3)^0,c
 10941   0018F8  ECE6  F01A         	call	___flge	;wreg free
 10942   0018FC  B0D8               	btfsc	status,0,c
 10943   0018FE  EF83  F00C         	goto	u3501
 10944   001902  EF85  F00C         	goto	u3500
 10945   001906                     u3501:
 10946   001906  EF95  F00C         	goto	l3918
 10947   00190A                     u3500:
 10948   00190A                     
 10949                           ;colorfunctions.c: 88:     {;colorfunctions.c: 89:         colourname = "Orange";
 10950   00190A  0E2F               	movlw	low STR_7
 10951   00190C  6E0F               	movwf	Hue2Colour@colourname^0,c
 10952   00190E  0E0E               	movlw	high STR_7
 10953   001910  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 10954   001912                     
 10955                           ;colorfunctions.c: 90:         cf->colourindex=5;
 10956   001912  EE20 F014          	lfsr	2,20
 10957   001916  500D               	movf	Hue2Colour@cf^0,w,c
 10958   001918  26D9               	addwf	fsr2l,f,c
 10959   00191A  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10960   00191C  22DA               	addwfc	fsr2h,f,c
 10961   00191E  0E05               	movlw	5
 10962   001920  6EDE               	movwf	postinc2,c
 10963   001922  0E00               	movlw	0
 10964   001924  6EDD               	movwf	postdec2,c
 10965                           
 10966                           ;colorfunctions.c: 91:     }
 10967   001926  EF31  F00D         	goto	l3934
 10968   00192A                     l3918:
 10969   00192A  0E00               	movlw	0
 10970   00192C  6E01               	movwf	___flge@ff1^0,c
 10971   00192E  0E00               	movlw	0
 10972   001930  6E02               	movwf	(___flge@ff1+1)^0,c
 10973   001932  0EAA               	movlw	170
 10974   001934  6E03               	movwf	(___flge@ff1+2)^0,c
 10975   001936  0E42               	movlw	66
 10976   001938  6E04               	movwf	(___flge@ff1+3)^0,c
 10977   00193A  EE20 F010          	lfsr	2,16
 10978   00193E  500D               	movf	Hue2Colour@cf^0,w,c
 10979   001940  26D9               	addwf	fsr2l,f,c
 10980   001942  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10981   001944  22DA               	addwfc	fsr2h,f,c
 10982   001946  CFDE F005          	movff	postinc2,___flge@ff2
 10983   00194A  CFDE F006          	movff	postinc2,___flge@ff2+1
 10984   00194E  CFDE F007          	movff	postinc2,___flge@ff2+2
 10985   001952  CFDE F008          	movff	postinc2,___flge@ff2+3
 10986   001956  ECE6  F01A         	call	___flge	;wreg free
 10987   00195A  B0D8               	btfsc	status,0,c
 10988   00195C  EFB2  F00C         	goto	u3511
 10989   001960  EFB4  F00C         	goto	u3510
 10990   001964                     u3511:
 10991   001964  EFE3  F00C         	goto	l3926
 10992   001968                     u3510:
 10993   001968  EE20 F010          	lfsr	2,16
 10994   00196C  500D               	movf	Hue2Colour@cf^0,w,c
 10995   00196E  26D9               	addwf	fsr2l,f,c
 10996   001970  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 10997   001972  22DA               	addwfc	fsr2h,f,c
 10998   001974  CFDE F001          	movff	postinc2,___flge@ff1
 10999   001978  CFDE F002          	movff	postinc2,___flge@ff1+1
 11000   00197C  CFDE F003          	movff	postinc2,___flge@ff1+2
 11001   001980  CFDE F004          	movff	postinc2,___flge@ff1+3
 11002   001984  0E00               	movlw	0
 11003   001986  6E05               	movwf	___flge@ff2^0,c
 11004   001988  0E00               	movlw	0
 11005   00198A  6E06               	movwf	(___flge@ff2+1)^0,c
 11006   00198C  0ED2               	movlw	210
 11007   00198E  6E07               	movwf	(___flge@ff2+2)^0,c
 11008   001990  0E42               	movlw	66
 11009   001992  6E08               	movwf	(___flge@ff2+3)^0,c
 11010   001994  ECE6  F01A         	call	___flge	;wreg free
 11011   001998  B0D8               	btfsc	status,0,c
 11012   00199A  EFD1  F00C         	goto	u3521
 11013   00199E  EFD3  F00C         	goto	u3520
 11014   0019A2                     u3521:
 11015   0019A2  EFE3  F00C         	goto	l3926
 11016   0019A6                     u3520:
 11017   0019A6                     
 11018                           ;colorfunctions.c: 93:     {;colorfunctions.c: 94:         colourname = "Light Blue";
 11019   0019A6  0E11               	movlw	low STR_8
 11020   0019A8  6E0F               	movwf	Hue2Colour@colourname^0,c
 11021   0019AA  0E0E               	movlw	high STR_8
 11022   0019AC  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11023   0019AE                     
 11024                           ;colorfunctions.c: 95:         cf->colourindex=6;
 11025   0019AE  EE20 F014          	lfsr	2,20
 11026   0019B2  500D               	movf	Hue2Colour@cf^0,w,c
 11027   0019B4  26D9               	addwf	fsr2l,f,c
 11028   0019B6  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11029   0019B8  22DA               	addwfc	fsr2h,f,c
 11030   0019BA  0E06               	movlw	6
 11031   0019BC  6EDE               	movwf	postinc2,c
 11032   0019BE  0E00               	movlw	0
 11033   0019C0  6EDD               	movwf	postdec2,c
 11034                           
 11035                           ;colorfunctions.c: 96:     }
 11036   0019C2  EF31  F00D         	goto	l3934
 11037   0019C6                     l3926:
 11038   0019C6  0E00               	movlw	0
 11039   0019C8  6E01               	movwf	___flge@ff1^0,c
 11040   0019CA  0E00               	movlw	0
 11041   0019CC  6E02               	movwf	(___flge@ff1+1)^0,c
 11042   0019CE  0EC8               	movlw	200
 11043   0019D0  6E03               	movwf	(___flge@ff1+2)^0,c
 11044   0019D2  0E41               	movlw	65
 11045   0019D4  6E04               	movwf	(___flge@ff1+3)^0,c
 11046   0019D6  EE20 F010          	lfsr	2,16
 11047   0019DA  500D               	movf	Hue2Colour@cf^0,w,c
 11048   0019DC  26D9               	addwf	fsr2l,f,c
 11049   0019DE  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11050   0019E0  22DA               	addwfc	fsr2h,f,c
 11051   0019E2  CFDE F005          	movff	postinc2,___flge@ff2
 11052   0019E6  CFDE F006          	movff	postinc2,___flge@ff2+1
 11053   0019EA  CFDE F007          	movff	postinc2,___flge@ff2+2
 11054   0019EE  CFDE F008          	movff	postinc2,___flge@ff2+3
 11055   0019F2  ECE6  F01A         	call	___flge	;wreg free
 11056   0019F6  B0D8               	btfsc	status,0,c
 11057   0019F8  EF00  F00D         	goto	u3531
 11058   0019FC  EF02  F00D         	goto	u3530
 11059   001A00                     u3531:
 11060   001A00  EF31  F00D         	goto	l130
 11061   001A04                     u3530:
 11062   001A04  EE20 F010          	lfsr	2,16
 11063   001A08  500D               	movf	Hue2Colour@cf^0,w,c
 11064   001A0A  26D9               	addwf	fsr2l,f,c
 11065   001A0C  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11066   001A0E  22DA               	addwfc	fsr2h,f,c
 11067   001A10  CFDE F001          	movff	postinc2,___flge@ff1
 11068   001A14  CFDE F002          	movff	postinc2,___flge@ff1+1
 11069   001A18  CFDE F003          	movff	postinc2,___flge@ff1+2
 11070   001A1C  CFDE F004          	movff	postinc2,___flge@ff1+3
 11071   001A20  0E00               	movlw	0
 11072   001A22  6E05               	movwf	___flge@ff2^0,c
 11073   001A24  0E00               	movlw	0
 11074   001A26  6E06               	movwf	(___flge@ff2+1)^0,c
 11075   001A28  0E04               	movlw	4
 11076   001A2A  6E07               	movwf	(___flge@ff2+2)^0,c
 11077   001A2C  0E42               	movlw	66
 11078   001A2E  6E08               	movwf	(___flge@ff2+3)^0,c
 11079   001A30  ECE6  F01A         	call	___flge	;wreg free
 11080   001A34  B0D8               	btfsc	status,0,c
 11081   001A36  EF1F  F00D         	goto	u3541
 11082   001A3A  EF21  F00D         	goto	u3540
 11083   001A3E                     u3541:
 11084   001A3E  EF31  F00D         	goto	l130
 11085   001A42                     u3540:
 11086   001A42                     
 11087                           ;colorfunctions.c: 98:     {;colorfunctions.c: 99:         colourname = "Eggshell";
 11088   001A42  0E26               	movlw	low STR_9
 11089   001A44  6E0F               	movwf	Hue2Colour@colourname^0,c
 11090   001A46  0E0E               	movlw	high STR_9
 11091   001A48  6E10               	movwf	(Hue2Colour@colourname+1)^0,c
 11092   001A4A                     
 11093                           ;colorfunctions.c: 100:         cf->colourindex=7;
 11094   001A4A  EE20 F014          	lfsr	2,20
 11095   001A4E  500D               	movf	Hue2Colour@cf^0,w,c
 11096   001A50  26D9               	addwf	fsr2l,f,c
 11097   001A52  500E               	movf	(Hue2Colour@cf+1)^0,w,c
 11098   001A54  22DA               	addwfc	fsr2h,f,c
 11099   001A56  0E07               	movlw	7
 11100   001A58  6EDE               	movwf	postinc2,c
 11101   001A5A  0E00               	movlw	0
 11102   001A5C  6EDD               	movwf	postdec2,c
 11103   001A5E  EF31  F00D         	goto	l3934
 11104   001A62                     l130:
 11105   001A62                     l3934:
 11106                           
 11107                           ;colorfunctions.c: 102:     return colourname;
 11108   001A62  C00F  F00D         	movff	Hue2Colour@colourname,?_Hue2Colour
 11109   001A66  C010  F00E         	movff	Hue2Colour@colourname+1,?_Hue2Colour+1
 11110   001A6A  0012               	return		;funcret
 11111   001A6C                     __end_of_Hue2Colour:
 11112                           	callstack 0
 11113                           
 11114 ;; *************** function ___flge *****************
 11115 ;; Defined at:
 11116 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  ff1             4    0[COMRAM] PTR unsigned char 
 11119 ;;  ff2             4    4[COMRAM] PTR unsigned char 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;		None
 11122 ;; Return value:  Size  Location     Type
 11123 ;;		None               void
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11131 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11134 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11135 ;;Total ram usage:       12 bytes
 11136 ;; Hardware stack levels used: 1
 11137 ;; Hardware stack levels required when called: 1
 11138 ;; This function calls:
 11139 ;;		Nothing
 11140 ;; This function is called by:
 11141 ;;		_RGB2Hue
 11142 ;;		_Hue2Colour
 11143 ;;		_main
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text63
 11148   0035CC                     __ptext63:
 11149                           	callstack 0
 11150   0035CC                     ___flge:
 11151                           	callstack 29
 11152   0035CC  0E00               	movlw	0
 11153   0035CE  1401               	andwf	___flge@ff1^0,w,c
 11154   0035D0  6E09               	movwf	??___flge^0,c
 11155   0035D2  0E00               	movlw	0
 11156   0035D4  1402               	andwf	(___flge@ff1+1)^0,w,c
 11157   0035D6  6E0A               	movwf	(??___flge+1)^0,c
 11158   0035D8  0E80               	movlw	128
 11159   0035DA  1403               	andwf	(___flge@ff1+2)^0,w,c
 11160   0035DC  6E0B               	movwf	(??___flge+2)^0,c
 11161   0035DE  0E7F               	movlw	127
 11162   0035E0  1404               	andwf	(___flge@ff1+3)^0,w,c
 11163   0035E2  6E0C               	movwf	(??___flge+3)^0,c
 11164   0035E4  5009               	movf	??___flge^0,w,c
 11165   0035E6  100A               	iorwf	(??___flge+1)^0,w,c
 11166   0035E8  100B               	iorwf	(??___flge+2)^0,w,c
 11167   0035EA  100C               	iorwf	(??___flge+3)^0,w,c
 11168   0035EC  A4D8               	btfss	status,2,c
 11169   0035EE  EFFB  F01A         	goto	u3331
 11170   0035F2  EFFD  F01A         	goto	u3330
 11171   0035F6                     u3331:
 11172   0035F6  EF05  F01B         	goto	l3802
 11173   0035FA                     u3330:
 11174   0035FA  0E00               	movlw	0
 11175   0035FC  6E01               	movwf	___flge@ff1^0,c
 11176   0035FE  0E00               	movlw	0
 11177   003600  6E02               	movwf	(___flge@ff1+1)^0,c
 11178   003602  0E00               	movlw	0
 11179   003604  6E03               	movwf	(___flge@ff1+2)^0,c
 11180   003606  0E00               	movlw	0
 11181   003608  6E04               	movwf	(___flge@ff1+3)^0,c
 11182   00360A                     l3802:
 11183   00360A  0E00               	movlw	0
 11184   00360C  1405               	andwf	___flge@ff2^0,w,c
 11185   00360E  6E09               	movwf	??___flge^0,c
 11186   003610  0E00               	movlw	0
 11187   003612  1406               	andwf	(___flge@ff2+1)^0,w,c
 11188   003614  6E0A               	movwf	(??___flge+1)^0,c
 11189   003616  0E80               	movlw	128
 11190   003618  1407               	andwf	(___flge@ff2+2)^0,w,c
 11191   00361A  6E0B               	movwf	(??___flge+2)^0,c
 11192   00361C  0E7F               	movlw	127
 11193   00361E  1408               	andwf	(___flge@ff2+3)^0,w,c
 11194   003620  6E0C               	movwf	(??___flge+3)^0,c
 11195   003622  5009               	movf	??___flge^0,w,c
 11196   003624  100A               	iorwf	(??___flge+1)^0,w,c
 11197   003626  100B               	iorwf	(??___flge+2)^0,w,c
 11198   003628  100C               	iorwf	(??___flge+3)^0,w,c
 11199   00362A  A4D8               	btfss	status,2,c
 11200   00362C  EF1A  F01B         	goto	u3341
 11201   003630  EF1C  F01B         	goto	u3340
 11202   003634                     u3341:
 11203   003634  EF24  F01B         	goto	l3806
 11204   003638                     u3340:
 11205   003638  0E00               	movlw	0
 11206   00363A  6E05               	movwf	___flge@ff2^0,c
 11207   00363C  0E00               	movlw	0
 11208   00363E  6E06               	movwf	(___flge@ff2+1)^0,c
 11209   003640  0E00               	movlw	0
 11210   003642  6E07               	movwf	(___flge@ff2+2)^0,c
 11211   003644  0E00               	movlw	0
 11212   003646  6E08               	movwf	(___flge@ff2+3)^0,c
 11213   003648                     l3806:
 11214   003648  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11215   00364A  EF29  F01B         	goto	u3351
 11216   00364E  EF2B  F01B         	goto	u3350
 11217   003652                     u3351:
 11218   003652  EF34  F01B         	goto	l3810
 11219   003656                     u3350:
 11220   003656  6C01               	negf	___flge@ff1^0,c
 11221   003658  1E02               	comf	(___flge@ff1+1)^0,f,c
 11222   00365A  B0D8               	btfsc	status,0,c
 11223   00365C  2A02               	incf	(___flge@ff1+1)^0,f,c
 11224   00365E  1E03               	comf	(___flge@ff1+2)^0,f,c
 11225   003660  B0D8               	btfsc	status,0,c
 11226   003662  2A03               	incf	(___flge@ff1+2)^0,f,c
 11227   003664  0E80               	movlw	128
 11228   003666  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11229   003668                     l3810:
 11230   003668  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11231   00366A  EF39  F01B         	goto	u3361
 11232   00366E  EF3B  F01B         	goto	u3360
 11233   003672                     u3361:
 11234   003672  EF44  F01B         	goto	l930
 11235   003676                     u3360:
 11236   003676  6C05               	negf	___flge@ff2^0,c
 11237   003678  1E06               	comf	(___flge@ff2+1)^0,f,c
 11238   00367A  B0D8               	btfsc	status,0,c
 11239   00367C  2A06               	incf	(___flge@ff2+1)^0,f,c
 11240   00367E  1E07               	comf	(___flge@ff2+2)^0,f,c
 11241   003680  B0D8               	btfsc	status,0,c
 11242   003682  2A07               	incf	(___flge@ff2+2)^0,f,c
 11243   003684  0E80               	movlw	128
 11244   003686  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11245   003688                     l930:
 11246   003688  0E00               	movlw	0
 11247   00368A  1A01               	xorwf	___flge@ff1^0,f,c
 11248   00368C  0E00               	movlw	0
 11249   00368E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11250   003690  0E00               	movlw	0
 11251   003692  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11252   003694  0E80               	movlw	128
 11253   003696  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11254   003698  0E00               	movlw	0
 11255   00369A  1A05               	xorwf	___flge@ff2^0,f,c
 11256   00369C  0E00               	movlw	0
 11257   00369E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11258   0036A0  0E00               	movlw	0
 11259   0036A2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11260   0036A4  0E80               	movlw	128
 11261   0036A6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11262   0036A8  5005               	movf	___flge@ff2^0,w,c
 11263   0036AA  5C01               	subwf	___flge@ff1^0,w,c
 11264   0036AC  5006               	movf	(___flge@ff2+1)^0,w,c
 11265   0036AE  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11266   0036B0  5007               	movf	(___flge@ff2+2)^0,w,c
 11267   0036B2  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11268   0036B4  5008               	movf	(___flge@ff2+3)^0,w,c
 11269   0036B6  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11270   0036B8  B0D8               	btfsc	status,0,c
 11271   0036BA  EF61  F01B         	goto	u3371
 11272   0036BE  EF63  F01B         	goto	u3370
 11273   0036C2                     u3371:
 11274   0036C2  EF66  F01B         	goto	l3816
 11275   0036C6                     u3370:
 11276   0036C6  90D8               	bcf	status,0,c
 11277   0036C8  EF67  F01B         	goto	l935
 11278   0036CC                     l3816:
 11279   0036CC  80D8               	bsf	status,0,c
 11280   0036CE                     l935:
 11281   0036CE  0012               	return		;funcret
 11282   0036D0                     __end_of___flge:
 11283                           	callstack 0
 11284                           
 11285 ;; *************** function _ClickLEDOn *****************
 11286 ;; Defined at:
 11287 ;;		line 93 in file "colorclick.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  power           1    wreg     unsigned char 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;  power           1    0[COMRAM] unsigned char 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, status,2
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11305 ;;Total ram usage:        1 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 1
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_main
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text64
 11316   004772                     __ptext64:
 11317                           	callstack 0
 11318   004772                     _ClickLEDOn:
 11319                           	callstack 29
 11320                           
 11321                           ;incstack = 0
 11322                           ;ClickLEDOn@power stored from wreg
 11323   004772  6E01               	movwf	ClickLEDOn@power^0,c
 11324   004774                     
 11325                           ;colorclick.c: 93: void ClickLEDOn(char power);colorclick.c: 94: {;colorclick.c: 95:    
      +                           if (power){
 11326   004774  5001               	movf	ClickLEDOn@power^0,w,c
 11327   004776  B4D8               	btfsc	status,2,c
 11328   004778  EFC0  F023         	goto	u3931
 11329   00477C  EFC2  F023         	goto	u3930
 11330   004780                     u3931:
 11331   004780  EFC7  F023         	goto	l4222
 11332   004784                     u3930:
 11333   004784                     
 11334                           ;colorclick.c: 96:     LATGbits.LATG1=1;
 11335   004784  827F               	bsf	127,1,c	;volatile
 11336                           
 11337                           ;colorclick.c: 97:     LATAbits.LATA4=1;
 11338   004786  8879               	bsf	121,4,c	;volatile
 11339                           
 11340                           ;colorclick.c: 98:     LATFbits.LATF7=1;
 11341   004788  8E7E               	bsf	126,7,c	;volatile
 11342                           
 11343                           ;colorclick.c: 99:     }
 11344   00478A  EFD2  F023         	goto	l52
 11345   00478E                     l4222:
 11346   00478E  5001               	movf	ClickLEDOn@power^0,w,c
 11347   004790  A4D8               	btfss	status,2,c
 11348   004792  EFCD  F023         	goto	u3941
 11349   004796  EFCF  F023         	goto	u3940
 11350   00479A                     u3941:
 11351   00479A  EFD2  F023         	goto	l52
 11352   00479E                     u3940:
 11353   00479E                     
 11354                           ;colorclick.c: 101:     LATGbits.LATG1=0;
 11355   00479E  927F               	bcf	127,1,c	;volatile
 11356                           
 11357                           ;colorclick.c: 102:     LATAbits.LATA4=0;
 11358   0047A0  9879               	bcf	121,4,c	;volatile
 11359                           
 11360                           ;colorclick.c: 103:     LATFbits.LATF7=0;
 11361   0047A2  9E7E               	bcf	126,7,c	;volatile
 11362   0047A4                     l52:
 11363   0047A4  0012               	return		;funcret
 11364   0047A6                     __end_of_ClickLEDOn:
 11365                           	callstack 0
 11366                           
 11367 ;; *************** function _HighISR *****************
 11368 ;; Defined at:
 11369 ;;		line 25 in file "interrupts.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;		None
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  1    wreg      void 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;Total ram usage:        0 bytes
 11388 ;; Hardware stack levels used: 1
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		Interrupt level 2
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	intcode
 11397   000008                     __pintcode:
 11398                           	callstack 0
 11399   000008                     _HighISR:
 11400                           	callstack 22
 11401                           
 11402                           ;incstack = 0
 11403   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11404   00000A                     
 11405                           ;interrupts.c: 28:     if (PIR0bits.TMR0IF) {
 11406   00000A  010E               	movlb	14	; () banked
 11407   00000C  AB33               	btfss	51,5,b	;volatile
 11408   00000E  EF0B  F000         	goto	i2u419_41
 11409   000012  EF0D  F000         	goto	i2u419_40
 11410   000016                     i2u419_41:
 11411   000016  EF14  F000         	goto	i2l662
 11412   00001A                     i2u419_40:
 11413   00001A                     
 11414                           ; BSR set to: 14
 11415                           ;interrupts.c: 29:     maxTime = 1;
 11416   00001A  0E00               	movlw	0
 11417   00001C  0101               	movlb	1	; () banked
 11418   00001E  6F25               	movwf	(_maxTime+1)& (0+255),b	;volatile
 11419   000020  0E01               	movlw	1
 11420   000022  6F24               	movwf	_maxTime& (0+255),b	;volatile
 11421   000024                     
 11422                           ; BSR set to: 1
 11423                           ;interrupts.c: 30:     PIR0bits.TMR0IF=0;
 11424   000024  010E               	movlb	14	; () banked
 11425   000026  9B33               	bcf	51,5,b	;volatile
 11426   000028                     i2l662:
 11427                           
 11428                           ; BSR set to: 14
 11429   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11430   00002A  0011               	retfie		f
 11431   00002C                     __end_of_HighISR:
 11432                           	callstack 0
 11433                           
 11434                           	psect	rparam
 11435   000000                     
 11436                           	psect	temp
 11437   00005F                     btemp:
 11438                           	callstack 0
 11439   00005F                     	ds	1
 11440   000000                     int$flags	set	btemp
 11441   000000                     wtemp8	set	btemp+1
 11442   000000                     ttemp5	set	btemp+1
 11443   000000                     ttemp6	set	btemp+4
 11444   000000                     ttemp7	set	btemp+8
 11445                           
 11446                           	psect	idloc
 11447                           
 11448                           ;Config register IDLOC0 @ 0x200000
 11449                           ;	unspecified, using default values
 11450   200000                     	org	2097152
 11451   200000  0FFF               	dw	4095
 11452                           
 11453                           ;Config register IDLOC1 @ 0x200002
 11454                           ;	unspecified, using default values
 11455   200002                     	org	2097154
 11456   200002  0FFF               	dw	4095
 11457                           
 11458                           ;Config register IDLOC2 @ 0x200004
 11459                           ;	unspecified, using default values
 11460   200004                     	org	2097156
 11461   200004  0FFF               	dw	4095
 11462                           
 11463                           ;Config register IDLOC3 @ 0x200006
 11464                           ;	unspecified, using default values
 11465   200006                     	org	2097158
 11466   200006  0FFF               	dw	4095
 11467                           
 11468                           ;Config register IDLOC4 @ 0x200008
 11469                           ;	unspecified, using default values
 11470   200008                     	org	2097160
 11471   200008  0FFF               	dw	4095
 11472                           
 11473                           ;Config register IDLOC5 @ 0x20000A
 11474                           ;	unspecified, using default values
 11475   20000A                     	org	2097162
 11476   20000A  0FFF               	dw	4095
 11477                           
 11478                           ;Config register IDLOC6 @ 0x20000C
 11479                           ;	unspecified, using default values
 11480   20000C                     	org	2097164
 11481   20000C  0FFF               	dw	4095
 11482                           
 11483                           ;Config register IDLOC7 @ 0x20000E
 11484                           ;	unspecified, using default values
 11485   20000E                     	org	2097166
 11486   20000E  0FFF               	dw	4095
 11487                           
 11488                           	psect	config
 11489                           
 11490                           ;Config register CONFIG1L @ 0x300000
 11491                           ;	External Oscillator mode Selection bits
 11492                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11493                           ;	Power-up default value for COSC bits
 11494                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11495   300000                     	org	3145728
 11496   300000  AA                 	db	170
 11497                           
 11498                           ;Config register CONFIG1H @ 0x300001
 11499                           ;	unspecified, using default values
 11500                           ;	Clock Out Enable bit
 11501                           ;	CLKOUTEN = 0x1, unprogrammed default
 11502                           ;	Clock Switch Enable bit
 11503                           ;	CSWEN = 0x1, unprogrammed default
 11504                           ;	Fail-Safe Clock Monitor Enable bit
 11505                           ;	FCMEN = 0x1, unprogrammed default
 11506   300001                     	org	3145729
 11507   300001  FF                 	db	255
 11508                           
 11509                           ;Config register CONFIG2L @ 0x300002
 11510                           ;	unspecified, using default values
 11511                           ;	Master Clear Enable bit
 11512                           ;	MCLRE = 0x1, unprogrammed default
 11513                           ;	Power-up Timer Enable bit
 11514                           ;	PWRTE = 0x1, unprogrammed default
 11515                           ;	Low-power BOR enable bit
 11516                           ;	LPBOREN = 0x1, unprogrammed default
 11517                           ;	Brown-out Reset Enable bits
 11518                           ;	BOREN = 0x3, unprogrammed default
 11519   300002                     	org	3145730
 11520   300002  FF                 	db	255
 11521                           
 11522                           ;Config register CONFIG2H @ 0x300003
 11523                           ;	unspecified, using default values
 11524                           ;	Brown Out Reset Voltage selection bits
 11525                           ;	BORV = 0x3, unprogrammed default
 11526                           ;	ZCD Disable bit
 11527                           ;	ZCD = 0x1, unprogrammed default
 11528                           ;	PPSLOCK bit One-Way Set Enable bit
 11529                           ;	PPS1WAY = 0x1, unprogrammed default
 11530                           ;	Stack Full/Underflow Reset Enable bit
 11531                           ;	STVREN = 0x1, unprogrammed default
 11532                           ;	Debugger Enable bit
 11533                           ;	DEBUG = 0x1, unprogrammed default
 11534                           ;	Extended Instruction Set Enable bit
 11535                           ;	XINST = 0x1, unprogrammed default
 11536   300003                     	org	3145731
 11537   300003  FF                 	db	255
 11538                           
 11539                           ;Config register CONFIG3L @ 0x300004
 11540                           ;	WDT Period Select bits
 11541                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11542                           ;	WDT operating mode
 11543                           ;	WDTE = OFF, WDT Disabled
 11544   300004                     	org	3145732
 11545   300004  9F                 	db	159
 11546                           
 11547                           ;Config register CONFIG3H @ 0x300005
 11548                           ;	unspecified, using default values
 11549                           ;	WDT Window Select bits
 11550                           ;	WDTCWS = 0x7, unprogrammed default
 11551                           ;	WDT input clock selector
 11552                           ;	WDTCCS = 0x7, unprogrammed default
 11553   300005                     	org	3145733
 11554   300005  FF                 	db	255
 11555                           
 11556                           ;Config register CONFIG4L @ 0x300006
 11557                           ;	unspecified, using default values
 11558                           ;	Write Protection Block 0
 11559                           ;	WRT0 = 0x1, unprogrammed default
 11560                           ;	Write Protection Block 1
 11561                           ;	WRT1 = 0x1, unprogrammed default
 11562                           ;	Write Protection Block 2
 11563                           ;	WRT2 = 0x1, unprogrammed default
 11564                           ;	Write Protection Block 3
 11565                           ;	WRT3 = 0x1, unprogrammed default
 11566                           ;	Write Protection Block 3
 11567                           ;	WRT4 = 0x1, unprogrammed default
 11568                           ;	Write Protection Block 3
 11569                           ;	WRT5 = 0x1, unprogrammed default
 11570                           ;	Write Protection Block 3
 11571                           ;	WRT6 = 0x1, unprogrammed default
 11572                           ;	Write Protection Block 3
 11573                           ;	WRT7 = 0x1, unprogrammed default
 11574   300006                     	org	3145734
 11575   300006  FF                 	db	255
 11576                           
 11577                           ;Config register CONFIG4H @ 0x300007
 11578                           ;	unspecified, using default values
 11579                           ;	Configuration Register Write Protection bit
 11580                           ;	WRTC = 0x1, unprogrammed default
 11581                           ;	Boot Block Write Protection bit
 11582                           ;	WRTB = 0x1, unprogrammed default
 11583                           ;	Data EEPROM Write Protection bit
 11584                           ;	WRTD = 0x1, unprogrammed default
 11585                           ;	Scanner Enable bit
 11586                           ;	SCANE = 0x1, unprogrammed default
 11587                           ;	Low Voltage Programming Enable bit
 11588                           ;	LVP = 0x1, unprogrammed default
 11589   300007                     	org	3145735
 11590   300007  FF                 	db	255
 11591                           
 11592                           ;Config register CONFIG5L @ 0x300008
 11593                           ;	unspecified, using default values
 11594                           ;	UserNVM Program Memory Code Protection bit
 11595                           ;	CP = 0x1, unprogrammed default
 11596                           ;	DataNVM Memory Code Protection bit
 11597                           ;	CPD = 0x1, unprogrammed default
 11598   300008                     	org	3145736
 11599   300008  FF                 	db	255
 11600                           
 11601                           ;Config register CONFIG5H @ 0x300009
 11602                           ;	unspecified, using default values
 11603   300009                     	org	3145737
 11604   300009  FF                 	db	255
 11605                           
 11606                           ;Config register CONFIG6L @ 0x30000A
 11607                           ;	unspecified, using default values
 11608                           ;	Table Read Protection Block 0
 11609                           ;	EBTR0 = 0x1, unprogrammed default
 11610                           ;	Table Read Protection Block 1
 11611                           ;	EBTR1 = 0x1, unprogrammed default
 11612                           ;	Table Read Protection Block 2
 11613                           ;	EBTR2 = 0x1, unprogrammed default
 11614                           ;	Table Read Protection Block 3
 11615                           ;	EBTR3 = 0x1, unprogrammed default
 11616                           ;	Table Read Protection Block 4
 11617                           ;	EBTR4 = 0x1, unprogrammed default
 11618                           ;	Table Read Protection Block 5
 11619                           ;	EBTR5 = 0x1, unprogrammed default
 11620                           ;	Table Read Protection Block 6
 11621                           ;	EBTR6 = 0x1, unprogrammed default
 11622                           ;	Table Read Protection Block 7
 11623                           ;	EBTR7 = 0x1, unprogrammed default
 11624   30000A                     	org	3145738
 11625   30000A  FF                 	db	255
 11626                           
 11627                           ;Config register CONFIG6H @ 0x30000B
 11628                           ;	unspecified, using default values
 11629                           ;	Boot Block Table Read Protection bit
 11630                           ;	EBTRB = 0x1, unprogrammed default
 11631   30000B                     	org	3145739
 11632   30000B  FF                 	db	255
 11633                           tosu	equ	0xFFF
 11634                           tosh	equ	0xFFE
 11635                           tosl	equ	0xFFD
 11636                           stkptr	equ	0xFFC
 11637                           pclatu	equ	0xFFB
 11638                           pclath	equ	0xFFA
 11639                           pcl	equ	0xFF9
 11640                           tblptru	equ	0xFF8
 11641                           tblptrh	equ	0xFF7
 11642                           tblptrl	equ	0xFF6
 11643                           tablat	equ	0xFF5
 11644                           prodh	equ	0xFF4
 11645                           prodl	equ	0xFF3
 11646                           indf0	equ	0xFEF
 11647                           postinc0	equ	0xFEE
 11648                           postdec0	equ	0xFED
 11649                           preinc0	equ	0xFEC
 11650                           plusw0	equ	0xFEB
 11651                           fsr0h	equ	0xFEA
 11652                           fsr0l	equ	0xFE9
 11653                           wreg	equ	0xFE8
 11654                           indf1	equ	0xFE7
 11655                           postinc1	equ	0xFE6
 11656                           postdec1	equ	0xFE5
 11657                           preinc1	equ	0xFE4
 11658                           plusw1	equ	0xFE3
 11659                           fsr1h	equ	0xFE2
 11660                           fsr1l	equ	0xFE1
 11661                           bsr	equ	0xFE0
 11662                           indf2	equ	0xFDF
 11663                           postinc2	equ	0xFDE
 11664                           postdec2	equ	0xFDD
 11665                           preinc2	equ	0xFDC
 11666                           plusw2	equ	0xFDB
 11667                           fsr2h	equ	0xFDA
 11668                           fsr2l	equ	0xFD9
 11669                           status	equ	0xFD8

Data Sizes:
    Strings     79
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    144     159
    BANK1           256      0     164
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2826$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), 
		 -> STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), 
		 -> STR_2(CODE[4]), STR_1(CODE[1]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_sprintf(COMRAM[2]), STR_9(CODE[9]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[5]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[1]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S2773$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2773$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memoryUpdateTime@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    memoryUpdateMovement@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    memoryUpdateMovement@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    White@timerMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> timerMemory(BANK1[40]), 

    White@movementMemory	PTR volatile unsigned int  size(2) Largest target is 40
		 -> movementMemory(BANK1[40]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlue_L135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlue_L135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Orange_R135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Orange_R135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Pink_rev1_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Pink_rev1_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Yellow_rev1_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Yellow_rev1_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Blue_T180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Blue_T180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Green_L90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Green_L90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Red_R90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Red_R90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseHalfSquare@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseHalfSquare@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    rotate180left@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    rotate180left@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Right45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Right45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Left45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Left45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedReverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedReverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@data(BANK0[100]), 

    Color2String@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Color2String@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Colour2Action@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    sp__Hue2Colour	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    Hue2Colour@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    Hue2Colour@colourname	PTR unsigned char  size(2) Largest target is 11
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[5]), 
		 -> STR_5(CODE[7]), STR_4(CODE[10]), STR_3(CODE[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[1]), 

    RGB2Hue@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    colour_read_all@cf	PTR struct RGBC_rel size(2) Largest target is 22
		 -> colorf(BANK1[22]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    S308DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllhlllll[1]), CCPR2H(BITBIGSFRhhlll[1]), 

    S308DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllhlllll[1]), CCPR1H(BITBIGSFRhhlll[1]), 


Critical Paths under _main in COMRAM

    _colour_read_all->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _RGB2Hue->___fltol
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___fldiv->___flsub
    _getTimerValue->___fltol
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fltol->___flmul
    ___flmul->___fldiv
    _Yellow_rev1_R90->_reverseHalfSquare
    _Red_R90->_reverseHalfSquare
    _Pink_rev1_L90->_reverseHalfSquare
    _fullSpeedAhead->_setMotorPWM
    _Orange_R135->_reverseHalfSquare
    _LightBlue_L135->_reverseHalfSquare
    _Green_L90->_reverseHalfSquare
    _Right45->_turnRight
    _turnRight->_setMotorPWM
    _Blue_T180->_rotate180left
    _rotate180left->_Left45
    _Left45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseHalfSquare->_fullSpeedReverse
    _stop->_setMotorPWM
    _fullSpeedReverse->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Color2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _sendStringSerial4->_sendCharSerial4
    _Hue2Colour->___flge

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour2Action
    _memoryUpdateTime->_getTimerValue
    _RGB2Hue->___fltol
    _Colour2Action->_White
    _White->_getTimerValue
    _getTimerValue->___fltol
    ___fltol->___flmul

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0  493021
                                             41 BANK0    103   103      0
                         _ClickLEDOn
                       _Color2String
                      _Colour2Action
                         _Hue2Colour
                  _I2C_2_Master_Init
                           _LED_init
                            _RGB2Hue
                         _TimerReset
                             ___flge
                   _color_click_init
                    _colour_read_all
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
               _memoryUpdateMovement
                   _memoryUpdateTime
                               _stop
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateTime                                     6     2      4    5714
                                             21 BANK0      6     2      4
                      _getTimerValue
 ---------------------------------------------------------------------------------
 (1) _memoryUpdateMovement                                 8     2      6     317
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_read_all                                     18    16      2    2190
                                             25 COMRAM    18    16      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB2Hue                                             14    12      2   16933
                                             15 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3021
                                             41 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2556
                                             25 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     538
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour2Action                                        4     2      2  445987
                                             37 BANK0      4     2      2
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                              _White
                    _Yellow_rev1_R90
 ---------------------------------------------------------------------------------
 (2) _White                                               16     6     10  239521
                                             21 BANK0     16     6     10
                          _Blue_T180
                          _Green_L90
                     _LightBlue_L135
                        _Orange_R135
                      _Pink_rev1_L90
                            _Red_R90
                         _TimerReset
                    _Yellow_rev1_R90
                     _fullSpeedAhead
                      _getTimerValue
                  _reverseHalfSquare
                      _rotate180left
                               _stop
 ---------------------------------------------------------------------------------
 (2) _getTimerValue                                        6     4      2    5495
                                             15 BANK0      6     4      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1406
                                             11 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1075
                                             86 COMRAM     8     4      4
                                             13 BANK0      2     2      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2990
                                             74 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Yellow_rev1_R90                                      6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _TimerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Red_R90                                              4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Pink_rev1_L90                                        6     2      4   37959
                                             32 COMRAM     6     2      4
                             _Left45
                            _Right45
                     _fullSpeedAhead
                   _fullSpeedReverse
                  _reverseHalfSquare
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       7     3      4    3011
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Orange_R135                                          4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _LightBlue_L135                                       4     0      4   27820
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Green_L90                                            4     0      4   27732
                                             32 COMRAM     4     0      4
                             _Left45
                            _Right45
                  _reverseHalfSquare
 ---------------------------------------------------------------------------------
 (3) _Right45                                              6     2      4    9084
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _Blue_T180                                            4     0      4   19192
                                             35 COMRAM     4     0      4
                  _reverseHalfSquare
                      _rotate180left
 ---------------------------------------------------------------------------------
 (3) _rotate180left                                        4     0      4   10324
                                             31 COMRAM     4     0      4
                             _Left45
 ---------------------------------------------------------------------------------
 (3) _Left45                                               6     2      4    9692
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2599
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _reverseHalfSquare                                    6     2      4    8432
                                             26 COMRAM     6     2      4
                   _fullSpeedReverse
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4225
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedReverse                                     7     3      4    2859
                                             19 COMRAM     7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2225
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Color2String                                         6     2      4    8005
                                             68 COMRAM     6     2      4
                         _Hue2Colour
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4224
                                             49 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    3873
                                             41 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           26    20      6    3521
                                             31 COMRAM    10     4      6
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    1618
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     934
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Hue2Colour                                           4     2      2    3397
                                             12 COMRAM     4     2      2
                             ___flge
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2686
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ClickLEDOn                                           1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClickLEDOn
   _Color2String
     _Hue2Colour
       ___flge
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _stoa
             _fputc
             _strlen
           _strncmp
   _Colour2Action
     _Blue_T180
       _reverseHalfSquare
         _fullSpeedReverse
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _rotate180left
         _Left45
           _stop
           _turnLeft
             _setMotorPWM
     _Green_L90
       _Left45
       _Right45
         _stop
         _turnRight
           _setMotorPWM
       _reverseHalfSquare
     _LightBlue_L135
       _Left45
       _Right45
       _reverseHalfSquare
     _Orange_R135
       _Left45
       _Right45
       _reverseHalfSquare
     _Pink_rev1_L90
       _Left45
       _Right45
       _fullSpeedAhead
         _setMotorPWM
       _fullSpeedReverse
       _reverseHalfSquare
       _stop
     _Red_R90
       _Left45
       _Right45
       _reverseHalfSquare
     _White
       _Blue_T180
       _Green_L90
       _LightBlue_L135
       _Orange_R135
       _Pink_rev1_L90
       _Red_R90
       _TimerReset
       _Yellow_rev1_R90
         _Left45
         _Right45
         _fullSpeedAhead
         _fullSpeedReverse
         _reverseHalfSquare
         _stop
       _fullSpeedAhead
       _getTimerValue
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
               _color_read_Blue (ARG)
                 _I2C_2_Master_Read
                   _I2C_2_Master_Idle
                 _I2C_2_Master_RepStart
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Start
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Stop
                   _I2C_2_Master_Idle
                 _I2C_2_Master_Write
                   _I2C_2_Master_Idle
               _color_read_Clear (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Green (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
               _color_read_Red (ARG)
                 _I2C_2_Master_Read
                 _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                 _I2C_2_Master_Stop
                 _I2C_2_Master_Write
           ___fldiv (ARG)
             ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
             ___xxtofl (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _reverseHalfSquare
       _rotate180left
       _stop
     _Yellow_rev1_R90
   _Hue2Colour
   _I2C_2_Master_Init
   _LED_init
   _RGB2Hue
     ___fladd
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _TimerReset
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _colour_read_all
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _memoryUpdateMovement
   _memoryUpdateTime
     _getTimerValue
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A4       7       64.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllhh       52      0       0      42        0.0%
BITBIGSFRllhllh     37      0       0      44        0.0%
BITBIGSFRlllllh     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRlllllh     1E      0       0      49        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhllh      17      0       0      38        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      50        0.0%
BITBIGSFRhhhlh       E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      B      0       0      59        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRlllllh      6      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      57        0.0%
BITBIGSFRlllllh      5      0       0      53        0.0%
BITBIGSFRhhlll       5      0       0      39        0.0%
BITBIGSFRlllllh      3      0       0      56        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRlllllh      3      0       0      52        0.0%
BITBIGSFRllhlh       2      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      51        0.0%
BITBIGSFRhhhll       1      0       0      36        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A1      62        0.0%
DATA                 0      0     1A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 12:01:45 2023

                    _color_read_Red 4408                        ___fldiv@aexp 004A  
                      ___fldiv@bexp 0049                        ___fldiv@sign 0042  
                   _color_read_Blue 44F8                                  l31 46FA  
                                l40 44A6                                  l34 48BC  
                                l43 4546                                  l52 47A4  
                                l37 4456                                  l46 44F6  
                   ??_getTimerValue 0071                 ___wmul@multiplicand 0003  
                    ?_rotate180left 0020                    _color_read_Clear 44A8  
                  _color_read_Green 4458                         Green_L90@mL 0021  
                       Green_L90@mR 0023                                 l111 10B0  
                               l201 48FE                                 l105 35CA  
                               l130 1A62                                 l204 46BA  
                               l119 157C                                 l136 1A6A  
                               l146 2DA4                                 l340 48D4  
                               l500 4032                                 l156 2E06  
                               l510 422A                                 l343 4738  
                               l183 482C                                 l520 37B6  
                               l192 491C                                 l328 489C  
                               l337 48C0                                 l505 41AE  
                               l530 3C3A                                 l186 482E  
                               l515 43B4                                 l195 4908  
                               l451 3E9A                                 l283 2A9A  
                               l540 2760                                 l364 48F2  
                               l349 4770                                 l525 389E  
                               l189 4854                                 l293 2C1A  
                               l198 4912                                 l535 3CDE  
                               l551 2968                                 l616 4926  
                               l473 3E0A                                 l561 2A2A  
                               l458 3126                                 l467 3B94  
                               l491 3F24                                 l483 40B2  
                               l619 4308                                 l468 3B96  
                               l478 3D74                                 l494 3FAC  
                               l488 4132                                 l665 487A  
                               l497 4406                                 l930 3688  
                               l594 47D4                                 l924 3AF0  
                               l597 4802                                 l935 36CE  
                               l962 34C4              memoryUpdateMovement@cf 0001  
                               wreg 000FE8               ?_memoryUpdateMovement 0001  
                      ___flmul@aexp 0065                        ___flmul@bexp 0066  
                      ___flmul@sign 0060                        ___flmul@temp 006B  
                      ___flmul@prod 0067                     __end_of_RGB2Hue 157E  
                      ___fltol@exp1 006E                                l1210 1D74  
                              l1202 1F2A                                l1220 1E32  
                              l1400 3280                                l3000 3044  
                              l1320 2E5E                                l3002 3086  
                              l3010 3AF8                                l1163 429E  
                              l1323 2FBA                                l1219 1E44  
                              l1235 4678                                l1156 4296  
                              l3004 30A2                                l3100 40B4  
                              l3020 3B48                                l3012 3B10  
                              l1260 260E                                l1252 2514  
                              l1261 25FC                                l1406 4632  
                              l3006 30E6                                l3110 40F0  
                              l3102 40D4                                l3022 3B54  
                              l3014 3B1A                                l3030 3D96  
                              l1334 2F52                                l1343 45E4  
                              l1327 2EF6                                l1247 26F0  
                              l3112 40FC                                l3016 3B32  
                              l3024 3B64                                l3008 3AF2  
                              l3040 3DB6                                l3032 3DA2  
                              l3120 3E9C                                l3200 4070  
                              l4000 29C6                                l1249 2550  
                              l1193 1C5A                                l1418 3A46  
                              l3114 4108                                l3026 3B7C  
                              l3018 3B3C                                l3050 3DF4  
                              l3042 3DCA                                l3034 3DAE  
                              l3130 3F0A                                l3122 3E9E  
                              l3210 3F26                                l3202 407C  
                              l4010 2A0E                                l4002 29DA  
                              l1258 2596                                l1194 1C48  
                              l1435 4596                                l1283 2356  
                              l1195 1C0E                                l3060 39CA  
                              l3052 397E                                l1380 330A  
                              l3140 32AE                                l4020 45B8  
                              l3116 4118                                l3108 40DC  
                              l3044 3DD6                                l3028 3D76  
                              l3132 3F22                                l3124 3EB2  
                              l3220 3F92                                l3212 3F28  
                              l3204 4088                                l3300 20D4  
                              l4012 2A28                                l4100 24C8  
                              l1429 4928                                l4030 474C  
                              l3062 3A00                                l3054 3990  
                              l3070 4558                                l3150 331E  
                              l3142 32B6                                l3134 3282  
                              l4022 45D4                                l4014 4598  
                              l3118 411C                                l3230 3FDA  
                              l3046 3DE2                                l3126 3ECA  
                              l3222 3FAA                                l3214 3F3C  
                              l3206 4098                                l1286 21E8  
                              l3310 2142                                l3302 20EE  
                              l4006 29E6                                l4110 2512  
                              l4102 24D8                                l1439 397C  
                              l1279 1FF2                                l4032 4750  
                              l3056 39A2                                l3072 458A  
                              l3160 3396                                l3152 3332  
                              l3144 32CA                                l3136 3294  
                              l4016 45A8                                l3232 4006  
                              l3048 3DF0                                l3128 3EF6  
                              l3224 43B6                                l3080 3D0C  
                              l3216 3F54                                l3208 409C  
                              l1296 2318                                l1288 2260  
                              l3320 21D8                                l3312 216C  
                              l3304 20FE                                l3240 1F48  
                              l3400 3484                                l4008 29FA  
                              l4120 2560                                l4112 251E  
                              l4104 24E0                                l4040 2372  
                              l4200 46CA                                l1289 224E  
                              l4034 4758                                l4026 473A  
                              l3058 39AC                                l3066 4548  
                              l3162 339A                                l3154 3336  
                              l1378 3302                                l3146 32D2  
                              l3138 329C                                l4018 45B0  
                              l3234 401A                                l3226 3FAE  
                              l3090 3D34                                l3082 3D18  
                              l3218 3F7E                                l3330 2218  
                              l3322 21E6                                l3314 21A2  
                              l3306 211A                                l3250 1F80  
                              l3242 1F4A                                l3402 3494  
                              l3410 2E0A                                l4122 2576  
                              l4130 25A6                                l4114 253C  
                              l4106 24F0                                l4050 23A6  
                              l4042 2374                                l4210 46F2  
                              l4202 46DA                                l4220 4784  
                              l4028 473E                                l3068 4554  
                              l3164 339E                                l3156 3354  
                              l3148 32E0                                l3180 392E  
                              l3172 38D6                                l3228 3FC2  
                              l3092 3D40                                l3076 3CE0  
                              l3340 228A                                l3332 2246  
                              l3324 21F8                                l3316 21B0  
                              l3308 2126                                l3260 1FAC  
                              l3252 1F90                                l3244 1F5A  
                              l3236 1F2C                                l3404 34A4  
                              l3412 2E1A                                l4300 2D34  
                              l4132 25B4                                l4124 257C  
                              l4116 253E                                l4108 2504  
                              l4060 23D8                                l4044 2384  
                              l4052 23AE                                l4036 2358  
                              l3500 490E                                l4212 46F4  
                              l4204 46E4                                l1389 33BC  
                              l4222 478E                                l3158 3360  
                              l3182 3958                                l3174 38E4  
                              l3166 38A0                                l3094 3D4C  
                              l3078 3D00                                l3190 4034  
                              l3350 2300                                l3342 22B4  
                              l3326 2206                                l3318 21CE  
                              l3270 2002                                l3262 1FBC  
                              l3254 1F96                                l3246 1F6A  
                              l3238 1F3A                                l3406 34B4  
                              l3430 2EE0                                l3422 2E98  
                              l3414 2E28                                l4310 2DC6  
                              l4302 2D54                                l4142 261E  
                              l4150 2666                                l4134 25B8  
                              l4126 2586                                l4118 254E  
                              l4070 240C                                l4062 23DA  
                              l4054 23BE                                l4046 2394  
                              l4038 2364                                l4214 46F6  
                              l4206 46EE                                l3510 4688  
                              l3502 4900                                l4230 3576  
                              l4224 479E                                l3176 3900  
                              l3168 38CA                                l3096 3D5A  
                              l3088 3D20                                l3192 4054  
                              l3520 4134                                l3352 231C  
                              l3360 2342                                l3336 2270  
                              l3344 22B8                                l3328 220A  
                              l3280 203C                                l3272 2012  
                              l3264 1FCC                                l3256 1F9C  
                              l3248 1F7A                                l3440 2F60  
                              l3432 2EEC                                l3424 2EA0  
                              l3416 2E6E                                l4312 2DF2  
                              l4304 2D6C                                l4160 26D0  
                              l4152 2680                                l4144 262A  
                              l4136 25C6                                l4128 2594  
                              l4080 2452                                l4064 23EA  
                              l4072 2414                                l4056 23C4  
                              l4048 23A4                                l3600 1A86  
                              l4240 0EE2                                l4216 46F8  
                              l4208 46F0                                l3512 4690  
                              l3504 4904                                l4232 3592  
                              l4320 488C                                l4400 2A8C  
                              l4218 4774                                l3178 391C  
                              l3098 3D5E                                l3530 4202  
                              l3522 4146                                l3362 2346  
                              l3354 232C                                l3346 22D2  
                              l3338 227C                                l3290 208E  
                              l3282 2052                                l3266 1FDC  
                              l3258 1FAA                                l3450 2FA8  
                              l3442 2F62                                l3434 2F28  
                              l3426 2EAC                                l3418 2E84  
                              l4306 2D8C                                l4162 26DE  
                              l4154 2696                                l4146 2638  
                              l4138 25F4                                l4090 247A  
                              l4082 2456                                l4074 2424  
                              l4066 23FA                                l4058 23CA  
                              l3610 1ABA                                l3602 1A88  
                              l4250 0FC4                                l4242 0F04  
                              l3186 482E                                l3514 46B6  
                              l3506 467C                                l4234 35AE  
                              l4226 34C6                                l4330 3E0C  
                              l4322 4896                                l4314 487C  
                              l4410 2AC4                                l4402 2A94  
                              l3460 315A                                l3532 4362  
                              l3524 4186                                l3540 36E2  
                              l3356 233A                                l3348 22E6  
                              l3292 209C                                l3284 205E  
                              l3276 2026                                l3268 1FE2  
                              l3380 342A                                l3372 33EA  
                              l3452 2FAA                                l3444 2F66  
                              l3436 2F34                                l3428 2EDE  
                              l4308 2DA4                                l4164 26E4  
                              l4156 26B0                                l4148 2662  
                              l4076 243A                                l4068 240A  
                              l4180 3A48                                l3620 1AEC  
                              l3604 1A98                                l3612 1AC2  
                              l4260 1140                                l4252 100C  
                              l4244 0F0E                                l4236 0E52  
                              l3188 483E                                l3516 46B8  
                              l3508 4680                                l4228 355E  
                              l4340 3E74                                l4332 3E1C  
                              l4324 4898                                l4316 4880  
                              l4420 2B0C                                l4412 2ACA  
                              l4404 2A96                                l3470 31EA  
                              l3462 3168                                l3534 4374  
                              l3526 41B0                                l3198 405C  
                              l3550 378A                                l3542 370A  
                              l3358 233C                                l3294 20A8  
                              l3286 2076                                l3278 2032  
                              l3390 345A                                l3382 3438  
                              l3374 3414                                l3366 33BE  
                              l3446 2F8A                                l3438 2F42  
                              l4166 26E6                                l4158 26CC  
                              l4094 248E                                l4078 244A  
                              l4086 246A                                l4190 3AE8  
                              l4182 3A76                                l3710 1CC4  
                              l3702 1C8C                                l3630 1B22  
                              l3622 1AF2                                l3614 1AD2  
                              l3606 1AA8                                l4174 4634  
                              l4270 1384                                l4262 1164  
                              l4254 1058                                l4246 0F54  
                              l4238 0E9A                                l4350 3E8E  
                              l4342 3E76                                l4334 3E42  
                              l4326 489A                                l4318 488A  
                              l4430 2B7A                                l4422 2B3E  
                              l4414 2AD4                                l4406 2AA8  
                              l3800 35FA                                l3472 31F6  
                              l3480 3246                                l3464 316C  
                              l3456 3128                                l3536 43A0  
                              l3528 41C2                                l3560 380A  
                              l3552 37A2                                l3544 3722  
                              l3296 20B8                                l3288 2082  
                              l3392 3464                                l3376 3416  
                              l3368 33D6                                l3448 2F9A  
                              l4280 2C1E                                l4328 48E6  
                              l4096 24A8                                l4088 247A  
                              l4192 3AEE                                l4184 3A86  
                              l3712 1CC8                                l3704 1C9C  
                              l3720 1CE8                                l3640 1B5E  
                              l3632 1B32                                l3624 1B00  
                              l3616 1AD8                                l3608 1AB8  
                              l4176 4644                                l4272 13EE  
                              l4264 1232                                l4256 1086  
                              l4248 0F9C                                l4352 3E98  
                              l4344 3E80                                l4336 3E46  
                              l4360 47D6                                l4440 2BB8  
                              l4424 2B54                                l4416 2AEC  
                              l4432 2B8E                                l4408 2AC0  
                              l3810 3668                                l3802 360A  
                              l3474 31FE                                l3466 3190  
                              l3458 314C                                l4354 46FC  
                              l3570 3B98                                l3562 381E  
                              l3554 37B8                                l3546 3736  
                              l3538 36D0                                l3298 20C4  
                              l3378 3426                                l4290 2CAC  
                              l4282 2C3E                                l4098 24B8  
                              l4186 3AB4                                l3722 1D0E  
                              l3730 1D64                                l3714 1CD6  
                              l3706 1CAA                                l3650 1B7C  
                              l3642 1B6C                                l3634 1B34  
                              l3626 1B02                                l3618 1AEA  
                              l4274 14AC                                l4266 127A  
                              l4258 10F8                                l3490 4914  
                              l4346 3E82                                l4338 3E6A  
                              l4362 47E8                                l4450 2C00  
                              l4442 2BC6                                l4434 2BA0  
                              l4426 2B5A                                l4418 2AF8  
                              l4370 2A34                                l3812 3676  
                              l3804 3638                                l3900 17DA  
                              l3476 320E                                l3468 31C6  
                              l3484 3258                                l3820 45E6  
                              l4356 4710                                l3580 3CA2  
                              l3572 3BAA                                l3556 37CA  
                              l3564 3836                                l3548 374E  
                              l3388 3450                                l4292 2CC4  
                              l4284 2C56                                l4188 3AC4  
                              l3740 1DB8                                l3732 1D8A  
                              l3724 1D42                                l3716 1CD8  
                              l3708 1CB8                                l3660 1B90  
                              l3652 1B80                                l3644 1B70  
                              l3628 1B12                                l3636 1B3C  
                              l4268 12C6                                l4276 1512  
                              l3492 4918                                l4196 46BC  
                              l4348 3E8C                                l4364 47A6  
                              l4444 2BD2                                l4436 2BAC  
                              l4428 2B60                                l4452 2C06  
                              l4380 2A4E                                l4372 2A38  
                              l3814 36C6                                l3806 3648  
                              l3910 188E                                l3902 17F2  
                              l3822 45F2                                l4358 472C  
                              l3574 3BFE                                l3566 3872  
                              l3558 37F2                                l3582 491E  
                              l3398 3478                                l3590 42A8  
                              l4294 2CE4                                l4286 2C74  
                              l3750 1DE2                                l3742 1DC6  
                              l3734 1D9A                                l3726 1D44  
                              l3718 1CE2                                l3670 1BA4  
                              l3662 1B94                                l3654 1B84  
                              l3646 1B74                                l3638 1B4C  
                              l4278 152E                                l3830 4804  
                              l3494 48F6                                l4198 46C0  
                              l4446 2BEE                                l4438 2BB2  
                              l4390 2A6E                                l4382 2A52  
                              l4374 2A3C                                l4366 2A2C  
                              l3816 36CC                                l3808 3656  
                              l3920 1968                                l3912 18CC  
                              l3904 1830                                l3584 48C0  
                              l3824 460E                                l3576 3C3C  
                              l3568 388A                                l3592 42B6  
                              l4296 2CFC                                l4288 2C8C  
                              l3760 1E14                                l3752 1DF2  
                              l3744 1DC8                                l3728 1D54  
                              l3680 1BF6                                l3672 1BA8  
                              l3664 1B98                                l3656 1B88  
                              l3648 1B78                                l3840 481A  
                              l3832 480E                                l3496 48FA  
                              l4448 2BFC                                l4392 2A74  
                              l4384 2A56                                l4376 2A3C  
                              l4368 2A30                                l3930 1A42  
                              l3922 19A6                                l3914 190A  
                              l3906 186E                                l3586 48D0  
                              l3826 462A                                l2970 422C  
                              l3578 3C4E                                l4298 2D1C  
                              l3770 1E6E                                l3762 1E2A  
                              l3746 1DD6                                l3738 1DAE  
                              l3754 1DF4                                l3690 1C3A  
                              l3682 1C06                                l3666 1B9C  
                              l3658 1B8C                                l3674 1BAC  
                              l3834 4814                                l3498 490A  
                              l3842 48A0                                l3850 4458  
                              l4394 2A78                                l4386 2A5E  
                              l4378 2A48                                l3932 1A4A  
                              l3924 19AE                                l3916 1912  
                              l3908 1876                                l2980 4264  
                              l2972 4234                                l2964 4856  
                              l3588 42A0                                l3940 26F8  
                              l3780 1EEA                                l3772 1EA8  
                              l3748 1DDE                                l3756 1E02  
                              l3692 1C3C                                l3684 1C1C  
                              l3676 1BB0                                l3668 1BA0  
                              l3596 1A6C                                l3836 4816  
                              l3852 449E                                l3844 4408  
                              l4396 2A7C                                l4388 2A66  
                              l3926 19C6                                l3918 192A  
                              l3934 1A62                                l3870 1586  
                              l2990 4290                                l2982 426A  
                              l2974 4246                                l2966 4872  
                              l3950 274E                                l3942 2720  
                              l3790 1F0A                                l3782 1EEE  
                              l3766 1E54                                l3774 1EAA  
                              l3758 1E06                                l3694 1C46  
                              l3686 1C28                                l3678 1BDA  
                              l3598 1A78                                l3838 4818  
                              l3862 44A8                                l3846 444E  
                              l4398 2A84                                l3928 1A04  
                              l3880 165C                                l3872 15C4  
                              l2984 4280                                l2976 424E  
                              l2992 2FBC                                l3960 27B8  
                              l3944 2738                                l3792 1F18  
                              l3784 1EFC                                l3776 1EBA  
                              l3768 1E60                                l3696 1C68  
                              l3688 1C2C                                l3856 44F8  
                              l3864 44EE                                l3890 1736  
                              l3882 169A                                l3874 1602  
                              l2986 4288                                l2978 4256  
                              l2994 2FD8                                l3970 2858  
                              l3962 27DC                                l3954 2762  
                              l3946 273E                                l3938 26F2  
                              l3794 1F1A                                l3786 1F02  
                              l3778 1ECA                                l3698 1C78  
                              l3858 453E                                l3892 173E  
                              l3884 16A2                                l3876 160A  
                              l3868 157E                                l2988 428A  
                              l2996 302C                                l3980 28EC  
                              l3972 2870                                l3964 27F4  
                              l3956 277A                                l3948 2746  
                              l3788 1F04                                l3798 35CC  
                              l3894 1756                                l3886 16BA  
                              l3878 161E                                l2998 3040  
                              l3990 296A                                l3982 2912  
                              l3974 2896                                l3966 281A  
                              l3958 27A0                                l3896 1794  
                              l3888 16F8                                l3992 2974  
                              l3984 292A                                l3976 28AE  
                              l3968 2832                                l3898 17D2  
                              l3994 2978                                l3986 2950  
                              l3978 28D4                                l3996 2990  
                              l3988 2968                                l3998 299C  
                              STR_1 0E10                                STR_2 0E4C  
                              STR_3 0E3D                                STR_4 0E1C  
                              STR_5 0E36                                STR_6 0E43  
                              STR_7 0E2F                                STR_8 0E11  
                              STR_9 0E26                                u2110 4246  
                              u2111 4242                                u2120 4264  
                              u2200 3E0A                                u3000 1B22  
                              u2121 4260                                u2201 3E06  
                              u3001 1B1E                                u2210 3990  
                              u2130 4280                                u3010 1B5E  
                              u2211 398C                                u2131 427C  
                              u3011 1B5A                                u2220 39A2  
                              u2300 32AE                                u2140 2FD8  
                              u3100 1C78                                u3020 1B6C  
                              u2221 399E                                u2301 32AA  
                              u2141 2FD4                                u3101 1C74  
                              u3021 1B68                                u2230 39CA  
                              u2310 32E0                                u2150 30A2  
                              u3110 1CAA                                u3030 1BDA  
                              u2231 39C6                                u2311 32DC  
                              u2151 309E                                u3111 1CA6  
                              u3031 1BD6                                u2240 3A00  
                              u2320 32FE                                u2400 3958  
                              u2160 3B10                                u3200 1DF2  
                              u3120 1CB8                                u3040 1BF2  
                              u4000 1058                        _BAUD4CONbits 000EE9  
                              u2241 39FC                                u2321 32FA  
                              u2401 3954                                u2161 3B0C  
                              u3201 1DEE                                u3121 1CB4  
                              u3041 1BEC                                u4001 1054  
                              u2250 457A                                u2330 3354  
                              u2170 3B32                                u3210 1E02  
                              u3130 1CD6                                u3050 1BF4  
                              u4010 10F8                                u2410 483E  
                              u2331 3350                                u2171 3B2E  
                              u3211 1DFE                                u3131 1CD2  
                              u4011 10F4                                u2411 483A  
                              u2260 458A                                u2340 3382  
                              u2180 3B7C                                u2500 2002  
                              u4100 2D1C                                u3300 1EEA  
                              u3220 1E14                                u3140 1D0E  
                              u3060 1C1C                                u4020 1140  
                              u2420 4854                                u2261 4586  
                              u2181 3B78                                u2501 1FFE  
                              u4101 2D18                                u3301 1EE6  
                              u3221 1E10                                u3141 1D0A  
                              u3061 1C18                                u4021 113C  
                              u2421 4850                                u2350 33BC  
                              u2190 3B94                                u2270 3D74  
                              u2430 40B2                                u2510 2012  
                              u4110 2D54                                u3310 1EFC  
                              u3230 1E2A                                u3150 1D54  
                              u3070 1C3A                                u4030 127A  
                              u2351 33B8                                u2191 3B90  
                              u2271 3D70                                u2431 40AE  
                              u2511 200E                                u4111 2D50  
                              u3311 1EF8                                u3231 1E26  
                              u3151 1D50                                u3071 1C36  
                              u4031 1276                                u3400 1602  
                              u2360 38CA                                u2280 4132  
                              u2600 22D2                                u2520 218C  
                              u2440 1F48                                u4120 2D8C  
                              u3320 1F18                                u3240 1E40  
                              u3160 1D8A                                u3080 1C5A  
                              u4040 12C6                                u3401 15FE  
                              u2257 4570                                u2361 38C6  
                              u2281 412E                                u2601 22CE  
                              u2441 1F44                                u4121 2D88  
                              u3321 1F14                                u3241 1E3C  
                              u3161 1D86                                u3081 1C56  
                              u4041 12C2                                u3330 35FA  
                              u3410 165C                                u2370 3900  
                              u2610 2300                                u2530 21E6  
                              u2450 1F5A                                u4130 2DC6  
                              u3250 1E54                                u3170 1D9A  
                              u3090 1C68                                u4050 152E  
                              _T2PR 000FBC                                u3331 35F6  
                              u3411 1658                                u2347 3378  
                              u2291 328C                                u2371 38FC  
                              u2611 22FC                                u2531 21E2  
                              u2451 1F56                                u4131 2DC2  
                              u3251 1E50                                u3171 1D96  
                              u3091 1C64                                u4051 152A  
                              u3340 3638                                u3500 190A  
                              u3420 169A                                u2380 391C  
                              u2620 233A                                u2540 2206  
                              u2460 1F6A                                u2700 2E1A  
                              u4140 2E06                                u4060 2C3E  
                              u3260 1E6E                                u3180 1DC6  
                              u3341 3634                                u3501 1906  
                              u3421 1696                                u2381 3918  
                              u2621 2336                                u2541 2202  
                              u2525 2182                                u2461 1F66  
                              u2701 2E16                                u4141 2E02  
                              u4061 2C3A                                u3261 1E6A  
                              u3181 1DC2                                u3350 3656  
                              u3510 1968                                u3430 16F8  
                              u2390 392E                                u2550 2218  
                              u2470 1FAA                                u2630 33D6  
                              u2710 2E28                                u4070 2C74  
                              u3270 1EA8                                u3190 1DD6  
                              u4150 2AA8                                u3351 3652  
                              u3511 1964                                u3431 16F4  
                              u2391 392A                                u2551 2214  
                              u2471 1FA6                                u2631 33D2  
                              u2711 2E24                                u4071 2C70  
                              u3271 1EA4                                u3191 1DD2  
                              u4207 2AB4                                u4151 2AA4  
                              u3360 3676                                u3520 19A6  
                              u3440 1736                                u2800 314C  
                              u2560 2246                                u2480 1FBC  
                              u2640 340A                                u2720 2E84  
                              u3600 2896                                u4080 2CAC  
                              u3280 1EBA                                u4160 2B3E  
                              u3361 3672                                u3521 19A2  
                              u3441 1732                                u2801 3148  
                              u2561 2242                                u2481 1FB8  
                              u2721 2E80                                u3601 2892  
                              u4081 2CA8                                u3281 1EB6  
                              u4217 2B6C                                u4161 2B3A  
                              u3370 36C6                                u3530 1A04  
                              u3450 1794                                u2810 3190  
                              u2570 225C                                u2490 1FCC  
                              u2650 3438                                u2730 2EDA  
                              u3610 28D4                                u4090 2CE4  
                              u3290 1ECA                                u4170 2BA0  
                              u3371 36C2                                u3531 1A00  
                              u3451 1790                                u2811 318C  
                              u4307 408E                                u2571 2258  
                              u2491 1FC8                                u2651 3434  
                              u2731 2ED6                                u3611 28D0  
                              u4091 2CE0                                u3291 1EC6  
                              u4227 46D0                                u4171 2B9C  
                              u3540 1A42                                u3460 17D2  
                              u2820 31C6                                u3380 462A  
                              u2900 37CA                                u2580 2270  
                              u2660 344C                                u2740 2F24  
                              u3620 2912                                u3700 23D8  
                              u4180 2C1A                                u3541 1A3E  
                              u3461 17CE                                u2821 31C2  
                              u3381 4626                                u4317 3F46  
                              u2901 37C6                                u2581 226C  
                              u2661 3448                                u2645 3400  
                              u2741 2F20                                u3621 290E  
                              u4237 272C                                u3701 23D4  
                              u4181 2C16                                u3470 1830  
                              u3390 15C4                                u2830 31EA  
                              u2910 3BAA                                u2590 228A  
                              u2670 3474                                u2750 2F42  
                              u3630 2950                                u3550 275C  
                              u3710 23EA                                u3471 182C  
                              u3391 15C0                                u2831 31E6  
                              u4407 3FF8                                u4327 3F72  
                              u2911 3BA6                                u2591 2286  
                              u2671 3470                                u2751 2F3E  
                              u3631 294C                                u4247 276E  
                              u3551 2758                                u3711 23E6  
                              u3480 186E                                u2920 3C4E  
                              u2680 3494                                u2760 2F52  
                              u3640 29C6                                u3560 27A0  
                              u3800 2594                                u3720 23FA  
                              u2840 46A4                                u3481 186A  
                              u4417 4024                                u4337 3F9C  
                              u2921 3C4A                                u2681 3490  
                              u2761 2F4E                                u4257 2A1A  
                              u3641 29C2                                u3561 279C  
                              u3801 2590                                u3721 23F6  
                              u2841 469C                                u3490 18CC  
                              u2930 48D0                                u2690 34A4  
                              u2770 2F60                                u3650 29FA  
                              u3570 27DC                                u3810 25B4  
                              u3730 243A                                u3491 18C8  
                              u2931 48CC                                u4427 3B5A  
                              u4347 3D4E                                u4267 3714  
                              u2691 34A0                                u2771 2F5C  
                              u3651 29F6                                u3571 27D8  
                              u3811 25B0                                u3731 2436  
                              u3660 4770                                u2860 4146  
                              u2780 2F9A                                u3580 281A  
                              u3820 25C6                                u3740 247A  
                              u3900 3A76                                u2940 1A86  
                              u3661 476C                                u4437 410E  
                              u4357 3EBC                                u2861 4142  
                              u4277 3794                                u2781 2F96  
                              u3581 2816                                u3821 25C2  
                              u3741 2476                                u3901 3A72  
                              u2941 1A82                                u2870 41C2  
                              u2790 2FA8                                u3590 2858  
                              u3830 25F4                                u3750 24F0  
                              u3670 2372                                u3910 3AB4  
                              u2950 1A98                                u4447 4752  
                              u4367 3EE8                                u2871 41BE  
                              u4287 37FC                                u2791 2FA4  
                              u3591 2854                                u3831 25F0  
                              u3751 24EC                                u3671 236E  
                              u3911 3AB0                                u2951 1A94  
                              u2880 4374                                u3840 260A  
                              u3760 2512                                u3680 2384  
                              u3920 3AE8                                u2960 1AA8  
                              u4377 3F14                                u2881 4370  
                              u4297 387C                                u3841 2606  
                              u3761 250E                                u3681 2380  
                              u3921 3AE4                                u2961 1AA4  
                              u3930 4784                                u2890 36E2  
                              u3850 261E                                u3770 253C  
                              u3690 2394                                u2970 1AEA  
                              u2858 46A6                                u3931 4780  
                              u4387 3DE4                                u2891 36DE  
                              u3851 261A                                u3771 2538  
                              u3691 2390                                u2971 1AE6  
                              u3940 479E                                u3860 2638  
                              u3780 2560                                u2980 1B00  
                              u3941 479A                                u4397 3FCC  
                              u3861 2634                                u3781 255C  
                              u2981 1AFC                                u3870 2680  
                              u3790 2576                                u2990 1B12  
                              u3950 0E9A                                u3871 267C  
                              u3791 2572                                u2991 1B0E  
                              u3951 0E96                                u3880 26B0  
                              u3960 0EE2                                u3881 26AC  
                              u3961 0EDE                                u3890 26DE  
                              u3970 0F54                                u3891 26DA  
                              u3971 0F50                                u3980 0F9C  
                              u3981 0F98                                u3990 100C  
                              u3991 1008                 reverseHalfSquare@mL 001B  
               reverseHalfSquare@mR 001D                                _dbuf 0100  
                              _main 2A2C                                _prec 0122  
                              fsr1h 000FE2                                fsr2h 000FDA  
                              indf1 000FE7                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                              _stoa 3282                                btemp 005F  
                              _stop 3AF2                          _ClickLEDOn 4772  
          memoryUpdateTime@timerVal 0079                                prodh 000FF4  
                              prodl 000FF3                                start 002C  
                   ___fldiv@new_exp 0043             __end_of_Yellow_rev1_R90 37B8  
     memoryUpdateTime@movementCount 0075              __end_of_color_read_Red 4458  
                   __end_of_HighISR 002C                        ___param_bank 000000  
                   __end_of_Red_R90 41B0                          _Hue2Colour 157E  
                   __end_of_Right45 3FAE                    __end_of_LED_init 48F4  
                     ___fltol@sign1 006D                     __end_of___fladd 1F2C  
                             ?_main 0001                     __end_of___fldiv 26F2  
                             STR_10 0E01                               STR_11 0E48  
                             STR_13 0E48                     __end_of___flmul 2358  
                   __end_of___flsub 467A                     __end_of___fltol 34C6  
                             ?_stoa 000A                      _LightBlue_L135 3C3C  
                             ?_stop 0014                     __end_of___lwdiv 42A0  
                             i2l662 0028                        vfpfcnvrt@fmt 0022  
                             _TMR0H 000FD4                               _TMR0L 000FD3  
           __end_of_sendCharSerial4 48D6          __end_of_I2C_2_Master_Start 491E  
                             _White 26F2          __end_of_I2C_2_Master_Write 4900  
                             _flags 00F4                               _fputc 397E  
                 fullSpeedReverse@i 0019                               _width 0120  
                             _putch 4928                               tablat 000FF5  
                             plusw1 000FE3                               plusw2 000FDB  
                             stoa@i 0018                               stoa@l 001C  
                             stoa@p 001E                               stoa@s 000C  
                             stoa@w 0016                               ttemp5 0060  
                             ttemp6 0063                               ttemp7 0067  
                             status 000FD8                               wtemp8 0060  
                   __end_of_sprintf 45E6                     __end_of_strncmp 397E  
                  _memoryUpdateTime 47D6                __end_of_Color2String 473A  
           __end_of_color_read_Blue 4548               _I2C_2_Master_RepStart 4900  
                   ?_color_read_Red 0005                     __initialization 430A  
                      __end_of_main 2C1E                        __end_of_stoa 33BE  
                      __end_of_stop 3B98                     ??_rotate180left 0024  
            __end_of_LightBlue_L135 3CE0                              ??_main 0089  
                            ??_stoa 000E                              ??_stop 0018  
                     __activetblptr 000002              ??_memoryUpdateMovement 0007  
                         ??_RGB2Hue 0071                       ??_Orange_R135 0025  
                            ?_White 0075                        ?_setMotorPWM 000E  
                            ?_fputc 0001                              _CCPR1H 000FAA  
                            _CCPR2H 000FA6                              _CCPR3H 000F25  
                            _CCPR4H 000F21                     _colour_read_all 34C6  
                            ?_putch 0001                              _RC0PPS 000E62  
                            _RC4REG 000EE3                              _RE2PPS 000E74  
                            _RC7PPS 000E69                              _RD5PPS 000E6F  
                            _RE4PPS 000E76                              _RD6PPS 000E70  
                            i2l4460 001A                              i2l4462 0024  
                            i2l4458 000A                              _RG6PPS 000E88  
                         ??_HighISR 0001            __end_of_color_click_init 46FC  
                            _RX4PPS 000E15                              _TX4REG 000EE4  
                       ?_ClickLEDOn 0001                    __end_of___xxtofl 2FBC  
                         ??_Red_R90 0025                              _Left45 3E9C  
                         ??_Right45 001E                    _fullSpeedReverse 40B4  
                  ?_Yellow_rev1_R90 0021                        _CCPTMRS0bits 000FAD  
                      vfprintf@cfmt 0030                              White@i 0083  
                            ___flge 35CC                              ___fleq 3A48  
                         ??___fladd 0022                         ?_Hue2Colour 000D  
                            ___wmul 4856                           ??___fldiv 003A  
                     Orange_R135@mL 0021                           ??___flmul 0053  
                     Orange_R135@mR 0023                           ??___flsub 0032  
                         ??___fltol 005B                           ??___lwdiv 000B  
                        _TimerReset 491E                              _colorf 0176  
                   ?_LightBlue_L135 0021                              clear_0 4342  
                            clear_1 434E                  fullSpeedReverse@mL 0014  
                fullSpeedReverse@mR 0016                              _motorL 00F5  
                            _motorR 018C                              isa$std 000001  
                            _strlen 4548                              fputc@c 0001  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                  ?_sendCharSerial4 0001   memoryUpdateMovement@movementCount 0003  
                            stoa@cp 001A                              stoa@fp 000A  
                            putch@c 0001                    __end_of_vfprintf 4634  
                            stop@mL 0014                              stop@mR 0016  
                 ??_initDCmotorsPWM 0003                           ??_sprintf 0038  
                         ??_strncmp 0007                    __end_of_turnLeft 3E0C  
                        ___flge@ff1 0001                          ___flge@ff2 0005  
                      ___xxtofl@arg 0016                        ___xxtofl@exp 0015  
                      ___xxtofl@val 000C                          ___fleq@ff1 0001  
                        ___fleq@ff2 0005                 __end_of_Orange_R135 3C3C  
                        __accesstop 0060             __end_of__initialization 4354  
          __end_of_color_read_Clear 44F8                     fullSpeedAhead@i 0019  
                 __end_of_Blue_T180 43B6            __end_of_color_read_Green 44A8  
            ?_I2C_2_Master_RepStart 0001                       ___rparam_used 000001  
                         ?_LED_init 0001                          ___fltol@f1 0057  
                  ?_color_read_Blue 0005                      __pcstackCOMRAM 0001  
                     __end_of_White 2A2C                        __pidataBANK0 492A  
                      __pidataBANK1 48D6                       __end_of_fputc 3A48  
                 __end_of_Green_L90 422C                       __end_of_putch 492A  
                         RGB2Hue@cf 006F                         _ForwardFlag 00FE  
           __end_of_colour_read_all 35CC                             ??_White 007F  
                           ??_fputc 0005                             ??_putch 0001  
                        __pbssBANK0 00F0                          __pbssBANK1 0100  
                        ??_LED_init 0001                             ?_Left45 001A  
                 _color_writetoaddr 489E                        _T2CLKCONbits 000FBF  
             __end_of_Colour2Action 2E08                             ?___flge 0001  
                           ?___fleq 0001                  ?_color_writetoaddr 0003  
                           ?___wmul 0001                         ?_TimerReset 0001  
               ??_color_writetoaddr 0004                             ?_strlen 0001  
             __end_of_getTimerValue 430A            __end_of_memoryUpdateTime 4804  
                      _Color2String 46FC                             _RGB2Hue 0E52  
                         ?___xxtofl 000C                             _SP4BRGH 000EE6  
                           _SP4BRGL 000EE5                         _Orange_R135 3B98  
                           _SSP2ADD 000ED6                             _SSP2BUF 000ED5  
            color_writetoaddr@value 0003                    ??_color_read_Red 0007  
                           _HighISR 0008           __end_of_color_writetoaddr 48BE  
                           _Red_R90 4134                  _I2C_2_Master_Start 4914  
                        _initUSART4 487C                  _I2C_2_Master_Write 48F4  
                           _Right45 3F26                             __Hparam 0000  
                           __Lparam 0000                   color_read_Red@tmp 000A  
           sendStringSerial4@string 0002                             White@mL 0075  
                           White@mR 0077                             ___fladd 1A6C  
                           ___fldiv 2358                             ___flmul 1F2C  
                           ___flsub 4634                             ___fltol 33BE  
               ?_I2C_2_Master_Start 0001                             ___lwdiv 422C  
               ?_I2C_2_Master_Write 0001                           ?_vfprintf 002A  
                      __psmallconst 0E00                             __pcinit 430A  
                           __ramtop 0E00                           ?_turnLeft 0014  
                           __ptext0 2A2C                             __ptext1 47D6  
                           __ptext2 47A6                             __ptext3 487C  
                           __ptext4 3E0C                             __ptext5 34C6  
                           __ptext6 4408                             __ptext7 4458  
                           __ptext8 44A8                             __ptext9 44F8  
                           _maxTime 0124                           _T2CONbits 000FBD  
                  ?_colour_read_all 001A                          ??___xxtofl 0010  
                    Color2String@cf 0047            __end_of_fullSpeedReverse 4134  
                         _T2HLTbits 000FBE                             _sprintf 4598  
              ??_I2C_2_Master_Start 0002                ??_I2C_2_Master_Write 0002  
                           _strncmp 38A0                end_of_initialization 4354  
    memoryUpdateMovement@colourcode 0007                             fputc@fp 0003  
                     _Pink_rev1_L90 37B8                       __Lmediumconst 0000  
                      ??_ClickLEDOn 0001                   ?_color_click_init 0001  
                    __45drightdelay 01A0                  ??_color_click_init 0005  
                  ??_LightBlue_L135 0025                   __end_of_vfpfcnvrt 3282  
                 _reverseHalfSquare 3FAE                             postdec1 000FE5  
                           postdec2 000FDD                        ??_Hue2Colour 000F  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE  memoryUpdateMovement@movementMemory 0005  
                        ??_vfprintf 0030                  ?_reverseHalfSquare 001B  
                           strlen@a 0003                             strlen@s 0001  
             __end_of_rotate180left 4408                     _initDCmotorsPWM 3E0C  
                        ??_turnLeft 0018                    White@timerMemory 007D  
                         _PORTFbits 000F8E                  setMotorPWM@negDuty 0013  
                 __end_of_turnRight 3D76                         ___fladd@grs 0029  
               ??_reverseHalfSquare 001F                  __end_of_ClickLEDOn 47A6  
                     ___xxtofl@sign 0014                           _TRISAbits 000F81  
                setMotorPWM@posDuty 0012                           _TRISCbits 000F83  
                         _TRISDbits 000F84                           _TRISEbits 000F85  
                         _TRISFbits 000F86                           _TRISGbits 000F87  
                         _TRISHbits 000F88                         ___fldiv@grs 0045  
                       ___fldiv@rem 003E                    fullSpeedAhead@mL 0014  
                  fullSpeedAhead@mR 0016            color_writetoaddr@address 0004  
                         Red_R90@mL 0021                           Red_R90@mR 0023  
           ??_I2C_2_Master_RepStart 0002                      _movementMemory 014E  
                __end_of_Hue2Colour 1A6C                      ?_Pink_rev1_L90 0021  
                       ___flmul@grs 0061                         _CCP1CONbits 000FAB  
                 ?_color_read_Clear 0005                         _CCP2CONbits 000FA7  
                 ?_color_read_Green 0005                         _CCP3CONbits 000F26  
                       ?_initUSART4 0001                         _CCP4CONbits 000F22  
         sendCharSerial4@charToSend 0001                     Colour2Action@cf 0085  
         __end_of_reverseHalfSquare 4034                  ??_color_read_Clear 0007  
                ??_color_read_Green 0007                           _Blue_T180 4362  
                    __end_of_Left45 3F26                        _RGB2Hue$3169 0075  
                    __end_of___flge 36D0                      __end_of___fleq 3AF2  
                    _fullSpeedAhead 4034                         vfpfcnvrt@ap 0024  
                       vfpfcnvrt@fp 0020                      __end_of___wmul 487C  
                         _Green_L90 41B0                           Right45@mL 001A  
                         Right45@mR 001C                      __end_of_strlen 4598  
                        RGB2Hue@max 0079                          RGB2Hue@min 007B  
               color_read_Clear@tmp 000A                 start_initialization 430A  
                       __halfsquare 019C                            ??_Left45 001E  
               color_read_Green@tmp 000A                          ?_Blue_T180 0024  
           __end_of_initDCmotorsPWM 3E9C                         vfprintf@fmt 002C  
            __end_of_fullSpeedAhead 40B4                            ??___flge 0009  
                          ??___fleq 0009                            ??___wmul 0005  
                      ??_TimerReset 0001                         __pdataBANK0 00FE  
                       __pdataBANK1 0195                            ??_strlen 0003  
                         ___fladd@a 001E                           ___fladd@b 001A  
                   ClickLEDOn@power 0001                          ?_Green_L90 0021  
                         ___fldiv@a 0036                           ___fldiv@b 0032  
                 ?_memoryUpdateTime 0075                            ?_RGB2Hue 006F  
                         ___flmul@a 004F                           ___flmul@b 004B  
                         ___flsub@a 002E                           ___flsub@b 002A  
                     __pcstackBANK0 0060                        ?_Orange_R135 0021  
                ??_memoryUpdateTime 005F                     ??_Pink_rev1_L90 0025  
                          ?_HighISR 0001                  __end_of_TimerReset 4928  
                          ?_Red_R90 0021              Color2String@colourname 0049  
                          ?_Right45 001A                    ___lwdiv@dividend 0007  
                   ?_fullSpeedAhead 0014                           __pintcode 0008  
                          ?___fladd 001A                            ?___fldiv 0032  
                          ?___flmul 004B                            ?___flsub 002A  
                          ?___fltol 0057                            ?___lwdiv 0007  
              I2C_2_Master_Read@ack 0003                I2C_2_Master_Read@tmp 0004  
                   Pink_rev1_L90@mL 0021                     Pink_rev1_L90@mR 0023  
                       __smallconst 0E00                   _I2C_2_Master_Idle 482E  
                 _I2C_2_Master_Init 4804                   _I2C_2_Master_Read 467A  
                     __45dleftdelay 01A2                   _I2C_2_Master_Stop 490A  
                 ?_fullSpeedReverse 0014                   ??_Yellow_rev1_R90 0025  
                ?_I2C_2_Master_Idle 0001                     rotate180left@mL 0020  
                   rotate180left@mR 0022                  ?_I2C_2_Master_Init 0001  
                ?_I2C_2_Master_Read 0001                       ??_setMotorPWM 0010  
                ?_I2C_2_Master_Stop 0001                    ___lwdiv@quotient 000B  
               White@movementMemory 007B            initDCmotorsPWM@PWMperiod 0001  
                          ?_sprintf 0032                  ??_fullSpeedReverse 0018  
                          ?_strncmp 0001                Hue2Colour@colourname 000F  
                 colour_read_all@cf 001A                        Hue2Colour@cf 000D  
                 _sendStringSerial4 473A                 ??_I2C_2_Master_Idle 0001  
               ??_I2C_2_Master_Init 0001                 ??_I2C_2_Master_Read 0002  
                    ___wmul@product 0005                            _LATAbits 000F79  
               ??_I2C_2_Master_Stop 0002                            _LATCbits 000F7B  
                          _LATDbits 000F7C                            _LATEbits 000F7D  
                          _LATFbits 000F7E                            _LATGbits 000F7F  
                          _LATHbits 000F80                            _PIE0bits 000E29  
                          _LED_init 48E6                  ?_sendStringSerial4 0002  
                          _PIE4bits 000E2D                         turnRight@mL 0014  
                       turnRight@mR 0016                            _PIR0bits 000E33  
                       ??_Blue_T180 0028                            i2u419_40 001A  
                          i2u419_41 0016                            _PIR4bits 000E37  
                  ?_initDCmotorsPWM 0001                            Left45@mL 001A  
                          Left45@mR 001C                   ??_sendCharSerial4 0001  
                          _SSP2CON2 000EDA                 ??_sendStringSerial4 0004  
                          _SSP2STAT 000ED8                           _vfpfcnvrt 3128  
         __end_of_I2C_2_Master_Idle 4856           __end_of_I2C_2_Master_Init 482E  
         __end_of_I2C_2_Master_Read 46BC                   ___wmul@multiplier 0001  
         __end_of_I2C_2_Master_Stop 4914                       _movementCount 00F2  
                       ??_Green_L90 0025                        setMotorPWM@m 000E  
       I2C_2_Master_Write@data_byte 0002                   ??_color_read_Blue 0007  
                         _turnRight 3CE0                       _retracingDone 00F0  
                          __1square 019E                           copy_data0 431E  
         __end_of_sendStringSerial4 4772       __end_of_I2C_2_Master_RepStart 490A  
                color_read_Blue@tmp 000A                 __end_of_setMotorPWM 3128  
                      ??_initUSART4 0001                            __Hrparam 0000  
      __end_of_memoryUpdateMovement 47D6                          vfprintf@ap 002E  
                          __Lrparam 0000                          vfprintf@fp 002A  
                     _Colour2Action 2C1E                          ?_vfpfcnvrt 0020  
                        _ANSELDbits 000EA7                          _ANSELFbits 000EB4  
                     _getTimerValue 42A0                          sprintf@fmt 0034  
                       Blue_T180@mL 0024                         Blue_T180@mR 0026  
                          ___xxtofl 2E08                          _T0CON0bits 000FD5  
                        _T0CON1bits 000FD6                     ___lwdiv@divisor 0009  
                __end_of_initUSART4 489E                     ___lwdiv@counter 000D  
                        ?_turnRight 0014                            __ptext10 4900  
                          __ptext11 467A                            __ptext20 4634  
                          __ptext12 46BC                            __ptext21 1A6C  
                          __ptext13 489E                            __ptext30 1F2C  
                          __ptext22 3A48                            __ptext14 48F4  
                          __ptext31 36D0                            __ptext23 2358  
                          __ptext15 490A                            __ptext40 3CE0  
                          __ptext32 491E                            __ptext24 48E6  
                          __ptext16 4914                            __ptext41 4362  
                          __ptext33 4134                            __ptext25 2C1E  
                          __ptext17 482E                            __ptext50 422C  
                          __ptext42 43B6                            __ptext34 37B8  
                          __ptext26 26F2                            __ptext18 4804  
                          __ptext51 46FC                            __ptext43 3E9C  
                          __ptext35 4034                            __ptext27 42A0  
                          __ptext19 0E52                            __ptext60 473A  
                          __ptext52 4598                            __ptext44 3D76  
                          __ptext36 3B98                            __ptext28 2E08  
                          __ptext61 48BE                            __ptext53 45E6  
                          __ptext45 3FAE                            __ptext37 3C3C  
                          __ptext29 33BE                            __ptext62 157E  
                          __ptext54 3128                            __ptext46 3AF2  
                          __ptext38 41B0                            __ptext63 35CC  
                          __ptext55 38A0                            __ptext47 40B4  
                          __ptext39 3F26                            __ptext64 4772  
                          __ptext56 3282                            __ptext48 2FBC  
                          __ptext57 4548                            __ptext49 4856  
                          __ptext58 397E                            __ptext59 4928  
                      _SSP2CON1bits 000ED9                        _SSP2CON2bits 000EDA  
                White@movementCount 0079                          turnLeft@mL 0014  
                        turnLeft@mR 0016                     Color2String@buf 0045  
                  colour_read_all@B 0024                    colour_read_all@C 0028  
                  colour_read_all@G 0020                    colour_read_all@R 001C  
                    White@tempTimer 0081                          turnRight@i 0018  
                  LightBlue_L135@mL 0021                    LightBlue_L135@mR 0023  
                         stoa@F1144 0195                      ?_Colour2Action 0085  
                          isa$xinst 000000                          _RC4STAbits 000EE7  
                          int$flags 005F                            _vfprintf 45E6  
                          main@data 008B                   Yellow_rev1_R90@mL 0021  
                 Yellow_rev1_R90@mR 0023                            main@wall 00EF  
                          _turnLeft 3D76                      ?_getTimerValue 006F  
                     ?_Color2String 0045                      _vfpfcnvrt$2880 0028  
                        _INTCONbits 000FF2                         _setMotorPWM 2FBC  
                          intlevel2 0000                           sprintf@ap 0038  
                  ??_fullSpeedAhead 0018                           turnLeft@i 0018  
                         strncmp@_l 0001                           strncmp@_r 0003  
                 ??_colour_read_all 001C             getTimerValue@timerCount 0073  
                   _Yellow_rev1_R90 36D0                         ??_vfpfcnvrt 0026  
                          stoa@nuls 000F                    _color_click_init 46BC  
                     _rotate180left 43B6                      ??_Color2String 0049  
                          sprintf@f 003A                            sprintf@s 0032  
                        _SSP2DATPPS 000E1D                          _SSP2CLKPPS 000E1C  
                       _timerMemory 0126                            strncmp@l 0008  
                          strncmp@n 0005                            strncmp@r 000A  
              _memoryUpdateMovement 47A6                         ??_turnRight 0018  
                     ___fladd@signs 0026                          _TX4STAbits 000EE8  
             __end_of_Pink_rev1_L90 38A0                     _sendCharSerial4 48BE  
                      ___fladd@aexp 0027                        ___fladd@bexp 0028  
       memoryUpdateTime@timerMemory 0077                     ??_Colour2Action 0087  
